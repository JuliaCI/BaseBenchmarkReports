cset: moving following pidspec: 28855
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.357341152 seconds)
loading group "string"... done (took 0.554302773 seconds)
loading group "linalg"... done (took 7.08811414 seconds)
loading group "parallel"... done (took 0.159359549 seconds)
loading group "find"... done (took 1.117808403 seconds)
loading group "tuple"... done (took 1.718070685 seconds)
loading group "dates"... done (took 1.235274536 seconds)
loading group "micro"... done (took 0.225678877 seconds)
loading group "io"... done (took 0.986726298 seconds)
loading group "scalar"... done (took 36.417464724 seconds)
loading group "sparse"... done (took 11.127770425 seconds)
loading group "broadcast"... done (took 0.91396131 seconds)
loading group "union"... done (took 11.917012629 seconds)
loading group "simd"... done (took 4.151804494 seconds)
loading group "random"... done (took 8.554686561 seconds)
loading group "problem"... done (took 1.858023617 seconds)
loading group "array"... done (took 19.868072729 seconds)
loading group "misc"... done (took 1.666264781 seconds)
loading group "sort"... done (took 3.094235346 seconds)
loading group "collection"... done (took 16.725361258 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.489042416 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123666065 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114908204 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119862908 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.134705963 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114737704 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123606999 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084749859 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.779164512 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.145329949 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119556783 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.417219391 seconds)
done (took 5.08558801 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.1719074 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083362195 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081778629 seconds)
  done (took 1.297117497 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065571515 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12156059 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066287392 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067204989 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067435409 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066401811 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066123364 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066133356 seconds)
  done (took 1.653063231 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074098491 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06895387 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069012007 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068499968 seconds)
  done (took 1.412732139 seconds)
done (took 5.742646294 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.766430958 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.202350724 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.184063113 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.401745473 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.132731169 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.155117379 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.641859287 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.312261244 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183964834 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081676937 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104820326 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.319897241 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107677549 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.64049304 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075833626 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090703858 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.13577135 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.423636554 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067727715 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082352434 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089151464 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128410343 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085707909 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074462875 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.144607384 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067650135 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.131052574 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080240428 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066567269 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.20817658 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172300199 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.665141411 seconds)
  done (took 10.193342287 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095865658 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097734639 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068391242 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137453816 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096397749 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069802052 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071598694 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06727161 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087768352 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128842823 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089306841 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.102096616 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065494477 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069081477 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084945927 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204359683 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080258313 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081946941 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070638741 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075602356 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.117360533 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078529893 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078268925 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078027661 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12853467 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180872166 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098585344 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097227224 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066878248 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081293584 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115198736 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126258675 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065721737 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066274608 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124669276 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094826925 seconds)
  done (took 4.610829347 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.932638981 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.14032017 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090675773 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131162064 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064820105 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107028153 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065817576 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081082579 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.203661521 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.292398172 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.576980559 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110999473 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101591181 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067953809 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068286646 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066997566 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.362940623 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107200666 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103425045 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081741494 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070772221 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069329962 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363118091 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068416681 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064235618 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068486329 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058158373 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123914028 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068399605 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.923549228 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124908573 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066846795 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100084011 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.170015494 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086876827 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140670977 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.197075915 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084284397 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064597468 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.149664832 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070469983 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.09115067 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.0691009 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083709172 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104543019 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112909783 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065691708 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067465823 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.163079914 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.0647094 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078556965 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.991918756 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155078664 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078952576 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065311865 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.24936729 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086601707 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06924865 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064626495 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.183978515 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.139076 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067854132 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066694434 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068629244 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069887502 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.355638497 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066058194 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.753864984 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070119285 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076467245 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069997266 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069698395 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073061733 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072587547 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085340167 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066352794 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07538083 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066016094 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066211053 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066621705 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084279877 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.35797488 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066348291 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068007642 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06493903 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086257538 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096610316 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.06634932 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065101741 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100096194 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067886062 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066277759 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.214150886 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064412471 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067483597 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08433342 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069277605 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113654205 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069649006 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.085250209 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065281191 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065016427 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096396185 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070017811 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098678583 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081153739 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06823897 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.401059299 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065556542 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065141947 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068137519 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065921758 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067724947 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066450706 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080458154 seconds)
  done (took 20.938091986 seconds)
done (took 37.806187379 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.27193315 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076337034 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076099174 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075759304 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075750278 seconds)
  done (took 1.799307668 seconds)
done (took 3.00398189 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120088456 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098724641 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064385363 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095890936 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064666507 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100704311 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099451806 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080891457 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099932815 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064605793 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096091402 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06494269 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064272663 seconds)
  done (took 2.338086299 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082406944 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083147453 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070064198 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083250987 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063934663 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08238817 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080963299 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088229948 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080998519 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0721518 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063919116 seconds)
  done (took 2.048723134 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081917022 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084011416 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070159425 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081285909 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063673081 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081449722 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081308948 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085482148 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081218067 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073878282 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064291624 seconds)
  done (took 2.043219705 seconds)
done (took 7.623422166 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077130826 seconds)
  done (took 1.263747103 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.595691634 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.151465004 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081831381 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.113861953 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.184615036 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.121354945 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.283963078 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087417221 seconds)
  done (took 8.988768645 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.089005277 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068275085 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.083540854 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069742912 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071579853 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070027225 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.07000058 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071313073 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071958932 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072461797 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068926436 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.06869183 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071729209 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071295984 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07229589 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068776575 seconds)
  done (took 2.417659371 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092548322 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091147338 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073477748 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074939186 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072709711 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072183331 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07486766 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073929039 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071035405 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072416375 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075245191 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074321798 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072063864 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065650025 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074537097 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076314992 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071184049 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074520736 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075085745 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075128333 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074718141 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065149856 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071575392 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074327245 seconds)
  done (took 3.082646353 seconds)
done (took 16.946825582 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113157665 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072150684 seconds)
  done (took 1.379058818 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08242095 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083077832 seconds)
  done (took 1.368313937 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084000465 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066230862 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09156216 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078339792 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066458893 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066025129 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088034696 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06659029 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066159045 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06633 seconds)
  done (took 1.941504908 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068569979 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078090693 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071222086 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081657918 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074585645 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064464721 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073372295 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067889501 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07829598 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062985611 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07150193 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082721746 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071274306 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084357633 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.07276259 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068793105 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070723573 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067355521 seconds)
  done (took 2.514231344 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066287591 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067156852 seconds)
  done (took 1.340206894 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066910061 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063916014 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067119564 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066987916 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06346123 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062628842 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064105479 seconds)
  done (took 1.658099331 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.38533839 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.111278983 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.294927695 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070924721 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082060993 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.251263195 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065566012 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070629316 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070511316 seconds)
  done (took 2.648855886 seconds)
done (took 14.058998041 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078434896 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084944849 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.09504459 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.366693954 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091806934 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06620669 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113936704 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.193787014 seconds)
done (took 2.310584289 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.211721005 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.615729583 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.381010526 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.194773941 seconds)
  done (took 2.40067671 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.326300447 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086119539 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058451151 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066984185 seconds)
  done (took 1.758486131 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065916167 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068348087 seconds)
  done (took 1.349773667 seconds)
done (took 6.935106993 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066299915 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082878903 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065856402 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063742517 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065749354 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063495002 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063586648 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065947402 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066036319 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065631128 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.068381631 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06582085 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063338391 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063601392 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063482809 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065758812 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065854916 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063319394 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066807802 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065474097 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063414167 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066294453 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063584232 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063386192 seconds)
  done (took 2.827797869 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08391316 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067055478 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071732023 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071492622 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070360678 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072021584 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071359122 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066081355 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.07168558 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068312555 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069731449 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07035711 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067722079 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070297942 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068112294 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070193057 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071294171 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066294601 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068122032 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070292212 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071197786 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066334897 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069754624 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070930422 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069999369 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069606754 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06819384 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066486664 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071201589 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.06993056 seconds)
  done (took 3.322854598 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069540255 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063372546 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063909719 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071389922 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063447363 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065263254 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063356442 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06413578 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06484412 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063434319 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065297446 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063309313 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063686379 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064637152 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064107593 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066979174 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078600271 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064121062 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063950572 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064060065 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06723024 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063916257 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063602855 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063532439 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064106867 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063527698 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064054786 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063375433 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064116905 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063852623 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066691888 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067365369 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063564757 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070760629 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06680904 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063314875 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067490615 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063302611 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06423347 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062939833 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063166209 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063322146 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.175119966 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.07039107 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063935684 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065022961 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063707474 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06491101 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063971699 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06622042 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062829418 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063512947 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065290689 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064353953 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067291947 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062962157 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064233571 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062927364 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064306527 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063017027 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062738128 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062970068 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065770449 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063977588 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077695589 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069832336 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06358473 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066382347 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064396366 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066051466 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065202082 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076353163 seconds)
  done (took 6.03972669 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091848725 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087236705 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065335578 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06551766 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062233179 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064155912 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067728657 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064058761 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065546216 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069984917 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063922749 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065607602 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065394165 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076546665 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064225335 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065003762 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069970605 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061909355 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064340264 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067167834 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064183355 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067583776 seconds)
  done (took 2.735648977 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154745131 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070142285 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105212601 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073124629 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067769271 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072826087 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069979648 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070125473 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070032746 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068321544 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068313285 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070011702 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067972533 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068359095 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068724714 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068268158 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070355199 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068618941 seconds)
  done (took 2.604238602 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077249539 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066294172 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085939767 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065809395 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.0658668 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068536774 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071008086 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074416856 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069290158 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066406041 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075120841 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068315253 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067984955 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065975358 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068321923 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066074965 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068076055 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066045255 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07459251 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070489008 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070682101 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074150155 seconds)
  done (took 2.778942053 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079070621 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068035529 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082776774 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068686387 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062470731 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064835901 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.0702297 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06616073 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070348257 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067717347 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066004438 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06447007 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069213722 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065994995 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069514509 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065883097 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067443611 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065936742 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068096403 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062183063 seconds)
  done (took 2.601989287 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086819004 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068106681 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067918973 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07619621 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067755873 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06730036 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075842468 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067508979 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06722838 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087875496 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067153637 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067243069 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075592898 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072302533 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067136154 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075247324 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075165382 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075599959 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067327525 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067025016 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087720694 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067248033 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075170877 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06765279 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067424537 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067135867 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067559477 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072184181 seconds)
  done (took 3.251156495 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06625489 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065625457 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063406898 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063838232 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063272681 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063632355 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063935767 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063910668 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066913751 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063920736 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065743462 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06556865 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066362579 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065856333 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065903686 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066001886 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066189236 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06361771 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063561188 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063411517 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065934904 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06564673 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065991215 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063415814 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063630883 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065873318 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063501389 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063260047 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065776773 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063795298 seconds)
  done (took 3.18480601 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07552149 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073554703 seconds)
  done (took 1.39049945 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063176844 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08070141 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063667348 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070047428 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069954552 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066887299 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073741061 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070152473 seconds)
  done (took 1.795897514 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081792436 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077643696 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067538339 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.07995628 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076719769 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083284346 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132819108 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067465308 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073105239 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06486786 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079875711 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065486371 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072588782 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066787185 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071836223 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072688649 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064074314 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072630711 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068987934 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065035983 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067732777 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07498815 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068602554 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061903548 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067487657 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088420207 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077036175 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065889116 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069086691 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073484904 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071997823 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060334434 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066326909 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066622579 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06443571 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07625801 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081125072 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069500513 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074982239 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067211914 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077072609 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06145331 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070730028 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073070648 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07664496 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066705924 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067019296 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06148166 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063874775 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068315902 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061678427 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066170211 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060992038 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075586601 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.0696594 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076742556 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06469331 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067464315 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068869261 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069646488 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072781288 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067915543 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069333876 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06591774 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072740972 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070344094 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074912863 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061404755 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062641356 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064333434 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076027204 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088838668 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07278156 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067269228 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067792787 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06414956 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069535743 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067508486 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071933497 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072514775 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06640157 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072090034 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073628763 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066391475 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068774937 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074659576 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06456838 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070036638 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064056252 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082417089 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064911307 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064287188 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064383467 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076545661 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069942689 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065980538 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064199772 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073113794 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06038947 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066937553 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067092572 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066422436 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075041787 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069491209 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070396353 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074114124 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072772665 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065987457 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068245928 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062396241 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066719086 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065030502 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072458167 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059681752 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06824075 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065917676 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065793854 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.196752105 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065310262 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067422007 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07488179 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072825007 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065357327 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064126782 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070134599 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066569595 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069605229 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074887841 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065171968 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061984044 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062028537 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070049488 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066406873 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070300155 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07206593 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069442994 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061134887 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064875492 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072110563 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076086345 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066270314 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067258197 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073310553 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067969583 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065730362 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072994688 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069138455 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065922953 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071908261 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068307173 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062228563 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070157082 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069019493 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065650228 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071047601 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070046127 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.06895072 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06772723 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065452399 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074176475 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067972973 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065596303 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066800943 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065361623 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077058642 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069074007 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062111699 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064176208 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076160836 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064351874 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066639253 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065725838 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068700453 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067072302 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065030798 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066516678 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068656204 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077490508 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070546237 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067946276 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071735452 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077785392 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066646167 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069211972 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065784404 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067714435 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067194916 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07503145 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072347238 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071425697 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069045411 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063397013 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072073837 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073481994 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065705982 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064295825 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065485752 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.07092112 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072260294 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070783372 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067166558 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064909862 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0673718 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070182204 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069486861 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066471534 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065404735 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073495992 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064704058 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073653324 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067840971 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076673951 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069873099 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061764623 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069532889 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064686141 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072422035 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061828262 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064194259 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065491482 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067415725 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065273831 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068622261 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060711695 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072677403 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072428756 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065325253 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064888039 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064978862 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071840742 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066784704 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069020162 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068406588 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070956221 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07619203 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064775976 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068513492 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.076015519 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065559956 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.186052378 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072736371 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065683561 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066318962 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066578428 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065258847 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070136981 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076658245 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073429132 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060707946 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069659436 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064709185 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06554529 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062868121 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07183477 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070498062 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067738221 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07358416 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068274194 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067817806 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070512372 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067257646 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067502783 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06814067 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069682198 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067887209 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068462347 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066896542 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070253487 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066349876 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064580284 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068972906 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066096927 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067000764 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072063587 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066535937 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06675799 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069369426 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067998115 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067818491 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06708928 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066202155 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069790619 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067757535 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067397254 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.06896137 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061918766 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074286904 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066647652 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074865627 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067041199 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063560605 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074932592 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.06878297 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072606388 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067393762 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067900744 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068332469 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066130434 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.06941204 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07394297 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065294996 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077409115 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075066971 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067649644 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069933151 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06719268 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.06857587 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065450166 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067663798 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067401558 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066720294 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06640375 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071171632 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069009421 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066697414 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068129308 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067337648 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066648745 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067693519 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06123678 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065645614 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065914959 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066299341 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076225458 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066654102 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066307004 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065633238 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067440306 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065351457 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063251396 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074840083 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076075675 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067000759 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073466822 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066403059 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068208112 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077214959 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060878654 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064883118 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064429254 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064483479 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07382189 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067079475 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075636546 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066650611 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065612546 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063524957 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066787207 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064494859 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060306513 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063663557 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068900719 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064257569 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06406488 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065274968 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067815655 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065943567 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074196192 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064570157 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066667821 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065225783 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062619722 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064362471 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064345109 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.198321841 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068180391 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064744265 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064548058 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066685842 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06787252 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067570075 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066755386 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068672028 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076348165 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066142046 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069498726 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070719144 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061450873 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069859432 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06658286 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066680469 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066307413 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.0705136 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070151555 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068246062 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076103327 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067666212 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067573681 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067263444 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06489556 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066657695 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066946917 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.06714773 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066071156 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068487222 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074606604 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065048258 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.06903932 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066449168 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067716226 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073419223 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067607254 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069483175 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074037453 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067174816 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068838099 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075381797 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071933384 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069464914 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068956364 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068531873 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071873793 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065688338 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073510736 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067391237 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068244255 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068636518 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064619357 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066392946 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066721614 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066308336 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073227708 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067247884 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066503777 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065575557 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065164641 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067757639 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070883251 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074631925 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069443617 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070355156 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061901039 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063536917 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067936851 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064790692 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068781456 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068795626 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071746664 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068764602 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066571736 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064960333 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075134849 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071903123 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.06997194 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064366193 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070259213 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066902194 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068525274 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067705081 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066383844 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068433964 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070217761 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068171267 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065914614 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07341593 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069788765 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067614082 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068124084 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067460962 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067072326 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06233804 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067066119 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068333989 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071885994 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068417126 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066498834 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077257538 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064370443 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067071317 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069936676 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066492368 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071782933 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062136984 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067697033 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067741481 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067203654 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061979592 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065786422 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063818802 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.06805229 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064869347 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061044725 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075630931 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074264497 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068530681 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064459426 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064396421 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060905165 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060993803 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.195203049 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068676899 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069833801 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078226982 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066638495 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066221661 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062167985 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066978914 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071106544 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070027638 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064427086 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062623932 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065941292 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070125307 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072715496 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065927521 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066180746 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070558702 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068697538 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064738505 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071002081 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063963536 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071149375 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080094943 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067910161 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06847822 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073451537 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074720962 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068098063 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062542151 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067855269 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069700513 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067796066 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068073156 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068137467 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081831466 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071348685 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066620075 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065582045 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069813642 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066819531 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075614824 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068604377 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067475665 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071239493 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069311317 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076573114 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069867885 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074855557 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070035576 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070241186 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065816661 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067657462 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065389286 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065473291 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068331343 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067273672 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072374983 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075898257 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066492071 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077505965 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075902444 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.06835954 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063488015 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066231042 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065796063 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062346585 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068219801 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065278448 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065123305 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064713878 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065182124 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067418021 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071689332 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067969183 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06735602 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06654305 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061062083 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069449294 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069210657 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067391899 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063610787 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066644358 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06751399 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070803482 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070235903 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064563001 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068251527 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068585199 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067414564 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062224304 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073551806 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065844682 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069235164 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066419824 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06724269 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067932366 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070343771 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071912258 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068357191 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069360114 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070789982 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069210251 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06413856 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.0641648 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072226974 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065257286 seconds)
  done (took 42.675137469 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101142686 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063856803 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063058102 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062319036 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074296545 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063044658 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062290189 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063896656 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063302555 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06571977 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062303281 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062266752 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071596515 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07842161 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074562396 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067251721 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062322411 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063186703 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062010281 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063069288 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071394639 seconds)
  done (took 2.759208619 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074673653 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.071739783 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073271881 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076581171 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067846464 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071298075 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073371426 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071028629 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076252282 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067422012 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076819468 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071105899 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067141091 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.06764135 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06740717 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071047977 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07716345 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067990393 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.079149824 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073047089 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071190198 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073227238 seconds)
  done (took 2.901648524 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066861084 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066036026 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067663567 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061938836 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066667246 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062158955 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070038827 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064104292 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069622171 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065732526 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065461453 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065005008 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067650812 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062356024 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066319534 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063906422 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109794958 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069548696 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066122622 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067429002 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061840438 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067941887 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06201078 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062068079 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064980083 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069701418 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066964073 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06445365 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065703293 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06518463 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066066163 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064403793 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067530554 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066849341 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065076503 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065032858 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065405954 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066012406 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061666595 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06466826 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066815627 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062236292 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066487329 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067823487 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064538872 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064374883 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067571215 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065643018 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061121713 seconds)
  done (took 4.572839032 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080424111 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108246186 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067766286 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088735429 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081373035 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076297697 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069915901 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090193026 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063650109 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065151032 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082474401 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080854684 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065979447 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071494955 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072432171 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066160364 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067521397 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065257087 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070170731 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065815677 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.07058755 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072514383 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080721609 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079682849 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069813485 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064953461 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065327797 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070120439 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079186998 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070539698 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071070633 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071480278 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081648305 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071486625 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065825214 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068022241 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082146035 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065949601 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068042995 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063473738 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067969608 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070042591 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072544225 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082441567 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066352769 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071198546 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066176798 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062990425 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.07887606 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068202457 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073782185 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080188698 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069421257 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066503365 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070517971 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080661929 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065733333 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064083831 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068562789 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078360765 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.0635934 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069683183 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079811169 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067507282 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073318262 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080130425 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071064666 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06954508 seconds)
  done (took 6.385005429 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075086831 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.07293174 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081221693 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080883666 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072724714 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072589078 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072733612 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072778256 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072604553 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078097268 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072683129 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093775028 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.0681108 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075047757 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07264074 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072634245 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073454988 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072764995 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072750592 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072755682 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073212118 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080610729 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072610017 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080766142 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098683431 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068011393 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072221508 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073020128 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081356514 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072779763 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079947259 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072333765 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072571813 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080940164 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079953964 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072632908 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065170488 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072378256 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072558423 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072724978 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06771175 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08043784 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072453465 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.06743309 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072451738 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072014416 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080596773 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079814122 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075271552 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077590767 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072614534 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081010208 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072251104 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072801431 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080593378 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105344299 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080490727 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08063222 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072771061 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080302581 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080338096 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086598892 seconds)
  done (took 6.060556253 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083919494 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075397392 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.07689869 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061628457 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064080643 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070212376 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064189058 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064522812 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075034627 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.07525812 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077786645 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070146387 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073386892 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077625001 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070060241 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073200608 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070336852 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070249552 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074942382 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069975019 seconds)
  done (took 2.777829524 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074586285 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083531353 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066984675 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072319284 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068885048 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071777832 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068061747 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069322923 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067257534 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068947924 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076150783 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076432916 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067411597 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072002554 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076240976 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072396534 seconds)
  done (took 2.484178555 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074880706 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072086267 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08061245 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066905975 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064345901 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062655255 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066245608 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061445793 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062474196 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078622659 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065864447 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069192274 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065975839 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064549082 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063016652 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069063615 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062723179 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063787144 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065834857 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078561372 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076769822 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064697187 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066597649 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066292755 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066140933 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070896314 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065614145 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06382377 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063358819 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066327635 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066848979 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069472053 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06331516 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064079007 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064567856 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063834984 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065943805 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066649704 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069143132 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065907755 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064346827 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066154071 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065934297 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067079646 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062430245 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066805282 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062684682 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068192922 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064331309 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066715515 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065828914 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068554243 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06677303 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073164215 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069668006 seconds)
  done (took 5.021306331 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080825159 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069860149 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062461051 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064066072 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069614123 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067783669 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069427358 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067809605 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067992616 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064425634 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0682403 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069340978 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06793748 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069859728 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068322871 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069567026 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062357212 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06819378 seconds)
  done (took 2.572129517 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071462881 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066547392 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07244663 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066941876 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066710748 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068537115 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062096923 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.065415947 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064845203 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066268062 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066431008 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068636564 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06515683 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068292067 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066455978 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06627687 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068511784 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064944466 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065982146 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062165658 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06860898 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064797479 seconds)
  done (took 2.80443889 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.07256902 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092520448 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.138068766 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.083844266 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081628855 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.079340312 seconds)
  done (took 1.887280834 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091097623 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079751262 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067221057 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088345027 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074200854 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067756891 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06782528 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068693482 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076987212 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077004465 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06797459 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076923556 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076924797 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076411151 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07417312 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073661098 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068268416 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068043573 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066495151 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085076244 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068479036 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076325607 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068091499 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067340957 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067884938 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075934711 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076593117 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076459281 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067574436 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076355642 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073140324 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067749562 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07727461 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076711047 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069271486 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076798424 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067952793 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085271736 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0737504 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075767464 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068905958 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073942575 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076750071 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072789329 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076624881 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068183226 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072751317 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068183885 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068536512 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087077088 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073826156 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076768722 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073875482 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076997789 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077050792 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086990151 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07692871 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076269926 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074069454 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079337533 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076112184 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07362906 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0759339 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076842908 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073625654 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075851119 seconds)
  done (took 6.258183971 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082471262 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086508653 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069103348 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077264525 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076261649 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068241187 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069031278 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068061392 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068106905 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068156658 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108758152 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0685705 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076242179 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076719239 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068211206 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067895328 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068154462 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076331968 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06758748 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086943501 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067892609 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075995671 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076125046 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076105606 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076650115 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073664727 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068606644 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068473727 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068035677 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067904968 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073250402 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068476745 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076122433 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067352479 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076353375 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0682918 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068511042 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073105936 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067981279 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073864685 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076245871 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08472078 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067791066 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068382022 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076309294 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068051806 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067701183 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067209744 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067601998 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067727556 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076922906 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077124374 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076925228 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0760722 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06883207 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068768022 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068178835 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068515617 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068232859 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073712121 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076314106 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067945347 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087300312 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067992258 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067934505 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076245229 seconds)
  done (took 6.167772395 seconds)
done (took 129.074778453 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.183903695 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.169593015 seconds)
  done (took 1.689704512 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069378793 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09828136 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.07666094 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.12881194 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066626911 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100915559 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099827519 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078085677 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066422334 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066674958 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066287177 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068772443 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132505234 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067045613 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066221111 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069722671 seconds)
  done (took 2.670296406 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098050067 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.158077693 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099487829 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065433687 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097093687 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073422015 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06504654 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075437552 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070990621 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065222265 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073194477 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070939823 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065300173 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071206234 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071151581 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073359848 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065179439 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073717472 seconds)
  done (took 2.785585562 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101411251 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091534251 seconds)
  done (took 1.546614656 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.155486529 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105836986 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.150766311 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.348635031 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.170146105 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229729081 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.132713024 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.128203234 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117702337 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.12437901 seconds)
  done (took 3.012432423 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098008822 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.153193801 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.257408248 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115730478 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072797262 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09602088 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117039494 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077917964 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081259262 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.08118992 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081157077 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076566948 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099431477 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07425962 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073331573 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076673371 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102880802 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072772446 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074674803 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077126559 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099804009 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065945023 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074042984 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072618593 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077687588 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077974291 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065361458 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06558041 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077108635 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074337833 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077311449 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094465911 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078019793 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108420678 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070479651 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.109880309 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077231299 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074302962 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074639126 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074336181 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079122589 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079141168 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072604475 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076281264 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065554698 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076562777 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06555708 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065531214 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078476157 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066883805 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078029043 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077158293 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.108803086 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068452503 seconds)
  done (took 5.986157224 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101503413 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105938859 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071673513 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.109474427 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097582691 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07130188 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101996762 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091975605 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102991239 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.093628173 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088969045 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071235309 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083056769 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08368229 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.110850036 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102842237 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.095828283 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071182253 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.102378988 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.103552015 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068777556 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095234307 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091127794 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102598617 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06797357 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070344308 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068300786 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070967692 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077595746 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078765811 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070722083 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.102444042 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084998757 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078868955 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067265518 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068173763 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068630024 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079934157 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.097780617 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079213936 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078688174 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067880989 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068264275 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069721819 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091423283 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067970375 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079536067 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080914988 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079710457 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069991193 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070574199 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06822837 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069710268 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081021237 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078211207 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081505378 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080425346 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068537523 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068922866 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07177084 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081591567 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079797718 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080194382 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.09329237 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079637372 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06831615 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080942376 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085591678 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068387119 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069975905 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068712188 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06967536 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06979121 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078761338 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07877707 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070643562 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070376668 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068515063 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080743409 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079176866 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068210504 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07784382 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06757512 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068696301 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070198861 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070123523 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078827809 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080190822 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070261864 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068378537 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069607589 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068175045 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066719997 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076422597 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078946899 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077831237 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078155298 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068814036 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078680333 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078203655 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069071141 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078284292 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.195518486 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07117119 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071003954 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07975429 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079365484 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080365397 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069752574 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069020685 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.080268279 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081206453 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06943172 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079735694 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082282356 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07996827 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068603286 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081090022 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069300851 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080796992 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070283834 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081216586 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070050603 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080764104 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069862917 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068250911 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069141927 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079978892 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071163844 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068816629 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070617841 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070246623 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079859088 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083094864 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07186286 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082177767 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079470054 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07093604 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080145299 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069862629 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079967254 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069653979 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070558198 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068675808 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083313659 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068958372 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069273658 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070257008 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081776215 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068846623 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080549639 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07900854 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068755614 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081607408 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080783253 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078080193 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080718632 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070476697 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069264283 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068470116 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070087571 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078705886 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08037109 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071960303 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069495541 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078075373 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079729847 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067516971 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07886371 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078749066 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07916923 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069288656 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070366823 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080841346 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081592924 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078989855 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079607849 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079613162 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069488183 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07820067 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079161923 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068739429 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085172503 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068849312 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083521263 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080295318 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078062016 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079694267 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.0814505 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081733877 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080739482 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08350566 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068339514 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068280642 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080146822 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068191874 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069632035 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077341287 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069282356 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069328189 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082439292 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068270792 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079132326 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067820047 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078123209 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06659672 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069196424 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081772202 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067236448 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068910389 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078548064 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069450884 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.07673347 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080053472 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077594122 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067135039 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069684576 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07892486 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077371221 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066957759 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067010956 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069468684 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076742734 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.075730812 seconds)
  done (took 18.721926527 seconds)
done (took 37.772930625 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.214869103 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153834285 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182594237 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.122155142 seconds)
  done (took 2.134275718 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.123443178 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102155704 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.096065816 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065817508 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103605333 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066139747 seconds)
  done (took 1.95153323 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.315752003 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214316448 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.185039366 seconds)
  done (took 2.105802539 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.201217616 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190170055 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.401281321 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.259717022 seconds)
  done (took 2.553213861 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144964079 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090729153 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068263566 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084498557 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.137428614 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.16387221 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.103323638 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.1283343 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078845341 seconds)
  done (took 2.448007445 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149786089 seconds)
done (took 12.777775539 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.193754356 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.135154831 seconds)
    (3/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.22999029 seconds)
    (4/309) benchmarking ("sort", Float64, false)...
    done (took 0.145866542 seconds)
    (5/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.079894777 seconds)
    (6/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.185048793 seconds)
    (7/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.181249011 seconds)
    (8/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.078746775 seconds)
    (9/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.110721879 seconds)
    (10/309) benchmarking ("sort", Float32, false)...
    done (took 0.128715592 seconds)
    (11/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092677679 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.072532 seconds)
    (13/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088969175 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.07895443 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.12117968 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.151283685 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07436969 seconds)
    (18/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075030453 seconds)
    (19/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.192541673 seconds)
    (20/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051673969 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.113304111 seconds)
    (22/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073246086 seconds)
    (23/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.184123067 seconds)
    (24/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.17190612 seconds)
    (25/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076311724 seconds)
    (26/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069946737 seconds)
    (27/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.164318782 seconds)
    (28/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076982043 seconds)
    (29/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.17917782 seconds)
    (30/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.0726979 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.096139804 seconds)
    (32/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.15543508 seconds)
    (33/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.205245128 seconds)
    (34/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.149034171 seconds)
    (35/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076494026 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.096343936 seconds)
    (37/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.149851871 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.121855925 seconds)
    (39/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065126229 seconds)
    (40/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072815118 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072036942 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.125476344 seconds)
    (43/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.073626808 seconds)
    (44/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.205314728 seconds)
    (45/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.100752287 seconds)
    (46/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066146667 seconds)
    (47/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.151432118 seconds)
    (48/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068549853 seconds)
    (49/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076562731 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.145916759 seconds)
    (51/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.151576323 seconds)
    (52/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.101796529 seconds)
    (53/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080238445 seconds)
    (54/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.134506463 seconds)
    (55/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.165852482 seconds)
    (56/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.230399936 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091777118 seconds)
    (58/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.101897198 seconds)
    (59/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072649186 seconds)
    (60/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.180734434 seconds)
    (61/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069519447 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072760201 seconds)
    (63/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076145415 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.099425104 seconds)
    (65/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.203341221 seconds)
    (66/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088134781 seconds)
    (67/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070745943 seconds)
    (68/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065578345 seconds)
    (69/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.168210146 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067088748 seconds)
    (71/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051151209 seconds)
    (72/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.164647537 seconds)
    (73/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052776263 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.093758976 seconds)
    (75/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.15576971 seconds)
    (76/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053617672 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.095211023 seconds)
    (78/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071741645 seconds)
    (79/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078696656 seconds)
    (80/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052587757 seconds)
    (81/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066616963 seconds)
    (82/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066581246 seconds)
    (83/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068989413 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.287483975 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.09824104 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069509528 seconds)
    (87/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068051291 seconds)
    (88/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076877711 seconds)
    (89/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.151993984 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.096960337 seconds)
    (91/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.157845001 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 0.066676367 seconds)
    (93/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075229017 seconds)
    (94/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.187461067 seconds)
    (95/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.152494469 seconds)
    (96/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.075771013 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.094138668 seconds)
    (98/309) benchmarking ("sort", BigInt, false)...
    done (took 0.186586247 seconds)
    (99/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073615579 seconds)
    (100/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082585371 seconds)
    (101/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.052497203 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092067452 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.138707542 seconds)
    (104/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.052163268 seconds)
    (105/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.070813317 seconds)
    (106/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.17668431 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.096109533 seconds)
    (108/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.07363888 seconds)
    (109/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.062014836 seconds)
    (110/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.110620759 seconds)
    (111/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073025536 seconds)
    (112/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.332057104 seconds)
    (113/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.05157328 seconds)
    (114/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074284468 seconds)
    (115/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.052323131 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073344836 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090141842 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.110610317 seconds)
    (119/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077557188 seconds)
    (120/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083180791 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.139991055 seconds)
    (122/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.160090059 seconds)
    (123/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.177835163 seconds)
    (124/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.171414423 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065701276 seconds)
    (126/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.11492518 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.140834769 seconds)
    (128/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.132246877 seconds)
    (129/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.053672934 seconds)
    (130/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051739267 seconds)
    (131/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089168429 seconds)
    (132/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072298683 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 0.13346744 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074014499 seconds)
    (135/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180311779 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093824126 seconds)
    (137/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.18545532 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072360983 seconds)
    (139/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068132753 seconds)
    (140/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.176051466 seconds)
    (141/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.096385452 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070607059 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071851131 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065269481 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092243421 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072163698 seconds)
    (147/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051148506 seconds)
    (148/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052094032 seconds)
    (149/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051554684 seconds)
    (150/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.175211608 seconds)
    (151/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.053031366 seconds)
    (152/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.151892508 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065595845 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120355848 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072368071 seconds)
    (156/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061816155 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.169434771 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.08674052 seconds)
    (159/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.142232805 seconds)
    (160/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071782165 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.126809062 seconds)
    (162/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.158438639 seconds)
    (163/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066152516 seconds)
    (164/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.136481778 seconds)
    (165/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052822524 seconds)
    (166/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.175240345 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089623431 seconds)
    (168/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075041237 seconds)
    (169/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061218458 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.171344173 seconds)
    (171/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086607524 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065604948 seconds)
    (173/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.097878017 seconds)
    (174/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.11158871 seconds)
    (175/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052374516 seconds)
    (176/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077907456 seconds)
    (177/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052253756 seconds)
    (178/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076868765 seconds)
    (179/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052232193 seconds)
    (180/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072670967 seconds)
    (181/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067541516 seconds)
    (182/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051009043 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.096726891 seconds)
    (184/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050991405 seconds)
    (185/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067481463 seconds)
    (186/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.098719776 seconds)
    (187/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.221115571 seconds)
    (188/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.064336106 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066680841 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.053190775 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073518328 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067236955 seconds)
    (193/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.077486984 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.06923084 seconds)
    (195/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.053855892 seconds)
    (196/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088935825 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075071524 seconds)
    (198/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073374247 seconds)
    (199/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.187736304 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088769442 seconds)
    (201/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07088486 seconds)
    (202/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.052881439 seconds)
    (203/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.052461053 seconds)
    (204/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076790949 seconds)
    (205/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.09636467 seconds)
    (206/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064886678 seconds)
    (207/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.0739098 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.128279303 seconds)
    (209/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053384781 seconds)
    (210/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066961799 seconds)
    (211/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073909453 seconds)
    (212/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.053855511 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064840339 seconds)
    (214/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074342451 seconds)
    (215/309) benchmarking ("sort", Int8, false)...
    done (took 0.141536191 seconds)
    (216/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066578187 seconds)
    (217/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.105872683 seconds)
    (218/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079259856 seconds)
    (219/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.07093086 seconds)
    (220/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064679539 seconds)
    (221/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.069354341 seconds)
    (222/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076708684 seconds)
    (223/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.186657625 seconds)
    (224/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073590843 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07325968 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07613625 seconds)
    (227/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073167278 seconds)
    (228/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064757565 seconds)
    (229/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.053011286 seconds)
    (230/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067608921 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067388754 seconds)
    (232/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.188047553 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071574509 seconds)
    (234/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063650017 seconds)
    (235/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051912335 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064825398 seconds)
    (237/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073565542 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.06608034 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136570459 seconds)
    (240/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052464003 seconds)
    (241/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.053128669 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066162038 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086979963 seconds)
    (244/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.052499468 seconds)
    (245/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051799393 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065759761 seconds)
    (247/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.05202492 seconds)
    (248/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071737205 seconds)
    (249/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.052597826 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086598473 seconds)
    (251/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067567514 seconds)
    (252/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.07167747 seconds)
    (253/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054403068 seconds)
    (254/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066040007 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065814786 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065152985 seconds)
    (257/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.110217541 seconds)
    (258/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070600839 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.06610094 seconds)
    (260/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051693985 seconds)
    (261/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077477775 seconds)
    (262/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051894567 seconds)
    (263/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067280762 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065480568 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089101286 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08592662 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072174868 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.137568071 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088052943 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.1180098 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073105118 seconds)
    (272/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052379736 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088850663 seconds)
    (274/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052900666 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065634083 seconds)
    (276/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061184354 seconds)
    (277/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061360522 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065812161 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.092815174 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073481462 seconds)
    (281/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078796631 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064683576 seconds)
    (283/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.066050209 seconds)
    (284/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081160797 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06455368 seconds)
    (286/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.05157442 seconds)
    (287/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051635181 seconds)
    (288/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07220325 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072639659 seconds)
    (290/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051771062 seconds)
    (291/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052086675 seconds)
    (292/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073126288 seconds)
    (293/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051718691 seconds)
    (294/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068877399 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071114119 seconds)
    (296/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054935557 seconds)
    (297/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052835323 seconds)
    (298/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066605852 seconds)
    (299/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051670398 seconds)
    (300/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071234283 seconds)
    (301/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.05179486 seconds)
    (302/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.06579512 seconds)
    (303/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065246477 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070940529 seconds)
    (305/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071715703 seconds)
    (306/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065163398 seconds)
    (307/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053673411 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09020585 seconds)
    (309/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072270425 seconds)
  done (took 30.744690244 seconds)
done (took 32.151434639 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084955863 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093482347 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076189724 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092737672 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082010539 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076872345 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072618877 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079160949 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080507088 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082341433 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078770045 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055117909 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074495391 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074251006 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074522497 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091610262 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078062352 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072515284 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07283289 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065146044 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07312879 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066072918 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06721552 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055049304 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077546712 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071840293 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073210323 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07400059 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066310158 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066344301 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069182297 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073171706 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065813001 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078197561 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072174021 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073097985 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074371796 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076329383 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067557336 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066093419 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073968568 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066186068 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072918562 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073680395 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072056711 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071704896 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07297863 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078665067 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091101141 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068352666 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074201575 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075817489 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076658443 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072502079 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069183811 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073116302 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.0706759 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091681327 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074450308 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068584027 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074316117 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073834375 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071451084 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073146907 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073301814 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074969244 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075884538 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071020869 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074859169 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071068799 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065638308 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072841257 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068620553 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065805636 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075504786 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07653896 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064258589 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071029359 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072336394 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071095908 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065009025 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067444318 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067124166 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071481239 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067540867 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054828507 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068882285 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.0713871 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064744118 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073100544 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072403568 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072031816 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067197783 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075232909 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06505839 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07080675 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065922804 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065743492 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066896375 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069143335 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064966557 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067810305 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074346438 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06693086 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071286241 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079344286 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065434715 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071250704 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065175181 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064729178 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079618929 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075015511 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06565915 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067823275 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064238121 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07233629 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064452382 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065078071 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065354138 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065211335 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070995237 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065223165 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067149216 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071697142 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076759476 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064730769 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067979682 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067284885 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064638379 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07019958 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065012936 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064835279 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.199509214 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062453412 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068352496 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066118349 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073027532 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067991063 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073419489 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067335091 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074109186 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069746267 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071529361 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071249267 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065666685 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058737873 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068523534 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068473891 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067217563 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066514767 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067222885 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066243197 seconds)
done (took 12.462517673 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067305393 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143194782 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099637353 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095430494 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086029408 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066621694 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076296323 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102281467 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067631627 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102686861 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087600003 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085197078 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113216403 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064866514 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066063922 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070003482 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067159686 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.08194287 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101186721 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086287535 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116210896 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066016161 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095025034 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.09073764 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087605739 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101798089 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067045078 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.06994597 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069899561 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091598461 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086353894 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069871611 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066853109 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100752781 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092555081 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083700314 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066839859 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082648578 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06680718 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065844617 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067593346 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098380493 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080036003 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080648729 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070189198 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069134572 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067182133 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083767431 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089487055 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.07892589 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086751418 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103510137 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069073566 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.066106404 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064827114 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086035564 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065611009 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068987936 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066391207 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.06843539 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065887765 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069479508 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081151431 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082792599 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069905259 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080674108 seconds)
  done (took 6.816933186 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08373358 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089669046 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083381408 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083636244 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065836546 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067012878 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066806106 seconds)
  done (took 2.040349986 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067276341 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087772292 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089018485 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089142522 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08485391 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087656566 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075906149 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066825932 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080442943 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067699976 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087512833 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102047398 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067040438 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073174151 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090915017 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066796515 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090750368 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067020489 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069698416 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.09010723 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068674714 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082824732 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069947914 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.0673556 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080734063 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066683668 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113363698 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070972743 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068472441 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069450755 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064636234 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106995718 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080155273 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075732192 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066456604 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080387156 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080936992 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06500019 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082883679 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071820634 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08057246 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067063643 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067494314 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06519361 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071340486 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.07766054 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06789978 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067532593 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069676494 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086867691 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067552084 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080756512 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.07110488 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069414989 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068567926 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070724026 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076695691 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067821515 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086911003 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068215504 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083242817 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082970632 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080643765 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082826149 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068950036 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080170385 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080777007 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069464196 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068978384 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069940438 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082985892 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064972251 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068264013 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077803287 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068290429 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089656704 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089407542 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068082319 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075540089 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067169747 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066795602 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066949893 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089691133 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069219744 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06695894 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070501611 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070215228 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065166001 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065513343 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070126385 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064884903 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.06838902 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069321076 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070642645 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06933868 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083174506 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068969423 seconds)
  done (took 8.790173863 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068956663 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068542463 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069331751 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067664052 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068732921 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068564211 seconds)
  done (took 1.932318117 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093781914 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070109694 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081250523 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072646605 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10469625 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086755443 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087960842 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079179113 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083862071 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079121248 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087360436 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088908118 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093313851 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073187972 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086605364 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072313369 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087660386 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076282328 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07887556 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073444265 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08739387 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073980342 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073479356 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082058176 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076628576 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072735541 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067513407 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079354543 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.07868866 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079707861 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072663675 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07587755 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070956033 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079310706 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087344418 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070862412 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072206709 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077721156 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072894331 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076280427 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088747954 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073455397 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074869055 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077546145 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07912579 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070853902 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077674026 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076665318 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086386604 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077335338 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077243322 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071922097 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075751155 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077455582 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070809336 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078718173 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077522407 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087128272 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072548138 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070651813 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069534499 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075758178 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078534073 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075591056 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079242252 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076897628 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070383963 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073008675 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072839443 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.0719035 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077394646 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06936055 seconds)
  done (took 7.118489575 seconds)
done (took 28.186505167 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542606364 seconds)
  done (took 2.032254051 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.605773092 seconds)
  done (took 2.120068098 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.591232228 seconds)
  done (took 8.101994445 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.394376878 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.47744657 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.691090946 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13176212 seconds)
  done (took 3.238314409 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.672576004 seconds)
  done (took 2.193569869 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.209622374 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.197235031 seconds)
  done (took 1.937579139 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.378422883 seconds)
  done (took 1.888814839 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.096690909 seconds)
  done (took 2.607904545 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.263628417 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.164240571 seconds)
  done (took 1.946804932 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.461004982 seconds)
  done (took 1.976734967 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.860263954 seconds)
  done (took 6.377922912 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.207528553 seconds)
  done (took 1.766877617 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240473943 seconds)
  done (took 1.758769524 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.655752591 seconds)
  done (took 3.176266608 seconds)
done (took 42.642728189 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079571829 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080991351 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081083449 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077386676 seconds)
  done (took 1.827797806 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077021311 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072189038 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076165157 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07210317 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076877943 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072480231 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074055919 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077472813 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072225175 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072548638 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072134519 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072071725 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074867178 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073856661 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070669493 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074679385 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076055733 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072068989 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075481401 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072510208 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.07101931 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074839849 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074561335 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071685519 seconds)
  done (took 3.292707331 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078101966 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072877634 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074730069 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071465766 seconds)
  done (took 1.825538938 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076437645 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091714455 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.08856443 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077935677 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092141604 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086016833 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069007181 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068701455 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.07278191 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07669133 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06778142 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096038842 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087696851 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076828343 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078797801 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066121846 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068267961 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086454338 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076989395 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077327957 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069831166 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076701411 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067724466 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088004549 seconds)
  done (took 3.409557945 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077485691 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103675181 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077253087 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087641304 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089348939 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065429901 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074047625 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089485093 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122247066 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065404492 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069877955 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065504119 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072422409 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065132511 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076303072 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104829857 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107481574 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068158991 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095290903 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065484326 seconds)
  done (took 3.176206484 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072305035 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069855861 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065842387 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068387661 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076794428 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07271116 seconds)
  done (took 1.960067173 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067836063 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06691734 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066745491 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06662883 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07202153 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067285765 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06556171 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066920075 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067085319 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066677921 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066515792 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065559735 seconds)
  done (took 2.335985485 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.423752556 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068726957 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068708954 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065753602 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070471385 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066189844 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079539903 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067895949 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090666148 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066413997 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06679561 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068329679 seconds)
  done (took 2.735083221 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207475079 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076192946 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238244371 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136831885 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112203636 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115977684 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10386366 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112930636 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144267275 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101957889 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169102392 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166873734 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107365611 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137082012 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088754467 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097584925 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156061898 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163090485 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103513059 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166175569 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144424842 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124645802 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146759354 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101117599 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106584791 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122210373 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071012021 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079815499 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171404291 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131939749 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147405316 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110977827 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093860793 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177579878 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171930379 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143173203 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133679028 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083864674 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102053174 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132935351 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199370455 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08767158 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162966069 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244316299 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08168543 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13460187 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120941544 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119486315 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107634492 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090247375 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146068709 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184220469 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139113879 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087053959 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112593838 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115588522 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116570682 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103832551 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181566663 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161986559 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128883849 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071095374 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098831448 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153274514 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132197342 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109063276 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.128238683 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094733085 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134427753 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154764966 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118579189 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143885209 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128551052 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089230346 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119616933 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140146623 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129204268 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170870931 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125371786 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.0727209 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125712095 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103785817 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081432692 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142072616 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075514878 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177233337 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098609576 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10591985 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112700335 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108704151 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108827062 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161498658 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144941061 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243554743 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066450207 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104218493 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.12049246 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148671719 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087768176 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109972298 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116732729 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078635732 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13991458 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074810541 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124177092 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075601666 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125404706 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133989816 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075209348 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121880134 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100504907 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100157395 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134552639 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159937713 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088472207 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082248847 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166670414 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123490589 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10379808 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143372258 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156178709 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098774034 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102615038 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149727434 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180133423 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089237226 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163210104 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107649631 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083758832 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087151707 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123891483 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112737822 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122966827 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082447845 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118732314 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169599515 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074865533 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096235557 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134179041 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078873727 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080826263 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103482287 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100586953 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094686406 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100550208 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104833926 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137224924 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122990421 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105282482 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268386069 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099044341 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171435858 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08871004 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100603081 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10354366 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069901663 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136997823 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1573186 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079108552 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16605942 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123806409 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104578031 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119483815 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083256786 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139782037 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078373597 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070391944 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146230903 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110921671 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109780338 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151658839 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104800407 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127340492 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119762233 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136077034 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133247766 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129368065 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10519285 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087670137 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111905998 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126012881 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072949488 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091470176 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.08013677 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104416292 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096014173 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083481145 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143967286 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125590709 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099869679 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111605383 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096907585 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147871165 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076485328 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130417552 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119810871 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09361673 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151819543 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152059467 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131218224 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098852935 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145153802 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070062629 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073854929 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.08884048 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.267099799 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083191318 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083804389 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118606015 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14699238 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130206713 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139897609 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11188091 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12273563 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155550086 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069556345 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115250355 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149361992 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121512815 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104530384 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089687884 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099452096 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142311563 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107680327 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183012296 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114242301 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126668897 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153734907 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099415703 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085048067 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103641603 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135434548 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105258659 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145548889 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099634697 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088143604 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110280083 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073931994 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100351587 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12834464 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120614497 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136378662 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114896926 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133461035 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076911542 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117495895 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120436226 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123855422 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064353006 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120064404 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161297192 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094151143 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118959649 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153625801 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078909246 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.1236562 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.319952797 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147255649 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084851667 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110966605 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120319311 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128260382 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120193536 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141168401 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108932396 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135553062 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109093038 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086245901 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087072579 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097229293 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105244179 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094084247 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10861468 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11541015 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094190666 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133366615 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104225244 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10970187 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118518378 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096486229 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088878935 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097100063 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175679622 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119729653 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17191513 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098446266 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146304148 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164750216 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074337683 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079191036 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07824503 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140600677 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083738831 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131682923 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097659526 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105646459 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12482925 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14258956 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095525448 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068482181 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108574439 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136068531 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112377774 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098668304 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.108031559 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163438129 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099900334 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07884111 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113324849 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104510847 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102282636 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171770563 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.202179175 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098477234 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075902506 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080751222 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127919439 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154439816 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081130019 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103338242 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11961629 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110674296 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128077338 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102329973 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099700734 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114446043 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151437604 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129924316 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089761863 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113221676 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1306821 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157917183 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105823518 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095778486 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172693361 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152888624 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160871684 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089727445 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131008838 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113653567 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108086298 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140064662 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083359551 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164469856 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081709226 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137126238 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104600333 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090704508 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130958358 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.099306533 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088265743 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149354189 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118157355 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082355474 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077759326 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11814185 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121091231 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107079392 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074879803 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139269719 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072832108 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132376791 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168822576 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080878753 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103882816 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239557016 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080744951 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108737267 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10294062 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088970628 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098498921 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17367746 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088922476 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151032111 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142368204 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113954623 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138124777 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100277898 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636974985 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078488262 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151596154 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116293949 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173505914 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097267602 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11843837 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108758928 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123922357 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145478898 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105113542 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177115061 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132178109 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116330078 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079515352 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103205877 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102956503 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089029486 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105056111 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113677762 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116634208 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093708457 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116884004 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124288196 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082228486 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095318475 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15718546 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117689012 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145507021 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141206492 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08547121 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11863325 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139592665 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079807338 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122370687 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152677592 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106401697 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097031222 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080155334 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.244833423 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171949529 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073123203 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16475758 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120049873 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109919161 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113785975 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115474477 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132278705 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107665815 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121217386 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093565053 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111377537 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112839492 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082242521 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077862798 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104506459 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112316964 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097087889 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100674802 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098138712 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152106751 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071445641 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095832274 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102813167 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145336707 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176064679 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087785588 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082388226 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120958063 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112705403 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113738552 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121269443 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079468259 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082198683 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082289929 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076933429 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108455407 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113085766 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10442039 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111594947 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164959661 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082833024 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225628841 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095687503 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104536815 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069762625 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078828342 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096075602 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097925378 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108431296 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100955363 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170874741 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094024321 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089140256 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091979472 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072556343 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082225102 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126536088 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254077533 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120181766 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097566107 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062832555 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108852611 seconds)
  done (took 59.020120841 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.104816021 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081829891 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096369221 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149849232 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122327343 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212103246 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157039582 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199573223 seconds)
  done (took 2.762618514 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068146225 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094149509 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099095056 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081959217 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066824658 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067884965 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.226038765 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080075975 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06640067 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088549765 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078785936 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068815565 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.423691322 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066026508 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068805878 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062149749 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066953197 seconds)
  done (took 3.404111636 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.366104229 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.359525311 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.372476876 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073524085 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.800143723 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088465444 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.083516676 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.096521524 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070689237 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.277151466 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.702207642 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.09293694 seconds)
  done (took 14.023243875 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077243491 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071304979 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.085356833 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085314163 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073888105 seconds)
  done (took 2.098408177 seconds)
done (took 103.424431613 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080801021 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.396548384 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054627675 seconds)
  done (took 2.12267911 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083174442 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085735327 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085156974 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082988717 seconds)
  done (took 1.981977005 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.074535941 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076600509 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.085029129 seconds)
  done (took 1.875580942 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.226840009 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.140108421 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087731883 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082986455 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078157019 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079420254 seconds)
  done (took 1.885317807 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072880457 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075323868 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07289152 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076565993 seconds)
  done (took 1.937813896 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076889131 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053245184 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05596959 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056126434 seconds)
  done (took 1.88282343 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087533358 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079712704 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078916422 seconds)
  done (took 1.888657599 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108421291 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.086124208 seconds)
  done (took 1.836839282 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081946667 seconds)
  done (took 1.724780542 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099392778 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.11439405 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.129993313 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110559898 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137723949 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110230677 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086848011 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087468002 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078044499 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088312482 seconds)
  done (took 2.684723518 seconds)
done (took 21.998748581 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078838148 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.367722739 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361537897 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092167576 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669437828 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357443252 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.987118194 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09294321 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114436593 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068488906 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084749183 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649734415 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.010750978 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324943297 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.002364995 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325944826 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650425257 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06919793 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06839221 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068612032 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.970270088 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068169219 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068595343 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069289319 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650359277 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372706775 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068746759 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325355288 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068560776 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070361005 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356630924 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069209421 seconds)
  done (took 16.231949706 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071323911 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.11939936 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074215477 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084725939 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071941023 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070588643 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072276315 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069558431 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120614594 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068764077 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085194656 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068883547 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072636037 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069317114 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088155096 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069056735 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069314063 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069391264 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069068721 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069004654 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087431563 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068253789 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068698136 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069545914 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068620143 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080221003 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069306071 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068734763 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069064172 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071155994 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071951556 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069784705 seconds)
  done (took 4.069189825 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116339948 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126745981 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074870119 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104566553 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113617719 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070900327 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.145078907 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093454461 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129470839 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068855691 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085287357 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069059234 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101975793 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069905402 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08860303 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069378826 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069881854 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069971756 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069105833 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069354527 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088312291 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068803975 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069608519 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069586897 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069273952 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08257747 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069518583 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069628313 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069425275 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071542947 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072811897 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070325795 seconds)
  done (took 4.33359855 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073985646 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076141199 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083307729 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08438179 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070453054 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072718019 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073558081 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070226248 seconds)
  done (took 2.262915939 seconds)
done (took 28.545391863 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079243626 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06965329 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073215565 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081243935 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073682075 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079207435 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067975218 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075353364 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072793653 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073661244 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075559244 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068596416 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072423497 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06792044 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074617935 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069013164 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080235852 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073313292 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080040305 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.08143414 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070479332 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073764551 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074761575 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079846843 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080254366 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079757226 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078118249 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073745814 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06987641 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071103024 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07733315 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.08482561 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069404921 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079982807 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068454413 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068595617 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072055784 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.0684625 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079915383 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077345669 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070522838 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076992825 seconds)
  done (took 4.772484563 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08835246 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09190809 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085465732 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062004494 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067312797 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065588445 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089108066 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059919246 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060203974 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088585529 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05645357 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059813498 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062934578 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054530391 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059525635 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056992801 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062267539 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056498098 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059839345 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060049923 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058517294 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055075587 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060861994 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.066320401 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057188258 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062494293 seconds)
  done (took 3.375195525 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075445845 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085634087 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090099727 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.12832319 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104974423 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077801285 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078683196 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093018117 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.086065191 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067709442 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071735141 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094613575 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088984566 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074567285 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068184653 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085438781 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082828428 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069753951 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074084014 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091881468 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085285471 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085050212 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093393148 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081374609 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067171755 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070231751 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072173925 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082177691 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072672798 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077414639 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07233068 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072009155 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069799932 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079465682 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071975384 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.0698469 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091378129 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077851037 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078905764 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.06896795 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071468412 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069466792 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090195845 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.124000404 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067536086 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074990024 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076547958 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077579181 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068247576 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086734038 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079180278 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067596922 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071158494 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067136154 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067951999 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081120829 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070399559 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070343492 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076906106 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071212632 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086620607 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07232175 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083661943 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06777706 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075822302 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067278783 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069420677 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067075771 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093154953 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069484608 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108996727 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069510008 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069479529 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077244545 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075814721 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074482734 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06861905 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083296344 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079019271 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072087197 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076551337 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071731858 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071439293 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088958793 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070621449 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070053396 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069345757 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07499584 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071258334 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.0699208 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081532014 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068532575 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071324745 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084978466 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067890715 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069431582 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074827779 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072927009 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067575998 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07944611 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073481601 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069119077 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077822168 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068543267 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071451744 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078610758 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074492032 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067612212 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073185602 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074609627 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069407788 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070046533 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071091504 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069757276 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076697854 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074933869 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07263807 seconds)
  done (took 10.668062372 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.162055354 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155996557 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071371406 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.146175795 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076852654 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079694648 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.160482481 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095030072 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068525477 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069239963 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06955731 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110713939 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.109236097 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116746359 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079392187 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06851954 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083978469 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115110829 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150824757 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14471383 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084001944 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077285085 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070415468 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069664182 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071339542 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079323355 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086233978 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07765601 seconds)
  done (took 4.45573466 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082163449 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.101792674 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075052038 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090785885 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092888989 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068294954 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070856476 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070211642 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081394414 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080141236 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068405889 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074052057 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07569829 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071949991 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069388569 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075668429 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075718888 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070095105 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071707899 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073697534 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078195318 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081686284 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072566291 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067793881 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07470659 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067956635 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065657907 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085845934 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068724188 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090753251 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066709766 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075629414 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082345788 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06940664 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068303308 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06850682 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06824306 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068244297 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070161351 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067000218 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067217382 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058044323 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067427301 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080664412 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074801146 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057089112 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073578879 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073812889 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073450198 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066469162 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071226066 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071406001 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071710857 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075208351 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07319253 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073360083 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069411094 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066113852 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076130836 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068236332 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065137272 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066770795 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072777335 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067334264 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076124959 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072535738 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066835076 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067849537 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070086977 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074232083 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06793408 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071151502 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065635044 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070053359 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072582572 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070159096 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069067828 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066881851 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068098412 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068723491 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055953979 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067972141 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054600064 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071641581 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066504796 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06661788 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06791268 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072912013 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081279317 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069815548 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074145203 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068908435 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06746138 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07096767 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.061289703 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07105566 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083483035 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.084068191 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068171536 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066037387 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082582508 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072878053 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067309498 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056678778 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075776287 seconds)
  done (took 9.234089627 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.095050476 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089004577 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070670672 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084427959 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.092491225 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087488782 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075471007 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077544071 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070151164 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.082968699 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074526653 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07696191 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068843364 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077546138 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.094187482 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07749202 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070770623 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077598929 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07301501 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.101187211 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08375344 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083161286 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.075549805 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069024312 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076471622 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080784659 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090154042 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080985092 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.079221948 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.076425999 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.080740264 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090403005 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.075052456 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072963731 seconds)
  done (took 4.440393581 seconds)
done (took 38.599891786 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.735531474 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.915922504 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.737416114 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.094762149 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.818435742 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.88490458 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.798581429 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.732346579 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.815808482 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.768647072 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.971086398 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.771150942 seconds)
done (took 64.720934348 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.807877839 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.870475756 seconds)
    (2/2) benchmarking "String"...
    done (took 2.005100716 seconds)
  done (took 5.550375212 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.025868462 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.26460069 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.980781884 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.732803295 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.7397772 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.042385102 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.530455735 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.257220367 seconds)
  done (took 30.225139719 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.871750649 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.934228444 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.380696356 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.414400997 seconds)
  done (took 15.322058453 seconds)
done (took 62.687498222 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.734806986 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.765023581 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.735818959 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.718156631 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.793367693 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.742208883 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.983364933 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.945017382 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.733712947 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.720736 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.736704169 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.171103215 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.742522104 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.005704741 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.736564077 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.741657056 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.79628666 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.216636315 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.8917432 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.748395346 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.737940662 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.758331529 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.734382233 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.844661271 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.748653309 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.738480573 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.191830736 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.750694336 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.366468748 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.735192738 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.768013872 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.120333996 seconds)
  done (took 203.831690093 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.735989826 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.850891062 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.958001275 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.746489027 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.303172833 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.941890054 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.8977432 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.334475616 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.739813235 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.746565088 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.00244295 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.737529319 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.032563886 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.690095382 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.743662439 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.738067728 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.032260708 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.036307856 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.740218143 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.037414962 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.737627015 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.945049706 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.905319469 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.980657838 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.7491618 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.822269373 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.739384073 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.769641249 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.927833291 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.021595907 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.746297129 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.766516951 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.924434511 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.607573741 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.740149614 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.743378208 seconds)
  done (took 169.853952409 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.874559981 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.732750791 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.731362537 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.732657376 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.739100788 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.732895806 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.859604716 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.86197867 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.193606858 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.045948001 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.783639355 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.557553956 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.73204112 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.798704152 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.745264221 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.731291797 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.741792151 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.753651247 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.728931886 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.727242125 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.855118061 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.739307985 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.784581797 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.732341502 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.724874142 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.729653792 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.093480904 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.72446442 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.730386451 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.967416122 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.724941336 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.724663303 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.623818064 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.111287484 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.814048175 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.725806626 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.73122162 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.724601619 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.725052489 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.944929068 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.725622588 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.72531677 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.72519184 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.728090777 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.906627333 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.724720457 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.85212862 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.724679288 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.220885563 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.725668492 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.72412217 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.537048042 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.405798274 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.727003092 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.724708934 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.727776907 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.726808552 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.724276618 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.730656868 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.485960571 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.936586339 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.727049484 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.72854529 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.738478135 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.725053478 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.18777585 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.727171195 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.884364265 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.773015179 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.828776391 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.853913143 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.718295603 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.786010136 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.812533279 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.717844726 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.717596106 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.718012487 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.718367555 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.796557619 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.71666336 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.874369038 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.724709701 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.718508234 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.770385095 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.786513531 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.718041345 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.616059328 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.718220436 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.716812857 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.040201047 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.784953569 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.717380396 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.717432144 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.716302359 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.717097661 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.851392893 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.842571544 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.515375748 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.718104863 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.479689063 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.717274371 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.715913755 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.862347392 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.717330173 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.910903108 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.718339535 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.797962873 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.721482136 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.71809054 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.715654204 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.748570069 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.719413324 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.773117316 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.718148558 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.085652681 seconds)
  done (took 397.321928366 seconds)
done (took 774.610779089 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.41535739 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.377346726 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.507039225 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.402397923 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.38196633 seconds)
  done (took 13.743990111 seconds)
done (took 15.402920577 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.806033872 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.809976192 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.742902249 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.806736281 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.737007406 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.805730638 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.7864782 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.741922878 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.773841973 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.740902448 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.773788272 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.739542546 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.728190872 seconds)
  done (took 24.652499983 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.945228209 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.95360598 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.78641083 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.950153508 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.762549409 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.944018894 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.877380133 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.866124501 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.866382218 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.729935678 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.726911155 seconds)
  done (took 22.067994228 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.946279388 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.958506883 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.789366492 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.958635762 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.764489246 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.951368504 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.880863332 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.865620594 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.862209318 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.72957403 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.722752796 seconds)
  done (took 22.088283071 seconds)
done (took 70.466748181 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.717567854 seconds)
  done (took 3.371484092 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.741347754 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.877990619 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.72556934 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.722346262 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.718976518 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.719442612 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.726543042 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.718603665 seconds)
  done (took 15.605915558 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.714964811 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.71565846 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.718496856 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.71645717 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.718213209 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.7156535 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.71537457 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.717869939 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.71830911 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.718743849 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.714954522 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.715448901 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.717993134 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.718798537 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.718577837 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.716253644 seconds)
  done (took 29.128596984 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.717778632 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.715370941 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.71625593 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.717081858 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.716289358 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.715608547 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.716470156 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.715387721 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.715444431 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.716758609 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.715641311 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.715738197 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.71675002 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.714402562 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.715957507 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.717254323 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.714634069 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.715258372 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.719770197 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.7159308 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.716211589 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.716935928 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.716730997 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.716044357 seconds)
  done (took 42.847880499 seconds)
done (took 92.606781314 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.431414399 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.194894454 seconds)
  done (took 8.281215309 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.718614644 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.717932179 seconds)
  done (took 5.130962331 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.717597102 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.71798727 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.717294267 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.717961792 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.717018617 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.718810913 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.718772183 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.71771831 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.718563537 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.718748832 seconds)
  done (took 18.835940241 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.718695478 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.718166263 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.714672276 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.718675076 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.718357501 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.716751974 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.717989162 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.71841847 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.717921705 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.716025169 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.718575931 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.717003345 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.719069729 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.715699888 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.719059339 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.715372355 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.71590823 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.715700466 seconds)
  done (took 32.568408249 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.718222132 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.717351674 seconds)
  done (took 5.090272637 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.715750314 seconds)
    (2/7) benchmarking "second"...
    done (took 1.715768256 seconds)
    (3/7) benchmarking "month"...
    done (took 1.714574903 seconds)
    (4/7) benchmarking "year"...
    done (took 1.715566856 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.714865264 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.715109172 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.715366598 seconds)
  done (took 13.661522137 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.718510968 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.878309337 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.941059196 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.376579774 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.720506519 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.72080375 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.691528349 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.721838187 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.722547539 seconds)
  done (took 19.147905603 seconds)
done (took 104.369145936 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.557260736 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.715807313 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.140755151 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.761261851 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.771299355 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.012457009 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.718810119 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.931181993 seconds)
done (took 42.263357745 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.781545085 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.168585251 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.198305682 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.497354584 seconds)
  done (took 12.519030663 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.698461447 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.22857805 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.752267122 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.314755573 seconds)
  done (took 19.690668033 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.081744909 seconds)
    (2/2) benchmarking "read"...
    done (took 2.066725766 seconds)
  done (took 5.807551109 seconds)
done (took 46.452937112 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.716711297 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.714075215 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.715948833 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.713981046 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.716522018 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.716438095 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.71566847 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.718017968 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.718239366 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.718300038 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.718051563 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.718063237 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.714930221 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.71501331 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.714976899 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.71645458 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.717292757 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.712748737 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.714262004 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.716906149 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.713921863 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.717432432 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.714993321 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.71387979 seconds)
  done (took 42.839500437 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.716756717 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.716024159 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.71741591 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.718636596 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.714078161 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.716109222 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.71689571 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.71388534 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.715641684 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.719002741 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.714270965 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.714598206 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.717033021 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.714462654 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.71740298 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.715221538 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.716765858 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.713115279 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.716618386 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.713688633 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.715144203 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.714876681 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.714532309 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.715770777 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.714364245 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.713277849 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.716877993 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.71451109 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.716961776 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.714390331 seconds)
  done (took 53.123790347 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.720445999 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.723397731 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.716369143 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.717112986 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.716519695 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.71636131 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.717559843 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.717794785 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.716565019 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.717484224 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.716678071 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.717563867 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.717455573 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.71847159 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.717632757 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.717926784 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.718344786 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.718000775 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.717641512 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.719391897 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.717833187 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.718245819 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.718682975 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.71818713 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.717161807 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.719054766 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.717880191 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.71765215 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.720146108 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.72009979 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.719580909 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.718215155 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.719261554 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.719320415 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.718656338 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.718000535 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.723834362 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.724780581 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.718113575 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.717790857 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.718571171 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.718578414 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.719930503 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.718531673 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.71899843 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.719424464 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.71889564 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.719180422 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.719858301 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.71893263 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.718876548 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.719219003 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.719234085 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.71976318 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.719883932 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.720163138 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.719547956 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.719921532 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.719810623 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.718954295 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.720290547 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.719366829 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.719447246 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.720023762 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.720852137 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.720791096 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.719694544 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.721628034 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.720519762 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.720506229 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.7208831 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.722360756 seconds)
  done (took 125.430885719 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.720319536 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.718397553 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.717457848 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.717651418 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.719440471 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.720557512 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.718833035 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.72058999 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.717960554 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.720567911 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.722569435 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.71846957 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.718507477 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.721394116 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.723156845 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.717977612 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.723020416 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.718690421 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.721571597 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.722093426 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.722264972 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.719180799 seconds)
  done (took 39.498703273 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.722896614 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.721393326 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.719411736 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.721967861 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.72021349 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.721495424 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.721676058 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.721786957 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.721582548 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.720054051 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.720012975 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.722729976 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.719521735 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.719325039 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.71888281 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.720224192 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.723998879 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.719999312 seconds)
  done (took 32.635758591 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.720455298 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.719897707 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.723005696 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.721640943 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.720632559 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.72329013 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.720093729 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.724041969 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.723207093 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.721319588 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.72276979 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.72326832 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.723220238 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.719868149 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.723263101 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.720324688 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.723592697 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.720162491 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.723288477 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.72119965 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.721821321 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.724021774 seconds)
  done (took 39.544459839 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.724061149 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.723797935 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.7210651 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.722487827 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.721222134 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.724417692 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.723962049 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.721761529 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.724072826 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.724557304 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.721460063 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.724489442 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.722133107 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.722320386 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.722030398 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.722796596 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.724297997 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.722426217 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.725867517 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.722417098 seconds)
  done (took 36.122639087 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.724609397 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.725087261 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.725304279 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.725231228 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.724771459 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.725772422 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.725535402 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.725515528 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.72480068 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.726391813 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.725714252 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.726434981 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.724984278 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.725947096 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.725432545 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.72559383 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.725609935 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.726328678 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.725588155 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.726562763 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.726358181 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.725569173 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.725652254 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.727729409 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.726187072 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.727067409 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.726240849 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.725866519 seconds)
  done (took 49.985151307 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.726217482 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.725056831 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.723429478 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.722814184 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.723932624 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.722418404 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.724413107 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.723708295 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.726539079 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.723785292 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.726843509 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.728068909 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.727768526 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.726261164 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.72659909 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.72726963 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.726684763 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.725235437 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.724880559 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.724885825 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.726867697 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.726804861 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.726383319 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.725099536 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.7242204 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.727510248 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.724159502 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.725310121 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.727909853 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.724560028 seconds)
  done (took 53.430235314 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.745670277 seconds)
    (2/2) benchmarking "in"...
    done (took 1.745611725 seconds)
  done (took 5.15486628 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.725932833 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.727919116 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.72686216 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.725380054 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.726483679 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.726924256 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.729087702 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.725302319 seconds)
  done (took 15.477955596 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.72759013 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.727338017 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.728042934 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.729870229 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.728607403 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.729876004 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.736208737 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.728526444 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.731466658 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.731088747 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.734830059 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.736063317 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.735118349 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.730185902 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.730947027 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.730481639 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.728906399 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.728521881 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.729394436 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.72955392 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.730692121 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.732442101 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.731774609 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.726933671 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.7304747 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.740708043 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.737612156 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.729738445 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.731002453 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.735290814 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.730883745 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.72681828 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.730670519 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.730100224 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.729052443 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.730648259 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.741055665 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.731903103 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.740240202 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.729686962 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.729537125 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.727265497 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.732748049 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.734840654 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.732797273 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.729973757 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.730819713 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.727740655 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.731614555 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.734373194 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.733432111 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.730326247 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.727894654 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.740682813 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.734344927 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.74067849 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.73214795 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.734390205 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.738795373 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.741663275 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.744465359 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.738769803 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.7334209 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.731178954 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.740303998 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.755821156 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.740924031 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.728689459 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.730173797 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.730753966 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.740755813 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.747184446 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.742109937 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.73239684 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.732424379 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.730599753 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.733940829 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.731094939 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.742742974 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.735588233 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.73270767 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.732264138 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.74137074 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.75220329 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.733886568 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.732479627 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.731406531 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.733223881 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.735184983 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.744619676 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.733571162 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.73283272 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.734480283 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.733467347 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.737883071 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.734635982 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.732532755 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.735960498 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.73051495 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.732789469 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.732621469 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.737331841 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.741626948 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.732780383 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.733398826 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.742443522 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.732534926 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.734837646 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.743800534 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.732684894 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.73434873 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.73443724 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.743124699 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.730681659 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.736980212 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.741567642 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.733708417 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.73676225 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.735925964 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.734312497 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.743206953 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.758861093 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.734377114 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.733985807 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.7395635 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.744014786 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.73376655 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.739144829 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.734158679 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.732127015 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.733052354 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.737662674 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.734249972 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.737238796 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.734887685 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.73858157 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.731492715 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.734690949 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.734898277 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.736990296 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.738143899 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.73783846 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.737554441 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.740047613 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.735083232 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.738083343 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.742906596 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.738083312 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.738110351 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.738070194 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.731959111 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.737115113 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.739212381 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.737029823 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.738546597 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.73709926 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.735807574 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.735525676 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.736354229 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.737002324 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.735760267 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.737140234 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.740394368 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.736329137 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.743888522 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.735804683 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.733637315 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.735573209 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.736301341 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.737674077 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.73652087 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.736996631 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.741016513 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.74191177 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.736078076 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.736898793 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.743669607 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.736371377 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.737281615 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.737182138 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.740931054 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.745080249 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.738468509 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.74657899 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.737967261 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.737186119 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.737721265 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.7406957 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.738287957 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.737596609 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.740581237 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.742870243 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.751262425 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.749164712 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.739336329 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.741419138 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.739819495 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.740723685 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.744952784 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.739271081 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.737587646 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.738463608 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.73931345 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.738460259 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.742327717 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.738280294 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.739709507 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.738833355 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.73792776 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.738696219 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.739225455 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.741930163 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.742749276 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.736604437 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.739808878 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.739545187 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.740462049 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.735849048 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.739452386 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.740058993 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.738301659 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.739740873 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.751901598 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.735648718 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.740675766 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.741825762 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.741179336 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.739860484 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.740259461 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.743555204 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.740855906 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.748759623 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.741726724 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.743706537 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.748204339 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.741447529 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.740252535 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.743381927 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.739574679 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.737944025 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.7423278 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.74666485 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.73940078 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.740841315 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.74144345 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.743034291 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.741492705 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.749836608 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.737137349 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.74110254 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.742784293 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.74722933 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.739133984 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.743600552 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.742915481 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.742805485 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.74544287 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.74091556 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.741172211 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.744915601 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.741653276 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.742108913 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.74267584 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.744655929 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.747686232 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.748516884 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.742845272 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.745728727 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.743846999 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.744045832 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.743055366 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.741748845 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.742014019 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.759385021 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.749574094 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.750239753 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.746637132 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.741678624 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.749260881 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.744837144 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.746382682 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.74362402 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.743805049 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.742658111 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.742707099 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.74067009 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.74453303 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.742761772 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.745095679 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.744322966 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.745033693 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.743544879 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.743257276 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.743007996 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.743021498 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.742759289 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.745757508 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.742237098 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.748428744 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.74649749 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.744061992 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.745100893 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.754039484 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.744643863 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.746850951 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.743849686 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.744079683 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.74472449 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.746812815 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.743824629 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.74705824 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.748941776 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.746906577 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.754411765 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.744490078 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.755117302 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.743943658 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.746797325 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.750148304 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.743103638 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.74396137 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.746482836 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.744930769 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.753902292 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.744989036 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.747256931 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.747385971 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.745246326 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.744896761 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.744461356 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.745546322 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.746062404 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.744027429 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.755895866 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.745361185 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.748226435 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.748900617 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.741874647 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.745175207 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.744440046 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.745571679 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.753280875 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.746423279 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.747538109 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.746670272 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.747264462 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.744567791 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.745526254 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.746355348 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.742304004 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.745778408 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.75370664 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.746656797 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.749635623 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.74702991 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.757403969 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.745676873 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.755041353 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.746178409 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.749792617 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.746908679 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.74644381 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.750122467 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.747250873 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.749601712 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.74756434 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.748345407 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.749381484 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.746572892 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.750688933 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.748723788 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.747646219 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.748079237 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.756107061 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.767019165 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.749353358 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.751145593 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.743914068 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.749869204 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.751678779 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.747255907 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.747387431 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.752648016 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.756314728 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.75366231 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.748910745 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.747195981 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.749837965 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.748180304 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.746675248 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.747693389 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.747581461 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.747287439 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.751522475 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.748247521 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.756436243 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.747637881 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.749531742 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.752456164 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.749766745 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.760167781 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.749231959 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.751209508 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.747884186 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.748269628 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.751522846 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.749671077 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.749023143 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.751864112 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.749639684 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.749516629 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.755111877 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.754465819 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.753732869 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.750101605 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.748945856 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.751720107 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.751917608 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.750183263 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.749611373 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.749272477 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.751344619 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.75009888 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.752189377 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.749687392 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.74937026 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.751041847 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.750066805 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.75242991 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.756421053 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.752943057 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.746809983 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.74943976 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.74992732 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.749929434 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.752406562 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.762715525 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.753210012 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.758963425 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.757409076 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.752632308 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.75202849 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.75272704 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.75998017 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.750539928 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.75351055 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.752168579 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.755572589 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.751245638 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.755690702 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.750528708 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.761556935 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.751962504 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.751999068 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.761255213 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.753993675 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.75192426 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.752773699 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.754686382 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.751760862 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.748584123 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.751163289 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.75216277 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.760850763 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.755525801 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.752329856 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.754697517 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.751214083 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.75366658 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.75454841 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.752315941 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.753676204 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.748823084 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.754347156 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.752472576 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.752218693 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.749122464 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.753850631 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.752974696 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.756967955 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.758693987 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.749594595 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.755255945 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.753104771 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.754541605 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.75449051 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.752144796 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.750539303 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.750328185 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.753510667 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.752516736 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.756952079 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.75678231 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.754689605 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.754900139 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.753100742 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.753948761 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.756943616 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.762085889 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.758040103 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.750573298 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.753850592 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.755878591 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.75741207 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.754735589 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.754957394 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.755540807 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.75852349 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.75484084 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.754016454 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.753104645 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.756425858 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.77053858 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.754788276 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.755868067 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.756596904 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.76192513 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.753571684 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.750740025 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.755070318 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.75800338 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.756796011 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.759755039 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.754177882 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.76217262 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.757132792 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.755378416 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.756483492 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.758110097 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.762774692 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.759369133 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.754863582 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.755037505 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.759994466 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.770919946 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.755043121 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.765844355 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.78281329 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.756356307 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.75732122 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.755350296 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.756270346 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.756089747 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.758823486 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.75579436 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.755458582 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.755409955 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.756692938 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.757234796 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.763428546 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.758124933 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.755159314 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.756364614 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.758390023 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.760274348 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.752903592 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.75630077 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.755830837 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.755802559 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.756861399 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.757258448 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.757512416 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.771384528 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.767864689 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.75678143 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.756742849 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.754067258 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.762125473 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.759657704 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.765402742 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.762447323 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.757242566 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.756810847 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.75980976 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.757156304 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.754186262 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.760030512 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.757798445 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.757660929 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.754449934 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.771535734 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.764454693 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.764893726 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.759903965 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.75743487 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.757343462 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.760616883 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.757767186 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.758356921 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.761697662 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.758124409 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.760251194 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.757782797 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.757854608 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.760894754 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.76356467 seconds)
  done (took 1042.083072387 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.755048602 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.755123544 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.75618812 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.755518685 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.75512232 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.755119927 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.75523375 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.755890747 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.755582804 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.755500235 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.755848473 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.755951106 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.755205878 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.756646354 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.75567594 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.756319359 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.755599728 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.756335811 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.755876293 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.758155089 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.756828627 seconds)
  done (took 38.566609416 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.759721689 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.755390702 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.755861411 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.757523967 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.756102195 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.758349194 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.755346052 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.75838733 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.758945225 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.756315224 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.759608946 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.758958965 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.756476234 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.756412886 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.756708841 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.758479651 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.759065998 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.755883132 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.759577185 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.757454734 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.759531771 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.757500923 seconds)
  done (took 40.362675115 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.760210501 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.760012291 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.760519372 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.756363837 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.760767227 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.756796799 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.761028919 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.760286336 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.760295171 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.76241221 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.760668572 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.762094155 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.766485797 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.763760095 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.765079308 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.759837611 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.904633791 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.760680559 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.762028311 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.76226323 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.758685945 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.769432017 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.757884063 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.757888415 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.761689118 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.761873455 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.761774255 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.761055431 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.761403252 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.762980804 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.764455325 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.761040712 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.762697112 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.764331711 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.76201727 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.763323561 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.763908589 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.761488016 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.758921031 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.76076793 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.770720808 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.779340242 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.762398404 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.7704902 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.760961086 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.76142008 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.764649171 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.768935867 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.7598659 seconds)
  done (took 88.200210394 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.76199511 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.762179131 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.759737248 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.762094959 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.762877565 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.761783195 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.761778676 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.761410388 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.759595095 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.759982704 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.762882698 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.759969066 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.759100591 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.761049961 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.761456121 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.760013753 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.759716108 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.759482763 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.759140802 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.759682361 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.760448326 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.761935433 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.762666559 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.759196118 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.762379716 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.758924435 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.760147646 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.762412207 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.760334816 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.759668004 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.762326149 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.763673633 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.763148541 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.760364795 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.75999456 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.763477516 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.763530728 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.760490717 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.763857359 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.760821678 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.762862344 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.762987675 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.763060663 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.764201212 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.760558769 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.76105672 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.759963916 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.760482724 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.761500966 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.763009853 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.763021782 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.760646054 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.763237481 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.760958269 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.76377383 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.76291772 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.76133197 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.759793755 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.763050057 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.761815937 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.761146591 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.76438076 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.761547214 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.763388872 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.76368751 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.761671972 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.763019844 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.763205531 seconds)
  done (took 121.488625482 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.764763137 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.765321507 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.765219378 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.764621363 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.76579591 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.76542208 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.764559633 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.764945869 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.764699542 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.765306978 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.764918266 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.765331695 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.765914589 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.766463683 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.766560213 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.765905878 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.766328617 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.766964302 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.766381244 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.767969289 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.766620481 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.767484235 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.767540315 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.766913702 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.768354106 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.767305328 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.766198722 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.767373399 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.766313322 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.766839616 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.767730979 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.768034436 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.767476705 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.766432238 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.767741182 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.767989943 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.767447429 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.767969449 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.768269303 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.766983182 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.767305071 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.767396982 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.768339103 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.767769485 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.768426589 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.76693235 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.766969602 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.767698344 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.767855178 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.767131566 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.767293878 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.767163067 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.768298602 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.769313913 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.768703199 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.767736881 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.768402431 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.768868624 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.768514991 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.769542712 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.768546571 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.767896194 seconds)
  done (took 111.258605066 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.767625019 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.768928389 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.766266937 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.765734351 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.768239263 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.765568851 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.768331583 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.769806016 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.76875312 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.768928023 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.767821905 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.765653586 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.76669257 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.768402584 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.767342554 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.766470112 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.766553626 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.765933203 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.768649369 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.767564028 seconds)
  done (took 37.053623074 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.766470483 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.768956906 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.765957309 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.767648441 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.769274882 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.767452542 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.769666737 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.769850302 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.765919249 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.769235508 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.769807121 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.769466576 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767266335 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.767295697 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.769570159 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.768021592 seconds)
  done (took 29.996630538 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.767725343 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.770430985 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.769802434 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.771229079 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.767743292 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.767214666 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.769747763 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.767237537 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.767775384 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.771014695 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.77078892 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.7703888 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.77035261 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.771647929 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.768353825 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.771821379 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.767498593 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.768827707 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.770563952 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.771834231 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.770182169 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.768242932 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.771199452 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.771110948 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.769334019 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.769152837 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.770076518 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.769792056 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.7689484 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.77198359 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.768923001 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.771035328 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.770223055 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.770383794 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.772813923 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.769198792 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.771982405 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.773411784 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.773679438 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.772549591 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.772632203 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.770245924 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.772559383 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.77203115 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.769715052 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.773936021 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.769382333 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.770801095 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.770167739 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.770733484 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.772009622 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.773245854 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.772782103 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.773466092 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.773816015 seconds)
  done (took 99.091903978 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.773048183 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.77220613 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.770026092 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.773269859 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.773894473 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.771370297 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.772825997 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.77059807 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.769720739 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.77306822 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.771353525 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.773260519 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.77075945 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.773029965 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.770949893 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.773576132 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.770654346 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.771664631 seconds)
  done (took 33.603710971 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.770788555 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.770989508 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.773751342 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.771466291 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.772007817 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.774567943 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.771788035 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.774658156 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774892305 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.772729334 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.772193414 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.775008486 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.774226734 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.776356751 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.773319567 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.771771507 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.77568344 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.774452152 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.773081263 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.773197011 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.775155245 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.77467838 seconds)
  done (took 40.726982374 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.775162609 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.775579553 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.792083148 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.817133932 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.805827745 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.775233343 seconds)
  done (took 12.451528972 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.773027437 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.774830109 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.772148416 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.776495416 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.776345014 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.77352358 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.773687173 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.773068528 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.775981507 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.773409387 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.773521048 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.77584768 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.775708674 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.773850755 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.776057367 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77663452 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.773760827 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.773851508 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.774508188 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.775983133 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.773029169 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.776798855 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.773651274 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.774211922 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.773620491 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.77361715 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.775871351 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.774508734 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.775211787 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.776809852 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.776222057 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.774089216 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.777421288 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.775377658 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778316332 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.777384585 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.775314537 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.77680915 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.77646274 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.77455628 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.777038817 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.777444836 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.777495455 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.774811712 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77756279 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.774925894 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.775378305 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.775169627 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.774862189 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.778477888 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.778202768 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.775684045 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.779107467 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.776940896 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.777636398 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778707696 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.776721505 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.775245925 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.777214898 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.77652837 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.775745519 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.778911679 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.775672657 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77677021 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778570285 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.77634684 seconds)
  done (took 118.911665376 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77602201 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.777133209 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.776733371 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.776808689 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.775773659 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.776224887 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777629958 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.776977585 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.776942695 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.77675788 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.778578589 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.776080057 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.776725977 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.776733208 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.777205196 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.776546374 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.776755582 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.776413949 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777740988 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.779668957 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.776712516 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.776771123 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.77684418 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.778140346 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777850742 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.779987403 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.776662494 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.777487266 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.777737847 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.778381926 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.777762864 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.778277587 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.778470045 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.777824882 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778433635 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.778797653 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777181909 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.778095715 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.777441798 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.779527427 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.779598204 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.780712196 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.77921504 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.777589421 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.778784655 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.778089132 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.7787418 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.77832718 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.778077406 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.777941983 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.779059522 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.779275972 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.778323226 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.778343842 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.779211928 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.779177963 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.779155794 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.778781126 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.778512375 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.781766552 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.778483409 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.778721803 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.782465862 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.779433107 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.779170895 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.779149866 seconds)
  done (took 119.070480279 seconds)
done (took 2427.76269923 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.788456425 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.858586613 seconds)
  done (took 15.364179766 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.944536084 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.896556198 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.781334917 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.832087266 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.782131738 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.806884621 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.799516534 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.782160734 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.781697034 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.781240763 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.782568358 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.967870261 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.783198963 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.78241236 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.782605702 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.876137882 seconds)
  done (took 50.886125181 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.785083733 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.786063654 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.798299309 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.788229174 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.785868208 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.796897391 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.817247893 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.789012647 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.818175721 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.79633921 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.851497404 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.794741614 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.785197475 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.834546585 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.797698153 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.800090668 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.871496255 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.857247031 seconds)
  done (took 34.27225461 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.862477827 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.78593328 seconds)
  done (took 10.373718801 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.804999676 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.805708794 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.778029298 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.795592368 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.782726243 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.805081574 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.787430379 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.790305357 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.794153259 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.812202824 seconds)
  done (took 69.679671991 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.793194216 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.78791742 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.786885759 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.784933694 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.778608634 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.78220586 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.786136809 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.781645212 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.456058005 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.82087057 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.792479843 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.791185408 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.787878216 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.788795345 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.784176961 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.811543147 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.90318324 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.783041561 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.783592682 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.79311183 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.787021045 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.880078233 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.799857119 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.786468408 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.816743243 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.459053563 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.794577129 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.793533248 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.924315691 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.785175318 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.787087934 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.788833056 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.789599732 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.177734328 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.07231761 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.785067894 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.796553656 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.795899079 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.784260696 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.957674426 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.788341903 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.793791119 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.767934477 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.063754101 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.869536248 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.829340319 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.142034813 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.790976997 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.789456151 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.818324611 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.789825557 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.790091577 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.802421145 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.29874809 seconds)
  done (took 128.198302767 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.783434405 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.363454167 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.947081015 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.786028624 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.065023838 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.026800854 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.786603304 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.833251483 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.785453904 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.032601556 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.964112812 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.903034739 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.786172157 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.784746214 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.783076895 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.782360981 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.937536593 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.85346073 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.786162655 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.782886129 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.819266735 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.048977035 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.910398567 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.785571085 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.80829871 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.011621225 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.910637945 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.89975362 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.297356142 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.783631831 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.853173068 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.78648999 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.783456109 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.784305026 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.950420588 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.892201442 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.881880495 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.786114282 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.784420126 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.784950785 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.449290405 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.006434655 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.895265149 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.921564548 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.032907339 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.013878611 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.431360662 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.785121044 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.421776272 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.983636158 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.994254712 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.036993523 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.912802265 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.785777906 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.0266176 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.78418268 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.784384956 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.047275818 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.013267761 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.899514805 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.788701268 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.784340417 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.785329911 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.099609423 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.787484663 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.895977224 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.788893425 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.787476114 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.897945494 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.902008177 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.014392198 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.027829989 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.816787777 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.7055854 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.293854826 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.069996129 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.857781301 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.049425138 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.788368055 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.786119341 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.881365216 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.539530695 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.960225329 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.103852639 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.051373107 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.829172535 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.38938078 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.787078728 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.033260282 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.036861456 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.016882684 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.031383118 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.951804927 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.109449539 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.788146857 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.786289008 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.989883729 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.918876064 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.78943089 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.148861459 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.036556887 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.515543903 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.8185899 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.091981609 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.925327723 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.781974397 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.41481576 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.789115978 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.991584373 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.830666051 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.788961949 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.78862882 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.033859264 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.661290512 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.788502133 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.576587937 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.855111725 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.790548682 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.053999091 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.790602833 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.029518933 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.791131361 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.100182042 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.370456847 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.832249683 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.98016329 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.03247932 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.585572602 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.055787914 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.101151321 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.912427723 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.048893173 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.612236057 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.788704275 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.072714308 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.790902462 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.789977115 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.958915748 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.789470779 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.945651635 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.792898398 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.049991276 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.815199714 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.960006422 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.792945257 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.062883836 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.835556969 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.84247575 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.790228171 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.906942768 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.78948635 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.843717201 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.975852301 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.79339983 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.790075397 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.370013473 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.788716568 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.9384189 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.089087301 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.8152228 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.860780963 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.315790776 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.790289757 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.885241971 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.818878195 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.399526434 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.791716988 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.961996787 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.793730442 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.79125156 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.790372143 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.099261474 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.014059874 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.793494579 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.791842955 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.583966222 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.500626161 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.791087799 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.967117831 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.035044446 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.439354914 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.010817776 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.793244983 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.923988237 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.796298367 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.873019967 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.141033925 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.79187834 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.792374267 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.791269485 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.793058943 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.793799577 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.019233317 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.819943559 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.480055246 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.929252151 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.035711303 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.105784886 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.055117953 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.841692786 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.796173724 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.059766071 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.79656784 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.860353044 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.794765731 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.81861226 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.040332314 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.793857231 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.022770685 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.078726414 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.841153023 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.843679196 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.795681731 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.793234755 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.793117092 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.937137347 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.893518948 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.795924916 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.794842682 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.910620149 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.918768326 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.98241908 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.388761273 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.969059656 seconds)
  done (took 886.047534573 seconds)
done (took 1196.537839531 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.794621223 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.795321256 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.780887683 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.79472803 seconds)
  done (took 28.899660056 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.801112821 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.799752994 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.80094522 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.801944253 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.801516667 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.800465286 seconds)
  done (took 12.540002302 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.830337193 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.79683254 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.796342024 seconds)
  done (took 21.158269424 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.868878479 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.199221696 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.903602041 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.23337409 seconds)
  done (took 9.939869397 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.80160241 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.801887433 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.801984704 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.803098148 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.803020197 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.804339587 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.802285813 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.80362723 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.804230888 seconds)
  done (took 17.962593515 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.934798762 seconds)
done (took 96.168980967 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.974657812 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.873222507 seconds)
    (3/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.170707612 seconds)
    (4/309) benchmarking ("sort", Float64, false)...
    done (took 5.597688376 seconds)
    (5/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.799529518 seconds)
    (6/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.016330923 seconds)
    (7/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.889393297 seconds)
    (8/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.799366282 seconds)
    (9/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.841468199 seconds)
    (10/309) benchmarking ("sort", Float32, false)...
    done (took 5.553083143 seconds)
    (11/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.800052131 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.955840447 seconds)
    (13/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.911028302 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.836058873 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.695759807 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.458185833 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.822215983 seconds)
    (18/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.877001898 seconds)
    (19/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.781664636 seconds)
    (20/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 3.281590227 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.871521993 seconds)
    (22/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.821445112 seconds)
    (23/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.949028368 seconds)
    (24/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.070289287 seconds)
    (25/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.822842979 seconds)
    (26/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.85918118 seconds)
    (27/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.797084026 seconds)
    (28/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.275492036 seconds)
    (29/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.311635603 seconds)
    (30/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.014703772 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.117423721 seconds)
    (32/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.092107888 seconds)
    (33/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.309219544 seconds)
    (34/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.175158732 seconds)
    (35/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.886083114 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.092128752 seconds)
    (37/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.932854045 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.786050812 seconds)
    (39/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.050972771 seconds)
    (40/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.867337301 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.993325113 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.893817521 seconds)
    (43/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.925074245 seconds)
    (44/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.785485303 seconds)
    (45/309) benchmarking ("map", identity, BigInt, false)...
    done (took 3.306039012 seconds)
    (46/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.881896625 seconds)
    (47/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.887772601 seconds)
    (48/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.864300149 seconds)
    (49/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.598077574 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.200246863 seconds)
    (51/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.16536869 seconds)
    (52/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.759790786 seconds)
    (53/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.346216585 seconds)
    (54/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.188574414 seconds)
    (55/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.555263952 seconds)
    (56/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.791132281 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.619922303 seconds)
    (58/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.814614869 seconds)
    (59/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.922930042 seconds)
    (60/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.80446673 seconds)
    (61/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.872510331 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.073765122 seconds)
    (63/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.813643207 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.806477566 seconds)
    (65/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 3.330804225 seconds)
    (66/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.830102318 seconds)
    (67/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.902231792 seconds)
    (68/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.810840594 seconds)
    (69/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.804315471 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.869297464 seconds)
    (71/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.11198608 seconds)
    (72/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.695485831 seconds)
    (73/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.792866028 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.869666751 seconds)
    (75/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.38780684 seconds)
    (76/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.791633946 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 8.091097759 seconds)
    (78/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.225814343 seconds)
    (79/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.953751595 seconds)
    (80/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.399665744 seconds)
    (81/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.809519472 seconds)
    (82/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.933674036 seconds)
    (83/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.390054272 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.812133844 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.081943346 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.811626794 seconds)
    (87/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 9.583171623 seconds)
    (88/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.896872 seconds)
    (89/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.867227804 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.200009748 seconds)
    (91/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.319019431 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 5.544584661 seconds)
    (93/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.333554631 seconds)
    (94/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.870794619 seconds)
    (95/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 3.479628218 seconds)
    (96/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.812371335 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.883005665 seconds)
    (98/309) benchmarking ("sort", BigInt, false)...
    done (took 6.80918548 seconds)
    (99/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.080621764 seconds)
    (100/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.379079212 seconds)
    (101/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.058300126 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.615151872 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.816368294 seconds)
    (104/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.996414807 seconds)
    (105/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.692125879 seconds)
    (106/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.178491586 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.110301286 seconds)
    (108/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.10109075 seconds)
    (109/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.305689689 seconds)
    (110/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.980327361 seconds)
    (111/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.827943303 seconds)
    (112/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.021787114 seconds)
    (113/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.877464087 seconds)
    (114/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.917203887 seconds)
    (115/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.182285584 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.008320492 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.064400322 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.887939411 seconds)
    (119/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.925818181 seconds)
    (120/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.742066638 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.814664505 seconds)
    (122/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.01439583 seconds)
    (123/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.973774057 seconds)
    (124/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.894803425 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.141672473 seconds)
    (126/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.351968429 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.831981783 seconds)
    (128/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.809239897 seconds)
    (129/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.703436596 seconds)
    (130/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.907838518 seconds)
    (131/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.483013174 seconds)
    (132/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.020842362 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 2.25147187 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.838583221 seconds)
    (135/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.811299813 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.862630257 seconds)
    (137/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.211104841 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.076430722 seconds)
    (139/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.89390533 seconds)
    (140/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.896096423 seconds)
    (141/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.941549854 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.033504097 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.070853665 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.942862062 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.461169877 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.955074376 seconds)
    (147/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.99771357 seconds)
    (148/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.966461381 seconds)
    (149/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.000786432 seconds)
    (150/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.114014635 seconds)
    (151/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.401400026 seconds)
    (152/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.79758432 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.114085434 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.175040184 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.938087068 seconds)
    (156/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.118635985 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.813589979 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.742109713 seconds)
    (159/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.822061784 seconds)
    (160/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.905276068 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.930506314 seconds)
    (162/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.004692925 seconds)
    (163/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.950387173 seconds)
    (164/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.927120092 seconds)
    (165/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.168058078 seconds)
    (166/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.822085853 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.198995253 seconds)
    (168/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.835290343 seconds)
    (169/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.982184625 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.821067283 seconds)
    (171/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.830520705 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.189678861 seconds)
    (173/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.161739955 seconds)
    (174/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.101688085 seconds)
    (175/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.208934509 seconds)
    (176/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.504966242 seconds)
    (177/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.332791228 seconds)
    (178/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.908475452 seconds)
    (179/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.184382591 seconds)
    (180/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.831808621 seconds)
    (181/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.921383574 seconds)
    (182/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.917157655 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.801352989 seconds)
    (184/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 4.261016315 seconds)
    (185/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.880240839 seconds)
    (186/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.96835006 seconds)
    (187/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.943484285 seconds)
    (188/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.023919733 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.162398529 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.114168581 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.847842864 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.052556738 seconds)
    (193/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.937934335 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.812346745 seconds)
    (195/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 3.72052967 seconds)
    (196/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.904772034 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.855103103 seconds)
    (198/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.06519141 seconds)
    (199/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.165413797 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.829675882 seconds)
    (201/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.910845012 seconds)
    (202/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.698640535 seconds)
    (203/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.914902057 seconds)
    (204/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.84215914 seconds)
    (205/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.783693624 seconds)
    (206/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.901371453 seconds)
    (207/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.839537237 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.919850765 seconds)
    (209/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.798439778 seconds)
    (210/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.819189381 seconds)
    (211/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.86613774 seconds)
    (212/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.037519212 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.937354873 seconds)
    (214/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.941639021 seconds)
    (215/309) benchmarking ("sort", Int8, false)...
    done (took 4.779260845 seconds)
    (216/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.904530908 seconds)
    (217/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.986341775 seconds)
    (218/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.333752335 seconds)
    (219/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.910848965 seconds)
    (220/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.912304136 seconds)
    (221/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.800237464 seconds)
    (222/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.962460335 seconds)
    (223/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.174300234 seconds)
    (224/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.84575239 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.019633381 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.546785074 seconds)
    (227/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.840692892 seconds)
    (228/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.756848575 seconds)
    (229/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.413314243 seconds)
    (230/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.982248282 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.815569921 seconds)
    (232/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.805368558 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.901104906 seconds)
    (234/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.800239376 seconds)
    (235/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.999985036 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.86404018 seconds)
    (237/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.840791621 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.202500904 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.70710704 seconds)
    (240/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.959466861 seconds)
    (241/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.045656879 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.193709491 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.808144171 seconds)
    (244/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.810373404 seconds)
    (245/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.939595619 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.422926017 seconds)
    (247/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.415678078 seconds)
    (248/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.903837329 seconds)
    (249/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.94594636 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.745433332 seconds)
    (251/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.876477306 seconds)
    (252/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.98680974 seconds)
    (253/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.8052194 seconds)
    (254/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.166342189 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.069499363 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.921139675 seconds)
    (257/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.153801263 seconds)
    (258/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.839750129 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.482997202 seconds)
    (260/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.136554362 seconds)
    (261/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.827084684 seconds)
    (262/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.047111884 seconds)
    (263/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.946383962 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.112928955 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.991256425 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.740439322 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.857330909 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.817997994 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.086683957 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.844688825 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.197664654 seconds)
    (272/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.962310164 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.472507561 seconds)
    (274/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.067835416 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.123614241 seconds)
    (276/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.020312631 seconds)
    (277/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.32992432 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.145065164 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.862604115 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.915707729 seconds)
    (281/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.511445832 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.916211193 seconds)
    (283/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.820677093 seconds)
    (284/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.672060237 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.948194251 seconds)
    (286/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.251831137 seconds)
    (287/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.12911815 seconds)
    (288/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.856704898 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.971026757 seconds)
    (290/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.115742776 seconds)
    (291/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.972008357 seconds)
    (292/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.832698203 seconds)
    (293/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.421835626 seconds)
    (294/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.820810532 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 4.38436709 seconds)
    (296/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.820614972 seconds)
    (297/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 3.503509533 seconds)
    (298/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.822798032 seconds)
    (299/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.070430777 seconds)
    (300/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.845694942 seconds)
    (301/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.01761477 seconds)
    (302/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.155882484 seconds)
    (303/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.967255109 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.848346669 seconds)
    (305/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.845066473 seconds)
    (306/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.22166444 seconds)
    (307/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.804897734 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.90108791 seconds)
    (309/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.864619023 seconds)
  done (took 1006.561018039 seconds)
done (took 1008.311741117 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.853560887 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.848135938 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.830886087 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.853346994 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.943726699 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.864517458 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.84377746 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.832619795 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.87899632 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.880130033 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.830818192 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.863034059 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.834174543 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.832897824 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.830679593 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.845887208 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.143818442 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.862956297 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.849955482 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.842012903 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.849544373 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.832836359 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.881636921 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.864464718 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.836262972 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.834925077 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.835733731 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.85243052 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.944896824 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.835975435 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.835380698 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.844473677 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.144842806 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.860785606 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.827148211 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.85197132 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.843870662 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.841306731 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.836592183 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.86579339 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.292341339 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.840152501 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.835713852 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.834228002 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.834066898 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.83803359 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.835419129 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.839518316 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.846208737 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.848264884 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.287037784 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.857140259 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.837431765 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.834285613 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.845167224 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.834008756 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.837091162 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.849937127 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.853961566 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.850979676 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.136563935 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.87047663 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.836228718 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.851230267 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.842269914 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.322836345 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.83744392 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.838303536 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.291655903 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.84732169 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.326308503 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.850794795 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.835260302 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.848973099 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.866765654 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.145354096 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.860058184 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.834876036 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.843137387 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.833956085 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.84543346 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.848982884 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.839405686 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.83563577 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.849924981 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.867644693 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.845754329 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.836906773 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.84357065 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.855914233 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.843994711 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.847783126 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.839568703 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.830963701 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.845762381 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.839239891 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.838938759 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.839272712 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.840248935 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.846635207 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.291291282 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.860745771 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.832433466 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.833082472 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.834776885 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.849667313 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.286474574 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.843621993 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.858881119 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.883125673 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.838304814 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.138053807 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.869609899 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.852849533 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.845516062 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.838714379 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.832277664 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.138934763 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.31878474 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.860214009 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.837429361 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.834651071 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.8536398 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.837920833 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.834048841 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.148501932 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.867684805 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.852133954 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.959925975 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.848012773 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.86944123 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.837592208 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.840608756 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.866069981 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.855285399 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.870072268 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.839735274 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.854969634 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.855079034 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.835046208 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.849520029 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.849000667 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.839593559 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.843578858 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.833081366 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.86662905 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.850907039 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.851000902 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.85868841 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.960064094 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.835707627 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.139168676 seconds)
done (took 288.867315784 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.906877158 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.830243987 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.935345338 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.833844913 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.919753824 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.92113454 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.831224457 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.831535405 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.831458185 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.214095894 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.833037443 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.832916446 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.831854171 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.833347132 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.918028202 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.834201409 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.832934908 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.177342415 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.834998921 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.907980796 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.836801097 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.833209287 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.835084068 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.220815389 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.828433235 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.832860991 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.907762416 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.83513937 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.184639919 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.836819995 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.834459445 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.184683022 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.927661063 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.854399616 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.847575411 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.842339744 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.923578419 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.839851031 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.918062882 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.917365394 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.936567554 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.875749894 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.836527908 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.830663058 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.839492157 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.837742434 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.833813514 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.863848601 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.838340481 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.834323501 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.178800232 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.845973482 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.83501305 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.835911199 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.835275743 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.868101102 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.835848251 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.837786772 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.930920196 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.83931504 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.901404879 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.223202717 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.216477569 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.836732553 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.832375761 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.834541347 seconds)
  done (took 182.116817387 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.905663874 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.913929592 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.906661736 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.844801536 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.889408076 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.912979094 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.845711148 seconds)
  done (took 14.988579652 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.844915996 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.838007867 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.888729105 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.889061302 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.83952382 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.990592949 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.837762124 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.850529987 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.835837071 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.891535111 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.83983821 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.83961346 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.846076709 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.839475538 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.887367431 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.851119846 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.955036179 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.840766473 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.840177056 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.996783432 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.837431391 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.845396334 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.894048802 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.852526458 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.841460012 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.847211254 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.423341877 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.840491321 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.837662911 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.838984351 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.838025683 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.882435011 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.839794537 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.834200393 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.8371247 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.957027191 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.839700419 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.837786872 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.839756168 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.837448904 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.839167279 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.840460393 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.841100122 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.837522957 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.839825769 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.863512663 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.83993693 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.841613012 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.840509964 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.840339679 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.890969033 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.841310892 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.837121333 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.837959772 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.896168633 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.846761441 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.840643696 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.839251674 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.839865989 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.835308653 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.99608938 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.886317033 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.839433623 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.887640646 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.836929033 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.835885422 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.83674898 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.835418773 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.89215958 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.835495924 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.882962592 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.830981843 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.994576116 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.859732681 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.83582371 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.838040475 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.838151099 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.833944032 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.834309575 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.839307473 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.827945733 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.835129662 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.840394986 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.827444427 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.262376165 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.942406396 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.940024114 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.827333262 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.845006538 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.840429555 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.829605342 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.886045167 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.830040666 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.827428417 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.883530479 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.948788672 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.887663619 seconds)
  done (took 203.098642928 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.836943161 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.835741068 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.831872558 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.846689054 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.827792963 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.831387437 seconds)
  done (took 12.771743531 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.829135326 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.82689221 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.825589268 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.826112516 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.825175983 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.827159798 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.824881011 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.823436474 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.827942807 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.825939321 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.824809099 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.825479092 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.821599349 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.821193475 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.819506588 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.822024416 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.821282413 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.819412509 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.821156471 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.818230283 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.975551145 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.822446388 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.821492581 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.82476904 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.826581363 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.823190647 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.829913636 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.822688249 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.818182646 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.826399926 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.824411797 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.826577475 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.823579011 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.827927681 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.825772817 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.824236296 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.824356586 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.824173946 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.817221431 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.819084837 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.823861531 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.821129781 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.822486451 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.817599785 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.82361115 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.825960434 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.828310791 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.829204871 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.821655879 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.82040759 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.820907481 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.818845394 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.826570032 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.825069621 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.823566499 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.827624607 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.826034727 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.820024715 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.820557474 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.824562865 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.820685384 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.823892239 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.820766925 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.82595638 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.820975009 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.820247877 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.818980749 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.824549534 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.824037922 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.822200444 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.823336719 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.81398559 seconds)
  done (took 134.189111862 seconds)
done (took 548.949065259 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.003368301 seconds)
  done (took 8.754290421 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.928741321 seconds)
  done (took 8.790328066 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.608542565 seconds)
  done (took 10.388169601 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.862713591 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.857761882 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.849736195 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.846847314 seconds)
  done (took 29.207137022 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.209608448 seconds)
  done (took 8.988086808 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.854914763 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.838542409 seconds)
  done (took 15.538494446 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.909912798 seconds)
  done (took 8.689233258 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.940921477 seconds)
  done (took 8.722416706 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.842278593 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.850052585 seconds)
  done (took 15.485255942 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.825195417 seconds)
  done (took 8.603748547 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.534027705 seconds)
  done (took 11.321569472 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.85089923 seconds)
  done (took 8.643947496 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.86144174 seconds)
  done (took 8.639458812 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.093616272 seconds)
  done (took 9.871083105 seconds)
done (took 163.395930786 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.84327105 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.840693362 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.842702903 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.840440896 seconds)
  done (took 29.144358063 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.878941965 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.879644415 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.880574009 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.890403605 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.882712035 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.878919304 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.872102325 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.871590923 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.890906115 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.882469981 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.881759613 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.882967004 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.879831517 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.872148899 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.882572812 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.882080373 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.891037459 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.880182341 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.872397422 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.882041757 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.847295282 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.890891308 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.883475832 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.846739573 seconds)
  done (took 46.86285841 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.046262485 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.917937482 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.001665777 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.900030422 seconds)
  done (took 9.644316535 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.898766306 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.900455449 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.91196707 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.951597884 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.977224711 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.910602124 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.874552339 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.869282696 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.855199043 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.901069376 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.975479271 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.916441326 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.988488772 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.847462925 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.029479972 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.848040499 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.847980268 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.900108848 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.951706734 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.983988781 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.848629855 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.899721197 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.903692112 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.918488481 seconds)
  done (took 47.690312511 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.846554066 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.856085086 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.854495375 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.847077378 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.848023746 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.848274352 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.854101046 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.849190213 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.869014735 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.848851884 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.847870069 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.848571476 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.848059121 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.848914251 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.848533284 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.860268671 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.862129022 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.849214647 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.852657576 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.855341883 seconds)
  done (took 38.824109961 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.843123835 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.696799594 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.194372991 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.098955947 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.844258257 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.844044052 seconds)
  done (took 31.302187004 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.863866834 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.916277208 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.860394511 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.906714838 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.989610063 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.860407481 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.851413486 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.919876443 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.967143713 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.926144879 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.871902791 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.878835777 seconds)
  done (took 24.594404825 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.86168011 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.846928696 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.846057352 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.863403165 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.862744167 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.860899164 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.858440262 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.845370334 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.863968205 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.872198592 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.861945251 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.864110196 seconds)
  done (took 44.094968157 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933230945 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.888524996 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.859780003 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.529739069 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.225448408 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.058191887 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.451803419 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.176139497 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.849156051 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.119873175 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.786062075 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951315598 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.103227158 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.434209927 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.884831365 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.304771939 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.139690611 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.054179874 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876038504 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.49397787 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909853149 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.116853947 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.618610762 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.903360139 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.060515413 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.977879465 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.109294486 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.848820674 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982062778 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.884699103 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859504387 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.849494935 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.123571915 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.229436933 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954404457 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860341884 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.469467329 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.5635332 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.929044078 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.505019403 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.510906457 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.966508713 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861779303 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.849570803 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.784561609 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.091227327 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229550861 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.855387552 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.562250872 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.850900876 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.861446493 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945770331 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.855274835 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.66623442 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.771441318 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.854633914 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.848373867 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858313187 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.425569931 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.929861083 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.116492228 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.831058059 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.94360785 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.56738576 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.228158733 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.995986718 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.85549744 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.854732673 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.785690928 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.502350111 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.905168297 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.180512458 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.871306265 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.502612563 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.146248271 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.852378397 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.795298793 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118288118 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.470563422 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.831315816 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.080744048 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851477189 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.787263579 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.79848987 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.786279737 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.108321602 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890672269 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.619384293 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894074996 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.179704671 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.86359298 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872912713 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876055029 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.077628704 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.737269082 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854026447 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.580046988 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.997308905 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875366806 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.181826504 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.787952411 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.858305707 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10965719 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.065447262 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.004912983 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.351708318 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005282267 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.495863992 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.91263124 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.093823031 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.908413642 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.117669578 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.909502545 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.945455138 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906458813 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.854155205 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.147231837 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.51784923 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.997009878 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.817204331 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.982853007 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.187661537 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883082068 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936654095 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.862034871 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.854793644 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.583628276 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.405537674 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.854535114 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.857750452 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.007267955 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.90843369 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.856889691 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799576427 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.478676709 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.826761535 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.868937772 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.081225673 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.516273636 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17221542 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.789072076 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.183140544 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.91693535 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.075534028 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.489822049 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.921964039 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.112249834 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.007858871 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.04206951 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90074621 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86953557 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944207903 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867614487 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.080375407 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.147042202 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.847669426 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.848424119 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.599275258 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.900465851 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862729035 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.862157293 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.608078939 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.126514052 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.876647646 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.859708919 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.743539688 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.868509787 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918873585 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.859156767 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.869188968 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.40622709 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.567584447 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.861148276 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.43981854 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076577277 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.860996671 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.60734798 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97970703 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.946980002 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.129927941 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924397584 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.803059931 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.573631959 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.556302985 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862130964 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.796446373 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.859942656 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870077 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.871565282 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.059593658 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.131660491 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905651469 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.530366653 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.911621662 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874645859 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.868138509 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862958753 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.374239053 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.970358065 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.144237875 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.915325722 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006807026 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.878000825 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.798298693 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.866184925 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.866353357 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.862131652 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.860710542 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89488151 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.545075673 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241282932 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.127858037 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.483022848 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.878053551 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.589639423 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.922676006 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.868459784 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.64718543 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.113978571 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.908597647 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888446365 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.875503158 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.627292088 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.577826027 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.442010054 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.178571099 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.16934869 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.295416495 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.159616423 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.897008939 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.197586365 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798088399 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.420709312 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.924472467 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.204016303 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.808809116 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947849243 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.509204506 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210760429 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879235752 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091974561 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.246543482 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.578561821 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.009690205 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.076320434 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899165266 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.092064232 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.831318193 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.387937653 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007335157 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.56020533 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.07444349 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.196301854 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.523349594 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.991323761 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.866036647 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.542853705 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952203529 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.576337381 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.037711176 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.139325971 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.796732148 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336795756 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.870972686 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.09105668 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213083341 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.122235977 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.991618838 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802507439 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.87626307 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.876543063 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.866735792 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.865406589 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.747525431 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.119098966 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876793147 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.800701086 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.064977265 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.159554732 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.777973711 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.87190929 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865489413 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159570125 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.505206544 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042721043 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.05580994 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.39073441 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.874615493 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.801163038 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.800913231 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.559870163 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.872397053 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.841076188 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073551437 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.974675758 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.779312891 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.025569866 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.120717931 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.123539446 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.880950303 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.133340539 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.144177411 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.56661606 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893116724 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.967394954 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.52011417 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.978933009 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.868026659 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.102843542 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.621302041 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.094813655 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.903461135 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.825701334 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.868192197 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.08364976 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.869232786 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.750938507 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10466808 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.591783292 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.923982847 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.17862123 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947561093 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.747563406 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.921323903 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.965930164 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.8841295 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952572226 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884622207 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.882524775 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.883650551 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918834649 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.766238147 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.998857197 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.886247533 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967245251 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.005439987 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.399319853 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.879265938 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.143206186 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.228062081 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.199114882 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933831181 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.874161136 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.874648928 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.808767102 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022610963 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.099680031 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.148406451 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.003476887 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.992137274 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900489501 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.537804021 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.180775139 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119100924 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.147385025 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.769325211 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.463192536 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.91767145 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.870129853 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.877271387 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.075819186 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076345767 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168902673 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.01293053 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.027953258 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.227650057 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.138657549 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.865319956 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.864519936 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.4578072 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.982281591 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.55407184 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.919409913 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.767292024 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152551875 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.884182931 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25446072 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.896458903 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.034851977 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.647379147 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.575243918 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.165698931 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.868561645 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.938966048 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.14386832 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.253344427 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189197495 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936812461 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.881022903 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.983222155 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019320168 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.763391135 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.868371984 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.867721735 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.915490746 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.574050663 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.873864888 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140928911 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.180427685 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.861194099 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.775631981 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88698503 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.872660837 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.08690941 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.130250246 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.119172984 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869788378 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.864931497 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.675536983 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.130465436 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916680335 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794352379 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.858742537 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955310676 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.103839447 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.877714306 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.304803748 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.563708734 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.124679436 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.855582277 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871666544 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.096198013 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.220785218 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174910805 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.386275559 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057386832 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.440773801 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.529116009 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153516432 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.848536433 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.079513832 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152734914 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.84749304 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.000802588 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887592375 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.111112191 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.160140423 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.921044065 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.591252426 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.847448924 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.216824265 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.439983777 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.814145858 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.885109328 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.935846294 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.87678901 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.003307655 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.88841769 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.788855421 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.115169515 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.66157068 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.147702991 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.880238017 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.870060532 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.626185261 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.253086555 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917270329 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020011207 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877352798 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.549974914 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.22694586 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.132580677 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.035955892 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.889878264 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.880114052 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87794408 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.864223683 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.073045618 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.076165626 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154320008 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.064916874 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.921620288 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.881652435 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.09375715 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088701065 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.786449796 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.023323123 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.035797895 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923886273 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.782102661 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.385805248 seconds)
  done (took 1672.847241759 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.89410945 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.893356564 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.896795136 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.895004472 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.89798456 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.939976378 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.910581418 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.890513906 seconds)
  done (took 57.035503919 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.879941233 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.1007169 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.889598464 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.879864482 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.889983862 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.885106865 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.054870662 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.893686997 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.888723972 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.890561414 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.880839781 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.879920227 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.193785995 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.907498528 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.897513938 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.866819349 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.890519132 seconds)
  done (took 74.588675092 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.880539654 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.894893311 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.908277298 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.897692563 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.893447578 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.894815106 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.681630848 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.891856246 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.881473006 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.014171939 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.513800328 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.897871558 seconds)
  done (took 87.067605356 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.891073714 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.887274385 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.886316871 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.889358712 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.887966032 seconds)
  done (took 11.264929526 seconds)
done (took 2176.765615999 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.182280335 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.105704533 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.121727572 seconds)
  done (took 6.043769193 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.032649134 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.080145655 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.200417934 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.220218791 seconds)
  done (took 10.35572174 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.167315818 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.270233609 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.097985505 seconds)
  done (took 8.354048888 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.292920034 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.896542058 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.000306192 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.881091923 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.883359815 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.882221779 seconds)
  done (took 22.467513879 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.883544196 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.888663154 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.882210826 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.885221902 seconds)
  done (took 9.353920539 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.863073195 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.674988609 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.861090655 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.872461446 seconds)
  done (took 21.087391714 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.625811289 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.632820262 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.616647038 seconds)
  done (took 9.684583811 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.582121365 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.810802399 seconds)
  done (took 9.199802954 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.135715414 seconds)
  done (took 3.943216783 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.002068822 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.135496784 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.358513807 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.391367869 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.450825031 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.78147877 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.189624404 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.125276408 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.270940177 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.326244727 seconds)
  done (took 24.840189955 seconds)
done (took 140.516617918 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.249530927 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.11078847 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.069241254 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.206848703 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.091349091 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.070873708 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.077114887 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.188170934 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.713644168 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.711819572 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.203849025 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.090797845 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.236608107 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.109215172 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.239201179 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.116858588 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.088182849 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.255194253 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.8937769 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.139263966 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.076354933 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.832932061 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.040963517 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.84270398 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.08141782 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.0123459 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.421109445 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.109187907 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.04363471 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.426037252 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.013492009 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.28478984 seconds)
  done (took 172.852432268 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.612105219 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.859369563 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.860359866 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.858829486 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.378716733 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.860569662 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.859025247 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.859982006 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.028640165 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.019109432 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.859990768 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.313210996 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.858213419 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.854867092 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.853570496 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.850760562 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.157184438 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.669306548 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.863539238 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.866054672 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.876363748 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.281074177 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.878053355 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.34134157 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.212039218 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.878233558 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.847381501 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.88073415 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.85788508 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.872373453 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.87798778 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.848453042 seconds)
  done (took 207.793699665 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.84822045 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.855999856 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.860236547 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.849817919 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.855143972 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.864130543 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.848969731 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.84939657 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.619972988 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.6359623 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.879704004 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.859516567 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.8633041 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.849147656 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.847706902 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.848365077 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.856006606 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.855344737 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.857269907 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.858750276 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.862818092 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.670526361 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.876894214 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.673312667 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.848973072 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.850045346 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.848185554 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.855816996 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.857247589 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.858173097 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.858292279 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.848515623 seconds)
  done (took 220.392810473 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.043253288 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.853993343 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.854991105 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.792861816 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.855932575 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.854443396 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.852478533 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.044485895 seconds)
  done (took 18.952169309 seconds)
done (took 621.808535965 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.278274383 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.126851239 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.031903033 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.879079564 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.096744738 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.915554898 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.876815852 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.937836043 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.598683897 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.945236147 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.518716978 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.897308232 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.610939185 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.900324837 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.003728095 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.933262646 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.444713622 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.531765586 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.057128262 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.935623605 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.043961783 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.840195712 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.952016321 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.640682115 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.633905332 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.884375452 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.050611511 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.44790843 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.887453901 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.038301478 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.581887501 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.251802155 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.889660573 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.87461689 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.927927984 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.911618243 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.222696268 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.887847437 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.001264689 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.651566419 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.933375784 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.480917909 seconds)
  done (took 102.342514003 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.848161555 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.844363877 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.844262729 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.844477108 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.845275619 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.846391655 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.844199423 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.844224865 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.846795353 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.844782356 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.846082507 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.846606901 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.846582216 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.847354329 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.84459889 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.844665066 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.847200396 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.848914411 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.84625265 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.845734417 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.846718679 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.845425581 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.84620808 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.845525177 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.846516839 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.845983854 seconds)
  done (took 49.791571295 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.857203061 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.004003151 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.086424414 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.880360271 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.859495157 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.863261204 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.879311742 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.863678 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.861534844 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.862797074 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.951195549 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.86599535 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.876956615 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.086261768 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.875275447 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.858877768 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.859541571 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.861009284 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.009610637 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.87723095 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.88260417 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.865511503 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.880018621 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.873888795 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.863106966 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.861141488 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.864895281 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.296761856 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.870363497 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.951652165 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.903205977 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.884051074 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.253833149 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.097938542 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.913490917 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.870136536 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.859877967 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.958967918 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.869326554 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.861610517 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.878770235 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.86751029 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.088440194 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.366675716 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.877050825 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.860461806 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.308279314 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.967619361 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.904665558 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.875095542 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.092238941 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.879030834 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.861969247 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.863231278 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.898881718 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.87416241 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.86371444 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.169335807 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.876377052 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.881848725 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.867409933 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.863343447 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.017863809 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.875220141 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.011393027 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.876765228 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.873536227 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.866459458 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.092798386 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.882838432 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.367250232 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.876611731 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.862228459 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.955226622 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.012501942 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.333538305 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.875726818 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.022061391 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.270841277 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.889114392 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.872649046 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.28838513 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.892460155 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.872097408 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.865692909 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.866355573 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.864447897 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.908265174 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.880889462 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.2999506 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.369432604 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.184546748 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.893383739 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.881104095 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.866255536 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.171420499 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.873789111 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.864214603 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.086222604 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.381395314 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.878728214 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.8744755 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.353954252 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.880161418 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.884223319 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.875491044 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.096470645 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.880202621 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.908354427 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.864311462 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.873138623 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.869393941 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.884542823 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.873425338 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.866151911 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.342581934 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.974288496 seconds)
  done (took 230.929711622 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.858424622 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.861773618 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.858813218 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.861431528 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.860495112 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.865077319 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.867078957 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.858480095 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.865658089 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.859353672 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.860560713 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.860413592 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.861945565 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.862419964 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.895589155 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.867312278 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.476710028 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.861890101 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.861387665 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.862152563 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.511971105 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.86699409 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.861199021 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.864660015 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.861453976 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.859095963 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.869019766 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.888271363 seconds)
  done (took 167.270431817 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.867060225 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.983252942 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.882813254 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.896073725 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.87478854 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.865349266 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.891265026 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.884225373 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.87344051 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.864977074 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.863994712 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.930193649 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.878004749 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.966722963 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.898168404 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.899677727 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.973949082 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.87518482 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.866785642 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.864156661 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.89652663 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.861681324 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.929279896 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.993391478 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.883455411 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.98598456 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.871649221 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.868360395 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.868686639 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.984964265 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.881105282 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.927950328 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.897888234 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.886250929 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.991605379 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.983848525 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.973856067 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.898361026 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.872700152 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.866015856 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.866692737 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.856073965 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.987668585 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.88677262 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.871173642 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.976706617 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.886091183 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.870464408 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.877601382 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.867868993 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.88376419 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.887711123 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.936040756 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.999134103 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.901593867 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.894364883 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.893408716 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.161060748 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.876153218 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.971459375 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.863239841 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.98691654 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.887249351 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.858271095 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.868525452 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.873204073 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.895633358 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.900606815 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.974953399 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.877376889 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.969205575 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.904367647 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.875543518 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.86721561 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.870461829 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.989558286 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.990006444 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.904199151 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.907884055 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.902891566 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.866089762 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.869935168 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.857874262 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.888779407 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.873148981 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.98644284 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.98898398 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.877453838 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.871091619 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.870860283 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.87162303 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.898107539 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.994152654 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.906646425 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.967345609 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.940267166 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.945345662 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.884671498 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.882813687 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.873026779 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.935879463 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.882534255 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.880860224 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.210688831 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.939948194 seconds)
  done (took 202.511247989 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.964919699 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.340351267 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.925710893 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.927008426 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.160655488 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.294338949 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.658308214 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.916441926 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.9194471 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.946763435 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.077272274 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.978011755 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.931847519 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.90850817 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.315467049 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.91061228 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.919127436 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.942216441 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.924429478 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.453336417 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.223530154 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.038484364 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.918906845 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.00056099 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.902497666 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.206381155 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.241851593 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.315291957 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.955270025 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.261336586 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.251863192 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.607592115 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.125027293 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.156855374 seconds)
  done (took 74.429436685 seconds)
done (took 829.059757521 seconds)
SAVING RESULT...
DONE!
