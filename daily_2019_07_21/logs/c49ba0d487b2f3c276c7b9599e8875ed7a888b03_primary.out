cset: moving following pidspec: 8850
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.340765515 seconds)
loading group "string"... done (took 0.535839763 seconds)
loading group "linalg"... done (took 6.720150053 seconds)
loading group "parallel"... done (took 0.155002368 seconds)
loading group "find"... done (took 1.16501578 seconds)
loading group "tuple"... done (took 1.752961312 seconds)
loading group "dates"... done (took 1.182807279 seconds)
loading group "micro"... done (took 0.289947328 seconds)
loading group "io"... done (took 0.90179984 seconds)
loading group "scalar"... done (took 36.39638195 seconds)
loading group "sparse"... done (took 10.843200146 seconds)
loading group "broadcast"... done (took 0.89396176 seconds)
loading group "union"... done (took 11.830317422 seconds)
loading group "simd"... done (took 4.314928387 seconds)
loading group "random"... done (took 8.400300704 seconds)
loading group "problem"... done (took 1.876532774 seconds)
loading group "array"... done (took 19.941384236 seconds)
loading group "misc"... done (took 1.787169739 seconds)
loading group "sort"... done (took 3.089797737 seconds)
loading group "collection"... done (took 16.48910407 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.474050069 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120100204 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.111914128 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.11573531 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.135513549 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113372722 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121138108 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08269468 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.783478726 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.138954244 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11617614 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.406744508 seconds)
done (took 4.857732266 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172484623 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081890212 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080882508 seconds)
  done (took 1.262321202 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064336052 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.119722506 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066606869 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065959808 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066173847 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065712981 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065756663 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066015089 seconds)
  done (took 1.617714354 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071902988 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067740276 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.06782417 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066925714 seconds)
  done (took 1.375675454 seconds)
done (took 5.603352729 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.751949018 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.196934512 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181680392 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.390852149 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.125744423 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.160957156 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.648668449 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.303131012 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.180815982 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080104495 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102141166 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.316342132 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.105892321 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.638606911 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076697603 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089374216 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139132144 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.447032596 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066765795 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082376564 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088465722 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130822165 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085735807 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07605948 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.144772761 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067391559 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.128243459 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080176134 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066468391 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.20602665 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172326651 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.658818265 seconds)
  done (took 10.129369107 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095551984 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096943438 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06798265 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122828412 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095479255 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068996265 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071080486 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067104804 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086097712 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126877167 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088440944 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100309123 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065566943 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068400247 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084152772 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203194045 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079844513 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080722265 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069993375 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074860938 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105090895 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077431515 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077323714 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077029329 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128024959 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179940718 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097768388 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096971921 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066889468 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079910524 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114611292 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.12508743 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065545549 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066148529 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123014401 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094267807 seconds)
  done (took 4.525551563 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.889889419 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.137676287 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090228112 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159761708 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06713587 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.105732723 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065221274 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083618279 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.197335429 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.058177435 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.424425227 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110211962 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.084317652 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067768915 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.06797246 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066771502 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.335155688 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.109002013 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112415023 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083556518 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073911312 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069335949 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.37981011 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070537999 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066317831 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06826933 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058748416 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112409666 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06849352 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.964215122 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.086322628 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066856288 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100455257 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.163599529 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.107682784 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085597792 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.131917078 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.064858327 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064445641 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.145491447 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072956853 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.064884983 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.081671243 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063087861 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101821814 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.10092468 seconds)
    (46/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063503636 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.200039416 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161894408 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067197602 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066454801 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083504546 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.712680794 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.151935331 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075756716 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066689052 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.243818495 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085767334 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066962328 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065082879 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.183493591 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.126092103 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067208595 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066325645 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06591905 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069233548 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.349336828 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067368952 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.01277019 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067745532 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076587247 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069605998 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066356828 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072419434 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072066357 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085624073 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064397273 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06595235 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068292784 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065841471 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066304995 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068036825 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084875767 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.188845841 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066863991 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067312601 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065173674 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086325594 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101579655 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068803866 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065580994 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099858817 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06765021 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067111394 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.100996012 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066780836 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083328147 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068799507 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11273934 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065954655 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.120828657 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06668644 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096504281 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070197638 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099350656 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.171022719 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06719509 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.223482019 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065444851 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064745898 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067120927 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065377025 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066955912 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069266071 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078996435 seconds)
  done (took 20.080817375 seconds)
done (took 36.725513203 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.272511893 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074004235 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076980727 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074566113 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074555723 seconds)
  done (took 1.758808147 seconds)
done (took 2.923669413 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119177486 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097523618 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063966716 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09475833 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063994521 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099231571 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098611883 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081000825 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098841887 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064014274 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095654595 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064211173 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064297865 seconds)
  done (took 2.295819535 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08203856 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083007166 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069480502 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082087783 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063734736 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081741031 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080269261 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088054419 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080247022 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071856979 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063582243 seconds)
  done (took 2.011362007 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081536594 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083051505 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06928426 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08110789 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06397514 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081171254 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080728912 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084824427 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080979296 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07317993 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063940099 seconds)
  done (took 2.005004417 seconds)
done (took 7.471538255 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076654532 seconds)
  done (took 1.230495143 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.57903175 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.050985742 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081249566 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110595838 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.181522869 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.117564666 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.271982795 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086146647 seconds)
  done (took 8.811267237 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.087839731 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.080742791 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06954695 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069510274 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069586605 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070263182 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071343418 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072042102 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071475016 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067944056 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068449566 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068224574 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071507941 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071737239 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07044201 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069575865 seconds)
  done (took 2.37615603 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091404799 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090234877 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073517955 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074198834 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071815654 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07190389 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073351854 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073302566 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070904876 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071743336 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074104012 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072924604 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071448028 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065024932 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073674462 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074814062 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070741782 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073200551 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07444439 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.0744092 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074011171 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064489348 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070965522 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073947496 seconds)
  done (took 3.029124131 seconds)
done (took 16.60857248 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111738205 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070853586 seconds)
  done (took 1.34295936 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080682915 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08333063 seconds)
  done (took 1.331829121 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081319735 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065604014 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088728647 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077087821 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065976716 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065785256 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085985267 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066038489 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065709616 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066010391 seconds)
  done (took 1.895872534 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068803576 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076978037 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069855394 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080497105 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073198141 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064016014 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072133824 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067483795 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077101527 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062806022 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071052853 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081952329 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070519885 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083077054 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071966897 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.06763528 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070030853 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066848347 seconds)
  done (took 2.465191971 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06571598 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066497189 seconds)
  done (took 1.305472366 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066738362 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063002624 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066151807 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066085718 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063174586 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062511791 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063224164 seconds)
  done (took 1.620095241 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.371235673 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110170904 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.29210991 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.0703805 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080953645 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.249653265 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065316143 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070695363 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070316152 seconds)
  done (took 2.593566652 seconds)
done (took 13.728892956 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078068196 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084365882 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094074235 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.339507056 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091298492 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065886481 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113448469 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.185943757 seconds)
done (took 2.233696721 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.205693129 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.5569963 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.365008472 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.192989906 seconds)
  done (took 2.290242569 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.313162273 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09069666 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058932141 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066364723 seconds)
  done (took 1.70983497 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065578097 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068856274 seconds)
  done (took 1.313536831 seconds)
done (took 6.700567516 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065852139 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066261045 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084820294 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064194414 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.063383528 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063172169 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065697057 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.063570984 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063470564 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065400515 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068459951 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.066134823 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065892139 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066175615 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063305055 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063610499 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065526146 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063271035 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063212649 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063453206 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065292498 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065963121 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066822151 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063666249 seconds)
  done (took 2.788817178 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083093568 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066938731 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071618519 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070639256 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069792927 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070662597 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071245306 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06601718 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070763953 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067873371 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069436904 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069615878 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068370591 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.06951288 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068047355 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069864731 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07088277 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066495682 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068706156 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069911655 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070903824 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066210975 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069629962 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070758588 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069494196 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069637626 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067922415 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066529399 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070888466 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069282609 seconds)
  done (took 3.279242567 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069922823 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063656783 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064724325 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070550147 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063447229 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064682472 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063122105 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063842189 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06442234 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063409044 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064707656 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063385761 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063325528 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064318764 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064259141 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067044844 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078693864 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063912443 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063333248 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064117062 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066704137 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063525005 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063575167 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063329504 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063357268 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063013079 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063693417 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063316491 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063868228 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063171517 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066391878 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066725842 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063190805 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070053549 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067214115 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063223884 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06720477 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063204503 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065787364 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063319095 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063045953 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063217101 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063844073 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070163405 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063647212 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064921078 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063409278 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.0644524 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064019732 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065977277 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063061944 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06314981 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064876583 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064241492 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067061782 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063432711 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063651529 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063163742 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063906399 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062857936 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063013352 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063099603 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065156254 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063973274 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077448241 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070008685 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063370121 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064661996 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064398675 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065572536 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064909709 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076402608 seconds)
  done (took 5.881937151 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.201716882 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086123998 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065048829 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065592564 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061775786 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065391016 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066913593 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063793378 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065351086 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069384645 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063925559 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064969705 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0653666 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07672031 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06422422 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065043567 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069839442 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061847957 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064090771 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066853527 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063837597 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066947851 seconds)
  done (took 2.807102317 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152357068 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069521728 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104312786 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07244956 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067424626 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072503225 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069414135 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070107732 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06975451 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067846215 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067916577 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070173611 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06723027 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06758973 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067725902 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067523941 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06976742 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067994365 seconds)
  done (took 2.559344407 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076646949 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066141407 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086565998 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06616401 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065590571 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068399697 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070266164 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073661046 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068230025 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065835361 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073354142 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068400866 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.06835522 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06545097 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068117079 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065542741 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068345696 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065856935 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073627006 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070270323 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070214242 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073432882 seconds)
  done (took 2.736240021 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079081407 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068220513 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081733921 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068580392 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062095778 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064676172 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069726221 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065701666 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069478705 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067455335 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065885764 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064715359 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.06898179 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065593839 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069085759 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065733567 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067651125 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065602329 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067497747 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061968426 seconds)
  done (took 2.557663095 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086203031 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067833398 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067390658 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075551561 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067565116 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068071924 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074598714 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067582757 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067116621 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086473846 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067196202 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06710333 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075022321 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072251339 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06718199 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074534622 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074675562 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074344013 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066912897 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067204142 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086450021 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067126555 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074074013 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067443992 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067148592 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066931602 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067495371 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072074966 seconds)
  done (took 3.205218743 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066364243 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065453633 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063905342 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063942884 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06383935 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063521342 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063405838 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06372894 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065467258 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06374461 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065725186 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06568913 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065832668 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06567432 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065536379 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065913671 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06557892 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063255007 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063434115 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063897686 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065627068 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06558898 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065899852 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063395612 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063213036 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065839981 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063260711 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063356288 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066240138 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063192332 seconds)
  done (took 3.143804667 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074667387 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072084264 seconds)
  done (took 1.351382709 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06310148 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079594939 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06339673 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06977884 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069343257 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066740428 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073027074 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069226869 seconds)
  done (took 1.755529707 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081065157 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076927469 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068205501 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079720931 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076109345 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082190705 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131562238 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.06693119 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072461967 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064106662 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079086003 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065067727 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071582722 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066186339 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071986745 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072343392 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063856069 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071601448 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068694874 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06479499 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06728738 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074451228 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068019761 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061751757 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067318549 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087585717 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076452043 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065756386 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06886762 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07269804 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071452638 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060081748 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065805296 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066359618 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064096684 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075150582 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080373487 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068887274 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074386394 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067084158 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076493899 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061749313 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07082087 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07244688 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075679926 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066051589 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066857969 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061148853 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064051477 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068055563 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061424858 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066151737 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060704606 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074731918 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069214474 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07630605 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064959931 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067725603 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068544952 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069091735 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072427446 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.06772212 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068495258 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065621443 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075163422 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070397657 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074440543 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06142385 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060152775 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064607757 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075421013 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088053645 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07220107 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067469567 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067294519 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064145158 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069756357 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067400187 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071795015 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072598885 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066248237 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072321486 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073402955 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066645767 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068609247 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074268979 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064111619 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068433104 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063730308 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081252167 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064792268 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063832556 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063776852 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075528516 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068670864 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065551637 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064579196 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.0722841 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059811277 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066373639 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066081244 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065978302 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075220783 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069461028 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070072797 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073379926 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072286435 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065215943 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067667847 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062101926 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065868438 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064420122 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071832421 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058983386 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067489973 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06599424 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.192146543 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075183976 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064840525 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066241835 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075171078 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071560613 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065415745 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06312505 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068789409 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066640404 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069818967 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073704177 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065696756 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061430787 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061720684 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069771522 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066168628 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070509223 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070971953 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.06933084 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061060808 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064589807 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072267839 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074722049 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06642226 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.0679273 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072362975 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067858235 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066099628 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073526707 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068591269 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065608162 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071725904 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067181767 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061517328 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070111922 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068558716 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064718265 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070189964 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07010221 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068973528 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066837757 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06547452 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074116089 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067331319 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066317809 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066739683 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064813269 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076469577 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067752563 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062416018 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063498402 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075401916 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064583838 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066473752 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065905726 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068290679 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067194039 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065106315 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065486715 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068517826 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076796265 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07030839 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066922923 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071394889 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077315018 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.0658536 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068299383 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066144872 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067190774 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067095279 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074799488 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071634058 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070765185 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068575376 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062693334 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071722897 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073026962 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066323665 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064258975 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065453562 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070502961 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072018543 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070233536 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067209448 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064961758 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067081235 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069395928 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069131963 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066151883 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065335161 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072562259 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064064122 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072508457 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066856803 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075155414 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068876812 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060891974 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068518456 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064219159 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071507612 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061321634 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063866491 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065210332 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066600379 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064397304 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068277797 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059798022 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071443862 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071944465 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065647221 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064013493 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064519132 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071460331 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066478581 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068807178 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068384668 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070768378 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074979991 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064589332 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068357419 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.207150231 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067393679 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061593188 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072496455 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066071173 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066292083 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065674109 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06496821 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069729146 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075276019 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072717176 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061453125 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068833871 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064490761 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065971293 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062615825 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070232186 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069272845 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06792852 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073062859 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067532136 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066410077 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070121714 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065922756 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066858298 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067901931 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069444083 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066628526 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068298355 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065505201 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069233333 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065826877 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064820811 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068277525 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06623729 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06691445 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071547116 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066461539 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066608821 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068806633 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067471592 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066916505 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067049272 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066390589 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068949526 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066765294 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066975153 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068551836 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061431236 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073792537 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066439201 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073784033 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067772351 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063516742 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074110028 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068594297 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071728367 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067208436 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067679687 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068397125 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066136729 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069737151 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072617752 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065217508 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076976207 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074170625 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066692214 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068919133 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066550465 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.06797349 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065128082 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067437557 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066945459 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.0665477 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066061178 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070241319 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068387359 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066599102 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067893463 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066938583 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066442082 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067340654 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060801394 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065409612 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065618012 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066228101 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075385893 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066850021 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066034905 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065581973 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06730307 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065700352 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063524792 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074052766 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074715834 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066565688 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073183007 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065541934 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067744038 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076212991 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060442152 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063992218 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063671905 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064072463 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072851631 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066562812 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074705638 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066074603 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064740172 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062929816 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066175828 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064244929 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059566408 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063379135 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068699424 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064505497 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063950344 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065189435 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067303216 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065647199 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073457196 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064874782 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065697005 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.199216557 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064559777 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066163374 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066731151 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069481509 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067424226 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064897911 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063788848 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065962809 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067197451 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067946409 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066432738 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068110255 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075924883 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066110641 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068984508 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069857288 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061491501 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069024677 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066380769 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066191355 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065507338 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069702698 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069809912 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067513284 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075464799 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066572048 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067564431 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066757337 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064196261 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066437359 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066897791 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065793061 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066112421 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068244819 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074000085 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064211159 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069688005 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066199961 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066977274 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073209478 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066676952 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069506165 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07339997 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066851019 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068246474 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074059561 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071264452 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069938102 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067689658 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068179533 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071553085 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065571852 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072415126 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066867541 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.0673581 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067688073 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06461366 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066211613 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066836216 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06561905 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072011371 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067293765 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065959349 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066036194 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064536797 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066903872 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069449195 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073476367 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069214267 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069563692 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062026769 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063391102 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06741559 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064638284 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067969833 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068533957 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071753583 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.0684116 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066823201 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065133082 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074844804 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071850861 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070115403 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064388133 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069641866 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066622345 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06840962 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067233839 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066181984 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067858951 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070444491 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067900065 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065602813 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073413626 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069301603 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066735768 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067294133 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066300182 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066284237 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061112627 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066333976 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067759501 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071051722 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06854043 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065933532 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076179426 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064203323 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066335982 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069032515 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064995058 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070155373 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061269338 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067169201 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066154637 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066156275 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060587615 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064270228 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062895662 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067190957 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064651166 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060590319 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075231783 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073300161 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.201221226 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065922809 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065649117 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062329744 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062009223 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066000963 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068042338 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068434346 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075936792 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065341283 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066093223 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062105544 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067106591 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069805848 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070083018 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064615997 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062067791 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06646996 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069283089 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071623819 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065070015 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066615948 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069353685 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.06839676 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064944143 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070147008 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063608636 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070039053 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079068719 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067613677 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067345896 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072633788 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074231071 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066944646 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062385148 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067355254 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069525702 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067742975 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067697084 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067282885 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080935086 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069198193 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065884632 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065336417 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068208174 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065795891 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074635473 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06805474 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067392339 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070824704 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068153793 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075657377 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069297727 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074431788 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070404404 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069023482 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066376965 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066738649 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065210806 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065314603 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067993646 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066675321 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071504445 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074472599 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065888815 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077011378 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07526351 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067974172 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06285911 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065338037 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065852975 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061758388 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067198837 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064551389 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064432741 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.06449031 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065476192 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067617868 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071248977 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067501003 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067160677 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066580288 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060840436 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068511324 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068655129 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067223291 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063214913 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065889647 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066464004 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070067206 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069217408 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063988875 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067873879 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068120249 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066766513 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061146996 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072456273 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06514655 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067923515 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06522267 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066139632 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066475021 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069481424 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070284763 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067116197 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068184476 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069631291 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068085632 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063471561 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063679985 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071112981 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063868316 seconds)
  done (took 42.390283087 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099635414 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063204452 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061542084 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062201016 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072699119 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062596466 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061645016 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062696843 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06298909 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065056177 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062095481 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062163713 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07022585 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076968798 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073473702 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066753673 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061955838 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063090697 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061910521 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062736069 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070515917 seconds)
  done (took 2.71257675 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.0736126 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069914672 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072383598 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075384761 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067102299 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070015304 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072091179 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070462617 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075414449 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066769948 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075197489 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070255004 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066575604 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075425895 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066585196 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070608139 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075302246 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066927397 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070358962 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072021668 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070251185 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071814897 seconds)
  done (took 2.842934195 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066386873 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065661292 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.06719161 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061741426 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065950363 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061133749 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069688661 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.0638876 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068767617 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064874909 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064903256 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064824419 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.06730861 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061271938 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065518707 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063618405 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107103149 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068947225 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065465536 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066313136 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061274976 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067472385 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061354697 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061699816 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064738606 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069049755 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.06660809 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063853041 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065374391 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064880739 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065931073 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063846957 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067352371 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066277879 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065276719 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065138791 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065336724 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065728455 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061298733 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064050808 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066335717 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061835083 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065891395 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067289228 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06390711 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063923111 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067621465 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065197492 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060892545 seconds)
  done (took 4.512281843 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078832005 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107809295 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067659521 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08752316 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079343598 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075054172 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069061012 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.08846264 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062967074 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063932652 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080419505 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079075817 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065589604 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069875201 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072020589 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065288756 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066679966 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064789616 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069128836 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06488468 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069661437 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072300697 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079442615 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077978293 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069145565 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064455636 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065023351 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069902012 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077666436 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069623213 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.07009044 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070532471 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079702886 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070616881 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065019012 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067980194 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080883952 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065871975 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068300565 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063369649 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067561988 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069762499 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07147108 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080929396 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065647487 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07077899 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065423264 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062494626 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077098941 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067670499 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072531595 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078926219 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068639101 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065067367 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06944247 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079367853 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065601133 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063529773 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068283305 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076602204 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062885977 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068878735 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078398639 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067270242 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072502012 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078701067 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070281787 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069016096 seconds)
  done (took 6.287729913 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075001992 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071778879 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080022362 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07932891 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071935023 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072036874 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071926089 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071716003 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071551905 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076195541 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071755792 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091778481 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06754142 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074427333 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071646601 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071979637 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071719134 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071906172 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07163788 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071704794 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071842552 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078762758 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071675673 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079001457 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097241303 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067346067 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071710632 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072139636 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079284906 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07149119 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078559844 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071412331 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07155595 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079480368 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079053778 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071325561 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065055623 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071740887 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071742175 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071666487 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067208157 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079444285 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071521068 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067163541 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071676569 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071308787 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079262569 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078499046 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073983304 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07576683 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071296721 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07941646 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071257095 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071560752 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07913065 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103329697 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078718276 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07948009 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071789152 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078889403 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078847992 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084968696 seconds)
  done (took 5.958335177 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083150438 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073582093 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075803626 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061232185 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064061636 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069269045 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063928772 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064718182 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074059525 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073819658 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076106996 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069117239 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072285447 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075975191 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069012959 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07208305 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069013496 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069101648 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073876764 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069207261 seconds)
  done (took 2.726278669 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073431677 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082666608 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066760193 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071285276 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068692869 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071161975 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.06816695 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068400008 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066797078 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069199259 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07565189 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075494026 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066913039 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071367655 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075162556 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071141614 seconds)
  done (took 2.440780789 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074517615 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071651745 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079326635 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065851127 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063941358 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062481488 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065668533 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061504572 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062409878 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077599443 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065605639 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067834428 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065378644 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064503312 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062616074 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.06814004 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062142179 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063125806 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06569113 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077404205 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076071034 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064155517 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066692974 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06567976 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065567564 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070535506 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065278141 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063845119 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063509764 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06629148 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.06643242 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069114809 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063241872 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06381865 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064589638 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063285647 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065774856 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066214863 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068355055 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065431867 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063808339 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065477605 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065694101 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06645605 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061844698 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06592955 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062035959 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067818374 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063375556 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065542124 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065295808 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06772595 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065782339 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071839321 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068306823 seconds)
  done (took 4.958285918 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07940364 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06968839 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061710627 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063782445 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069096378 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067446823 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069318716 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067074316 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067600589 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063999481 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067405434 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068941595 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067904138 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069014478 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067282068 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069347327 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06153284 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067415382 seconds)
  done (took 2.530383558 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07080527 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066461105 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072574841 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065942046 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065115874 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067913602 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062065641 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064607029 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064255945 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065499409 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065585198 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068253614 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064398755 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06788235 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065622838 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065866841 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067989254 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064365419 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065667375 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062100917 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067914263 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064677481 seconds)
  done (took 2.759968719 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071831284 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091389516 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.137687871 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.083098761 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.080905355 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.078199573 seconds)
  done (took 1.848683181 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089697908 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078477272 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066804769 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087911324 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073083859 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066873238 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067169893 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067600447 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075529363 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075502205 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067090092 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075452848 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075393669 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074921648 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072920995 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072599408 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066991119 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067101571 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066063873 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083358429 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067677907 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075345195 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067305802 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067035516 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066912606 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07464132 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075106256 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075509186 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066857565 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075155799 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072668317 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066962029 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07501351 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075881782 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068714341 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075669921 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067166668 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083424234 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072446024 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074668538 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068574511 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07347364 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076198452 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071774099 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075570645 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06737569 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071922511 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067635588 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067614236 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085127962 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072947187 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074278185 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073286926 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075760641 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075527466 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084918092 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075449588 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074529439 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073656132 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077894219 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0743926 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072313871 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074262893 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075839357 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073203901 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074596425 seconds)
  done (took 6.153231695 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081225915 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08585295 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067856155 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075767881 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074777317 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067219418 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067104903 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067682657 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067491888 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067169163 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106483171 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067415261 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074989439 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074944987 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067802715 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067131418 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067745353 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074556916 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06696054 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085629328 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06762904 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074497735 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074382656 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074896399 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075870216 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072755586 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067244519 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067355614 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067067274 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067527919 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071672548 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067310921 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074790831 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066806848 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074526797 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06779385 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067343819 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07180661 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067206442 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072637194 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07459665 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083164749 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067262341 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067015666 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075570337 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067104119 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066879034 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066722105 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067266448 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067363539 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075628789 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075552448 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075801006 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074830594 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068134933 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067610884 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067085368 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067257726 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067185639 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072340726 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074743578 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066926882 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084936216 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067157358 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0672093 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075121679 seconds)
  done (took 6.063681619 seconds)
done (took 127.427775491 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.187425048 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.169398736 seconds)
  done (took 1.660871689 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067971382 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095042242 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076845972 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128009814 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066748359 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099510132 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098940853 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077567257 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066150464 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066303216 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066259763 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067619039 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130357427 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066430893 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066515083 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.067793638 seconds)
  done (took 2.62511981 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096826026 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.173000014 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098851732 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064569514 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09681004 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072600035 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064848707 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.07432171 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070569867 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065190291 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072978172 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070446674 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06504181 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070513258 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07051417 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07248899 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065247991 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072629864 seconds)
  done (took 2.757514419 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099475867 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090495754 seconds)
  done (took 1.510298542 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.154133757 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105128915 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.150050941 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.3329203 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.160213541 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229352606 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127496683 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.125125499 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116289644 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.121617989 seconds)
  done (took 2.939039253 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097810869 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.145668285 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.254074762 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114560759 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071984179 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.090786627 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.11550964 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.07752516 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.077227273 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.076822525 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.077083806 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076251369 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.095937952 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073180236 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073575323 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075449837 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.098772325 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072308884 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074823477 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07367779 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.096007697 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065577046 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073456255 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072038799 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.074292073 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.074225386 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065552892 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065438809 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073453751 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073633569 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07636025 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.08910301 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.074186903 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.103564209 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069804036 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104582764 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075667923 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071378195 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073392719 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.070877201 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.075371485 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.075155417 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07176529 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075563243 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065006675 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.0755605 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065378629 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065552721 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077379351 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066852864 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07754918 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07674532 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104115968 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066445028 seconds)
  done (took 5.83871618 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.66118774 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.102222185 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069674918 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.107079307 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095420877 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072072175 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.683077356 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.089914182 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.175454175 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.091374066 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087661035 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069907861 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080669385 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082848102 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108684916 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100879228 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.093089692 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070823589 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.099865452 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.09810975 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068078027 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092810436 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089930258 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.37505961 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066977597 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069579272 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06757405 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070006495 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.109595249 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077946992 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069869928 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.11985854 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084180703 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.120395464 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066998308 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068233454 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067735462 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079006461 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.179225581 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.132495997 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.128985308 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066937504 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067617803 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068301503 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.088795044 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067088977 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.109501032 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079641592 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.117563597 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070487233 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069698394 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06753812 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068567688 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079987773 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076140127 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079757264 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.22454522 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067714994 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067205116 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070792095 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.17699379 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078741622 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078882424 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.091291563 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.129033343 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067469196 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.707387935 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083755583 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067303583 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069075567 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067577024 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068650388 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.196755061 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.119464082 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.357759364 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.0697475 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07049517 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068459706 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.14975653 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078408568 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069290434 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.112790644 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068027431 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069250002 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070267586 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070020816 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.117207277 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080025025 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070153731 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068250413 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070440345 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06910736 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06745224 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.163180265 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080327907 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079293857 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.162433809 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069053036 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.11132544 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080309718 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069648732 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079823552 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068208421 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06972362 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069447327 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079183694 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.095945071 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080034005 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070773959 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068422304 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.099035864 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080424327 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067947136 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078344768 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.397347825 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079384579 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067770513 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080625307 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068360801 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.111089235 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070070735 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.1804121 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068972175 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07876335 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06890183 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067257752 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068602504 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.109715173 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070010989 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068685767 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069187536 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070256345 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079090328 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.132275619 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069931446 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.160348571 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.132517223 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069852896 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.117222112 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067630194 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.114973911 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069494032 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070423703 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066960707 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.69934403 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067728249 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068224454 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069207483 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.136145332 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06740059 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078309185 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075680837 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066590305 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.721978205 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077491878 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.208248717 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080820842 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071151592 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06865324 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068155116 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070829494 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.109906636 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.144605006 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070544982 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068454258 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07810663 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.111699368 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067734696 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079101744 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078557694 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078605662 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068929023 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070316659 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081441306 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.117072492 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079166603 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.134548929 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.506035716 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068683625 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077951971 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.143711596 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068572673 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085349328 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068160424 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083863475 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.111559272 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076950207 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.227449528 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.114162879 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.137166517 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079655483 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082486977 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067660406 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068294115 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079245855 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068686483 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069600424 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078243423 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070002822 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069699023 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083970603 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068412893 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.175855593 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067346529 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078962802 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067149846 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070007381 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083113489 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06840604 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070619907 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079497577 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069949407 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077393654 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.785382803 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07776121 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068369044 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.0702169 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.133445277 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.111611946 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067498789 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067569746 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069985146 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.107884125 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.156452612 seconds)
  done (took 28.181012442 seconds)
done (took 46.840285748 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210032355 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150130704 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.200849113 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117537153 seconds)
  done (took 2.098834367 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120842449 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100560936 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094958417 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065669912 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101720154 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06574032 seconds)
  done (took 1.90774003 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.305535424 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.208821778 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.180391189 seconds)
  done (took 2.048885755 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.195598084 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186054213 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.394806035 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252257671 seconds)
  done (took 2.490156391 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142134995 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089083273 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067609433 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083791914 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133191086 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159997497 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100880788 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124989183 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078939761 seconds)
  done (took 2.388064661 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.143947396 seconds)
done (took 12.455114122 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.098966964 seconds)
    (2/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.110417269 seconds)
    (3/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.190678627 seconds)
    (4/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.162779111 seconds)
    (5/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.206080313 seconds)
    (6/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.165956375 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.163579652 seconds)
    (8/309) benchmarking ("sort", Float64, false)...
    done (took 0.125602711 seconds)
    (9/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.214809109 seconds)
    (10/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.191201521 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082172076 seconds)
    (12/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.175410906 seconds)
    (13/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.190023211 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.13834013 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078127825 seconds)
    (16/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.163142937 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073212941 seconds)
    (18/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.177681736 seconds)
    (19/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.082320162 seconds)
    (20/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.159566383 seconds)
    (21/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.170301338 seconds)
    (22/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.100397858 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.094732768 seconds)
    (24/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.147751299 seconds)
    (25/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.135663393 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.095530483 seconds)
    (27/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.126673688 seconds)
    (28/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083873104 seconds)
    (29/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.181814362 seconds)
    (30/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.170241934 seconds)
    (31/309) benchmarking ("sort", Int8, false)...
    done (took 0.139917154 seconds)
    (32/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.099471304 seconds)
    (33/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.064676239 seconds)
    (34/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.089292407 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.115119263 seconds)
    (36/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.180822616 seconds)
    (37/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073295604 seconds)
    (38/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072778421 seconds)
    (39/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076362258 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072202189 seconds)
    (41/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089340536 seconds)
    (42/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.146439184 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088079083 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09972206 seconds)
    (45/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.099305303 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065647041 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.141141693 seconds)
    (48/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.089100923 seconds)
    (49/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.166830126 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.095322651 seconds)
    (51/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.152763888 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.095587469 seconds)
    (53/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.139345195 seconds)
    (54/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.162843194 seconds)
    (55/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071488042 seconds)
    (56/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.0770721 seconds)
    (57/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.086550999 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065083549 seconds)
    (59/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087279769 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072787265 seconds)
    (61/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072402208 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071890521 seconds)
    (63/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.178267514 seconds)
    (64/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.13626651 seconds)
    (65/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.108583628 seconds)
    (66/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076042534 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067054011 seconds)
    (68/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067926464 seconds)
    (69/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080376034 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066060373 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089297753 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.119079212 seconds)
    (73/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076373823 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089005285 seconds)
    (75/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.136798218 seconds)
    (76/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075523554 seconds)
    (77/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.069889073 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06498771 seconds)
    (79/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086056992 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.104631175 seconds)
    (81/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.231751804 seconds)
    (82/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079716243 seconds)
    (83/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.053226983 seconds)
    (84/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.078213398 seconds)
    (85/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.172605566 seconds)
    (86/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.166677492 seconds)
    (87/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074303118 seconds)
    (88/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.052480598 seconds)
    (89/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.069017664 seconds)
    (90/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066977151 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06646732 seconds)
    (92/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.19438035 seconds)
    (93/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073007324 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 0.067567998 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066631641 seconds)
    (96/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.05198652 seconds)
    (97/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066771045 seconds)
    (98/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.142592137 seconds)
    (99/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072876188 seconds)
    (100/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.157696688 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090751145 seconds)
    (102/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070493294 seconds)
    (103/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.173497363 seconds)
    (104/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.171997924 seconds)
    (105/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07347186 seconds)
    (106/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065105444 seconds)
    (107/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066349304 seconds)
    (108/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.078102763 seconds)
    (109/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07369857 seconds)
    (110/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072217812 seconds)
    (111/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.052274293 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136919904 seconds)
    (113/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.362353701 seconds)
    (114/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051797804 seconds)
    (115/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.099907687 seconds)
    (116/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062668728 seconds)
    (117/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.077029661 seconds)
    (118/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073426121 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.096439437 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.153140457 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.091483146 seconds)
    (122/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068052748 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092795387 seconds)
    (124/309) benchmarking ("sort", Float32, false)...
    done (took 0.127591993 seconds)
    (125/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.06264584 seconds)
    (126/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079605685 seconds)
    (127/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.052067564 seconds)
    (128/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.143428412 seconds)
    (129/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061871948 seconds)
    (130/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.053115769 seconds)
    (131/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.070323839 seconds)
    (132/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.116918388 seconds)
    (133/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051430175 seconds)
    (134/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051562537 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066161792 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.076983674 seconds)
    (137/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.148633331 seconds)
    (138/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071996589 seconds)
    (139/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.108393086 seconds)
    (140/309) benchmarking ("sort", BigInt, false)...
    done (took 0.183368821 seconds)
    (141/309) benchmarking ("sort", Bool, false)...
    done (took 0.132793895 seconds)
    (142/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073600453 seconds)
    (143/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051356297 seconds)
    (144/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064798766 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091256868 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071904824 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.142046303 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07081146 seconds)
    (149/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.073684 seconds)
    (150/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073922186 seconds)
    (151/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071946473 seconds)
    (152/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.180042064 seconds)
    (153/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.174201372 seconds)
    (154/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.103421642 seconds)
    (155/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051044817 seconds)
    (156/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053626299 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.120593561 seconds)
    (158/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071561176 seconds)
    (159/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066598232 seconds)
    (160/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072008124 seconds)
    (161/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066966534 seconds)
    (162/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050980849 seconds)
    (163/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067546906 seconds)
    (164/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072102168 seconds)
    (165/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.096860879 seconds)
    (166/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064884045 seconds)
    (167/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072264794 seconds)
    (168/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088121045 seconds)
    (169/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065123057 seconds)
    (170/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052203141 seconds)
    (171/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118068875 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051652735 seconds)
    (173/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052494767 seconds)
    (174/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076122981 seconds)
    (175/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052281593 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064791956 seconds)
    (177/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.078893093 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085117437 seconds)
    (179/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.052093715 seconds)
    (180/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050733031 seconds)
    (181/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.053379982 seconds)
    (182/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.066847144 seconds)
    (183/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065906107 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090299194 seconds)
    (185/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052383444 seconds)
    (186/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075829107 seconds)
    (187/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066517254 seconds)
    (188/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052420687 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088286878 seconds)
    (190/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064635403 seconds)
    (191/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069561267 seconds)
    (192/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.135717972 seconds)
    (193/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.107276743 seconds)
    (194/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064904845 seconds)
    (195/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051825737 seconds)
    (196/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052204836 seconds)
    (197/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.097299234 seconds)
    (198/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.24874707 seconds)
    (199/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073859021 seconds)
    (200/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073717954 seconds)
    (201/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081215426 seconds)
    (202/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074049117 seconds)
    (203/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074491755 seconds)
    (204/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062761534 seconds)
    (205/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.141015511 seconds)
    (206/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.177495948 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.108905809 seconds)
    (208/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052652925 seconds)
    (209/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.167538239 seconds)
    (210/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.052115803 seconds)
    (211/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.151326751 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065353955 seconds)
    (213/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.169532805 seconds)
    (214/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085864263 seconds)
    (215/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051731802 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066568011 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.113050379 seconds)
    (218/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.134639637 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091574848 seconds)
    (220/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074010093 seconds)
    (221/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069660629 seconds)
    (222/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.054416561 seconds)
    (223/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065611612 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072881543 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074902952 seconds)
    (226/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.07016288 seconds)
    (227/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072586996 seconds)
    (228/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066918395 seconds)
    (229/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051399977 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089433097 seconds)
    (231/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.067216848 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.110661194 seconds)
    (233/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051364679 seconds)
    (234/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051169525 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071717117 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.146459876 seconds)
    (237/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066210503 seconds)
    (238/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.05308676 seconds)
    (239/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072735043 seconds)
    (240/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065867988 seconds)
    (241/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061642188 seconds)
    (242/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.171734458 seconds)
    (243/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063579974 seconds)
    (244/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064523502 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.102630396 seconds)
    (246/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068089836 seconds)
    (247/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051557164 seconds)
    (248/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.052909125 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138943361 seconds)
    (250/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076238877 seconds)
    (251/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062359181 seconds)
    (252/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075913048 seconds)
    (253/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07164632 seconds)
    (254/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.112652042 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.097717146 seconds)
    (256/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074246861 seconds)
    (257/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.175380846 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.0655985 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089739955 seconds)
    (260/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055615879 seconds)
    (261/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.05116465 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064812304 seconds)
    (263/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.07955867 seconds)
    (264/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052745769 seconds)
    (265/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078331403 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071584409 seconds)
    (267/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072648351 seconds)
    (268/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.169015011 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065481827 seconds)
    (270/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.05220855 seconds)
    (271/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053362653 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07337509 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.09994966 seconds)
    (274/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051619135 seconds)
    (275/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051384318 seconds)
    (276/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065996801 seconds)
    (277/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066964278 seconds)
    (278/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.07796904 seconds)
    (279/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068427089 seconds)
    (280/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061059991 seconds)
    (281/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067041879 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066496293 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089121076 seconds)
    (284/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051093726 seconds)
    (285/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061921204 seconds)
    (286/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072068243 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072190296 seconds)
    (288/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050871895 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064033797 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065115586 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064025304 seconds)
    (292/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067141302 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072321883 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089006879 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087410997 seconds)
    (296/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051048068 seconds)
    (297/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068293702 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071000066 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086443106 seconds)
    (300/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072995178 seconds)
    (301/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071172054 seconds)
    (302/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.054183093 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065392755 seconds)
    (304/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067891366 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070569656 seconds)
    (306/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063147326 seconds)
    (307/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050753162 seconds)
    (308/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051068995 seconds)
    (309/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070399029 seconds)
  done (took 30.289765273 seconds)
done (took 31.658091018 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084426271 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092046787 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07506069 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091591518 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08004695 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076438358 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072201654 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077797208 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079294496 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081099885 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077624915 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055155808 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073516949 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073570863 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074118962 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090546361 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077724867 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072334158 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072779119 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064703294 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07271179 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065622995 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067035855 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054994671 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077377441 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07138829 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072054817 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073532612 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066183 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066119283 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068794349 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072788975 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065484611 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077604557 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071830815 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073189063 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074407384 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075881156 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067528434 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065834351 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073836781 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066272279 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072476982 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073236783 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071711572 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070941458 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07352894 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077311232 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090658471 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067914103 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074149256 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076039258 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076119756 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.0721722 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069442863 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072928587 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070533252 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090724612 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073423716 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068354731 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07359168 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073666868 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070983939 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072879617 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072354644 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074548799 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075278088 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070668214 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074537317 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070796447 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065742393 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072590957 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06903114 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06549543 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07517298 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076991101 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064523158 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071298294 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072310291 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070830715 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065292822 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067195692 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067336971 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070985788 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067252031 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05518528 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069410831 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071515225 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064515212 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072947448 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071782685 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071783903 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066918723 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075438655 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065010474 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070695031 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065831353 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065642697 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067461426 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069552699 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065217169 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067932457 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073785021 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066605124 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070944398 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077669632 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064932931 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070915833 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064078171 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064380874 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078468745 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074240585 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065298827 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067466183 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064668074 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073014393 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064281279 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064900527 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064849123 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064663622 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070325548 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064228912 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066477147 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07094103 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076448886 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06383973 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067190039 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066267565 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064259155 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069587953 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063743891 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.201299169 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068428689 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06253311 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068835986 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06616789 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072969806 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067472274 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073033955 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067594395 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073893749 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070904003 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071411629 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070836455 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064508621 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058701026 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068433795 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06796719 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068074305 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065485514 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066900603 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066042915 seconds)
done (took 12.389077913 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066500059 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.140977405 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097505741 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094460654 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.0854424 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066364425 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075817559 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100696377 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067582809 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101579842 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087145629 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084639109 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111834019 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065018821 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066414912 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069913005 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06718322 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080928931 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099885541 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086054474 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.108173132 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065305814 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093608 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089333901 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086523066 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101564282 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067055136 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069751712 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069653471 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.09063273 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086553919 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070053986 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066791197 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099390206 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091844936 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082569588 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066541124 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081949625 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066510127 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065751996 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.080389922 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096850576 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079378561 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079827502 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.07018813 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069091985 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067235807 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082937783 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088293877 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.07826787 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085975152 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102192053 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068704841 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065427782 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064774425 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084613685 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065380967 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068993921 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066337314 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068236688 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066012175 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069065995 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080611453 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.086693133 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069711061 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080179922 seconds)
  done (took 6.756196333 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083071437 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090511689 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082643645 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084085598 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066042428 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066382711 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066927997 seconds)
  done (took 2.006058175 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067381031 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087745739 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088717449 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089141035 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08473996 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086872832 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075402043 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066771055 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080107587 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067623166 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087007478 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101275452 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067380244 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072570678 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090234593 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06638947 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089964858 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066735693 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069316668 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089466694 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068639108 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081841255 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069829368 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066787883 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080299162 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066584254 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112455371 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070656643 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068414063 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069869578 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06496472 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105865766 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080233831 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075856619 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066976879 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080955785 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081073987 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065228905 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082698004 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071766725 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080557338 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067162869 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06749213 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064883797 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070804269 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.07689826 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067761481 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067138633 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069366901 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08568837 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067166758 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079758146 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.07115318 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068991699 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067780676 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070455929 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076567628 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06765007 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086209494 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068073231 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083031438 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082602879 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080220142 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082587687 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068941304 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079831671 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080099925 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069017923 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068032946 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070114966 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082283874 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065060596 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067868378 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076694095 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068121702 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088300256 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088263953 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067689022 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075181784 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066867824 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06664078 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066615032 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.08877429 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06865882 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066689884 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070414919 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068956303 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065024372 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065056593 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.06993287 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064716821 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068299004 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069556113 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070002762 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069171901 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082967854 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068952306 seconds)
  done (took 8.721743617 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069241938 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068161825 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.06883711 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068080158 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068041996 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068010399 seconds)
  done (took 1.896108357 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092702642 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069579251 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08028146 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072229122 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104352166 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086813804 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086611578 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078404515 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08322315 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078710945 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08612204 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088330211 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092468047 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07271016 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086134381 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072059896 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086976686 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075284241 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078014403 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073223686 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086196766 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072886063 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072694894 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081330922 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075687351 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072292375 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067698807 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078324459 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078009169 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078618405 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072475115 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075713362 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070595574 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078047629 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086510507 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070381071 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072514749 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07706659 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072150519 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075328835 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087628769 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072465695 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074380291 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076807767 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078300997 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07015412 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077016681 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07563643 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085783172 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077089803 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076682978 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071767988 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075214288 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077261749 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07008366 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077903519 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077160442 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086096016 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072372059 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070039632 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069108556 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075356042 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077304794 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075584787 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078230916 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076775046 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070083293 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072570127 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073261451 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071794008 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077101042 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068985487 seconds)
  done (took 7.040551719 seconds)
done (took 27.873086374 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542510432 seconds)
  done (took 1.998103127 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.617142423 seconds)
  done (took 2.097145224 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.546123303 seconds)
  done (took 8.024690882 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.390317083 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.50371535 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.704428486 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130710367 seconds)
  done (took 3.249693844 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.675425636 seconds)
  done (took 2.162697176 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.209346419 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.195028697 seconds)
  done (took 1.9036904 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.36785233 seconds)
  done (took 1.846261544 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.095024356 seconds)
  done (took 2.575006513 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.257201067 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.161234822 seconds)
  done (took 1.904218195 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.456709459 seconds)
  done (took 1.940310359 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.831785569 seconds)
  done (took 6.316243705 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.206740853 seconds)
  done (took 1.737870293 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238015128 seconds)
  done (took 1.722828887 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.711202268 seconds)
  done (took 3.195261096 seconds)
done (took 42.15866333 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080710137 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081309744 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081922898 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078450513 seconds)
  done (took 1.795822466 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077127355 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072938954 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076543986 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073298257 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077285018 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072939688 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074359523 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077240894 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072701484 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073011148 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072860553 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072830532 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075485182 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074541328 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071484334 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075705089 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076117659 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072840873 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075705072 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072763245 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071404215 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075075006 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075306901 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072248132 seconds)
  done (took 3.269925971 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078128781 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073242197 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074852655 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07233481 seconds)
  done (took 1.793800833 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077198942 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092360219 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089681512 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078148174 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092124485 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086159649 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069535117 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069425535 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073591409 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077567527 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068043831 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096219244 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087583198 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077204289 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079368434 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066186692 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06839385 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087125097 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077401697 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077917274 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069956117 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077224157 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068369393 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087871891 seconds)
  done (took 3.386058965 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076954146 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103457254 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077738415 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087415941 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089667951 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065614946 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074365054 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089162802 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123002355 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065806459 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070326497 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066217744 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072773126 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065609935 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076479402 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10479703 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108395648 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069031166 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.0959626 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065913009 seconds)
  done (took 3.149179055 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073849545 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070590212 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066508794 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069384723 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077866011 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073456481 seconds)
  done (took 1.933132417 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068603278 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067451122 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06771269 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067039926 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072045434 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06708923 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066632275 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067616317 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068316087 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067339534 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067091607 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066414894 seconds)
  done (took 2.310820898 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.334966396 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068977893 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069402299 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066001695 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071259869 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066752935 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080320544 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068584093 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090613166 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066913599 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06700168 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069152659 seconds)
  done (took 2.620044841 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204369581 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076551809 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234464458 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137217351 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111489864 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115329029 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104192573 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113066893 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141912647 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101320815 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16648688 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164162169 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106921974 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136341188 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089731502 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.09854587 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153875837 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161457609 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10324767 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164469572 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142671223 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124413607 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146117937 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101065525 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105168877 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120839527 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071486416 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079939839 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168835563 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130476639 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145161517 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110561234 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093384089 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174751898 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168342459 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139990065 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133852832 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08402599 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102081135 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132084003 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196405057 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088247555 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160892912 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247760017 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081789543 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14062347 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119600286 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.12053159 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107656692 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090359493 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145578448 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180648397 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137736491 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087070386 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112308285 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11469367 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114541329 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103022268 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178418044 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159183553 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127719867 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071676848 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098529565 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15286778 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130884284 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10898036 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.12633113 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093350096 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132725616 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154000557 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118871423 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141932539 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128246314 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08879993 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118656488 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139103649 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127173462 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168283573 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124179844 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073331475 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123533376 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102409792 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081263603 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141885209 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075363518 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173139009 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098961799 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105874598 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11283818 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108986945 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109226976 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159292648 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284419559 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1045902 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066562728 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104307737 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120687163 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146613788 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087950722 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108411611 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116209335 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078355952 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137798278 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075231245 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123363611 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076073548 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124442299 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133149392 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075593612 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121660961 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101606624 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100183969 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133351182 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159365132 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088795128 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081965211 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165695428 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122228644 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104452687 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143835733 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154057534 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099268942 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102895135 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148840946 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177738877 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090180175 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162057715 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107485586 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084457652 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088015953 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123196552 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112399338 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121853367 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082408241 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117967256 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165690402 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075357374 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094652333 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132303603 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078990582 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080753798 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102233448 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099650657 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09493663 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.1001937 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103418128 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137729194 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121737495 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.250407603 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127120787 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099018113 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170682136 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089750875 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10108733 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104724928 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070837762 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137085996 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157195745 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080933515 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163324237 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123510563 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105005245 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118740818 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082836912 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138928465 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079167182 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070954189 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142945428 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110007652 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109111899 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.149328804 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104748159 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126822491 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118492692 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133776034 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13157466 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.12909102 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104944757 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088605697 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110806824 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124834408 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073358519 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091549965 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080107405 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103914871 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095805165 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083501157 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140846479 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123737448 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099919989 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112017614 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096348754 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145291329 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076019309 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126999581 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118131707 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093838024 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150168524 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150504734 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130209709 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098951352 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142502963 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069773843 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219399108 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091113385 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123714694 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084095477 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084399151 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117927928 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146315453 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129635511 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138217125 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111394295 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121150817 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154289359 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070129231 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115583006 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147036022 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121469753 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104423879 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090061991 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.09955181 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141237606 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108411311 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180360496 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11411698 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12632576 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152246499 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099417708 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080923405 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103390174 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134370779 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104762971 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148386721 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099933256 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088423474 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109681146 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074591638 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099898316 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126538023 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119332307 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13512798 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114435061 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131737351 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076931604 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115428122 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119133749 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120594842 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064387993 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118764267 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159519742 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093655846 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117667705 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150815193 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07952288 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.270355821 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177279582 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146555031 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085675314 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110558247 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119333703 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127983002 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120801042 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141156791 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109819885 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135503853 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110546809 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086535765 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087838441 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09716312 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105602842 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095793305 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107595741 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114482304 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094829367 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131776389 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102921703 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109447025 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117218783 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095998165 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089937142 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096949223 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172408528 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119012073 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169809828 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098883982 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.143457266 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162390327 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075613536 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079579631 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078848128 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139232725 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08396913 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130349267 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097869172 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105516023 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123711378 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140772506 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094914604 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.06883178 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107482513 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132880956 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111494445 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097745437 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103366559 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160367607 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100132627 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079564486 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112601938 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103939923 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100676562 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316191291 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063215655 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098916241 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077312341 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08196161 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128056844 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152107696 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080840452 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103528 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119204657 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110195202 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127207074 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101673032 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098854388 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114090543 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14935979 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128374299 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090107694 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111951778 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129350574 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172111324 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105367029 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096234704 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17016266 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151082219 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159957592 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089030434 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114099353 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113611476 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108463621 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138219264 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083962725 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161795872 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08232062 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135193837 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106289623 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090143036 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129109611 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098692302 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088548625 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14691706 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11700101 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082478133 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07735402 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116637634 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118767835 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105617113 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075663305 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137485736 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073302863 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131017104 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165655534 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228130911 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106731997 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097757527 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08138441 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108615681 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102507492 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091046123 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099213423 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172590388 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088396435 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148539835 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141365389 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112984461 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136466958 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100250005 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635510103 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078136146 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150784632 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11637535 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172252956 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098473989 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117699402 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108814094 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123198038 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144401035 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104779929 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176828541 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130766872 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11571633 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079609181 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102248418 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102164545 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088669853 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104955068 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11330349 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115717157 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093462837 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115044916 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122883438 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082366048 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095655565 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155685431 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115878801 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141831589 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138674426 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084639827 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116911541 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136659287 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079708822 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120272097 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149216076 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.251037437 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098907577 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082238481 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102205977 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169420342 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073824182 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160259099 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120292317 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110109591 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113340399 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114688634 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131434466 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108319149 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121493762 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093708122 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110301018 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111897446 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082738319 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078020234 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104520617 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112012734 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098575335 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099030119 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098053101 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150265958 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072118587 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095995478 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10315058 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144279188 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173240383 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088442277 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083095571 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118634908 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111953048 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112713285 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120311819 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.07967473 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082547895 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.08181265 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.07770406 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108361724 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112357822 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104972861 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110834541 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162996931 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082673923 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225347487 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095207934 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103812464 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069855263 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078288299 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094952784 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096228342 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106447246 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099203848 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166979791 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094485373 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089051252 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.238353611 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074407317 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084237728 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128966745 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111041079 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119351154 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097888054 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063251015 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109439955 seconds)
  done (took 58.710460709 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108018131 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082830834 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097644492 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150387846 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122054618 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211968719 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157267501 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199278608 seconds)
  done (took 2.74402656 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068088905 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094106903 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100143946 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082895371 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067277702 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069130256 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.224988517 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081405918 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067317272 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088258805 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078799562 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.06961775 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.399971915 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067278588 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068275468 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062817587 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068097086 seconds)
  done (took 3.363493435 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.375678263 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.367269783 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.371584463 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073870944 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.662575865 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088863002 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.075707108 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.097250484 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071494646 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.268820346 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.701508054 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.094193717 seconds)
  done (took 13.86214223 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.0754322 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069358843 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083405834 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08392029 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072518009 seconds)
  done (took 1.991970462 seconds)
done (took 102.48037584 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080237769 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.295085217 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053977076 seconds)
  done (took 1.985991482 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08278623 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085011758 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084634172 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082863133 seconds)
  done (took 1.951573106 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075048918 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077001463 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.084099691 seconds)
  done (took 1.846787087 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.223391369 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.1391884 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087070917 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082089327 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078144435 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079147399 seconds)
  done (took 1.859575762 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072504602 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075144984 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072761529 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076761403 seconds)
  done (took 1.911016447 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076861735 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053318603 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055513565 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055856397 seconds)
  done (took 1.857769462 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086616269 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079571255 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078627089 seconds)
  done (took 1.859759696 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105873458 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085122571 seconds)
  done (took 1.806160534 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081548835 seconds)
  done (took 1.697990932 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098772423 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113905301 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.127284829 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108754461 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135488489 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108601146 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085334286 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086724328 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.07715123 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087869844 seconds)
  done (took 2.645246497 seconds)
done (took 21.559568611 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079475106 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.461728572 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361002097 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090946697 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668864635 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357149265 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.986701263 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091995035 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121285107 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068172531 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08413033 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647565925 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.976821341 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.419552058 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.964445788 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.414412744 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650645316 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068759414 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068287296 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068315958 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.975364281 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067534194 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067934586 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068553341 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650053922 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37206412 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068944468 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.420055876 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068989655 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070524103 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355490302 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068843606 seconds)
  done (took 16.507516359 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070943118 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117671334 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074188497 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084552167 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071459764 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070158646 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072190616 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069537648 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125084581 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068160388 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084965553 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068144246 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07235919 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069159451 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087724296 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068784586 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069445225 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068970559 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068794024 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069068602 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086916107 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068797834 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068698206 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069305985 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068665242 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080656702 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069271024 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.0689487 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069642502 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070802897 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071684301 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069467975 seconds)
  done (took 4.043154122 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115418076 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125717465 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074768307 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103873798 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112802179 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07075596 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143221652 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092763264 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127531713 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068391953 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084946274 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068900352 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101561661 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069365943 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088669982 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068983595 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069765681 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06946139 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068914912 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069264568 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087796587 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068923634 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06938655 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06952378 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069922817 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081935701 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069213354 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.0690552 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069348777 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071250035 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072335436 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069399647 seconds)
  done (took 4.293451076 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072509249 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075185198 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084160419 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084988628 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070044316 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072697576 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073243194 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070464489 seconds)
  done (took 2.237682241 seconds)
done (took 28.703502281 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079010191 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069669039 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073437223 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082052174 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073892582 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079140642 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067875083 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074821337 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07239454 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073414775 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075439072 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068019621 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071731485 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067932054 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074117192 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068408898 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079958193 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072407143 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080782984 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.07974042 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070824357 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073503461 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074621113 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079687706 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079336985 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079433623 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077704633 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073025057 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069523476 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070506677 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077222693 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083729454 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068822131 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079376711 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068302115 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067923164 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071556761 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068162423 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079092839 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076552298 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069674017 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075949275 seconds)
  done (took 4.732342082 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087981174 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092209486 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085549787 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062594386 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067692449 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065694013 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089436555 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060413272 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060371883 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088822446 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056375997 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059995223 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.063242478 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054790327 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059837382 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057373414 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062317698 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056392113 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060153502 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060119403 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058579949 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054987467 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060916524 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065953578 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057306132 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062640026 seconds)
  done (took 3.352885989 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075460162 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084170226 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089081928 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127669358 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105389773 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077896808 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078650016 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088591575 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085846585 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067815083 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071675464 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094182744 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088161006 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074664399 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067675864 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08424389 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082137008 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069575048 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074114573 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09091989 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085128906 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.078103754 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092845915 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081363808 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067367324 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070393165 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071444262 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081301081 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072197312 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076600796 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07187672 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071453257 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070176513 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079606128 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071282426 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069445931 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089869446 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077727672 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078319035 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068248916 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07139874 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068650778 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090287689 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122770795 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06744692 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074045242 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075618198 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076863603 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068010236 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086299789 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078927096 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067495718 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07123061 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067171027 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06811067 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08071954 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069878441 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070128707 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076791608 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070885567 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080315811 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07180603 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082895076 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067525392 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075638479 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067359957 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068898343 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.06708948 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09329271 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069766548 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108850232 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069139794 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068924113 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076584369 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075613731 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074176364 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068468631 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082649233 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078184612 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07116162 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076499629 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071494602 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071018142 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088287456 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070395555 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069649169 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069144136 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074040508 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070583254 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069112148 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080934756 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068066645 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070934405 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084664589 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067555228 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069663009 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073818029 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072596621 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067331452 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079025951 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072670896 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068804712 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077079516 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068167191 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.07116876 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.07803387 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073878593 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066630753 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072003323 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073708305 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068436979 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069222749 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070756383 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069885629 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077069476 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074439494 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072492775 seconds)
  done (took 10.579519056 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.161304138 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155220343 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07200209 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144955602 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077256148 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.09073735 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147116437 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095040326 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068999018 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068863728 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069328902 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11556421 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106486139 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.122556195 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079114797 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068345368 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084022832 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.117677182 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148770365 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.144013908 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084398194 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077511875 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070473438 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070184703 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074823475 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083053755 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.091320199 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077435433 seconds)
  done (took 4.447368319 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081487035 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.101565328 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073947567 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089805966 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091265301 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068362079 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070924404 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070565688 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081860127 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078977176 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068105247 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073816794 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075294329 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.074834487 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069601515 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075614319 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075788762 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069999693 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071665334 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073728283 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078401558 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081257455 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072773229 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067894858 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074643303 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067609695 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064681298 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084553799 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068800146 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090821028 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066417876 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07569069 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082758236 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06933478 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068731427 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068488646 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06813406 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068183404 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.0707951 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067139376 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067064749 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058417639 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067978133 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080060963 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074805445 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057533948 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073277211 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073371104 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073450136 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06626572 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071449016 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071598333 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071848341 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07621469 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073730514 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.0733805 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069484234 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066940997 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075988589 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068490001 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065443809 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067276978 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072861462 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066332006 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076476061 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073440235 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067242278 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068370036 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069834509 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074987187 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068542372 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071569659 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066213222 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070061784 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073058381 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070225157 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069840056 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067336376 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068530923 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068898684 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056590846 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068504709 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054899834 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071458573 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066475538 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067044478 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068232935 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073391983 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080239836 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069447542 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074575967 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069352483 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06758131 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071496091 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.061395496 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071491105 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084233445 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082963695 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068259521 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066323247 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083369955 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072830794 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067708044 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057189541 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076225705 seconds)
  done (took 9.217300218 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.095621138 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088503972 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071309238 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083900133 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.091908121 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088349574 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075747775 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07739729 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070358557 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.082919787 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074192242 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077033467 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068905429 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077963335 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.095299479 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077891075 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071055583 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077839463 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072923631 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.102675107 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08361055 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082925811 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.075627615 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068956059 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076738642 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08088894 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091002703 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080972326 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.079134389 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.076522782 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.081381445 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091280874 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.075043639 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072730158 seconds)
  done (took 4.424317648 seconds)
done (took 38.380104632 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.711898658 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.893214864 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.714070448 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.05653935 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.789352224 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.738883052 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.855710676 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.709228785 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.84137705 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.756473086 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.951215589 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.737528124 seconds)
done (took 64.409790296 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.801474614 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.85398627 seconds)
    (2/2) benchmarking "String"...
    done (took 1.977983417 seconds)
  done (took 5.480009043 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.065138545 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.243389639 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.952990238 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.707437546 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.711755089 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.01189669 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.509666641 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.228806696 seconds)
  done (took 30.018508542 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.922707241 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.910890128 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.383604378 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.426082103 seconds)
  done (took 15.34463862 seconds)
done (took 62.448271578 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.726796171 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.715235283 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.71697352 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.684840298 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.75959489 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.705131295 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.858930117 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.939459288 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.699931552 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.686967765 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.700460778 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.132266641 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.707708927 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.894550133 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.701230378 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.707314695 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.764119713 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.100072201 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.854136697 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.713789244 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.70031657 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.74123179 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.700624944 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.708570077 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.734825994 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.698506655 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.128685536 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.701114091 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.311012146 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.694540424 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.719618762 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.03631712 seconds)
  done (took 202.288313899 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.689290102 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.63273235 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.706547603 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.695517212 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.15899192 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.886629286 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.842576733 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.201793132 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.690947405 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.693605641 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.841705399 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.689062644 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.871748742 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.694013336 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.69700115 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.688369621 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.860054635 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.920642639 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.691981459 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.939980363 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.692878513 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.74339064 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.704045606 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.862322301 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.715242003 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.704512022 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.849241994 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.713615899 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.883429773 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.816962073 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.70249594 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.70623838 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.916457979 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.56118602 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.694741415 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.696836543 seconds)
  done (took 166.690495913 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.097326157 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.68758387 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.685418952 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.685181469 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.700423164 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.685403432 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.812706159 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.813035187 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.154356479 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.110988737 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.730765252 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.512620845 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.683742481 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.751652301 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.69571484 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.683038219 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.698385521 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.709002078 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.683881171 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.683746403 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.810250307 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.693935073 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.674846786 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.688563137 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.683135928 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.689548082 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.05208531 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.684845128 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.689182033 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.942972969 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.690582471 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.684038723 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.577915845 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.535082571 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.689173006 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.765512519 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.68294648 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.68784414 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.682329269 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.902093103 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.682422367 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.683048697 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.684006574 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.682067206 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.856328567 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.681352574 seconds)
    (46/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.681822555 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.809582598 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.18005055 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.683929378 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.681755292 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.68078319 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.694043717 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.352192798 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.680945105 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.680779746 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.682576346 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.680824352 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.680280398 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.687150666 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.412157826 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.751711327 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.681094908 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.681891262 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.685813341 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.680409502 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.862869764 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.679052289 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.906031464 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.732170096 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.787992763 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.803044655 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.679640849 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.745489643 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.771463628 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.677358617 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.677099869 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.677986602 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.677214208 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.678061029 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.758269333 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.679072373 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.801355543 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.685654468 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.679449811 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.726349699 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.746981907 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.680324766 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.578313824 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.680075966 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.678429578 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.990335229 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.746001264 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.680800106 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.679606012 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.671621823 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.829953448 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.796769277 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.440291263 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.67265299 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.724382307 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.670502242 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.839992167 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.793401124 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.846287095 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.674348416 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.753283644 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.676089563 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.674284062 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.670073939 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.702461557 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.671071328 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.731185594 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.67330065 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.042245396 seconds)
  done (took 390.038630776 seconds)
done (took 762.814310329 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.365034669 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.333071613 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.431807227 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.353897319 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.327512437 seconds)
  done (took 13.42629446 seconds)
done (took 15.039219679 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.763186546 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.764482853 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.698585738 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.761929945 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.694341664 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.760684751 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.743171592 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.698194788 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.729283805 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.698689848 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.729873124 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.697572704 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.684784921 seconds)
  done (took 24.041072588 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.902435725 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.906470179 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.744909988 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.904224215 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.72002778 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.910697439 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.837391332 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.823557742 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.824349544 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.689406064 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.687224162 seconds)
  done (took 21.568159383 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.917636932 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.91323024 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.746882671 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.914827582 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.720689691 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.909059598 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.840819953 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.829668169 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.823692467 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.688575349 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.686350188 seconds)
  done (took 21.60845982 seconds)
done (took 68.831909722 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.681710221 seconds)
  done (took 3.299267671 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.704544212 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.84246808 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.687876561 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.687266966 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.682970587 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.683852967 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.686104747 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.683009606 seconds)
  done (took 15.277566169 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.679397452 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.682053735 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.680646697 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.680999983 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.680342 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.683162132 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.683042372 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.681812592 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.682136147 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.678933746 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.679593512 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.679615283 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.682974681 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.68257207 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.682580751 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.680394899 seconds)
  done (took 28.518860092 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.683300702 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.679980772 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.679550943 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.681674861 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.680386398 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.681985766 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.68072098 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.680377367 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.680673645 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.680972897 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.681446544 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.680712996 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.681156103 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.681377404 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.680849294 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.681544259 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.681431983 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.680349826 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.684479711 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.681473436 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.681900852 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.680513936 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.68246895 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.682605324 seconds)
  done (took 41.974118469 seconds)
done (took 90.686270402 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.364608404 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.108458907 seconds)
  done (took 8.094235362 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.684519951 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.683217018 seconds)
  done (took 5.021973193 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.682896335 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.684906675 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.684853197 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.682088337 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.684122694 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.684765814 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.684300145 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.684317207 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.684195686 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.684217005 seconds)
  done (took 18.461946872 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.685753651 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.684636085 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.682359829 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.685033695 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.685282813 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.682746719 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.684864033 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.684188296 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.685230209 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.682859816 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.685127152 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.681767299 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.685298849 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.683060623 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.684099559 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.684248114 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.683978673 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.682977262 seconds)
  done (took 31.934620141 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.6859264 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.687284181 seconds)
  done (took 4.994803235 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.68242978 seconds)
    (2/7) benchmarking "second"...
    done (took 1.683369016 seconds)
    (3/7) benchmarking "month"...
    done (took 1.683589232 seconds)
    (4/7) benchmarking "year"...
    done (took 1.683887241 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.682563928 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.683837313 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.684326529 seconds)
  done (took 13.4062425 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.687372413 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.842952847 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.912627155 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.367823504 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.686167014 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.689891074 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.613551553 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.688982988 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.692179512 seconds)
  done (took 18.803666388 seconds)
done (took 102.336521634 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.501571308 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.681705707 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.076581609 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.727677852 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.697865753 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.979585852 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.690754535 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.908418108 seconds)
done (took 41.884424128 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.777832467 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.163030556 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.166283333 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.659341806 seconds)
  done (took 11.611468297 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.679263573 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.200140403 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.716019853 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.271843529 seconds)
  done (took 19.501590771 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.048759809 seconds)
    (2/2) benchmarking "read"...
    done (took 2.03413662 seconds)
  done (took 5.711185636 seconds)
done (took 45.225373864 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.688205954 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.687744132 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.68894535 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.685067088 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.684733665 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.68506937 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.68799392 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.685029153 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.684748914 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.689124332 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.688537015 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.688303198 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.68803817 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.688117368 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.685223182 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.686366814 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.689676131 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.685416662 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.686057672 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.686836621 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.689966356 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.688976425 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.686461524 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.686995978 seconds)
  done (took 42.115792257 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.690910126 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.686810328 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.689990784 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.688460894 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.687294264 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.688977252 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.689043571 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.686276416 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.690792141 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.690407454 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.686403973 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.686953205 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.689781702 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.68661216 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.689382366 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.686795596 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.690871001 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.686859292 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.690238679 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.688141993 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.689376439 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.686698212 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.688615773 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.690528995 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.689090277 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.689077818 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.689761322 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.689826245 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.691306383 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.688359809 seconds)
  done (took 52.290346842 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.694734248 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.697689722 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.690551169 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.690301759 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.690767364 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.690133589 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.69215419 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.690539022 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.691392289 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.690868732 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.691011291 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.691986418 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.692581253 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.690521314 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.688518765 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.690842518 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.691773621 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.691573078 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.691595213 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.692144148 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.690543428 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.692330931 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.692475674 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.691676096 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.69006014 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.691677811 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.690996351 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.692136355 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.692857441 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.691742129 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.691501987 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.692400946 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.691155124 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.691234133 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.692191618 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.69296604 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.695605543 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.698898738 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.69346226 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.692658676 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.692299982 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.693367009 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.693273993 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.6929591 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.691633525 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.695142501 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.692316929 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.69364241 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.692721139 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.694419945 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.692775447 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.691518165 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.693368559 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.692406846 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.693941213 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.693723055 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.694387897 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.693248483 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.694587862 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.694951918 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.694421212 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.693681948 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.693690511 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.694571365 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.693649049 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.694302006 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.693687097 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.694901114 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.69390783 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.693904563 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.693907293 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.694313736 seconds)
  done (took 123.505353166 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.694377638 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.691495966 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.691457111 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.691744629 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.693046515 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.695488372 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.691400123 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.694683439 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.6929084 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.695107059 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.695276573 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.692096865 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.692364791 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.694313621 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.695456001 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.692783385 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.6958635 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.692106036 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.696582954 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.695267198 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.694126923 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.691978902 seconds)
  done (took 38.89056102 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.694781648 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.69642602 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.693231188 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.695957231 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.693408056 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.697346341 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.69511712 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.696818372 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.696539009 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.694311002 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.694275431 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.695513919 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.69293755 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.69359881 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.693109299 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.69326091 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.696509456 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.692544299 seconds)
  done (took 32.136849866 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.693650651 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.692859106 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.696542834 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.694510942 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.694034148 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.697000099 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.694003036 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.695992795 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.696657389 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.694058789 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.696350844 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.69642877 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.696212181 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.69523596 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.695382322 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.694844247 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.698195142 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.694905818 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.697215011 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.69480695 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.695057066 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.69749932 seconds)
  done (took 38.935136326 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.697244413 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.697893485 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.694311218 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.693702684 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.693934522 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.698370153 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.698858589 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.695301864 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.697163222 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.698323656 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.695687093 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.696924437 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.695272763 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.697269861 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.69568156 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.696812944 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.697901381 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.695533369 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.697727235 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.694927543 seconds)
  done (took 35.562841824 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.699248363 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.699876396 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.699403096 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.700470266 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.700036116 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.699625402 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.701686816 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.699810073 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.701153622 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.700642728 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.701701123 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.699351265 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.701087123 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.699801869 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.701655322 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.701693419 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.700485639 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.700316238 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.699908052 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.701433191 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.699585637 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.699830292 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.700383516 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.700958775 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.70020679 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.699155273 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.700421127 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.70147058 seconds)
  done (took 49.246666674 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.699287787 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.700571729 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.697536544 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.698424436 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.697205341 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.696676905 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.697504873 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.6975879 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.699684629 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.698938555 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.69893778 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.700981023 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.701068739 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.700803817 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.700382115 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.69989917 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.700694871 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.697741202 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.697866677 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.699009886 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.701015785 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.701747844 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.701748555 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.698524805 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.699036314 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.701059885 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.69918826 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.699669169 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.700177628 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.699720328 seconds)
  done (took 52.619824005 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.720634116 seconds)
    (2/2) benchmarking "in"...
    done (took 1.720603005 seconds)
  done (took 5.079008111 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.698617812 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.702668525 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.69995853 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.700313384 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.699757039 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.702971574 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.703132379 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.699477771 seconds)
  done (took 15.244806667 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.7028522 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.702473256 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.703429776 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.701748067 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.703791282 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.703267896 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.709177016 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.703013926 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.706130958 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.704473358 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.708236912 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.710878817 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.707991642 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.703791001 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.704033602 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.70604204 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.703417304 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.703610267 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.703703251 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.702071285 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.70506522 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.705629328 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.706011825 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.700558243 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.705621858 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.715870533 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.710221235 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.703862437 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.703856516 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.708297789 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.704888522 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.701784508 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.703860882 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.703929544 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.704469269 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.703477866 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.712838849 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.705898679 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.711446239 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.704611316 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.704165949 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.702292867 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.707493806 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.708567651 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.707693863 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.706084849 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.70526956 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.701853768 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.705842313 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.707298128 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.709341317 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.703491408 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.701100291 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.710151119 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.707204153 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.711527544 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.705924294 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.708689854 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.713234389 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.715207185 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.719736352 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.711455302 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.707447923 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.705846763 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.714304142 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.726572779 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.714323282 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.702277178 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.702805352 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.706291923 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.713666577 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.72004723 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.714770341 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.707576315 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.706793059 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.704709338 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.707087609 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.706755105 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.714353914 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.708908494 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.7072899 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.707383875 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.715789787 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.726257328 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.705288253 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.706671404 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.708226606 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.706475265 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.7065669 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.717821866 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.707572564 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.707870625 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.7067299 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.707858408 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.711079745 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.707719872 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.7061233 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.708122223 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.704126494 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.706768694 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.708162498 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.710109479 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.716066685 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.708244399 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.708398582 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.716122948 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.708299979 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.708308416 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.718474309 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.706920084 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.709443827 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.70908109 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.715539639 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.705115345 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.710796485 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.716564402 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.707887046 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.710338072 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.708429649 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.707821376 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.718295563 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.73227881 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.708613249 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.709076855 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.712621858 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.717539558 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.708700303 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.712292226 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.70993369 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.705152403 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.704425779 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.711902081 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.708545308 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.709893649 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.710056127 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.71136072 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.706796678 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.70948427 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.709666537 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.710388986 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.712626874 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.71132595 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.712363469 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.712938779 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.712585122 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.712546355 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.719504644 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.71102507 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.710779173 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.71194339 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.707217332 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.710140075 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.712316381 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.711669324 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.713250979 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.710765565 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.71002014 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.710163374 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.710539234 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.71042819 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.711719409 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.71153151 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.715436375 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.711845922 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.716652538 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.710773675 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.707350862 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.711433173 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.711778804 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.713049038 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.710170611 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.710052728 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.714577546 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.719247684 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.711797721 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.712261758 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.715036056 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.712061776 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.712252901 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.711438137 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.71429051 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.719202914 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.713389376 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.718496447 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.711563507 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.711905146 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.712725685 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.71222763 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.711546378 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.710890066 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.716060056 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.717990284 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.727670965 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.720313194 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.714489688 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.715777848 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.712581423 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.715449305 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.717881252 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.712662954 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.712382347 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.713211453 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.712519016 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.711797928 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.715651532 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.712431562 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.71288891 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.711810424 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.712887294 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.712889123 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.712252951 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.713951769 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.715040325 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.709792627 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.713847992 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.713520071 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.713269404 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.711134722 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.71076841 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.713718495 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.713529431 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.709613817 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.726143793 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.711411436 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.715283579 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.714028613 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.71439154 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.712315239 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.711864404 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.71614109 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.714532035 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.722674932 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.714533683 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.717001758 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.721535323 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.715664319 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.714274552 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.716307507 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.714529103 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.712069834 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.716065291 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.720838859 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.713395581 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.714360567 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.714108524 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.715838693 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.714348759 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.723014857 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.711720811 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.714382489 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.716287264 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.718699012 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.71300204 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.715953348 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.717158685 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.715964775 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.717975421 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.716889791 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.715158131 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.717014131 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.716853871 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.717277334 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.717008347 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.718258318 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.722176982 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.721299796 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.717459977 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.721110777 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.717655951 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.71885947 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.716543191 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.716575261 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.715611285 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.731222749 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.723215332 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.724487601 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.719682748 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.716181653 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.722117873 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.717603368 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.719969332 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.717641276 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.717762041 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.71768532 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.717142827 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.714166176 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.717444663 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.717283567 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.717726042 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.718094381 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.72087674 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.717240753 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.716949297 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.718064855 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.71706942 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.717511355 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.717795924 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.717203917 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.721548629 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.719961385 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.718080186 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.71831478 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.725134722 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.718635672 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.720341303 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.718252237 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.718843481 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.71710408 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.719393906 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.718888504 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.720660693 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.725531163 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.721852435 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.72698637 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.719033373 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.728167001 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.719363869 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.721780386 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.724257504 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.715918938 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.716953909 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.719921408 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.719362036 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.727315516 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.718771767 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.720198248 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.723192654 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.718605643 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.719901296 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.719514332 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.720025915 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.719846248 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.720602193 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.728946926 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.71985442 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.72267641 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.720981923 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.716127517 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.719290963 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.720027725 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.719423914 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.727583705 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.720679917 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.722268415 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.721796748 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.722968853 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.720212046 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.72099121 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.720663189 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.716511082 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.719451083 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.728141775 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.722338592 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.723725416 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.719687921 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.732146977 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.720154546 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.730267967 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.720325048 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.72131265 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.722335809 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.721190062 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.724832247 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.721224112 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.722748039 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.721575168 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.721468408 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.724895506 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.721126767 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.724758827 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.721892239 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.721723124 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.722365779 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.729953382 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.74212871 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.722042927 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.724049579 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.717338509 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.721566277 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.725456641 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.721791632 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.722384827 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.723917473 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.732041009 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.727521169 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.722749762 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.721201562 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.72536354 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.722770527 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.722155033 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.721845446 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.722195346 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.722701012 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.726111555 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.723705131 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.728780176 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.72245231 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.723583712 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.724161361 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.72417959 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.733784989 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.72390273 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.723329817 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.723882832 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.722887322 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.724048043 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.725351131 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.724686656 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.726815999 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.723300492 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.724690056 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.729845189 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.729280781 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.726430841 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.725188264 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.724363205 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.725533497 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.725482278 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.725118811 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.7234876 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.724009649 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.725817561 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.724003249 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.727630305 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.724751381 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.722650373 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.725509458 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.724622058 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.727297063 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.731156584 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.724647485 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.722620864 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.722841224 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.725549339 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.723575534 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.725646956 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.734921592 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.726898222 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.732632457 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.731998448 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.728783248 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.725600796 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.727188579 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.733375143 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.723200332 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.726356696 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.725561816 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.728609074 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.726739111 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.729525701 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.726680651 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.734190764 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.726039733 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.726267747 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.733902746 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.727617198 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.727853369 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.727265102 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.730775712 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.726993059 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.723908092 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.725822062 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.725379906 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.734056196 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.73009415 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.727866696 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.729129262 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.726101357 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.728069756 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.730862407 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.72676679 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.727843717 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.724150181 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.726811867 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.727062452 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.726307484 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.724906694 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.729192307 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.727986346 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.729640357 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.73433594 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.723908333 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.728038716 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.728310172 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.729056957 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.726952664 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.728461338 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.724079256 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.724713202 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.728457212 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.728261999 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.729691328 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.729773506 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.728209527 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.729133324 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.727210486 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.728822489 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.72978143 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.736755507 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.734406696 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.72477262 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.727051745 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.730841453 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.73048344 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.728843824 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.728167019 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.729597382 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.731603401 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.728313019 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.729063544 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.72706704 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.730702881 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.744706999 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.727819071 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.729975617 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.730072176 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.734559191 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.72938277 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.726187529 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.730212633 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.73179201 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.732716038 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.7368531 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.729899062 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.735837905 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.730960487 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.73199471 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.732369437 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.732605906 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.737964185 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.734294764 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.729893862 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.730399862 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.735256455 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.747486585 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.729874082 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.739416874 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.757410355 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.73077238 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.73174674 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.731313719 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.729779868 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.729402556 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.733096622 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.731361428 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.730690665 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.729709348 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.730896974 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.732096942 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.736156466 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.732112681 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.730647967 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.729771052 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.731664464 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.734751162 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.726792328 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.731328568 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.730081161 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.731728634 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.731355676 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.73130566 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.731848581 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.745953916 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.742653943 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.729932714 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.731829067 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.72967605 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.735492956 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.734463014 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.741736899 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.737334537 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.732599847 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.733523279 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.734250189 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.732215017 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.729913291 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.733479861 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.732126552 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.732526265 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.729585513 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.746351527 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.739863258 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.737767641 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.733695287 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.73382169 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.732454641 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.735483259 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.733377998 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.733488002 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.736638758 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.733058939 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.737904546 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.73302108 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.732519388 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.734436059 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.739921186 seconds)
  done (took 1026.634330669 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.729220925 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.730896886 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.731206738 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.730078831 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.729149732 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.730751029 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.731053438 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.729887205 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.729360549 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.729812926 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.730657868 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.730693369 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.73117392 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.731981412 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.730703677 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.729713116 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.731726755 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.729718143 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.730333083 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.731565482 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.731244699 seconds)
  done (took 38.009906707 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.733058455 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.731887952 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.730699086 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.734172749 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.731441936 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.733937677 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.731903755 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.734123132 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.733681697 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.731123621 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.734233935 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.735442122 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.73056056 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.732391692 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.731641121 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.735525424 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.733797677 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.73264155 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.735312494 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.733014529 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.735054608 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.732263977 seconds)
  done (took 39.797216565 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.735204516 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.734983066 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.734647935 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.732979133 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.735376165 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.732713719 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.73647766 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.734654455 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.735658335 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.737805551 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.736284177 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.736675967 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.742150454 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.74004907 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.739798669 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.735711574 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.879471261 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.735456174 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.737350956 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.736340581 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.733533405 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.741678212 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.732824112 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.735085759 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.737265229 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.737628242 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.736323736 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.736833055 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.736660582 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.737783355 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.740408908 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.736814041 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.736407751 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.738933045 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.736218633 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.737781818 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.740463342 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.73818198 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.734501966 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.73638316 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.74720647 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.755538216 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.738478379 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.745726482 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.737265866 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.73691333 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.74076773 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.744881148 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.734686717 seconds)
  done (took 86.964509168 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.738007584 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.737965512 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.735421231 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.739134882 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.739037191 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.737636155 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.737206578 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.737718994 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.736037508 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.736663217 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.738114679 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.735765321 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.735300474 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.738886392 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.738619906 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.735421542 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.73440988 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.735309887 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.734646953 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.734739312 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.736613239 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.738544531 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.738733269 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.736682829 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.740062198 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.736771509 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.735684914 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.738987272 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.736108788 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.735662413 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.738608304 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.737746067 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.738446468 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.737492072 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.73608902 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.738873093 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.739374822 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.737576659 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.73993359 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.736413718 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.737961734 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.739256061 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.73915683 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.739069405 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.737198941 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.736205111 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.737374972 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.736988404 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.737273879 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.739545828 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.738888931 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.737024321 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.739470409 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.736425935 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.738928683 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.740011143 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.737561697 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.737367473 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.739774379 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.7385445 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.738145535 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.741375673 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.739009711 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.739669547 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.740051503 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.738997184 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.737546955 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.741224189 seconds)
  done (took 119.844960537 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.742945818 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.741503315 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.741991252 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.741291804 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.742338257 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.741220918 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.74171381 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.7414699 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.743373859 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.74270615 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.74184213 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.74104628 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.741499331 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.741914164 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.742264256 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.742052155 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.742324479 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.74267028 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.741602438 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.742206955 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.742886232 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.742065509 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.74297427 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.743478344 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.742729769 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.744098922 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.742386631 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.742580372 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.742187165 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.741688139 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.743381534 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.743956463 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.742692705 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.743743623 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.744311472 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.743063865 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.74392433 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.743346846 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.742266677 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.742966152 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.744562294 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.742910424 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.744189516 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.744373453 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.744087265 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.744394411 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.743422985 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.744718067 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.741548648 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.743944336 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.74399905 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.744654912 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.744305868 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.744285357 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.744672553 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.744366535 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.74431246 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.744227154 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.744257619 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.745181312 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.744528005 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.746160965 seconds)
  done (took 109.753066649 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.743290825 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.743628754 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.741596227 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.740631115 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.744700636 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.742177661 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.743505285 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.74449575 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.743507455 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.745092422 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.744581566 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.74199778 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.741431035 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.746104575 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.742175534 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.742484912 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.743481756 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.742915953 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.744336159 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.74121731 seconds)
  done (took 36.543186574 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.744009549 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.746254851 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.742517153 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.742895611 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.744760279 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.742128156 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.744295038 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.745399191 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.743446019 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.744495875 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.747057535 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.747347516 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.744625104 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.743929265 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.74583726 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.743493271 seconds)
  done (took 29.592948212 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.742724683 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.7461868 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.747273671 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.747586659 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.74257355 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.74353141 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.747386946 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.744242962 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.743613339 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.747153115 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.746740183 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.748187302 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.74632861 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.747873062 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.745111433 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.746666341 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.745379427 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.744277301 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.746013539 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.748726222 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.746788497 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.744201205 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.746567083 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.747405773 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.744427949 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.745730916 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.74558561 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.745435357 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.744742554 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.748831811 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.747235514 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.744797323 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.745045334 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.747012621 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.749288275 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.745350914 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.748726811 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.747584195 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.748157078 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.747836232 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.749500186 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.745534333 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.749090822 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.747829755 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.74570162 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.747841323 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.744920017 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.746369407 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.74577304 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.745911201 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.748350619 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.750162069 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.747627025 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.749246918 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.748690252 seconds)
  done (took 97.743362089 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.750385591 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.748746909 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.745042128 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.747802325 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.750007614 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.74776659 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.75012408 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.746978471 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.747248949 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.748810701 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.747989471 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.750296811 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.748479501 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.74976912 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.749199161 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.749909699 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.745292045 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.745967304 seconds)
  done (took 33.15393878 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.747122732 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.747179504 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.752541674 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.748331683 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.747015458 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.750019158 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.747356874 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.749339304 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.750293708 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.747514779 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.748506546 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.751289284 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.749299362 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.75007373 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.748319 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.747694971 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.751292308 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.751801592 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.747940589 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.748291837 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.75145237 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.751627478 seconds)
  done (took 40.169102094 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.750182745 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.751422832 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.768120248 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.793000681 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.779355429 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.751828583 seconds)
  done (took 12.279628656 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749813806 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751100747 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.748120149 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.752943791 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.752252883 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.749415747 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749839395 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749351542 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751457686 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750370891 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.749148513 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.752153552 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751923035 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.749923834 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751178799 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.751732743 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.749317333 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750090579 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.749715733 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.750792606 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.750556268 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.752323635 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.748841913 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749239361 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.75053975 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.751135401 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751737055 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.750776245 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.749303214 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.753748605 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.752365055 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.750971649 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.752180015 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.750167109 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.754024045 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.753687167 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749271835 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.753316774 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.753147792 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.750277243 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.751484023 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.754824172 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.753288128 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750719712 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.755276293 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.752378612 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.75040892 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.750444866 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.749551932 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.753120657 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.75446728 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.751142198 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.753699069 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.753188063 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.753531108 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.7550997 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.751484758 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.750925728 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.754977888 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.752304369 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.75145619 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.753762342 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.752918247 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.751827092 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.75387442 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.751234441 seconds)
  done (took 117.296045695 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.752229957 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.752568565 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751409302 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.753947167 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.753386402 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.752215538 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.753024978 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.753101257 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.753638027 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.752378297 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.756224244 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.754493333 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.752930882 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.753542172 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.753297044 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.753588087 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.752219317 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.75515345 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.752935164 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.756793159 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.754650352 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.753617576 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751547047 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.752642662 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.753029894 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.756373473 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.753135856 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.753375051 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.754191299 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.753168325 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.752890395 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.751944752 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.753150219 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.752337841 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.754755522 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.755151672 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.752507803 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.75494948 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.755295 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.757052386 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.754358775 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.757130449 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.753379266 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.754379454 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.754226998 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.754857678 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.753889937 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.755081092 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.753737601 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.754828656 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.755259633 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.75499442 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.7547272 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.754573451 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.756028577 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.75450421 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.755854644 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.755052116 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.753979065 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.759028404 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.756618128 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.756190726 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.759715936 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.755812593 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.754372689 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.754927624 seconds)
  done (took 117.474170388 seconds)
done (took 2392.506235786 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.808268093 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.796264039 seconds)
  done (took 15.296085837 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.923573817 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.872334876 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.757823171 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.762871832 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.757129902 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.780463272 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.762029735 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.75483063 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.756335176 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.756841551 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.757695604 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.946044453 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.760485053 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.758519443 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.759341041 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.853268302 seconds)
  done (took 50.413123344 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.761058343 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.761518151 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.78395112 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.763252266 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.760761153 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.788549921 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.804662576 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.763349947 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.87259783 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.779143646 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.01467081 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.761521777 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.761525157 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.933121512 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.782965881 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.791238457 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.945134249 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.014675938 seconds)
  done (took 34.539098758 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.039572609 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.767289157 seconds)
  done (took 10.502171782 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.789230862 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.769304158 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.78626929 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.761924094 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.756760562 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.783207262 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.762768754 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.824060563 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.793477502 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.772671614 seconds)
  done (took 69.495026326 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.765327685 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.761731409 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.760516374 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.760619925 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.753755746 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.756730894 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.761527094 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.759146222 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.026927696 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.836321822 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.783933229 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.767253767 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.761841797 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.765392156 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.760016163 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.783943746 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.899536701 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.759432428 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.760849889 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.766719799 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.763443274 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.845265448 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.79130473 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.761483507 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.838874552 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.065118051 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.767577985 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.768642511 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.870112638 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.760980436 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.762698811 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.764659463 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.763789637 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.29016648 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.18670861 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.77223428 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.770478474 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.770367678 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.761243262 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.880697062 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.763615356 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.768096777 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.757345627 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.144684525 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.884694462 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.837037147 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.573967505 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.765954612 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.76516174 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.810387652 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.764800505 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.765548809 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.777301172 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.404570972 seconds)
  done (took 131.188545878 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.808046477 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.244838466 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.912664024 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.778136427 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.173493958 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.115701006 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.758107007 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.931643813 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.772884019 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.133223673 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.047833307 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.000691754 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.757760206 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.759469146 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.759745369 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.758695724 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.973331429 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.952400811 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.758472423 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.761445817 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.79492818 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.167991695 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.947370093 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.915630871 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.783383981 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.10939723 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.94635103 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.999892332 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.760234085 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.758956957 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.950842234 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.766116746 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.758686587 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.758123093 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.987605102 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.98720996 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.976821779 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.75939775 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.788627671 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.761491152 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.781243899 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.104758306 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.988276831 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.957046583 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.075330514 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.108656947 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.760320495 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.759094149 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.760596315 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.951837129 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.993428682 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.157354337 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.950154837 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.760804984 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.099932973 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.76129161 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.792310447 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.135645189 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.053423328 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.99438269 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.780894588 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.759966626 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.759421532 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.202511975 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.762517916 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.993213922 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.006583604 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.76076008 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.993970471 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.994594085 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.052780903 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.120965613 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.791674 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.761705543 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.847519865 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.170056294 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.952137687 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.135196083 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.791791218 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.760472703 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.979224003 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.765175515 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.036179588 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.202274897 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.147014438 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.800684804 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.786275952 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.761021391 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.13509431 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.132456474 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.034786421 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.085744755 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.990400657 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.803775593 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.762018274 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.762692688 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.77140138 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.958631332 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.761980042 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.122596244 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.132439586 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.541380997 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.794161658 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.20591468 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.961407689 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.763308309 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.763440343 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.764870129 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.968996042 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.823632247 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.786340798 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.762343815 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.134439073 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.715758987 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.897178506 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.507420883 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.954237053 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.763407661 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.154472771 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.7630203 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.1380075 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.765561421 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.200348485 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.252941031 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.808530031 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.974911665 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.090961471 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.76324981 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.185095442 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.198737809 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.948801579 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.134716357 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.5990862 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.766180324 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.180526293 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.790065351 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.781120782 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.932720435 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.786908319 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.991017086 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.771049187 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.198475469 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.788200043 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.999422176 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.920190046 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.165972586 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.807180596 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.960209995 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.797446827 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.89212909 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.785054885 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.758790615 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.94810755 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.276438628 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.764911147 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.321190551 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.766068528 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.913485662 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.205827243 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.78722044 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.96112373 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.765248328 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.766085747 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.985711109 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.79182724 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.428644945 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.768241182 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.054834944 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.75146796 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.218866514 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.766299713 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.201082721 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.978334872 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.786811988 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.766493063 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.571776635 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.765271727 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.833960914 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.926095052 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.544604707 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.765442348 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.11219424 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.770796003 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.963040813 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.769202608 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.768393583 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.116229006 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.811202706 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.770981198 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.787627977 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.765566959 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.770857309 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.121982591 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.793084735 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.488341793 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.904672484 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.161313761 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.077339557 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.155305959 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.813969843 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.792148295 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.199223415 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.796697875 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.961631826 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.768132641 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.793071646 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.137399612 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.768558111 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.163916352 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.179287039 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.854615347 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.943755292 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.76813428 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.119466756 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.769199391 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.973168822 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.986586789 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.769268056 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.772660485 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.950023014 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.956173606 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.960646441 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.788742892 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.776228794 seconds)
  done (took 941.233931865 seconds)
done (took 1254.358414895 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.769824502 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.771412322 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.756202312 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.772702832 seconds)
  done (took 28.780125835 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.78230223 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.779886412 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.781638012 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.778855886 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.7807019 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.780087618 seconds)
  done (took 12.394731542 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.810773768 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.773768924 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.773241581 seconds)
  done (took 21.070092408 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.929980517 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.692591064 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.027954973 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.213083423 seconds)
  done (took 11.578958076 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.780860924 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.781144028 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.780957649 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.783362689 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.784614709 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.783722002 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.783581373 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.78326474 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.785302418 seconds)
  done (took 17.761247335 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.595161926 seconds)
done (took 97.888123774 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.792816871 seconds)
    (2/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.400311772 seconds)
    (3/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.012388125 seconds)
    (4/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.176973515 seconds)
    (5/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.682258236 seconds)
    (6/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.787475593 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.871060243 seconds)
    (8/309) benchmarking ("sort", Float64, false)...
    done (took 5.837610786 seconds)
    (9/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.798349182 seconds)
    (10/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.678473045 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.998028537 seconds)
    (12/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.759796191 seconds)
    (13/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.43945944 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.900656257 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.815399568 seconds)
    (16/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.164725545 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.801605739 seconds)
    (18/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.885661074 seconds)
    (19/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.277822224 seconds)
    (20/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.472164196 seconds)
    (21/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.317680285 seconds)
    (22/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.775298999 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.106113942 seconds)
    (24/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.132222739 seconds)
    (25/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.7615029 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.135524179 seconds)
    (27/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.232836538 seconds)
    (28/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.448023715 seconds)
    (29/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.788382852 seconds)
    (30/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.783392945 seconds)
    (31/309) benchmarking ("sort", Int8, false)...
    done (took 4.834838143 seconds)
    (32/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.17969118 seconds)
    (33/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.762952849 seconds)
    (34/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.828591397 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.474643417 seconds)
    (36/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.972892526 seconds)
    (37/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.858699646 seconds)
    (38/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.801255019 seconds)
    (39/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.89882934 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.878334645 seconds)
    (41/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.775649395 seconds)
    (42/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.77919553 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.518102495 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.826137601 seconds)
    (45/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.778261655 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.97440535 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.883245477 seconds)
    (48/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.860689424 seconds)
    (49/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.779432037 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.447757946 seconds)
    (51/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.037475881 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.382638002 seconds)
    (53/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.459041158 seconds)
    (54/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.218137097 seconds)
    (55/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.133239821 seconds)
    (56/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.778351776 seconds)
    (57/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.913123699 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.967620783 seconds)
    (59/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.803624561 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.888503298 seconds)
    (61/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.803923711 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.056572381 seconds)
    (63/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.044851854 seconds)
    (64/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.612899776 seconds)
    (65/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.276284397 seconds)
    (66/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.788264616 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.834968866 seconds)
    (68/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.79441791 seconds)
    (69/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.401619727 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.778380147 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.587564852 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.787741775 seconds)
    (73/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.781491115 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.535166186 seconds)
    (75/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.145686703 seconds)
    (76/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.787769971 seconds)
    (77/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.897252675 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.139265289 seconds)
    (79/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.796689772 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.779171322 seconds)
    (81/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.904123358 seconds)
    (82/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.777911404 seconds)
    (83/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.1896422 seconds)
    (84/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.83856899 seconds)
    (85/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.864827502 seconds)
    (86/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.38542954 seconds)
    (87/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.806208489 seconds)
    (88/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.223599861 seconds)
    (89/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.828265155 seconds)
    (90/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.795601332 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.394744486 seconds)
    (92/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.780841282 seconds)
    (93/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.86111658 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 5.75913555 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.448731461 seconds)
    (96/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.684043052 seconds)
    (97/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.778053094 seconds)
    (98/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.369547287 seconds)
    (99/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.796580923 seconds)
    (100/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.587104369 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.935467866 seconds)
    (102/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.843680726 seconds)
    (103/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.068974163 seconds)
    (104/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.393823603 seconds)
    (105/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.806143592 seconds)
    (106/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.898281016 seconds)
    (107/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.09111124 seconds)
    (108/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.779680795 seconds)
    (109/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.807075452 seconds)
    (110/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.939117191 seconds)
    (111/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.711270034 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.801359697 seconds)
    (113/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.284238253 seconds)
    (114/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.982873007 seconds)
    (115/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.181435856 seconds)
    (116/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.637539754 seconds)
    (117/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.901337665 seconds)
    (118/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.905807249 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.831831271 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.804633337 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.992886856 seconds)
    (122/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.780402567 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 4.930379822 seconds)
    (124/309) benchmarking ("sort", Float32, false)...
    done (took 5.662813339 seconds)
    (125/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.595216538 seconds)
    (126/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.866268439 seconds)
    (127/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.678838774 seconds)
    (128/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.780955953 seconds)
    (129/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.759199078 seconds)
    (130/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.932044926 seconds)
    (131/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.686214726 seconds)
    (132/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.059706268 seconds)
    (133/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.133203406 seconds)
    (134/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.691375511 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.1388002 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.279510437 seconds)
    (137/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.026162848 seconds)
    (138/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.379538046 seconds)
    (139/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.078183331 seconds)
    (140/309) benchmarking ("sort", BigInt, false)...
    done (took 6.783432916 seconds)
    (141/309) benchmarking ("sort", Bool, false)...
    done (took 2.263349619 seconds)
    (142/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.804282743 seconds)
    (143/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.068878203 seconds)
    (144/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.862809447 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.539037103 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.060926052 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.886593309 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.286292852 seconds)
    (149/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.8111465 seconds)
    (150/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.849743034 seconds)
    (151/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.039508955 seconds)
    (152/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.766990401 seconds)
    (153/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.068092268 seconds)
    (154/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.504783112 seconds)
    (155/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.05229253 seconds)
    (156/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.816303283 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.809847804 seconds)
    (158/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.386848309 seconds)
    (159/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.917169762 seconds)
    (160/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.884148047 seconds)
    (161/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.288584532 seconds)
    (162/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.601060162 seconds)
    (163/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.782273606 seconds)
    (164/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.786887187 seconds)
    (165/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.940170178 seconds)
    (166/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.287263065 seconds)
    (167/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.809783966 seconds)
    (168/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.850007678 seconds)
    (169/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.307321683 seconds)
    (170/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.042671019 seconds)
    (171/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.78636689 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.702170249 seconds)
    (173/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.785009061 seconds)
    (174/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.806618115 seconds)
    (175/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.278190527 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.145711111 seconds)
    (177/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.390688617 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 3.014908932 seconds)
    (179/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.973222737 seconds)
    (180/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.57931586 seconds)
    (181/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.584630614 seconds)
    (182/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.258654751 seconds)
    (183/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.856810554 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.445579136 seconds)
    (185/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.23194639 seconds)
    (186/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.810863901 seconds)
    (187/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.86771477 seconds)
    (188/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.772254244 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.467482803 seconds)
    (190/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.984874577 seconds)
    (191/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.916020831 seconds)
    (192/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.136878592 seconds)
    (193/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.782927646 seconds)
    (194/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.744791196 seconds)
    (195/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.991157474 seconds)
    (196/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.30828713 seconds)
    (197/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.215875363 seconds)
    (198/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.949516135 seconds)
    (199/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.919034403 seconds)
    (200/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.810924125 seconds)
    (201/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.79569766 seconds)
    (202/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.793272114 seconds)
    (203/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.8284056 seconds)
    (204/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.625901793 seconds)
    (205/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.790197848 seconds)
    (206/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.790129813 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.787929462 seconds)
    (208/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.896506315 seconds)
    (209/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.789223628 seconds)
    (210/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.372782745 seconds)
    (211/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.81173513 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.850092242 seconds)
    (213/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.78765433 seconds)
    (214/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.806982019 seconds)
    (215/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.149564324 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.294144569 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.908974607 seconds)
    (218/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 4.056087317 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.955663253 seconds)
    (220/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.829387234 seconds)
    (221/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.853863396 seconds)
    (222/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.825741529 seconds)
    (223/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.30307275 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.009038776 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.520743927 seconds)
    (226/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.874367678 seconds)
    (227/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.814713209 seconds)
    (228/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.8742789 seconds)
    (229/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.928666973 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.549586251 seconds)
    (231/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.881922652 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.865379936 seconds)
    (233/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.080525799 seconds)
    (234/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.990171246 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.813655186 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.790738892 seconds)
    (237/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.792091693 seconds)
    (238/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.728319182 seconds)
    (239/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.832158814 seconds)
    (240/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.300064894 seconds)
    (241/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.061548159 seconds)
    (242/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.791157814 seconds)
    (243/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.368816754 seconds)
    (244/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.84620503 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.865052069 seconds)
    (246/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.894458485 seconds)
    (247/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.976321782 seconds)
    (248/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.391563186 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.793043546 seconds)
    (250/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.87736475 seconds)
    (251/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.298139201 seconds)
    (252/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.87775782 seconds)
    (253/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.931038606 seconds)
    (254/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.781872037 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.899092627 seconds)
    (256/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.818143899 seconds)
    (257/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.789639855 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.451180453 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.837957369 seconds)
    (260/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.791362041 seconds)
    (261/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.456755277 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.967284554 seconds)
    (263/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.508079152 seconds)
    (264/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.776783566 seconds)
    (265/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.311734506 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.818752903 seconds)
    (267/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.800550938 seconds)
    (268/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.792466668 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.248996406 seconds)
    (270/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.95835103 seconds)
    (271/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.781590939 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.22481446 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.866699458 seconds)
    (274/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.780195119 seconds)
    (275/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.89016148 seconds)
    (276/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.811798497 seconds)
    (277/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.833692905 seconds)
    (278/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.310193749 seconds)
    (279/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.779037658 seconds)
    (280/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.066298942 seconds)
    (281/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.941524025 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.792865016 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.924048738 seconds)
    (284/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.403345457 seconds)
    (285/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.610718499 seconds)
    (286/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.817316919 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.872566462 seconds)
    (288/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.634284348 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.873163394 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.092362104 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.901514635 seconds)
    (292/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.896048877 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.950485943 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.425898371 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 3.024352704 seconds)
    (296/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.987490636 seconds)
    (297/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.855736714 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.83341862 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.555562399 seconds)
    (300/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.816754548 seconds)
    (301/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.897692985 seconds)
    (302/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.792780117 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.464901383 seconds)
    (304/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.854648015 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.812569144 seconds)
    (306/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.791179069 seconds)
    (307/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.3933608 seconds)
    (308/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.148127963 seconds)
    (309/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.81922749 seconds)
  done (took 1021.971469253 seconds)
done (took 1023.686410603 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.824917773 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.816743715 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.802443785 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.822412716 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.914747242 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.837902078 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.811627887 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.804662258 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.850723369 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.850263043 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.801376821 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.836109727 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.803130792 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.803441204 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.802387303 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.816284754 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.506229283 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.804172536 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.821228248 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.814162831 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.820780104 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.802971203 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.852288665 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.836945085 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.807876569 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.805169234 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.808458825 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.823484715 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.917722584 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.808146346 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.806090498 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.816890637 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.50600327 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.80199991 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.797023133 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.822741364 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.815192933 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.812893924 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.808600409 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.836910003 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.766158842 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.805049899 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.806264259 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.805389229 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.80677684 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.80813141 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.80795283 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.810907411 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.822268075 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.818599843 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.757925272 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.820857897 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.808768527 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.805773534 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.817174976 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.805126774 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.807641993 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.821799901 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.826147081 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.821100382 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.510792239 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.810233534 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.8081907 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.823324686 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.814042402 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.797958874 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.803454973 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.812085759 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.772402097 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.811261915 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.801026068 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.816415567 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.809812058 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.821143524 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.839129621 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.525672854 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.803098957 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.807050137 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.813707815 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.806638675 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.818610037 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.820087401 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.813117202 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.809111563 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.820453276 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.840472003 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.814772959 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.808352203 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.816201314 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.826103589 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.8139338 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.818468434 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.811791609 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.802735847 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.817366255 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.811526309 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.811280362 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.8105025 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.813536305 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.816132393 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.771085644 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.823762969 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.803873967 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.807065672 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.808102751 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.821327629 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.773759235 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.810247644 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.831263808 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.85614978 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.810163763 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.518833877 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.814032377 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.824863818 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.816657518 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.813467832 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.804769383 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.518263718 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.77189828 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.825837551 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.81016952 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.808296741 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.827107374 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.811423941 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.804879109 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.529775166 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.811831944 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.825974435 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.930901269 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.821342477 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.840431837 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.807177587 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.814153806 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.838878287 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.826419315 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.842058117 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.813519637 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.826916027 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.826604561 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.80665363 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.822848478 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.819559494 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.812311922 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.814396576 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.804138284 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.850425485 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.823725316 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.822543501 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.830678401 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.931615839 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.808946199 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.521792895 seconds)
done (took 291.573828653 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.866587623 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.804678995 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.904363441 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.806814007 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.890832109 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.908686977 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.80329664 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.80304301 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.804771783 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.185751977 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.804829179 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.804474832 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.808329241 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.804968362 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.890642583 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.808201047 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.80473396 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.150235578 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.808530901 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.883018456 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.807359613 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.803942152 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.806842542 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.18643348 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.807223203 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.800507865 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.878261562 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.807621225 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.153828366 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.807032214 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.799975951 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.153690932 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.897526923 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.82479328 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.819338239 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.814618748 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.892425549 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.826583389 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.88797019 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.887824993 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.905480927 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.849520468 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.808458359 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.80737937 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.811804983 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.809851858 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.805640887 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.836843933 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.807103826 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.806108954 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.149728842 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.819207819 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.807218385 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.807439916 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.80685645 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.84053439 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.807311248 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.810441761 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.907755833 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.809714711 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.874084401 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.188997743 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.18883694 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.808675116 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.807377883 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.807512779 seconds)
  done (took 180.242498267 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.874948299 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.88776626 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.894923127 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.812408083 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.858409685 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.900624429 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.813830026 seconds)
  done (took 14.785399747 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.814803497 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.809449454 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.860404635 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.860631426 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.812301028 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.961794065 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.811156398 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.82172109 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.80743448 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.863944737 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.811748082 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.810369582 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.816714007 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.812164686 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.859359323 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.822402507 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.925402495 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.811611246 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.811208322 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.967076351 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.809795435 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.817849354 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.86559876 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.822663021 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.811129949 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.816002097 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.393668764 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.812319587 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.808108591 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.811783329 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.809176843 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.851757868 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.813135663 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.805539046 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.810577787 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.928570431 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.813744144 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.809189986 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.812279554 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.809278865 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.810788487 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.811401869 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.811658973 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.809457217 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.81227831 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.835965165 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.811724971 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.813567604 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.810771684 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.813445464 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.862889317 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.813005771 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.810155274 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.810778521 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.869493761 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.820001581 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.812595662 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.810025738 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.814200798 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.810344524 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.969982128 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.86102971 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.813420011 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.863053354 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.812096507 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.814051973 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.813321842 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.813427274 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.86888234 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.814545253 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.863709346 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.810530266 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.971984759 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.83857775 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.814086832 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.817445804 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.81917008 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.814313651 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.813581025 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.821621243 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.811617673 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.816292151 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.819923645 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.812915608 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.810999825 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.921294369 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.350212629 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.812210541 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.827875368 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.821798992 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.813478946 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.868330094 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.813846201 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.812861382 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.868245481 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.929330849 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.87234647 seconds)
  done (took 200.636555052 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.820056627 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.823895488 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.816344641 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.83116364 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.816733372 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.81529771 seconds)
  done (took 12.670487049 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.817625775 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.814541304 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.814326652 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.815189822 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.816403897 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.817625621 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.816397084 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.81716331 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.820341297 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.814320068 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.816241777 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.817912462 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.818315222 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.818132579 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.81809307 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.81558468 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.818519801 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.814544456 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.815332994 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.81643347 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.970868908 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.817364879 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.818686845 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.817761595 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.821368141 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.817154354 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.82455373 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.816229847 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.817339138 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.827083955 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.821572432 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.818939011 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.817994942 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.822821495 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.824075585 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.820717401 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.82128114 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.818244538 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.81637722 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.818718846 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.821018767 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.818112125 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.818677577 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.820687412 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.822550972 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.825364051 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.823701987 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.827937219 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.820316542 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.820898267 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.819777935 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.8187912 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.818447986 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.82018524 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.823849701 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.823728135 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.824226266 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.820284584 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.819088396 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.819408417 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.819499165 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.820814406 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.821788534 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.822297526 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.815907215 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.819728818 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.821337893 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.823361031 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.819992262 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.819925983 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.822422655 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.81725583 seconds)
  done (took 133.903929738 seconds)
done (took 543.975194039 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.840356778 seconds)
  done (took 8.593397982 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.020949445 seconds)
  done (took 8.774267641 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.284285866 seconds)
  done (took 17.037433417 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.857769244 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.869288774 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.822029287 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.818400308 seconds)
  done (took 29.119915297 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.251174184 seconds)
  done (took 9.003363849 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.813452264 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.818967787 seconds)
  done (took 15.384577234 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.30066233 seconds)
  done (took 9.052456273 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.433588831 seconds)
  done (took 9.186129238 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.829039798 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.842287029 seconds)
  done (took 15.429366305 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.79785163 seconds)
  done (took 8.550088827 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.646433109 seconds)
  done (took 13.401503891 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.81869559 seconds)
  done (took 8.570749001 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.821994215 seconds)
  done (took 8.573506946 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.110261973 seconds)
  done (took 10.86098556 seconds)
done (took 173.287236038 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.813968658 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.815849759 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.81499282 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.812822418 seconds)
  done (took 29.010157289 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.854932608 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.854520953 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.856175914 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.864920928 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.855772571 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.856562983 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.846682428 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.846009643 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.866492844 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.85780031 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.8582242 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.859541996 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.8722407 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.856387514 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.857706544 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.855471742 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.865918378 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.856168522 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.84819072 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.857463979 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.821588828 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.865026786 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.85786935 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.822199516 seconds)
  done (took 46.26809545 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.018879239 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.891861794 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.97464505 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.874779316 seconds)
  done (took 9.51413294 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.872727664 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.876744246 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.887099661 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.926304264 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.952795625 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.884605578 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.845441809 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.842971537 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.827881918 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.875953607 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.950632629 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.891297778 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.960717493 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.820877718 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.008634302 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.82195242 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.824006806 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.874256175 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.926635748 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.94201317 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.82321167 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.874082226 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.877763392 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.89148627 seconds)
  done (took 47.036031617 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.822791585 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.828830157 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.829342345 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.822286691 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.82208989 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.822539422 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.82762684 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.824077089 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.84320352 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.822067199 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.822046787 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.823856628 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.821815284 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.823043033 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.824469446 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.835346444 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.836107815 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.824240208 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.826223811 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.8297026 seconds)
  done (took 38.287598701 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.817040073 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.777867626 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.168860978 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.073589224 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.817889805 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.81711583 seconds)
  done (took 32.229761797 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.873056121 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.954632732 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.828129658 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.042485649 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.118951502 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.826626996 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.825087228 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.984746005 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.177516112 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.152666059 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.874837957 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.868408436 seconds)
  done (took 25.283147497 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.82866798 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.820228236 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.822734659 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.836217429 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.852421203 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.83212698 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.833377215 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.821034508 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.8566883 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.86149306 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.832901403 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.856723592 seconds)
  done (took 43.81431339 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907000223 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.864608875 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.30801041 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.538765048 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.19524672 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.032080406 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.550713504 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.213733807 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.824431939 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.094459331 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.3170302 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911711047 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.077278424 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.821378378 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.825427938 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.515366635 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.051279505 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.190663852 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.822692672 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.846594537 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84763451 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.837157385 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.997951813 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.838948355 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.032870637 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.954201095 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.082863046 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.820333342 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031019506 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.834269882 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831137176 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.822850838 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.096877788 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.325700147 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917464137 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8320109 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.522679685 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.533437676 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.812687464 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.927630511 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.105905259 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.824171298 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831771987 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.821613672 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.756417813 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.827948703 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222328704 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.826985779 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.534436588 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.824230119 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.832503045 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917314656 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.827037643 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.640532817 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824282992 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.822417678 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.820394221 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83003624 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.393182632 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.286210824 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.826175401 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.760675971 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.91514386 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.859186576 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.357090232 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.925806947 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.826486258 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.827399637 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.757086458 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.912511312 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.843412903 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.152638183 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.844791872 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.474727242 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414406002 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.334071054 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.758389645 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.256146001 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.824914536 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.761225989 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052726681 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.824705469 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.760092369 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.763522636 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.757206616 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.318377502 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83161489 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.884560301 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832393869 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.215956422 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.835339875 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84383341 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848698087 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.050151881 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.893373438 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.826405964 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.078903993 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.966995559 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848598121 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.217004056 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.759593263 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.830701134 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082041889 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.037527935 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.830446005 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.518158811 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.975820715 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.840799928 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.843509507 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.832928591 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.836308548 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.316772106 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.837722504 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.298570236 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843402175 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.825149773 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.353190946 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.833873072 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.927463662 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.342179993 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.008346237 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.373928514 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.8266604 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909792048 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.835496419 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.827635736 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.967378909 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.345871196 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.82630646 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.829209565 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.827014265 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.8413525 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.828162803 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.77518306 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.831253809 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.351034526 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.830381465 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.051758862 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.845565276 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.105010702 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.763273878 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.177171202 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.921788672 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.050602206 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.788320387 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.829718957 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.090558851 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829199103 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.830686484 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.84212923 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849507094 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927058982 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852399465 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.832880166 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.086487102 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.833033677 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.833219164 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.963945506 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.833230467 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829430846 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.834607705 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.666866637 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321748777 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.805856717 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.834000781 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.718351469 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.844638652 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894405709 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.836067801 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.839985132 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.094228625 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.622266297 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.832507573 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.836607543 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054847696 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.839909794 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.85941238 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.910548889 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.973532138 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.326917345 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.8440275 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.764997555 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.541384091 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.523601858 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.830983792 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.766060251 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.832760292 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84120193 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.844828314 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.046841553 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.323720953 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831508302 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.872070381 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.839915611 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.840745351 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.836988759 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.83067654 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.070849276 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.304732086 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.85045466 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.844327834 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977181613 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.845044299 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.765238795 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.835226492 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.835630911 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.831159753 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.833139969 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867069635 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.868162996 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245663746 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.091366257 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.524930385 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.84373708 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.030891391 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.851854984 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.835839959 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.113669795 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.838472709 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.848387065 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843432237 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.844030903 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.973446273 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.506934489 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.404340781 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444653686 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.272252886 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.529474598 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.834658441 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.834762621 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.233449856 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.766208289 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.392351209 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.957766684 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.235321992 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.776276681 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983031939 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.791706847 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.375358908 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.844716876 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.062451961 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.524830871 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.110224136 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.847553681 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.045210206 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870350542 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.834988324 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.765037516 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.138195652 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039383264 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.157494698 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.91653092 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231630183 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.118387527 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.840290333 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.835053671 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.847773863 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945477492 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.546580992 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.007583429 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.837722223 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.363826595 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245035192 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.842299009 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.061278778 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.368686012 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.83569476 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.986337547 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.770601665 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.846776251 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.846158261 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.836591715 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.565260439 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 5.370942235 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.090461942 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.845910012 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.770586295 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.834931765 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.277844404 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.696621318 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.840882212 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.835797485 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.372527844 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.839471605 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049979494 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.858043762 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.054803304 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841551245 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.771429701 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.772513057 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.529457127 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.841937444 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.811241755 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.201288536 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.907374163 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.831396424 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.841182466 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.102130817 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.093080353 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.850865349 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.331247711 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061863259 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.619744755 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859736604 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.938680345 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.154104603 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.827430042 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.836377762 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.074939326 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.675898369 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.059747761 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.316941205 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.743270861 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.836828631 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.050116355 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.838376314 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.375690618 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021154258 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.548887555 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.839765803 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438968111 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862597784 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.37706657 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.758916059 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.93120485 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.846427261 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918130444 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.850246917 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.849848846 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.850350095 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948495939 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.37653794 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.843427734 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.85276627 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932224823 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.327209256 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.059857711 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.844289398 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33834528 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447218133 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.336028137 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.853059702 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.838920793 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84774228 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.775806345 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989618245 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.064965108 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.114898883 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.968482744 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.979682426 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861322222 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.164179776 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.858341952 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054452712 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.115942112 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.736903735 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841536179 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.857852343 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.842328028 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.851446803 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.052271098 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.212191543 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.273579734 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.958115739 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.856672873 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.237757663 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.116576047 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.842727732 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.841510439 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.431933273 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.870818485 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.86019055 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.848679755 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.419422309 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992728614 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.851815656 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.356491044 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.851859973 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.998017418 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.61704333 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.893911722 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.100772881 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.088469568 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.853040152 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338390182 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.448593911 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104641899 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910962958 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854810944 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.946519207 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989012446 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 5.391786065 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.843833834 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.8444509 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.12690296 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.557839882 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.853932993 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343821174 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104451125 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.841558079 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 5.396828412 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869392184 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.855041435 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.068422903 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.349779944 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.069792331 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.853538068 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.849487156 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.663612329 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342482171 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.857272452 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.782145046 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.849976235 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0277264 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.083465306 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.864758437 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.298311186 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.556464237 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.283521695 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.819964474 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868465659 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.852405932 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.456561738 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341155575 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.066622838 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.21517068 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.409756699 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.845963017 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.123324074 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.849931864 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.851077645 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.123707491 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.851377666 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.852817776 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857822532 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.337661753 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.39240904 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.852748244 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.906368056 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.783080661 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.188223698 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.482765871 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.782577664 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.855329437 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.969899175 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.844012039 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.977487235 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.858907412 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 5.412220964 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85503531 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.602523407 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.121708446 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.852106533 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.846039479 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.181546795 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.856186701 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855171435 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054227576 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846674595 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.524024104 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.197006066 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.104242182 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.850076736 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.833716141 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.85153578 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848706345 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.836175083 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.045376695 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.064779501 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.283506187 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.847333886 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.861253658 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.854130494 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.063727488 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058790873 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.407096748 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.862837942 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.853687246 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.86402554 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.752909347 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.355971863 seconds)
  done (took 1768.583693054 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.882751901 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.854962085 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.871296366 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.885408909 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.868267113 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.921568879 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.847517604 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.909170043 seconds)
  done (took 56.827987406 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.85282466 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.064705282 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.883932583 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.850858668 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.858222512 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.860820251 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.17583663 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.850851519 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.859469916 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.859668453 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.854302613 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.850180964 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.343880042 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.859264889 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.864204036 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.836330714 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.856458764 seconds)
  done (took 74.369123171 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.849063966 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.253819514 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.85417678 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.853528502 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.030250368 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.851903811 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.274961245 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.883600254 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.863104485 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.128629341 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.479767289 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.856740381 seconds)
  done (took 89.969170859 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.858102233 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.855867742 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.857107215 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.856337789 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.85743733 seconds)
  done (took 11.072252432 seconds)
done (took 2274.017203361 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.10441686 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.319246885 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.275822721 seconds)
  done (took 6.382626513 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.999170202 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.048252067 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.173156618 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.173067494 seconds)
  done (took 10.180242838 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.136308185 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.224040512 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.056823593 seconds)
  done (took 8.203008378 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.816376284 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.849207317 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.927548384 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.846494489 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.851981375 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.852570677 seconds)
  done (took 22.339638975 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.85622554 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.858181916 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.855875967 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.856713693 seconds)
  done (took 9.214264095 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.83777295 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.646979923 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.836973711 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.850845918 seconds)
  done (took 20.960691417 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.601934944 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.613085828 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.597621001 seconds)
  done (took 9.602264858 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.711841564 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.717417228 seconds)
  done (took 11.217736762 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.132348373 seconds)
  done (took 3.920477973 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.986245001 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.115229639 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.774842667 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.590062208 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.781810005 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.420723377 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.918170271 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.656628333 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.580140398 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.245860398 seconds)
  done (took 29.859625077 seconds)
done (took 147.365614241 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.601166701 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.250829965 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.058665617 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.607406072 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.101097525 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.060615267 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.069061635 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.582191789 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.101694642 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.092370178 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.636641695 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.105111905 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.013921094 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.23377997 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.015127253 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.234135059 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.078796395 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.64549414 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.283047759 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.484095454 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.083518527 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.213347748 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.471072366 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.257047224 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.097625989 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.008561957 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.793048126 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.256946719 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.426579151 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 4.829035457 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.031897541 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.627856337 seconds)
  done (took 191.14231116 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.85501793 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.853540161 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.854411988 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.852403279 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.724986802 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.875644513 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.854955622 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.854552838 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.430531929 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.430807472 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.876669235 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.710519205 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.877993318 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.85434765 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.855864048 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.854212123 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.568793461 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.877779199 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.855380413 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.870597035 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.856297569 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.60143673 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.875643939 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.609159059 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.549462271 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.876122897 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.85384137 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.855593465 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.854879937 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.852993572 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.855902015 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.855097886 seconds)
  done (took 219.076464743 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.853429096 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.853170894 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.857893019 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.854149365 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.854465758 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.856190324 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.856976187 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.886435825 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.856398473 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.855266081 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.85473286 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.869861587 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.855084365 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.856492715 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.854756653 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.856360405 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.854755384 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.856331546 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.85650646 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.87264434 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.881825895 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.856433977 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.85585525 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.857200474 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.855435762 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.85459825 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.870443329 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.8708871 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.855372272 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.855376349 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.856438337 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.855842897 seconds)
  done (took 221.290700215 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.05873228 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.864504243 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.863894907 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.819369789 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.86202499 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.864112088 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.858452229 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.05111207 seconds)
  done (took 19.037229803 seconds)
done (took 652.334024141 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.797951233 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.534536634 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.037453821 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.883023653 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.413507021 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.883260802 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.882538023 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.998585905 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.242311404 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.987017011 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.890744533 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.879752101 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.012607696 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.883368344 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.082996359 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.950432132 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.596190712 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.691833008 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.133853216 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.181704164 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.079572353 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.158083424 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.999638856 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.284948787 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.018498149 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.186555289 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.335187184 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.591327932 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.882245743 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.136122647 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.101064036 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.55831933 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.895217579 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.897714309 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.95039559 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.934347235 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.562100988 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.894073589 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.040801574 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.945573585 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.198896806 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 3.056082841 seconds)
  done (took 110.466378423 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.854235531 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.855754329 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.850896292 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.856688981 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.855739452 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.85319135 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.852090792 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.853006152 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.853257315 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.853695435 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.852634864 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.853054853 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.853404843 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.853993351 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.855141405 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.852420318 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.853147743 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.857089553 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.8560073 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.855666025 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.855668185 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.85366919 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.855766465 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.854504731 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.85384363 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.855924998 seconds)
  done (took 50.008434321 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.867483215 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.063006146 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.192568113 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.874380092 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.867286747 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.871408862 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.921446446 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.868232052 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.870861473 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.869225657 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.995150427 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.869634956 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.886713038 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.196545356 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.872961924 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.86632364 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.869244484 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.870528106 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.072520211 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.877061274 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.9241481 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.868596577 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.921911519 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.87853014 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.871979841 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.868815944 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.871033777 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.374845809 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.869648764 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.995443306 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.366116009 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.921854234 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.325139374 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.203005709 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.367388986 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.871765677 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.86770821 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.001196359 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.871836353 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.868766033 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.9214608 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.869568583 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.196648654 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.419075811 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.889170785 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.868235583 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.379708489 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.002430931 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.025447062 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.876354465 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.202151836 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.871989884 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.872919454 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.869246986 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.027650414 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.874470898 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.869190217 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.245436138 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.873519177 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.923852773 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.871827928 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.871070763 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.079331426 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.872378581 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.071241564 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.870837052 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.878072632 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.871755164 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.195105238 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.876247414 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.43785833 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.892011088 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.872660007 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.99868197 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.072863275 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.415999003 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.87288421 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.084466824 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.339873331 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.923138296 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.878423603 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.36895412 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.927185378 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.875210787 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.87585189 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.872672445 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.873112215 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.91567057 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.922892065 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.369158482 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.433587399 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.267027043 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.925782427 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.884796928 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.872636817 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.246273655 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.872211811 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.871366842 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.193719714 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.439022606 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.891562072 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.880473986 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.42254084 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.895123653 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.927430173 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.8797785 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.205912454 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.874620951 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.917453946 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.873517667 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.880812311 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.877886315 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.926421276 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.877677273 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.875087581 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.417712675 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.025375969 seconds)
  done (took 235.536852672 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.867541735 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.865908342 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.866887735 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.868090469 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.866473893 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.882556335 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.869145519 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.866470944 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.873803746 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.867758571 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.867355776 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.872998557 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.869393523 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.882489172 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.876558498 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.874737828 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.480062875 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.868977235 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.868609134 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.88492365 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.604944243 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.871733099 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.866312781 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.867008372 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.869934895 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.868824086 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.897668884 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.868706732 seconds)
  done (took 167.56082465 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.875520806 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.249268555 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.87774552 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.953876218 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.90086448 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.872366112 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.949598048 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.90738931 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.878616027 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.872880624 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.873046319 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.077707163 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.877025909 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.205708353 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.987187618 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.951375737 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.205097736 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.875542674 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.872159043 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.873453074 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.954815002 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.887657107 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.075387843 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.247743375 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.877580924 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.24943751 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.863834605 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.876266123 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.874324955 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.251555536 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.874897442 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.075728899 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.926795062 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.908788254 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.252085748 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.207947761 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.207859904 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.95432735 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.877377278 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.874081555 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.873494887 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.865922712 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.251819349 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.880240398 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.878531507 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.24390379 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.880014222 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.878319815 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.887067668 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.876795839 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.909679935 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.909316406 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.081578909 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.255849873 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.927407842 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.898743995 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.955705808 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.223898488 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.881192681 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.209120582 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.86518568 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.254156524 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.880130616 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.867435086 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.878888988 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.883211374 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.974037716 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.954983145 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.213400038 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.880279099 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.209355223 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.976113389 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.877697529 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.875836187 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.879968774 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.252624528 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.210061361 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.975590844 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.96093657 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.015034822 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.869933226 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.878585462 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.867367608 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.930827091 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.878604355 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.254251076 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.212632851 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.880944593 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.879884489 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.879792362 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.879822324 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.992490431 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.254089176 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.931378946 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.205073444 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.078235947 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.08237109 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.882535265 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.910262808 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.878864412 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.082072634 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.880828994 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.907866121 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.271832685 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.080402449 seconds)
  done (took 210.768817504 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.053579766 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.700251093 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.939298296 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.970021494 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.308377952 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.376519334 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.822319346 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.92450626 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.946926128 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.969342886 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.34596585 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.968614992 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.009689943 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.925722699 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.461619841 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.91733956 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.94440571 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.965380915 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.966307379 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.739972893 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.380212112 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.112253981 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.976623195 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.457052143 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.911545115 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.442287645 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.540932709 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.34049349 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.007358301 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.66339912 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.31923054 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.828968509 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.378162208 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.34949337 seconds)
  done (took 78.776051643 seconds)
done (took 854.907034457 seconds)
SAVING RESULT...
DONE!
