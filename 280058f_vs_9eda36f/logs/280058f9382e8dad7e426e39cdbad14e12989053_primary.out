cset: moving following pidspec: 27352
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.24793336 seconds)
loading group "string"... done (took 0.554589089 seconds)
loading group "linalg"... done (took 7.614463516 seconds)
loading group "parallel"... done (took 0.17028877 seconds)
loading group "find"... done (took 1.167536217 seconds)
loading group "tuple"... done (took 2.076614496 seconds)
loading group "dates"... done (took 1.307392575 seconds)
loading group "micro"... done (took 0.242230609 seconds)
loading group "io"... done (took 0.694371268 seconds)
loading group "scalar"... done (took 40.416031176 seconds)
loading group "sparse"... done (took 12.572336199 seconds)
loading group "broadcast"... done (took 1.127770033 seconds)
loading group "union"... done (took 13.332782958 seconds)
loading group "simd"... done (took 4.737002771 seconds)
loading group "random"... done (took 9.615976244 seconds)
loading group "problem"... done (took 2.123429423 seconds)
loading group "array"... done (took 22.441899199 seconds)
loading group "misc"... done (took 2.076290244 seconds)
loading group "sort"... done (took 3.432193336 seconds)
loading group "collection"... done (took 19.360424753 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.575942486 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140496638 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.148293621 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.145433257 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.187305618 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.154296168 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.15593955 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098395758 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.980474328 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.180287041 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152807355 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.518880795 seconds)
done (took 5.168715362 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.2177859 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094914496 seconds)
    (2/2) benchmarking "String"...
    done (took 0.102887793 seconds)
  done (took 0.866856833 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077132343 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.143796787 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093452689 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077984265 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094589278 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.076627303 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09328236 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078821881 seconds)
  done (took 1.335520026 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.085448309 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.096359345 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081437973 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.09576524 seconds)
  done (took 1.034473783 seconds)
done (took 4.217012342 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.731726429 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.271805753 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204001738 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.461415129 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.194289884 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.214251089 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.674577478 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.369543065 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.24967771 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099459846 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.142599252 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.382608189 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136295306 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.68468746 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.08911132 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.122217402 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.174933626 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.443364975 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081624917 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109222094 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116169402 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141045144 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.127547472 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092164515 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184578487 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.080771269 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192650093 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.106718441 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079411952 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.284605372 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200514821 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.687111055 seconds)
  done (took 10.84638642 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.109841454 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.131447833 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096789866 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136844926 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133300799 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.09808651 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082983931 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095928094 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120627205 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.173206986 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113600439 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.13528601 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093984391 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081517472 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.113961217 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.242388227 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.118020757 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.10276371 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100557189 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103596345 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120710334 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112135112 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107833301 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091845726 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.164971708 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.22030278 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111956691 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125495763 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095357427 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.110692386 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142293909 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.140237458 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093200536 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079156177 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.170135809 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122803877 seconds)
  done (took 5.084982909 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.071523598 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.188050625 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121024627 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168821247 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.079376212 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.140825259 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.093397962 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112552329 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255122013 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.181919567 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.174614187 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140651413 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.151934798 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099372797 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09815421 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080857368 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097857959 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.612585672 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.161055924 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134278171 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.095271565 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103570633 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099445269 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365883992 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085833675 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.09493432 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080608491 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.081811577 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158525577 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081119314 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.155012447 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.100326656 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099913294 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131668325 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.196371116 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123674231 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.116407504 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095755389 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077316248 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.191380015 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087556088 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.095690296 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.101989325 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134097498 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133301414 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096185467 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080200346 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.218101476 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.078789955 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112951104 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.90879867 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180611934 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.089938356 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095540568 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.320339657 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097990367 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096590266 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.08107169 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.26614078 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.180691175 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.096388551 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07873534 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095717828 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079975651 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.395162217 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.079607875 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.732752433 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084103682 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106679196 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081779613 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095059903 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102442091 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086413559 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114503839 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078460661 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098636704 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.07852668 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095543951 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080340091 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107901297 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100436237 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079379402 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165780483 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.078728216 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.092254237 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.076724137 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115052436 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126053798 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082416944 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094872193 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129433709 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083002101 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096956148 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.13165007 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080465118 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108092033 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.093423363 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081575381 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142044861 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.095913109 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.130650305 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.094761971 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123588429 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099058709 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113243494 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11168274 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09780008 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083769721 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094470144 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.076657068 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164513545 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079045681 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097405614 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.079942596 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109940333 seconds)
  done (took 22.291014426 seconds)
done (took 39.972272803 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.318788772 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102257073 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101670417 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101643513 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099624184 seconds)
  done (took 1.474343503 seconds)
done (took 2.201275242 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.285644481 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.169681911 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094621429 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.164693838 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092945717 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.171675472 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158373856 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.110865323 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.198164657 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.094286885 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.161856414 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093838163 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076867635 seconds)
  done (took 2.623403044 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094649563 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113433537 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081644696 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110652033 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075101852 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111195091 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092745985 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115427119 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108474787 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086900318 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092484742 seconds)
  done (took 1.806596254 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093126389 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111772234 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081836906 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109471141 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076239103 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109707589 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091546273 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114812492 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108640051 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084457396 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092593433 seconds)
  done (took 1.796681944 seconds)
done (took 6.942315868 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.089891815 seconds)
  done (took 0.808920404 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.916254974 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.785553984 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.1106191 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148057113 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.296888323 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.188301278 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.466576043 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.123073913 seconds)
  done (took 10.957560092 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.14508439 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084450819 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.099568136 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.082877615 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099125453 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082690317 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099187848 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.10180546 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.083532451 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.099361991 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.08235308 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.100980379 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.101018249 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085191837 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101511635 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.082224174 seconds)
  done (took 2.317790361 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118646304 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11805387 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104426242 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107480943 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.08543984 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103503096 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105596641 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088191714 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100901492 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102278244 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089261981 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104481932 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102801557 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079008584 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105396165 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106719285 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085395539 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104691776 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105206678 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.088837116 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106076712 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095546507 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086620403 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105769648 seconds)
  done (took 3.232209227 seconds)
done (took 18.039925736 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.157509738 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108364883 seconds)
  done (took 0.992485101 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094786686 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111918288 seconds)
  done (took 0.938032638 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.095602436 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094987235 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.120813138 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109104159 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080500308 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.094765825 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.11842702 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080180886 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095463763 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.07938633 seconds)
  done (took 1.704090025 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081884162 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108643649 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.10135445 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094493773 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.103938143 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094699632 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.08690605 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097773029 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109518096 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.075957379 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101887229 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113254276 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085997172 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115509325 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103356836 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082122016 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.100985348 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098654794 seconds)
  done (took 2.493951502 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078228692 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096091648 seconds)
  done (took 0.911973766 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079666857 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093320563 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080038035 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096940504 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093495639 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075533004 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093437773 seconds)
  done (took 1.349513579 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.486604299 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135614773 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.260464992 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.101385878 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.118311442 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.300995199 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097231956 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.103038407 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.083384133 seconds)
  done (took 2.463691266 seconds)
done (took 11.585165353 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092302114 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117056423 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111899151 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.457563415 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107071009 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096859146 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.146540952 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.244214927 seconds)
done (took 2.116584852 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.143209555 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323305177 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.112988558 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066667914 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094264315 seconds)
  done (took 1.339802379 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.07845702 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099571934 seconds)
  done (took 0.918246831 seconds)
done (took 3.146663933 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079325448 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.096486371 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.110052736 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.094699592 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080135379 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.096119489 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077073952 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.095853805 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.096012913 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.078988041 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095646861 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.078737105 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.097442341 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078764854 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093486698 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076900596 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096515256 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.076569014 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093828937 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.079889448 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094302911 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079387167 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094248993 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.07706718 seconds)
  done (took 2.892167245 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.097067361 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097080279 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102145047 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084917294 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100621498 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08574281 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102333011 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097319342 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.084537144 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098542192 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099795275 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083846568 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098291873 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083739898 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099172624 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100426201 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085517559 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096933856 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082081607 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.09897329 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102364244 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078900505 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100095615 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102826461 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.082689764 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100206988 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081618746 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096944901 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10251068 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083049225 seconds)
  done (took 3.555100768 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08384141 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093402193 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.076935508 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101034861 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.07664139 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096261231 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076932322 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095048384 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079091196 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094495056 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078958262 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094217098 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077483582 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095518379 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078684397 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098688634 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107450951 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.07760212 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095236261 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078543825 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.09814121 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077218635 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094955085 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078156735 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094639114 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077762656 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096608589 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078884406 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094885556 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077215885 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097634547 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081169865 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094703143 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083968869 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098295911 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.076973665 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097468954 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076820233 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.09505494 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093613997 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077353128 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093962295 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.0769353 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.10109073 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.076969303 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096928797 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.076982754 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097401704 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.07836763 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097649171 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078157982 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094912625 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.07910247 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095209494 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081514029 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.093999272 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094940623 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076280277 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095610893 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.076915613 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094421758 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07775517 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096704659 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078660864 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110198559 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084322989 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094351099 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079065285 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095397274 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080050391 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096437531 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108454066 seconds)
  done (took 7.105634923 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081597255 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105361231 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079100427 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096993144 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076375328 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095651618 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098624513 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077929683 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096589284 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083885079 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094582636 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078964132 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095919177 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10712799 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078865301 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097242335 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084525767 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092814066 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078739573 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098588139 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078869399 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097578632 seconds)
  done (took 2.725722765 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.207049483 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103238795 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140490656 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105740851 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082153874 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105935306 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101211844 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086200614 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101612548 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08270611 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099505691 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101472252 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082509883 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100147757 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100374609 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083260664 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102740564 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084124464 seconds)
  done (took 2.625217578 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.091441393 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09781229 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102055482 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097666677 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09850454 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083438415 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102852783 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106631771 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082493439 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097552322 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090538592 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099510101 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099960158 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080812061 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1009286 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081700765 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100464249 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080313744 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106688043 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103235084 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103401368 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090886851 seconds)
  done (took 2.854466503 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096551196 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099756102 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117886042 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08427211 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094895769 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078295274 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.10545827 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081615138 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.10720308 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.0998361 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081156169 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096714085 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087519559 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097983301 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103067198 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080602478 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10028893 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080340349 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100670293 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076869854 seconds)
  done (took 2.630551974 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100902085 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.208693417 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099866276 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0907831 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09913598 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081667407 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108648567 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099197427 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082360432 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122428844 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099394215 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082344 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108032554 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105547767 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099249539 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091614502 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109556297 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108507056 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082339464 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099182196 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124825673 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082379266 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108400707 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099276467 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081609324 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099036039 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09914281 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087528889 seconds)
  done (took 3.622314631 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081556377 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098054461 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.077959146 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096187577 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.077368764 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096522942 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.077170193 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096096142 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080299704 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095679111 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080115279 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097615886 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083806014 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098336344 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080817889 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098824308 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080618126 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096104627 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078783488 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095527195 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080081126 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097811031 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080836921 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095260829 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078634967 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098740576 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078672775 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094838693 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080908491 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094857382 seconds)
  done (took 3.409788986 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089905705 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106098667 seconds)
  done (took 0.957572947 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078253689 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113801751 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078703756 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102045291 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085818581 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099834755 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106273137 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086536902 seconds)
  done (took 1.513458109 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.094959726 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109192417 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082164102 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111177578 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.10847644 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.094573337 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.163531802 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.099666387 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087510227 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097166586 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112217008 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080371098 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104235751 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081576973 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104441796 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087228943 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096825105 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086397769 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.100724287 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097067089 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082639022 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109022403 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083488817 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.095442562 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083053697 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.108987319 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.107797225 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082094066 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.100918717 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107403524 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087059087 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092691445 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081148821 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100225889 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079302478 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.107760585 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110470746 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082989269 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107866758 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08229505 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109186619 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094643602 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085900792 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.10526205 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092520565 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099407192 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083057289 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094236327 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.078084356 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.101138819 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094572154 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08147419 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093470435 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089357226 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.102945315 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111048881 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.079673011 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100273886 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084119473 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.10211286 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.08737402 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.100497776 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083263424 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098707404 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106755929 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085070657 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106813185 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076579171 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.092761339 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.07937034 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109798563 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.12179073 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089833784 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.09959357 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082478407 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.096653049 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102074037 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082748443 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106952297 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.088898311 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.098859972 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106261498 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089631036 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099413422 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.083299008 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.106683366 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097515476 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083245849 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096518626 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095609174 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098172353 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079860982 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.095957373 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108013033 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084441266 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099261077 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078920266 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106348726 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.075302801 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100162592 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083185506 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099471239 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.108011592 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08756097 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.1055313 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.106580708 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089051192 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099326488 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084590494 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095917725 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083153467 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.101937154 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.088309923 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093228453 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.1018047 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083344621 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100061161 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.088705588 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097050655 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.081659435 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107072682 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106175002 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080279972 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.09675149 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.084387873 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.09968908 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085733747 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106207581 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098912864 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076835731 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095255758 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.085413236 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099345375 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086344468 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104148516 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102627459 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076699007 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097752286 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.08703436 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.106406682 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.08193945 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.099392729 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104454348 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082002229 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098881759 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.087632467 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.101885747 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08090169 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.103219738 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083511719 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.095717233 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104065397 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.084217444 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098765863 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085302631 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104533007 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.08378274 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.100911611 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098068896 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.08729362 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100406426 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08119798 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099039982 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080016201 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.109097262 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.101746263 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.076420517 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09662411 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088980267 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097127619 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081388152 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098432363 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.084436392 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.099775319 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098005275 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081634284 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.100618071 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093364021 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10474315 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101149534 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087253569 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.109546367 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.081828026 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101194135 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.081374682 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100532075 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100897072 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088713273 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105220785 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087949998 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.101439669 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.07800516 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10570298 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106954479 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081239179 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.09779101 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.080717716 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103501587 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106110963 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085614184 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101260254 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080612602 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100699707 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08540805 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103134615 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.09976118 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.080734623 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.104191678 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081472333 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107183625 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083350829 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.108954287 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103411582 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077521179 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103914069 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079900776 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.10538173 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.076771429 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.097555749 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098906832 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.082730706 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098933106 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.084498767 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094628233 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090057825 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108124624 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.082580339 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.099293925 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100353894 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090070197 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101325045 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086225586 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.103663561 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.086450042 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112900017 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099063443 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085424293 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109253042 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.082394276 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094139063 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.087663888 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.098202486 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099373202 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081878487 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.097692697 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084659448 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109410688 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105293475 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076066609 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103189011 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.080973198 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.098537084 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.077797165 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.106694287 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.085208252 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.101764325 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10864377 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083278773 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.10115523 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085931078 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100160781 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.083191764 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.10181174 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104063581 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083471703 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103111146 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.0816524 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.10209896 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.081101941 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.101301067 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.084201564 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.10074359 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.081856426 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106110174 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.100032501 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083104003 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.102984025 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.083961489 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100844889 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.082503582 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.098867646 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104170544 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083263803 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100669117 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.084742165 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095951779 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090616266 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.100331282 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090090619 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.101012595 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097525005 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087793218 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.102511432 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.087508126 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101447421 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101667575 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083602236 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100545399 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.084887259 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108950649 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.079766686 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.109595257 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107520724 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08303921 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103586469 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082918404 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.101722084 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.081198083 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.102903572 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.082920256 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.100369133 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.081870949 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.106505315 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.10324077 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082883512 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103280268 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.083217484 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.100929103 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.084042018 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095163332 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081835757 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.100698949 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101685037 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089892674 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102301165 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085783357 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099662741 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083796312 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099152874 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.078455063 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.109056783 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109962661 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.083940944 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108983974 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.099872174 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.084198769 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11045912 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.076226179 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.09887049 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080112509 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.09970333 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10787197 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.082981407 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.108984658 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08277111 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.100477143 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.078832643 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101304113 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.081159765 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.095157671 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080089634 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104416899 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103265066 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080828759 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101403901 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.084420509 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101726358 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089741753 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.108875488 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084005027 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101844022 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.097923297 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081039902 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100545069 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.084689842 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102431373 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.080349894 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098450719 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.082130671 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.103044573 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.082973845 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100474815 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.102750372 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089998285 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100786199 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.085345857 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105223066 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.076823549 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.10381939 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100961185 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082537712 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.099743386 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086491092 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103996774 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083430212 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.107873537 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.10042989 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082972292 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101305125 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080467973 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100649426 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083231028 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.100709077 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082521253 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.101926341 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110224642 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080950932 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.102296057 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082520337 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101237023 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.087054556 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102591941 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.084308024 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108896656 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.103557544 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.083738479 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.107325881 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086571982 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104240725 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102406356 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.08441423 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107141332 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081089081 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.108982635 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082344576 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.101638182 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103070517 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080334904 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101385628 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.08235884 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100165454 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.087610667 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102163251 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082002397 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.100090814 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.08083588 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103531851 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105369533 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090654059 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.103200862 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085917569 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.09691086 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079793646 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102460634 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099170478 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085316218 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105502003 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088795715 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.103839012 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.0840967 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100377881 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.089826597 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107900572 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106129598 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081145064 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106435236 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084709851 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.104430972 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083361818 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.101667177 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10344289 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088691947 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103288081 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082349024 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109467963 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086296855 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102608556 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102950075 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.08279438 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101894845 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078311306 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102247964 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084866563 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108160436 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.10473349 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082468037 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110138491 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082662026 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.101464983 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086933985 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100816731 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.107686418 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078111567 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102687471 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084481241 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10264594 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078386247 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101052221 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080984356 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104063882 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082089377 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097125748 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110682173 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.090467161 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.104495008 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081506853 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099759956 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078887237 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.096694207 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.081801062 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103587143 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103849917 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.091661209 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.100758298 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082046252 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.096639491 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084004993 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105359019 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104813547 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080382951 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097101559 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082251565 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.103924015 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.090446951 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100541464 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082978642 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105044138 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.085143687 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.101506489 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105570446 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079784141 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.105953013 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093030888 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103385226 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083190268 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.107425003 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109907844 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084267296 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.09707201 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.083910293 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.104199051 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.083186701 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103030781 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103460774 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096250549 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105828592 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.081791013 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.101087393 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.103810203 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082332637 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.108792279 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084489033 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102608857 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088043231 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.103959316 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110603067 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085953987 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107707092 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.085612357 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.10372993 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.081413533 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102639335 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100864377 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081124327 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103401417 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.083381452 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106805279 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109446439 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082576784 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111644223 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.091164923 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.107112799 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.079551577 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.101920417 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.082114351 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.09823566 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103632106 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.08111886 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100812641 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.08134941 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101143432 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.084076058 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108577494 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.085019245 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103723567 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.082794267 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096542947 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.10621663 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.086350168 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103655624 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.080061963 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.101939441 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.083710101 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.107733821 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.1058041 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.08392631 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.104110955 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.08479117 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10192317 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.078436565 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.108281688 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081885881 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.10472655 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.082183965 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103536771 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10297172 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086543866 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108393986 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08453573 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.10453927 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.114635298 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086753601 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.099373374 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.080242958 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.107470833 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.081347078 seconds)
  done (took 57.20063441 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144744071 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080433078 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097689821 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078507617 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112427211 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099084647 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079067391 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098977394 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.07959832 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.100901337 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078433814 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098155569 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.10780959 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123794777 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092838483 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102500166 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07749285 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098905958 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097805868 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079427424 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108466515 seconds)
  done (took 2.849734696 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103591172 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.116031332 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114644652 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118288187 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088353316 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114208807 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114053836 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115189529 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098223802 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109908458 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11702365 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114101653 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091162629 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110055382 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109825074 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092119586 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117309211 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108837073 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.114729318 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094890783 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112794933 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113580046 seconds)
  done (took 3.200108024 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083485397 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10143437 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084851094 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097348436 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082724653 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097429063 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.086293063 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100108031 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086556867 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101305005 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.080696665 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101350456 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103497882 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078154232 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101795208 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.080305589 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151032229 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.105862529 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082341554 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104339156 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077304627 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.10471421 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098035227 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.078780053 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.100286559 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.086466752 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10264426 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081022829 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102133006 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.0815961 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102436874 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080598487 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.10444305 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102308779 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.081406276 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.100966386 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.082730045 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101559699 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.07878814 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.099928788 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084105364 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.097559024 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083057635 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104258484 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.080831189 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101568109 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084044431 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102513261 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.078135619 seconds)
  done (took 5.389392817 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103430664 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159605527 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085292391 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142181026 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119435963 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.110801561 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087143956 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141145523 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101483591 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082109805 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122473415 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.118290451 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10301128 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089727254 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.109436553 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10282072 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085725185 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101447813 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108187105 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083565473 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107891393 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089188753 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118724729 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.116776996 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107819467 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08246046 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103045969 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108022953 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.096085344 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108500949 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108446531 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089994071 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119959751 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.105102934 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083152416 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106279384 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121047816 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103800439 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086224058 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101020145 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086724343 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108854169 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109063848 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101741739 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104165653 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108942114 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083801666 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099443635 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117485554 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.08605967 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112217041 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119273617 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087550771 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104377119 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108636486 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120082011 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084679857 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101494252 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.08729041 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116166249 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100132543 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087557592 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.11896179 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105141586 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111738723 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098425244 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108344162 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107436345 seconds)
  done (took 8.064429553 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092210812 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110902103 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11950551 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120593859 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090490994 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110601812 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110043569 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090587365 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110053267 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116236617 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111096573 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133092162 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085406463 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113738034 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.109278883 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090733797 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111432624 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110076783 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090456434 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110937662 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110498989 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119688426 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090335559 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120488123 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.14092574 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105336259 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089732148 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11079247 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119913947 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109609449 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123402893 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091623434 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110157987 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.12005549 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122992949 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090862082 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102710557 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11039651 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091261506 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110304638 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10527022 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10021015 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11043535 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105618163 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090135878 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11059599 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119733611 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.122345195 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113714732 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096718324 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111244813 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119864883 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109967946 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090803371 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119824547 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146426252 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119133219 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119846114 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111298711 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099219203 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120703878 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.12905828 seconds)
  done (took 7.62356443 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106263463 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115366072 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116944857 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099053043 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082633614 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108426808 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082263696 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101996694 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113920457 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094146076 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115768549 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108862211 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091270711 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115920502 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108832934 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111432769 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088221178 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10833191 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11309842 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108701237 seconds)
  done (took 2.918640317 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.092794914 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123648449 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084520598 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110902932 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107552431 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090866695 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10680989 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106766788 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086148934 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106674109 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095998389 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115717165 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105100385 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091591491 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115174405 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110872796 seconds)
  done (took 2.477778734 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095211633 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116228194 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.119278388 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084127032 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103297344 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.079524496 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105332489 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.10038811 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08184376 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120651737 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084264314 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109784927 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103869374 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082463068 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101393414 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087297434 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100615013 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082244135 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104930371 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.118165755 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095529748 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103186807 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104754502 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087066888 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103908529 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089901429 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105238031 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102245424 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.082729143 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104139003 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084897478 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.11301549 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100957786 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.08301342 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102582243 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082449021 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103302154 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084638215 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107993621 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104437872 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.082973192 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103649274 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.08482017 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106553618 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080957767 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106727739 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100413242 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090782166 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.101926266 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085282194 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105023392 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.085850153 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106122041 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115101961 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088549707 seconds)
  done (took 6.202636636 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098714671 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108390808 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079907692 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102456083 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08694504 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.106987383 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108486544 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087177636 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105932503 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083531471 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106934323 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088684207 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107058563 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108126298 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086042911 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108723394 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080265309 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106456878 seconds)
  done (took 2.595820114 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090544231 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104025068 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.091242362 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.104401354 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084645092 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107322391 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079418452 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10439605 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103316966 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08551458 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105181166 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087433154 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102393113 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087100533 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104931938 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084257193 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108101916 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102678176 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084526098 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100949363 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087021927 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10243726 seconds)
  done (took 2.944992176 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.117431877 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124757189 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.09208931 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.227806611 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103884427 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.13157532 seconds)
  done (took 1.632131533 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108888684 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119736697 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104856932 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106054191 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114495788 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085705651 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107493581 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107195283 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116973157 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100808957 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108414982 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117690944 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117159437 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095828548 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113480939 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112863904 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108139395 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087430667 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105246587 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128014416 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086463787 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117432011 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107161961 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086913596 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10725211 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116154343 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11673813 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121033864 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087091301 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117798903 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11354241 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086980702 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118737478 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121353717 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107181685 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098147215 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107990328 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128449067 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114578856 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096165147 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109217492 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113948295 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096552278 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113449811 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116678182 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107248729 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093068389 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107374737 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106905797 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134303352 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09329184 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116688084 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114848355 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117033678 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096684745 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.154128798 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102034915 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117295764 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114564336 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121650667 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117169329 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093171108 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11592278 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122790594 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1146312 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116817619 seconds)
  done (took 8.089635664 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102095733 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124963413 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107459138 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121551764 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096992928 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107603962 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107437786 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087176247 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107542713 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10670342 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15197198 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087001499 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116810402 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116370346 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086770645 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107821098 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108084558 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116378415 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086136992 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133574202 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108690109 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116289154 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116588038 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09726088 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121877042 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113509154 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107421099 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087404932 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108018363 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106973644 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094059094 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10751938 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117567558 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086201677 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116731877 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107828995 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086664329 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114160214 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108221593 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11471979 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097290942 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128019276 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10700498 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107683494 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101170187 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107370625 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10812277 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087363715 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108481598 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105777838 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101227802 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122358456 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121657218 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116909323 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107825455 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087477853 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108646742 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10708568 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087400643 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115034187 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117426075 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086934709 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.155753928 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088037056 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10774788 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118173542 seconds)
  done (took 7.967591263 seconds)
done (took 153.78853537 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.224787688 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.239477603 seconds)
  done (took 1.303281258 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097439942 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135506472 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095630067 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169406759 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.10560787 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118481135 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137872511 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096859837 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105375122 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08514436 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106187001 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086976108 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172831235 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084304086 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.10712466 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.1070192 seconds)
  done (took 2.659092832 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.19844453 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254471219 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101829257 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105228677 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.08811309 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110465606 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104782458 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.090827067 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.108943902 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.084775241 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108183446 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086128954 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.104913676 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085530346 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109919439 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087268659 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105979371 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087099702 seconds)
  done (took 2.869098767 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112044011 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146106786 seconds)
  done (took 1.110233806 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117801146 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.17875835 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.314809282 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155348215 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106736088 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126581757 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155472835 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129821013 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.195195382 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122060282 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.121958093 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096831227 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139907641 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.113817698 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093650487 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117522422 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141647186 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092738905 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114288984 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115241605 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115883 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106017856 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114939094 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.092668207 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180324185 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.11884593 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084572599 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.10630478 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115104991 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094669454 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.111857774 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124291404 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098184693 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175609293 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100934538 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.175126049 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097669606 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.111452375 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114726975 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090980707 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118842033 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.11815523 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104108557 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118307515 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084444525 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.11717219 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104843868 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085803528 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114600422 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.097208294 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114827358 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.11233008 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155222873 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118319651 seconds)
  done (took 7.491252429 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.79279367 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155496201 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089522053 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.885226332 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138219189 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103724404 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.778430674 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.135441824 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.232514415 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.759199679 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133538221 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121785121 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227723145 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.238167568 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.954014516 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.313729977 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.669823077 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.100945607 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151503226 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.1538119 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118361428 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136294632 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108607184 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.449685426 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095680789 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112667736 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.0952963 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.121813819 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158588007 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125378242 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113841937 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178284865 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.248997569 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204899386 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115439071 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089112609 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111364216 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169829599 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267784333 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213970565 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179742177 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086833099 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111572986 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.09913695 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133208276 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108053292 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16399189 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172538788 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.192855449 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09234223 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122498142 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119230088 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099052034 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.187189325 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098726474 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.317048621 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.310210314 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.1104551 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09848932 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126958908 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263939135 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122979425 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.222510983 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116968395 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211805126 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.109690638 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.783359952 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.189967971 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089609556 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117593452 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.096138829 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116049869 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121777941 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167672304 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.391680511 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122809271 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092808768 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111335908 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.203821256 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125698366 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110856921 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162062122 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.094079538 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120589418 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125119258 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122233674 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.169270943 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.229734249 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123269435 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118161278 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092849424 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125347658 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116959494 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211189711 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219452045 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163056667 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207915639 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123118776 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.163425566 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.188457672 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098217276 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.19264122 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098582564 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126053438 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122181811 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.214428834 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145426527 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101554881 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114524059 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117200575 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148531444 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105335024 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.1192176 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.16893409 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.478039252 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167903304 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108329244 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105695172 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120961487 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.16127795 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117168412 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.256052454 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099836272 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.188993666 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097546848 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.10908453 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119386691 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164968391 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12311517 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099396048 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122848738 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117614702 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.237365636 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216417702 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101761884 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243641595 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183250263 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118590916 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17267219 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121228785 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166991061 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118569394 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099466626 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117356943 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.796448089 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.10077857 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121345112 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115520565 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187067162 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089117001 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123847743 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124812054 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086940851 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.776981965 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127056372 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098536646 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.124849588 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117917698 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12001672 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096022052 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115558648 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162690824 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230846214 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120722394 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097151394 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.125123118 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158743116 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117166179 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124984414 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123648581 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104001905 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12240815 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113942818 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103942151 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191304674 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161695268 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220678443 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.568210917 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112415929 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.1247798 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.204146998 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112589082 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287883074 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118918522 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.203419928 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187304678 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098977838 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.310245855 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.187369133 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.188032904 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106049894 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.19450025 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087616976 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118320351 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.165696659 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111239069 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096063406 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.182037176 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103362627 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123614255 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.959834809 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089946337 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.245233427 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.086912909 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.169516473 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117723716 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120823708 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.296070389 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091021089 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128851706 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.162645158 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115744008 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124151894 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.705499547 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125436362 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121032192 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095955106 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222514191 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162770753 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120382962 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118851758 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098895354 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.187280482 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208451434 seconds)
  done (took 43.928677622 seconds)
done (took 60.206149295 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.274198523 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.215631373 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.261363312 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168624142 seconds)
  done (took 1.868261156 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.169776332 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148036738 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120000564 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107894518 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149823802 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08396481 seconds)
  done (took 1.654469358 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.356532534 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.272598101 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239892322 seconds)
  done (took 1.749475179 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.31680461 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.246790571 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.473452567 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.32424962 seconds)
  done (took 2.33801834 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.20980144 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131339105 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111048252 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.10397603 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.20089262 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.246045135 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14175337 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200129507 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.099484396 seconds)
  done (took 2.370647774 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.194456247 seconds)
done (took 11.054359485 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.298532594 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.19124575 seconds)
    (3/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.156075906 seconds)
    (4/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.202277122 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.145730725 seconds)
    (6/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.237651222 seconds)
    (7/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.171268867 seconds)
    (8/286) benchmarking ("sort", Float64, true)...
    done (took 0.228223937 seconds)
    (9/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.227241738 seconds)
    (10/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.149728462 seconds)
    (11/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.122102718 seconds)
    (12/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.098452889 seconds)
    (13/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.114384779 seconds)
    (14/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.223337221 seconds)
    (15/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089226597 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.108093495 seconds)
    (17/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.120202222 seconds)
    (18/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.161830996 seconds)
    (19/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.132997339 seconds)
    (20/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.120117384 seconds)
    (21/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.214376922 seconds)
    (22/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.093821885 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.108862327 seconds)
    (24/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.103833528 seconds)
    (25/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.115808991 seconds)
    (26/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.103548324 seconds)
    (27/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.123053393 seconds)
    (28/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.117139541 seconds)
    (29/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.165706294 seconds)
    (30/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.124619566 seconds)
    (31/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.193398489 seconds)
    (32/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.135770794 seconds)
    (33/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.09363797 seconds)
    (34/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.165364259 seconds)
    (35/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.06916951 seconds)
    (36/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.115751833 seconds)
    (37/286) benchmarking ("sort", Int64, true)...
    done (took 0.220399053 seconds)
    (38/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.116501641 seconds)
    (39/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.137459096 seconds)
    (40/286) benchmarking ("sort", BigInt, false)...
    done (took 0.221145605 seconds)
    (41/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.116092838 seconds)
    (42/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.093080139 seconds)
    (43/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.123795871 seconds)
    (44/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.125465614 seconds)
    (45/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.100650653 seconds)
    (46/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.173620964 seconds)
    (47/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.137333036 seconds)
    (48/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.152065951 seconds)
    (49/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.167334457 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.146564059 seconds)
    (51/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.138111684 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093378949 seconds)
    (53/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.118837334 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.132788232 seconds)
    (55/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.096627922 seconds)
    (56/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.110436046 seconds)
    (57/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.22313006 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.085461671 seconds)
    (59/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.214668992 seconds)
    (60/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.184663275 seconds)
    (61/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.087650851 seconds)
    (62/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112186343 seconds)
    (63/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.197512144 seconds)
    (64/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.235312319 seconds)
    (65/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.170061979 seconds)
    (66/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.114183785 seconds)
    (67/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.181883996 seconds)
    (68/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.13300856 seconds)
    (69/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.195005252 seconds)
    (70/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.109496194 seconds)
    (71/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.085980485 seconds)
    (72/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.171341645 seconds)
    (73/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.164591365 seconds)
    (74/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.085197899 seconds)
    (75/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.214805142 seconds)
    (76/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.183470822 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 0.08621147 seconds)
    (78/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.116993338 seconds)
    (79/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.140552353 seconds)
    (80/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.125690434 seconds)
    (81/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.186431723 seconds)
    (82/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.086760554 seconds)
    (83/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.134900172 seconds)
    (84/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.111402194 seconds)
    (85/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.147393582 seconds)
    (86/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.116110238 seconds)
    (87/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.188037291 seconds)
    (88/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.067911293 seconds)
    (89/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.110891451 seconds)
    (90/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067527796 seconds)
    (91/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.183631912 seconds)
    (92/286) benchmarking ("sort", Int8, true)...
    done (took 0.217681644 seconds)
    (93/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.161487857 seconds)
    (94/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.091462637 seconds)
    (95/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086682985 seconds)
    (96/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.115692253 seconds)
    (97/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066358742 seconds)
    (98/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.134736817 seconds)
    (99/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.091742482 seconds)
    (100/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.119993636 seconds)
    (101/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.096900359 seconds)
    (102/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.140621648 seconds)
    (103/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.124120749 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.085984679 seconds)
    (105/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.116963828 seconds)
    (106/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.087674321 seconds)
    (107/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.121399014 seconds)
    (108/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.195300914 seconds)
    (109/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.093219835 seconds)
    (110/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.197684579 seconds)
    (111/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.075699735 seconds)
    (112/286) benchmarking ("sort", Float32, true)...
    done (took 0.228532076 seconds)
    (113/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.122564401 seconds)
    (114/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.18547089 seconds)
    (115/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.146587213 seconds)
    (116/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.119032866 seconds)
    (117/286) benchmarking ("sort", Bool, false)...
    done (took 0.181717221 seconds)
    (118/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.09409443 seconds)
    (119/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.106664684 seconds)
    (120/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.095335081 seconds)
    (121/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.113297552 seconds)
    (122/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.070000072 seconds)
    (123/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.103470336 seconds)
    (124/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094055647 seconds)
    (125/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.116180822 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092637547 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.115838352 seconds)
    (128/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.082514497 seconds)
    (129/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.117690758 seconds)
    (130/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.096278079 seconds)
    (131/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.118132091 seconds)
    (132/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.172581123 seconds)
    (133/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.121720413 seconds)
    (134/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.120687611 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086994939 seconds)
    (136/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.11715466 seconds)
    (137/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.092128839 seconds)
    (138/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.092625631 seconds)
    (139/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.141855087 seconds)
    (140/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.186373541 seconds)
    (141/286) benchmarking ("sort", BigInt, true)...
    done (took 0.230829496 seconds)
    (142/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.126780925 seconds)
    (143/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.091429811 seconds)
    (144/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.111419756 seconds)
    (145/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.069724064 seconds)
    (146/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.118595412 seconds)
    (147/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.086492497 seconds)
    (148/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.089254603 seconds)
    (149/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.085947886 seconds)
    (150/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.123726145 seconds)
    (151/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.06720345 seconds)
    (152/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.147564858 seconds)
    (153/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068006032 seconds)
    (154/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.10896546 seconds)
    (155/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.086829161 seconds)
    (156/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.154040873 seconds)
    (157/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.120353786 seconds)
    (158/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.088844248 seconds)
    (159/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.108394783 seconds)
    (160/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.08751037 seconds)
    (161/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.116238262 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.086489116 seconds)
    (163/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.1707327 seconds)
    (164/286) benchmarking ("sort", Float64, false)...
    done (took 0.170932715 seconds)
    (165/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.099811252 seconds)
    (166/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.118942497 seconds)
    (167/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067347672 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.108001055 seconds)
    (169/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.088194045 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.118440653 seconds)
    (171/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.06646445 seconds)
    (172/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067204598 seconds)
    (173/286) benchmarking ("sort", Bool, true)...
    done (took 0.217540941 seconds)
    (174/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.090579244 seconds)
    (175/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085677886 seconds)
    (176/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.108678192 seconds)
    (177/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.094754445 seconds)
    (178/286) benchmarking ("sort", Float32, false)...
    done (took 0.174748744 seconds)
    (179/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.065771351 seconds)
    (180/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.234680758 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.109373557 seconds)
    (182/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.121597894 seconds)
    (183/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.091529802 seconds)
    (184/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.077478604 seconds)
    (185/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.066100879 seconds)
    (186/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.090793555 seconds)
    (187/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.28889215 seconds)
    (188/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.109825615 seconds)
    (189/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.087218348 seconds)
    (190/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137157002 seconds)
    (191/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.094584843 seconds)
    (192/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.117498569 seconds)
    (193/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.162902724 seconds)
    (194/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.094679408 seconds)
    (195/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.179177494 seconds)
    (196/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.121575147 seconds)
    (197/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068235014 seconds)
    (198/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.185303632 seconds)
    (199/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.087022367 seconds)
    (200/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.114534019 seconds)
    (201/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.093767138 seconds)
    (202/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.090542121 seconds)
    (203/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.111482742 seconds)
    (204/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.107585045 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.086145517 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.108411405 seconds)
    (207/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.08747391 seconds)
    (208/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.173424777 seconds)
    (209/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.126616411 seconds)
    (210/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066827443 seconds)
    (211/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.066572186 seconds)
    (212/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.09076887 seconds)
    (213/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.085499104 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.109388405 seconds)
    (215/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.07755305 seconds)
    (216/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.133848409 seconds)
    (217/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.066657115 seconds)
    (218/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.06576704 seconds)
    (219/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.115220193 seconds)
    (220/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066290439 seconds)
    (221/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.115476895 seconds)
    (222/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.128181686 seconds)
    (223/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.090903371 seconds)
    (224/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.065560626 seconds)
    (225/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.065683081 seconds)
    (226/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.181136765 seconds)
    (227/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.142647356 seconds)
    (228/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.122012676 seconds)
    (229/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109101554 seconds)
    (230/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.169241747 seconds)
    (231/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067479579 seconds)
    (232/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066780048 seconds)
    (233/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.132948869 seconds)
    (234/286) benchmarking ("sort", Int8, false)...
    done (took 0.187080339 seconds)
    (235/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066293405 seconds)
    (236/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.138648738 seconds)
    (237/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.115145301 seconds)
    (238/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067057455 seconds)
    (239/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.112905257 seconds)
    (240/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095175549 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.112074567 seconds)
    (242/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.077873107 seconds)
    (243/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.111892152 seconds)
    (244/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.077542168 seconds)
    (245/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.075955461 seconds)
    (246/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.090362873 seconds)
    (247/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.065848064 seconds)
    (248/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.067778032 seconds)
    (249/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.089305491 seconds)
    (250/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.229534532 seconds)
    (251/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.157814623 seconds)
    (252/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.114095213 seconds)
    (253/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.129293538 seconds)
    (254/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.135998325 seconds)
    (255/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.066976248 seconds)
    (256/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.090042187 seconds)
    (257/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.094970737 seconds)
    (258/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.108740599 seconds)
    (259/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.086565809 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.117454514 seconds)
    (261/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.088284785 seconds)
    (262/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.132196013 seconds)
    (263/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.077860544 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.107593655 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.084535107 seconds)
    (266/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.091077971 seconds)
    (267/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.066932203 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.118483584 seconds)
    (269/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068295064 seconds)
    (270/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066510572 seconds)
    (271/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.11493048 seconds)
    (272/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.092918409 seconds)
    (273/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.09988705 seconds)
    (274/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.09305494 seconds)
    (275/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.128428764 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.090968352 seconds)
    (277/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.089535433 seconds)
    (278/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066730592 seconds)
    (279/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066131041 seconds)
    (280/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.117711438 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.114589516 seconds)
    (282/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.111834853 seconds)
    (283/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.09033577 seconds)
    (284/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.076724775 seconds)
    (285/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075935212 seconds)
    (286/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.109253365 seconds)
  done (took 35.905052659 seconds)
done (took 36.794313198 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099376233 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146923207 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095482215 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135210642 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123032924 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090073463 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117054785 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097509074 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122726812 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.123717885 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097924645 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092093144 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.095751736 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119375539 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098201106 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138902412 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123856622 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093160123 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.11736717 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086248818 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.117741486 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085263618 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.11123948 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069890521 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.120915566 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093199033 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116228284 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120025777 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086348181 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110199255 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090022199 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117997392 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086219025 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.12407835 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093519896 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118284117 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097220796 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.11920438 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.08736244 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110135997 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117665175 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.085660312 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.11615771 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.093676819 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115175768 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09297166 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.117935017 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.097980231 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138221886 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115301855 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.093891707 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.119579919 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095388113 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.116445957 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090339064 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118062147 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091356461 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138070709 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118412811 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09184891 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.116324393 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.093967933 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.114426784 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094299953 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.117640597 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120497319 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097149723 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115272794 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096644352 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115114361 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085833621 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118382088 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089190535 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110386869 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095502782 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121284243 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085540467 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.115083144 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.092580795 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.115170073 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.10897356 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089172206 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111559591 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092986917 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111752273 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069116076 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.090243868 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.116447144 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.086395319 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.119092999 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.115578984 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093102989 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111981602 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.097949656 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.108911117 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.09165855 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.109762015 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.08713127 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112394142 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090565266 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.109361133 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089011752 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119117318 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088370003 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.116895775 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.097979642 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.110354135 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116171987 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085813244 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110131674 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.100583783 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.120020583 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086000594 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115097298 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085560612 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.117896852 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085429905 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.10984864 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086172393 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.110209232 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092176941 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110348826 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08958487 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.117249776 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124423658 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086264978 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113396352 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089189611 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109932307 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.091524248 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110353242 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086709388 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112075004 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077274348 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112862433 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086543849 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117795418 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089207006 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.118994944 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.087717695 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119986582 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092387556 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116675337 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092095902 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109445051 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074371103 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115137477 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088859373 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112627362 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086436769 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111999792 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086268744 seconds)
done (took 16.802550542 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087961761 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.182926755 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.149953119 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141296205 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106061738 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111396505 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.12122218 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.117553324 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112584847 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142242061 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109980005 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.130830032 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.146103056 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.085921523 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111272044 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091194732 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112332407 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101647479 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.144596687 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132357915 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.162897817 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085725844 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.145816008 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134682724 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.1201513 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104743821 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111445885 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091115174 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114209112 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112193319 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131358477 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.090003934 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.111984261 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133499382 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.103878642 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119078769 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086897079 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.117963777 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087141209 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111125914 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140351198 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.108516154 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.116066073 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117173484 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.09052487 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113625925 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.08828842 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.12039656 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097420416 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115518466 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125998802 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.153875254 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090058669 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121093253 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086195841 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122286576 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121131909 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089588368 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112001548 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090256548 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111755176 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090592068 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126564922 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.139909733 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.090646801 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120541343 seconds)
  done (took 8.547020931 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104094922 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138570874 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.10478601 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.129908352 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110823505 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088116146 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112428525 seconds)
  done (took 1.731836072 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.087773939 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133380358 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111271528 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136720576 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133317265 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.108878396 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124596184 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088592208 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.130348075 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.114096372 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.108443862 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150879709 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.088880663 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121030184 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137801955 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088297797 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136675288 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088152699 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116482391 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.136284871 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.090894358 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134854424 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090270986 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113144272 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102344257 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113068374 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161648144 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093344814 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11450565 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092194078 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111024503 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.166025598 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102580168 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124456165 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112668799 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102925563 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.12747507 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.104138071 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.129146528 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093559029 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.126865621 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.113299206 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.089013264 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.110679926 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.092390647 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.123211753 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.089738507 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.113438172 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091840028 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133186832 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.088699725 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126646699 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089041141 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117027947 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.114534028 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094190763 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12326431 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089709805 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133225211 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090040072 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130090738 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.130274373 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.102811443 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130385018 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091444568 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.12666052 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102807277 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116297816 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089431734 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116258365 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.129202754 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087208374 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115087145 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099328831 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115001912 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.111741992 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137686599 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115003113 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.098836757 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113837075 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.0889735 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113568838 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112186058 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117096441 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088289412 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119363514 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090732586 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.111954994 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087991311 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.116605571 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.111767302 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.089761167 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.116615889 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.088765715 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116718328 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.104515951 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11421857 seconds)
  done (took 11.768100833 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089856558 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.11573135 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091609373 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113957231 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089856175 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114446238 seconds)
  done (took 1.572639358 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113301493 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11626325 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103061231 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.12041013 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155959755 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.128166138 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.104190542 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12378068 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107185337 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127166452 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128279197 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.103675348 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.1354393 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.119638682 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.102949452 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119950929 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.128684051 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.098686468 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126724517 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095818836 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136323302 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120720041 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096271331 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.130909074 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117781978 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.094781723 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124679338 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102514276 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126689576 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123487256 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095280124 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117810592 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095025168 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123355106 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.128820201 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096120335 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120675032 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119473389 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099612766 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117642943 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.103816241 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122039265 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126401034 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094488389 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123259547 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.12036732 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093696593 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125442964 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.102631304 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.118140096 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118156193 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094927794 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117135482 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093916888 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.120208471 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123557291 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094162843 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.128567417 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.12069779 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.095506266 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117439683 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093413495 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124300707 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117205659 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10393274 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119518813 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094911579 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121913582 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121420844 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.094978185 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118291162 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092350202 seconds)
  done (took 9.162797072 seconds)
done (took 33.722614242 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.686460418 seconds)
  done (took 1.639720974 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.815272456 seconds)
  done (took 1.771854629 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.918028623 seconds)
  done (took 17.902122485 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.491868455 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.577370428 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.990940139 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.176127094 seconds)
  done (took 3.193186236 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.953260225 seconds)
  done (took 1.928924182 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.281694236 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230151298 seconds)
  done (took 1.4733419 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.763508118 seconds)
  done (took 1.736520213 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.340965208 seconds)
  done (took 2.303527062 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.325198381 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182924496 seconds)
  done (took 1.478932491 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.544395011 seconds)
  done (took 1.516993887 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.808488798 seconds)
  done (took 7.783795018 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.265733151 seconds)
  done (took 1.249968635 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.298968527 seconds)
  done (took 1.275016172 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.488449493 seconds)
  done (took 4.465757308 seconds)
done (took 50.686820767 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.097655306 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.124917055 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101221294 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.12289939 seconds)
  done (took 1.41776107 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100530249 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120119217 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.0993136 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119586832 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125737757 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095165985 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121958616 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.099286461 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.11926798 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096053196 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119744623 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119061226 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.097901015 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121834438 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092845184 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.12268988 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098426236 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121236432 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122495783 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095358509 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.11858326 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.09709079 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123844593 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094249721 seconds)
  done (took 3.622317197 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.098837237 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118071585 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.095846552 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117843787 seconds)
  done (took 1.416676717 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.098603123 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.140573522 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.137519757 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.099141769 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.140833823 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.13439272 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.090699265 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115618952 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.093068403 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124760074 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090012743 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.148136765 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13610431 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099152938 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.126214229 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088059761 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116749876 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.135847107 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099521537 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125126246 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.091935655 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124228572 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.089875985 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.138811723 seconds)
  done (took 3.766068873 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169423006 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126880494 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.13766368 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094389111 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159500376 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139849333 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087718306 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139872605 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.08732339 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130043169 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.1170424 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132154064 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.12752131 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087398884 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113026628 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087013881 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.127491856 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.126766713 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090175289 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.126268075 seconds)
  done (took 3.395575802 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097813609 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.115779723 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087002718 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.11493399 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098510502 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120154609 seconds)
  done (took 1.621802114 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090679149 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114440706 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089509449 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113099295 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093725391 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.113791107 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088259945 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113936131 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089075065 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114027754 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088865789 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115088685 seconds)
  done (took 2.211964375 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.49741575 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119288081 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120453074 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088887866 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.121046345 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089653802 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129168183 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092856598 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140646604 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.087391864 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11533956 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.089319189 seconds)
  done (took 2.677551426 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232234531 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125657029 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283600521 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.368139634 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152729757 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176251049 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279702479 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158972346 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.222551975 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164545074 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201251519 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221340338 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150056962 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18912531 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137155567 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.143871466 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203918406 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244146039 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151956965 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206558924 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225205412 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167120986 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17914382 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149956393 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136646257 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17013566 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.093149544 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129018858 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231396868 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175280894 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212761753 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16035002 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14457524 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207520118 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250721396 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220537778 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280906681 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134113112 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.149540537 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.165021177 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260955871 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136888086 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20119981 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152405772 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131153054 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217246763 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164504612 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.174660805 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.15162898 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137047689 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193322732 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23687306 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.19111403 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137497348 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301392423 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147636543 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.198771357 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19253869 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248116958 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198974314 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210929108 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094531412 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186723031 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216828038 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184552705 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.172902922 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.207046789 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146508835 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197798134 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187182258 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16291767 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218855448 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.183395717 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138612259 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168518957 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171142211 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171074291 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256992648 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209950799 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.094746313 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167193858 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14837396 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133523738 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.193628618 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097615662 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237574902 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143059345 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.162213102 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212701806 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158824941 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159783087 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201151305 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228453468 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14722974 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.082874819 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153402189 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154860741 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191088948 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13994114 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157436187 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160808009 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129931038 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182031365 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.125164559 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183292815 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.117173169 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173651066 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18131315 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.125992508 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159351396 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150415229 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.12456208 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200317645 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197565364 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141563234 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131979287 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20813235 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177185113 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150296935 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176514551 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.225342788 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.11613273 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147565925 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227174455 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214314639 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139707378 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226599756 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154746363 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107384252 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132328238 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180845551 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154254293 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161648105 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133531563 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.181330723 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23042516 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.097851915 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13738593 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191208064 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132850106 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131168078 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162980428 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147767457 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111322083 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.150417654 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.152816876 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207775162 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17718857 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154242559 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163577647 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15124518 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252132827 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140719817 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.123885801 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147729415 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.118933752 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.192262574 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196687396 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130025588 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228811978 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.169914235 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202214792 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167711638 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133490064 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176494257 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128811968 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.09241498 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220016106 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167415564 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160572625 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194925403 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225697524 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.178231105 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.181747198 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19735925 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172282645 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164340587 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15563731 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111338803 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159079985 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196408568 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096564328 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.143349739 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133373768 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146207785 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113884623 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1340348 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221440707 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168860252 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187723919 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158933918 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149450373 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180072711 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128529003 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172770663 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.176256834 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146369513 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.196244442 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220214876 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183986291 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143297246 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198748725 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121065661 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123462759 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.112876798 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195057195 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106186471 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134707896 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162291709 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17962537 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179193165 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201079144 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209693086 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196232133 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188262815 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095193425 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168003924 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183060848 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174819297 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.192250125 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138814078 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.149145675 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178847444 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156373592 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253131046 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167845588 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174224207 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232384871 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.149803883 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104728998 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150875717 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191950953 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152794738 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20219214 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119134576 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141403916 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160774117 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132327551 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159752822 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181783926 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161075642 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214324297 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.148841058 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183985955 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126708109 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162914606 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159888841 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165129106 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.080463929 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17381734 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230893753 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147865546 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16715904 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188142571 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131978065 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306677692 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240010776 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194096481 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136890051 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1556817 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160668437 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163955967 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170881088 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178805672 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158275272 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186087534 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15857128 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.135930034 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139966164 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119892788 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148618769 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131016029 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147087466 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.176708609 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138737377 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184814703 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162033354 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159727042 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172061228 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149759841 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143060145 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149113541 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213191252 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18392156 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237747321 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150137162 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178729988 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231163576 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098093257 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131209079 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132537494 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1787668 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107434017 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219886437 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.185934229 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228208679 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181509938 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19240748 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139452407 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119110847 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128498172 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198633223 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206721225 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150976872 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158347426 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229481762 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.11856634 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132795072 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177142631 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314212774 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119265407 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221693633 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079800413 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.277821666 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124920976 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103438201 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162298482 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233772101 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.134949886 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.187311642 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170716577 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169907422 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164580465 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148680224 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19019998 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242765157 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199893057 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178450199 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.132099173 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154380857 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176035031 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21875782 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157007691 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112152181 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230652851 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194587889 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.194752169 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.140726159 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16807666 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166434713 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156896731 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213701973 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106484308 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232690276 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133439914 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192470509 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152722305 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144586927 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17453608 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.186016732 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139317493 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213884128 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182533969 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134874036 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105269315 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167447576 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20717023 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154940812 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099142035 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205751813 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.0970671 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219536336 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228164438 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134507737 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154503657 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147401727 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13498224 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153754134 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156771774 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112242774 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.164762346 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200596807 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134934599 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190510135 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230436645 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168527933 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172694763 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143866286 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.691627096 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131236232 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192011191 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158098753 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23409228 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148468703 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173208688 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157025574 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167114965 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19434231 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160208557 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.22945263 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219260034 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.17753216 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10255704 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183309225 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161759468 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.114756282 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149661476 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166469388 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158461811 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.153585452 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.204422284 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170965696 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.10626204 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140655846 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195628465 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158632067 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209714675 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179487115 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109143159 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199551843 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187027686 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132708252 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179407965 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236646345 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112790963 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151489942 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.13363164 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.15596596 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26061593 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.095399929 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2319607 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183728384 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157760247 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16776597 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145272617 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220034911 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15716244 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184779154 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146044317 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159030339 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156001159 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136018606 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.100764443 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155144706 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165495475 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150111627 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15718314 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.163927643 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193497787 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.094401574 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143174513 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314723575 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191910617 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242532248 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.106921651 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136219276 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16131125 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149543523 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.175254002 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178056225 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135817425 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135065154 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.107922745 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.15737834 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.11164969 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153904746 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222037494 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163700008 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2063697 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134627179 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.275086389 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110876682 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154956287 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.114553308 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.103659103 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149190888 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144825701 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157766692 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19016508 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261777732 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.14709766 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.131324068 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148549349 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.097510343 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134541768 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162784848 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164775704 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176175791 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143589855 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080039229 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155602052 seconds)
  done (took 82.699252448 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161189671 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131576775 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146171564 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201142471 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174596017 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268699117 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209478275 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.251046704 seconds)
  done (took 2.619095863 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.092836626 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145387654 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.155525723 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.131775761 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09101036 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118912633 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.341903045 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132338404 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.115948247 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120743466 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.171818854 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093042749 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.54462513 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.089511136 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118644939 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.105807536 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.09142239 seconds)
  done (took 3.730470054 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.471594972 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.718510567 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.509596397 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.096185289 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.124067638 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.111145865 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.693446772 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.19548072 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.113743393 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.484435633 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.7725134 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.158785423 seconds)
  done (took 18.531450534 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.113901854 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136175624 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.121988854 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.151699436 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.139639691 seconds)
  done (took 1.750881613 seconds)
done (took 130.43391984 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.103273341 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.400307361 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070496351 seconds)
  done (took 1.586787708 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.106702331 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136030863 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108087805 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136485918 seconds)
  done (took 1.579526424 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097521963 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126577546 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108276426 seconds)
  done (took 1.418231794 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.319737776 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.188674019 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.167409338 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105382263 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128818599 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102298987 seconds)
  done (took 1.424763858 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.096674025 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126811681 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096717689 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129184753 seconds)
  done (took 1.538043974 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.093404737 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070454755 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.099821238 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.073978371 seconds)
  done (took 1.422670114 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.112651778 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131581413 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103163067 seconds)
  done (took 1.437805246 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.127772283 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.137979375 seconds)
  done (took 1.355121986 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105579679 seconds)
  done (took 1.191893435 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.117033415 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.168327558 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.187786205 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.164056011 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.234112918 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.164584229 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.140659437 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.113766569 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.130176254 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.143165286 seconds)
  done (took 2.655441175 seconds)
done (took 17.474166682 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102601839 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.411379775 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412073978 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115182911 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.720043643 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379462459 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.035588504 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144784963 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164378716 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093011384 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138502309 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.669796766 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.068260502 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.369758093 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.020481381 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.371838811 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675723113 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120233624 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118846982 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093942639 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.020645991 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.090900331 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120759926 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091846321 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701563632 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424582675 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093572473 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.370474565 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09229948 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125559537 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.381620349 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121687592 seconds)
  done (took 16.938903004 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094463353 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173195023 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09741345 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137140305 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122669801 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09340899 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12327465 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092531196 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177571219 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122076113 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109398417 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120190986 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124800832 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094343095 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140122708 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091133596 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124369721 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091394306 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121090564 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120398053 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.110727908 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.119521788 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09291208 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120778696 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093173705 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134706055 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093843537 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120202303 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119492989 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097770198 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126711026 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09326924 seconds)
  done (took 4.784858326 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139238009 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181255915 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127800053 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126114736 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.166925756 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.122942671 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197659035 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.116010194 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181131838 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121066043 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138007728 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.091570935 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155879077 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093710551 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141571339 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.119427569 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096138758 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121379092 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092112219 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122363878 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138502401 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092027442 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121150048 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093158617 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122038317 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107213826 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122855147 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119793112 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092355456 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124971106 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098053497 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122813793 seconds)
  done (took 5.104881159 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096925931 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.12506065 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108161299 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137875568 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094577118 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124815591 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096344826 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123693073 seconds)
  done (took 2.002890264 seconds)
done (took 29.91793032 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110157531 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126097043 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.105746955 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134163317 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102059554 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131802905 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090705485 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133552767 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133418808 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101486167 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136857452 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091144147 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122904526 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091571272 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134888014 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096470592 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132314196 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101620002 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134193514 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131472557 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.093858359 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132632866 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102335987 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133194861 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103717334 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133790511 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136865765 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.098824621 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121975921 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.093982832 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125223179 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103306943 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123437066 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104818058 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126737681 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096374362 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123905986 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094193012 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.13304832 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132411707 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.098946753 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.131656627 seconds)
  done (took 5.975747886 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.106566074 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.138803482 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.103450612 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080495439 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116471093 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079435424 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137170987 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078521087 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109753847 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107865318 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073564147 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106059944 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078079644 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101418041 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076196533 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074602789 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.1089637 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075439739 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075519537 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.10571532 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079185304 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072303615 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107963501 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077795167 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074215284 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109970114 seconds)
  done (took 3.557422948 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100124332 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134269268 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11224933 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184036306 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160471308 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099866283 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131886639 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.110239243 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.13805863 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.12101533 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095912231 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149027998 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109066826 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129134267 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091438868 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137125264 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.13555995 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.092848685 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127353128 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11264609 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138225828 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102423331 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141121432 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133693523 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092252528 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122664464 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097259652 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134812262 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097814658 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131331627 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097130088 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124605264 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122072922 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.103807992 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126271592 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094102228 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142111869 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10318524 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131219231 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092219502 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.130010823 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121590809 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113121732 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161184831 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09060735 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129160924 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.094518547 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.132457723 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120704941 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110472434 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130803705 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091302341 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124671522 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.090506265 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121158318 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106048255 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123034045 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.0942322 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131270122 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126011022 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.104724841 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12508092 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108383461 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121594732 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099249882 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121031603 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092037185 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120856996 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.113466096 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122581779 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.160863103 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093376419 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123784422 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.100614709 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.12952693 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127969384 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093038243 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137508068 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102555067 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125318938 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102120702 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126573468 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.09534087 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.141148763 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.093772416 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.123926748 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.092021782 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.128041236 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123747201 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093210729 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135159953 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091531304 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124494632 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109245395 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121717307 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.092712505 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.127863979 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125874077 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091975115 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136100718 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097483581 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.121782286 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102452299 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.121729229 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.095515177 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.131868926 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126312166 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091662672 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.12629565 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099132734 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.12284493 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093220666 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125031018 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094368532 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132760514 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099403172 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.127710388 seconds)
  done (took 14.762245735 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.227236504 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214590885 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.203666596 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.290776077 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134438391 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113940679 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.210849329 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.154514459 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123104679 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.158859639 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.173369392 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.18025538 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.167765661 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180256682 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.169472811 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.092258912 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142288524 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.13220347 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.24373473 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.256799382 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143115837 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.100404669 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.159785391 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159491538 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.136448727 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.102029602 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.140447555 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.133740659 seconds)
  done (took 5.764399518 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107171145 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155758427 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097221925 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144067268 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148183703 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092916993 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.12745075 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093682281 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.13438898 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135273199 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092485336 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128627359 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099179653 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131532575 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.122200729 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.10283692 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.130478616 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.093868932 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126160498 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096070965 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133021884 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100435261 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.125723313 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.09080512 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.132462689 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120988521 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.085156261 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141741188 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.091648663 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.143546471 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120054283 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100760897 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136698401 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.092473525 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122851374 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094693759 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124966675 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094781819 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124567413 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.090837604 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121879946 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077473301 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.12190568 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106130772 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.129128704 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080257371 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.12882309 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.098658043 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.123880667 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119632022 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.0955249 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125457878 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096757532 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130408217 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.095254198 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124139852 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096731773 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115116639 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100587245 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124501197 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084384519 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.091360722 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128534465 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117370446 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101121867 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127310104 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092666358 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.124831206 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097109896 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129130651 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094531667 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129393234 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.09012511 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126131505 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095323734 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128875329 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095458274 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.12214874 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.092332178 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.12312336 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074665036 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123392181 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073349177 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125770828 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091039539 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121874171 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095943242 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129556157 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137403749 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094878776 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132002789 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094050745 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122297165 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.095748115 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.1125414 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096252166 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139063559 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140643353 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.09305761 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.120846361 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107339621 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125569572 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092267555 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105221241 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.1026352 seconds)
  done (took 12.903112403 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.126552599 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153161394 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094390637 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.14086559 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156608188 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.156530106 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100535465 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130079133 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095323932 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142280649 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.09355476 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132509736 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.09270462 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.13762141 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157268014 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104236672 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125212037 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107363298 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.12762565 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169325947 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112117754 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142690304 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110485356 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124194742 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.098558017 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.140732091 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161113889 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107198707 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137075383 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142141965 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107852757 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161229774 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.11279394 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.128117639 seconds)
  done (took 5.465233513 seconds)
done (took 49.524380688 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.23451819 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.422044931 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.200135456 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.123420933 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.25238136 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.223475887 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.210926579 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.195632754 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.229396622 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.198761578 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.457096458 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.842148671 seconds)
done (took 58.716015451 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.265649693 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.218427802 seconds)
    (2/2) benchmarking "String"...
    done (took 1.348416224 seconds)
  done (took 3.585464217 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.433936459 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.01956529 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.342558785 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.083819027 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.101557572 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.378780761 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.706921272 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.355760514 seconds)
  done (took 27.0074586 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.093040619 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.167496352 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.110096611 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.092545762 seconds)
  done (took 5.483107389 seconds)
done (took 45.899819242 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.088021724 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.167554403 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.10736875 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.067623924 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.196839206 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.119378625 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.339459697 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.052936986 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.085508909 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.073574938 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.116640964 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.093374228 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.10215452 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.385579378 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.092184777 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.087733671 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.127421725 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.341981073 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.488155208 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.089324773 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.099931669 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.161651656 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.108290877 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.088196606 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.118160841 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.100595948 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.086757875 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.09606415 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.652635942 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.088366985 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.093538114 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.510855331 seconds)
  done (took 187.447701257 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.086517564 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.117790786 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.188638132 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.116258514 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.551652756 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.284038438 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.221717289 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.798442855 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.103049313 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.101653608 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.330144265 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.092060373 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.492466827 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.059230737 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.117031584 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.175718374 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.420747967 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.450394153 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.134463591 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.267079776 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.100224091 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.467269968 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.405622551 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.311600755 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.111821183 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.125863599 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.122166186 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.135213123 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.273369459 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.336771649 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.121850634 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.097953953 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.708451503 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.946326541 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.111888079 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.11015454 seconds)
  done (took 146.617763518 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.13406579 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.088799913 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.087943039 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.087561412 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.123096195 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.088859749 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.674067165 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.674674361 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.592149326 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.299707126 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.444249406 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.317179533 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.089219802 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.088990473 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.183708329 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.102627057 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.090359367 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.104974617 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.132103056 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.092930066 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.090455383 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.666850042 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.105527458 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.091407213 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.269124286 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.10670635 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.122735059 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.480402432 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.089345821 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.122221249 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.420410943 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.139671716 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.089885429 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.392214457 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.5183493 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.204515541 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.092876018 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.123098198 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.090928307 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.370008307 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.090657267 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.091097002 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.094862925 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.724071667 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.094059739 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.677737156 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.095960812 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.026407576 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.091717292 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.091441097 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.934708035 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.717288333 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.111204195 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.091141883 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.0951988 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.091578045 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.09200138 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.124391932 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.928343757 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.205709625 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.109460855 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.095507642 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.123962391 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.091914634 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.126328213 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.095655326 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.423821143 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.162281066 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.319485372 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.660452548 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.093313058 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.186669953 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.212540757 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.092418415 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.092489226 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.093233743 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.092035811 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.204193398 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.092915099 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.486837851 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.268818922 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.110152249 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.460122097 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.193812538 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.093013978 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.09328835 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.093652781 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.416230479 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.096735021 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.093188051 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.820513616 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.186910957 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.092771386 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.09307715 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.093079447 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.488545842 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.093357824 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.675578719 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.330422473 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.097515359 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.970518931 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.113613008 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.506442675 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.654533349 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.754196207 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.097292328 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.205079741 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.270558746 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.111676371 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.094459193 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.453563678 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.097591457 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.148921343 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.094732488 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.492797888 seconds)
  done (took 354.260439029 seconds)
done (took 690.476073018 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.682387421 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.676487872 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.787360607 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.673354962 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.638603862 seconds)
  done (took 9.486124668 seconds)
done (took 10.51105596 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.280252272 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.279185138 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.155617708 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.282284115 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.123051664 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.298357764 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.260731117 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.118429893 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.194342522 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.176612642 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.194004651 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.147546457 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.122297286 seconds)
  done (took 16.661167858 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.405394421 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.397947152 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.157484166 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.407923415 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.134890115 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.406537466 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.294938736 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.301363185 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.305495166 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.129244171 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.109804161 seconds)
  done (took 15.081381186 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.423722939 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.411998763 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.162587216 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.403843724 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.137681699 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.419269758 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.295194863 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.314738897 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.313217835 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.129443338 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.109950958 seconds)
  done (took 15.151884568 seconds)
done (took 47.920994436 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.105641663 seconds)
  done (took 2.135896455 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.139882647 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.30322309 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.122432122 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.111775544 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.106767639 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.107371805 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.112152636 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.10639081 seconds)
  done (took 10.141314704 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.105816298 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.105774753 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.102622782 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.103948598 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.103122278 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.103109317 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.103460623 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.106136893 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.105184928 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.103621071 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.102747609 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.105711634 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.106441933 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.106144063 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.106059333 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.104199659 seconds)
  done (took 18.706185194 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.105253751 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.10401341 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.10365 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.104400951 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.10412666 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.104096149 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.104872958 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.104053042 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.103908114 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.104254089 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.105534859 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.104064498 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.105494456 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.10341119 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.104567752 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.104290766 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.103633434 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.105120278 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.108215885 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.104941417 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.104686237 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.10440071 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.104319129 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.104913005 seconds)
  done (took 27.544144929 seconds)
done (took 59.555274981 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.985580543 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.643321685 seconds)
  done (took 8.661640016 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.107266933 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.107048959 seconds)
  done (took 3.248242622 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.106931232 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.107320427 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.106984255 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.106990103 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.107337889 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.107400949 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.107486211 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.107508384 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.108249614 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.10788032 seconds)
  done (took 12.107249583 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.107448846 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.108016266 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.105353677 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.107350646 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.107645216 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.105852537 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.108652062 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.108249796 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.108710072 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.1053101 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.10891 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.106934872 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.108224061 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.106581349 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.108285341 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.106686094 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.107079167 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.106235553 seconds)
  done (took 20.966561832 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.109186207 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.10836053 seconds)
  done (took 3.252703448 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.106812367 seconds)
    (2/7) benchmarking "second"...
    done (took 1.106666002 seconds)
    (3/7) benchmarking "month"...
    done (took 1.106683429 seconds)
    (4/7) benchmarking "year"...
    done (took 1.107733811 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.106889303 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.106382367 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.10652978 seconds)
  done (took 8.782249762 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.109792181 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.279632732 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.35262136 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.704242639 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.111269165 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.113743012 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.955857852 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.113411531 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.114356333 seconds)
  done (took 12.89051798 seconds)
done (took 70.939022142 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.129654732 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.122320352 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.202555242 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.113547368 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.124054832 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.404186457 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.142310293 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.230941546 seconds)
done (took 36.502474195 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.12489362 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.094315894 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.793889306 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.088425587 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.124909521 seconds)
  done (took 18.137647759 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.098639912 seconds)
    (2/2) benchmarking "read"...
    done (took 1.439770235 seconds)
  done (took 4.575074251 seconds)
done (took 29.87072218 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.111906141 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.111161232 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.109471423 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.109046234 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.113251077 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.10908005 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.1094951 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.109052879 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.111962864 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.111405322 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.111598036 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.112069643 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.111252997 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.110862191 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.108927755 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.108436077 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.110735499 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.108429572 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.108340846 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.112096483 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.109663486 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.111865634 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.109121643 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.108608502 seconds)
  done (took 27.685125631 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.111590978 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.110724762 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.111656982 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.11197677 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.109387274 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.114123798 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.112196396 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.110379315 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.112936595 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.112167883 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.109878119 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.109837784 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.112490415 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.109724857 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.112689698 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.110084135 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.112873762 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.10995576 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.112046459 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.111189189 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.112385802 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.111391438 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.111096797 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.113054 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.110221066 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.109756724 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.11377925 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.111364956 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.113255529 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.110973879 seconds)
  done (took 34.383254333 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.117515623 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.120111321 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.112738125 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.11382927 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.113542427 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.112418042 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.113348184 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.113701794 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.112999571 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.113582235 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.113970239 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.113785618 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.113935542 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.114045678 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.114017724 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.113432653 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.113772159 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.114374224 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.113717881 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.113909423 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.115270097 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.115401334 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.114098651 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.11427048 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.114356865 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.114263321 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.114740456 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.11453353 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.114432269 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.114303288 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.115063968 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.115112643 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.1150315 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.114985113 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.114673416 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.115468808 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.119533815 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.122990353 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.11451737 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.116353721 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.115047822 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.116002912 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.115889243 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.115426752 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.115726621 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.115364262 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.115874041 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.116923746 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.115652054 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.116323982 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.116741373 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.116260212 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.115896985 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.116519145 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.116147437 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.115916898 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.11666718 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.116064092 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.116414662 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.116071901 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.116082791 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.117257175 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.116409586 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.116826905 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.11673455 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.117021033 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.116797981 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.117057782 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.116403253 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.118437454 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.116370142 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.117850864 seconds)
  done (took 81.357675827 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.118117734 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.114556049 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.115474164 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.114944936 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.114804413 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.117242081 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.115321706 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.117470866 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.115408157 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.117652794 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.117145718 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.116078182 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.1154809 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.118694535 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.118237575 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.116211691 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.117740782 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.115327184 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.118627518 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.118488434 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.118018971 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.116014302 seconds)
  done (took 25.610042879 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.118613764 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.120921668 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.117188274 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.118798747 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.115458955 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.118581452 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.118231285 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.12125662 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.119223198 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.11727898 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.116064439 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.120279506 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.117230541 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.117378359 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.116935321 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.118360368 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.120234051 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.11834031 seconds)
  done (took 21.174558606 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.118483206 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.116826965 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.121667162 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.118667894 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.118993334 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.11979556 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.11770622 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.120504493 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.120221429 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.119347527 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.120615836 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.120456594 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.121583339 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.117900544 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.120316768 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.118820002 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.120311058 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.11838822 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.120223616 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.11872238 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.117526028 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.122137706 seconds)
  done (took 25.674238916 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.121199778 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.121079139 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.118594398 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.119211011 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.118193332 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.120864942 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.121252026 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.118489675 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.122083158 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.120557226 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.118905602 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.120426321 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.121130809 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.11988323 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.11880099 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.119118713 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.121231829 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.120302682 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.121811144 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.119112712 seconds)
  done (took 23.448269507 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.123194028 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.122693713 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.122954012 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.122670069 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.123270259 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.123052593 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.123387339 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.123494351 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.123987912 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.124820184 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.123466886 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.123637868 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.123872361 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.123295022 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.123846431 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.124391122 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.123905687 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.124836396 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.123431825 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.125111316 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.124406272 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.124531509 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.124157479 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.124519865 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.124653842 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.124376799 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.125326327 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.125559755 seconds)
  done (took 32.517944153 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.123777709 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.124224325 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.122026624 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.122562542 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.122582924 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.121815947 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.121972842 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.12234644 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.12403648 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.122851626 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.124365967 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.124213556 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.124702927 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.124956904 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.124099432 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.125469581 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.125363262 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.123370418 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.12279038 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.123389958 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.125296964 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.125358703 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.126337105 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.12286295 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.123618021 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.125528139 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.123597037 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.123237314 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.126198449 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.122656936 seconds)
  done (took 34.765477772 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.14476095 seconds)
    (2/2) benchmarking "in"...
    done (took 1.144386697 seconds)
  done (took 3.339532568 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.12388375 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.126325192 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.126415288 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.123751809 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.12356708 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.126864139 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.127249704 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.123363253 seconds)
  done (took 10.052540814 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.126515255 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.12803109 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.126949181 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.126307174 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.128390249 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.12715428 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.133502911 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.147077924 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.128145712 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.1278914 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.133729582 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.134429018 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.129947784 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.126948877 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.126980796 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.12928022 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.127229464 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.127908124 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.127862285 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.128121725 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.127935273 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.129289073 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.129529087 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.125673367 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.129134294 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.137605839 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.151630256 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.128825424 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.128449396 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.131389608 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.128630959 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.125626228 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.12933404 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.128389714 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.135755744 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.129937504 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.137867773 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.148650778 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.133870978 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.148706584 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.129577809 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.127209722 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.129177399 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.130242289 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.130917758 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.129287009 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.129826176 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.127363255 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.128904543 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.132336661 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.13504062 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.128961044 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.127643413 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.132551049 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.130577485 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.13506295 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.149237521 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.132655341 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.138825053 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.140344891 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.16113986 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.154933228 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.131413874 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.131129403 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.140903517 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.154130665 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.13647036 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.148332076 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.129018663 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.131820177 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.136565994 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.16293943 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.156300526 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.131590193 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.131971668 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.131959462 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.131062963 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.132274041 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.137534138 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.153910211 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.131635412 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.132168828 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.141699337 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.154255383 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.132591631 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.132929021 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.133311982 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.133080344 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.133502351 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.142376774 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.152640288 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.132859713 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.1321517 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.132511295 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.13366037 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.133104792 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.131648581 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.133206832 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.13082619 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.133135856 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.133565386 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.136199447 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.142393225 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.133258017 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.133206815 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.139000519 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.154555002 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.132387631 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.13900766 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.133452176 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.134418872 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.135786262 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.138623116 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.13183513 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.136393203 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.142362453 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.134111061 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.135549811 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.13410767 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.135048049 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.143279932 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.158503698 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.135441986 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.134619394 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.138075651 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.146310303 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.134802108 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.137211339 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.134548227 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.132861252 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.132227975 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.136153073 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.134857866 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.13585867 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.135930603 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.135903888 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.133888957 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.136536826 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.135528146 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.135916851 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.136999172 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.137437643 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.135518581 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.137300314 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.136057336 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.138091739 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.140393615 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.155793703 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.136837088 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.137668141 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.133973617 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.136341463 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.137267016 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.137157364 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.13617287 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.137531584 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.136418478 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.136680224 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.137227682 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.137317091 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.136875415 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.136566694 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.140335058 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.137538605 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.14062865 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.13648863 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.134974004 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.137372202 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.137815608 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.137814728 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.137226039 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.136221066 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.140186671 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.145454174 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.137711523 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.138212777 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.139833851 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.137887047 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.137904797 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.138326225 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.141542128 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.145672097 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.138621006 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.143625655 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.158458525 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.138319591 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.138639199 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.139498021 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.137475819 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.138904115 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.14069887 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.146705889 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.149918908 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.164235549 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.138627882 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.142919777 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.139204737 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.14310142 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.141717268 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.139002361 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.139603961 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.139388652 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.138776401 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.138880919 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.140984997 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.138719954 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.138648937 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.139889628 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.140282435 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.139478399 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.139989848 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.139587066 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.140533094 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.137848221 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.139287996 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.14013297 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.139825981 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.137611352 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.138152572 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.14012413 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.140573017 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.141167583 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.145676051 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.137246764 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.141896576 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.140838886 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.141153872 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.139488738 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.141399511 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.142223754 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.139904521 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.147641711 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.160872647 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.141691694 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.146784822 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.161054295 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.141394807 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.143776665 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.14185394 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.139453727 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.14411064 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.150369869 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.14225363 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.143715638 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.142060285 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.142317076 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.142336166 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.148103372 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.159984078 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.141682072 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.143107399 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.143335528 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.140526762 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.143766845 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.142811084 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.142851431 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.144717266 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.143089361 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.143422252 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.143476803 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.143290939 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.14298683 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.1423413 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.145098416 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.151318001 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.148265822 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.143013767 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.145338913 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.143876946 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.147639315 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.143405778 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.143744257 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.143400174 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.1546679 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.168852527 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.150515839 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.164267374 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.144104156 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.148825515 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.164329228 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.148267271 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.144555945 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.14496986 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.143490111 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.144448182 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.14203328 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.144873334 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.14442154 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.145481599 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.14603376 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.148747467 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.144715796 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.144122887 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.144895592 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.145432316 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.145022803 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.144735988 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.146010287 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.146038231 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.146324238 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.143714684 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.146199379 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.151830414 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.165285529 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.145638959 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.145384535 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.147047628 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.14676942 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.146629936 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.14599157 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.148330889 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.154032738 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.147870786 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.153704018 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.147312367 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.154488518 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.146368406 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.148811116 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.1546769 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.145439208 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.145134157 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.146198986 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.147279227 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.152443053 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.16686022 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.147389231 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.151347463 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.147151499 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.147375551 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.147175655 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.147431142 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.147163324 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.147225805 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.154233994 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.167664951 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.151374644 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.148693237 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.145496285 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.148581302 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.148527974 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.146421436 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.150761867 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.148518788 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.148845159 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.148451877 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.147304737 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.148989588 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.148732157 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.148688567 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.145502822 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.148551348 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.154167566 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.1702166 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.153549641 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.14961079 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.155517067 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.169644049 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.154556922 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.170338676 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.148756001 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.149248811 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.1496546 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.150250995 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.150752997 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.150293203 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.149617214 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.150042314 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.153580547 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.149719918 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.150908455 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.149549623 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.15071635 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.150745224 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.159538674 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.172697898 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.151626388 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.155064343 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.148753218 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.150397958 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.154791009 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.150477499 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.149166891 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.152644258 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.160362882 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.158651322 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.152545308 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.151956258 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.152061445 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.151267756 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.15116562 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.151521076 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.151000006 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.151510469 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.150934362 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.151604238 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.15255167 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.151101068 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.15194977 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.152073255 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.151798436 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.160706416 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.172867083 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.152416563 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.151774786 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.15257782 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.152330247 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.152364577 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.151879195 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.152013301 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.153047484 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.15340128 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.158408042 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.158634498 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.154737257 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.151851429 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.153360687 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.15186447 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.153165994 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.153959346 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.152485018 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.153111774 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.153280345 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.153025304 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.153404868 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.151602645 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.15431255 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.153356293 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.153243625 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.155737012 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.160648117 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.154435935 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.15237448 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.15448375 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.154158085 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.151949195 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.154302704 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.160427299 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.178098037 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.163171551 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.161284096 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.157921918 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.155308804 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.157016069 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.162440805 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.152394777 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.154940974 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.154461044 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.154845532 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.154451306 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.156814738 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.155053147 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.159592519 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.174615355 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.154559171 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.162588948 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.174802834 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.1549185 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.155883131 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.158485319 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.155657748 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.153325135 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.155124004 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.154908154 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.16157366 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.175818527 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.155774608 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.156552268 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.154646933 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.156867002 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.159398289 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.155636529 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.156691515 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.153216217 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.156521012 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.156514037 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.155643135 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.153899902 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.156124591 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.15704599 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.15870049 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.162177857 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.154396877 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.157684436 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.156611946 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.15616924 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.156622005 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.156700768 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.15493862 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.154163878 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.156591566 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.157661705 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.156076965 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.159303315 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.15722402 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.157570957 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.159273416 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.156532738 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.159634749 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.1659764 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.165089354 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.154727994 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.156042463 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.157207325 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.163283848 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.273355113 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.274186483 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.272160082 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.273921368 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.273567042 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.273336189 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.274259601 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.276628521 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.288564102 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.293424246 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273032762 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.271835194 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274750197 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.272731809 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.269256707 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.275628095 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.2731917 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.275264438 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.280017308 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.271450179 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276446669 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.292287166 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.273871146 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.276761032 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.2743784 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.278352078 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.274364072 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.272084673 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.271644481 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.275862749 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.288010864 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.273096521 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.281807495 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.300960953 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.292076939 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.272404931 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.272993049 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.269886541 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.271438677 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.273448531 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.272281352 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.271008002 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.273153739 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.272329786 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.27280384 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.278059806 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.27213373 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.274470219 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.271521633 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.270673938 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.271848015 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.269535715 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.271615954 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.272375758 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.272167597 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.271347786 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.271650315 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.270536897 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.283298892 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.298243798 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.272087236 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.271382955 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.269459773 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.274582952 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.274518149 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.282025879 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.280229081 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.272718865 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.271599002 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.273427699 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.272534489 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.270681634 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.270909643 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.271952255 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.271756647 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.270012644 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.283225758 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.300067764 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.276119698 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.271934967 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.273648454 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.273090263 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27347621 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.273371444 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.274076215 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.273764071 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.275703886 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.27729408 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.273773191 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.272677913 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.276173197 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.282198332 seconds)
  done (took 695.643688066 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.271449374 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.272541944 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.272177274 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.271558724 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.271461578 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.271905802 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.272119597 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.272259066 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.271695253 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.271415204 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.272760915 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272037738 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.271539651 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.271994632 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.272045486 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.272056185 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272529634 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.27320884 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.272357138 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272568876 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.271960517 seconds)
  done (took 27.906908041 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.275145594 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.27311391 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.272193528 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.275837681 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.273180611 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.274918645 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.272971624 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274835201 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.277659636 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273711362 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.27614295 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275726417 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.273799002 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.273523555 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2735726 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.276451523 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.276061815 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.273910446 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.275807838 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.273787589 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.275722683 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.274178067 seconds)
  done (took 29.236188248 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.276012713 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.275144264 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.275162674 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.274301645 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.275587128 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.27395745 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.277813948 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.276820267 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.276180124 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.27706297 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.276668561 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.27779733 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.283711679 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.281959722 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.277765778 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.276409343 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.421287748 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.27706242 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.277359942 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.278173937 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.274635575 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.281869403 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.297723303 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.275578341 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.276712062 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.27769543 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.278764061 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.278409191 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.277745952 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.279067905 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.282045275 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.278539472 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.277570893 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.279371562 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.277393869 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.279909601 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.282390068 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.278952158 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.275475736 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.278680017 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.288009349 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.300483191 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.28115923 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.285975062 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.302595287 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.279383994 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.282782468 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.286947691 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.276661057 seconds)
  done (took 64.054397391 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.280020377 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.279910675 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.276288807 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.278007027 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.279868237 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.280288235 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.280498557 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.279149601 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.277864635 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.277149501 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.279965658 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.278505627 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.277639035 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.279604593 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.281156579 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.27830909 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.277241355 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.278181135 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.27739348 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.278027237 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.278846405 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.281361537 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.2819293 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.278938455 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.281552844 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.279386641 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.278337549 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.2799712 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.278806779 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.279517198 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.282125245 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.282868589 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.282239983 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.280586803 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.279835022 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.28110301 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.282739244 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.278638821 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.281949903 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.280070582 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.282194167 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.282379714 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.282529169 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.282782614 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.280208638 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.280416173 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.280618321 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.280682181 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.28050608 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.282436625 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.283007612 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.281313909 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.283867859 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.280268344 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.2835282 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.284087109 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.281090131 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.28066701 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.281902674 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.281046149 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.281187008 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.282035934 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.283183336 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.282875901 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.282560219 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.281005242 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.28101513 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.283067625 seconds)
  done (took 88.277396822 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.282990015 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.283209838 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281689202 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281528396 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.282279357 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.282747474 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.281747932 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.282560357 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.283372592 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.284042462 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.282014912 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.282779666 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.280195667 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.282242309 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.282331966 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.282026738 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.281331915 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.283671919 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.281517134 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281623669 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.281302414 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.281852988 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.282194557 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.282712684 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.282590195 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.28158915 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.280856519 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.282231599 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282514093 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.281396672 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.283194542 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.28173607 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.282687338 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.281648501 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.283975621 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.283549753 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.282363452 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282857654 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.282625312 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.281550991 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.282910923 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.281974407 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.28294491 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.282658971 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.281672084 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.282240992 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.281998651 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.282226165 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.282484638 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.282278167 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.282963784 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.28219585 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.28243158 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.28326816 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.282585172 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.282848699 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283346801 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.282451172 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281753484 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.28234218 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.283026132 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.284121093 seconds)
  done (took 80.710222352 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.28478236 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.283584603 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.282903015 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.281205055 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.283744532 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.281638067 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.284850051 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.284702357 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.284480603 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.284667567 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284350513 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.281709828 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283007625 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284582003 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.281127247 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282919582 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.281755424 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.283448713 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.285217532 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.281962516 seconds)
  done (took 26.868551688 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.282596347 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.284757289 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.282310688 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.282555487 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.283494161 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.283418651 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.286208693 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285591293 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282333508 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286098351 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.284181748 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.286183031 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284134526 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.283483661 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.285182309 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.28461692 seconds)
  done (took 21.748336191 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.283782705 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.286505806 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.285899701 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.286373929 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.281909945 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.283830196 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.28608181 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.283205995 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.28389518 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.287128257 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.28487936 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.286567933 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.286063528 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.287107668 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.282176115 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.286885319 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.282870733 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.284435911 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.284977362 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.285948887 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.283981976 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.284017361 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.287978238 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.285764696 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.284174644 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.285791147 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.283300524 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.28452751 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.283429611 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.285211317 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.283555435 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.283405659 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.284190751 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.28586238 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.28579237 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.283771375 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.286830767 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.286213056 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.287220352 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.287440852 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.28817717 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.284791349 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.286117941 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.287175266 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.284165924 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.287457276 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.283304291 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.283875569 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.283987154 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.285188634 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.286142848 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.28582326 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.28608815 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.2859492 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.286366374 seconds)
  done (took 71.891167219 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.286957556 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.286177261 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.282732473 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.285898777 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.285497424 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.282782879 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.286560392 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.284776256 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.284842108 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.285341214 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.286739345 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.288268926 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.282581457 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.286635669 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.284189932 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.287181382 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.284236074 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.284578584 seconds)
  done (took 24.340265627 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.283438881 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.284813139 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.286821351 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.283823549 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.283693936 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.286518962 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.283823738 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.286645751 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286821422 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.284282098 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284709096 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.288042737 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286874498 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.287706637 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.284559701 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284098155 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.288760177 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.286895975 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.285094291 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.284494346 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.289154418 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.287043674 seconds)
  done (took 29.491750243 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.28543636 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.285825851 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.285759082 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.302880308 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.304997457 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.309452842 seconds)
  done (took 8.977789432 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29518307 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288132699 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.286053874 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288865607 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28714608 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285019842 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285668337 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28653381 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287850343 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285921968 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286135701 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288786781 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288382135 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285583267 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288642921 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288932272 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287224281 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287606785 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286800309 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288986998 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287698064 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287491066 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286736894 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286938112 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286503493 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287884502 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289415975 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287546866 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287210351 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290133875 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290192412 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286391683 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291016249 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286759317 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290661711 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289898131 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286875113 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290307772 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28996218 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287538793 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.289597866 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291688587 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289618652 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287794018 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290921103 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288664976 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287403116 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287116452 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288568202 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290939819 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290311512 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287391557 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291387417 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289690389 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290873586 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291119347 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289150282 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287472201 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291417762 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287905561 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289094309 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291103894 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286637469 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289241618 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290471759 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286684275 seconds)
  done (took 86.271719106 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288277803 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.288168369 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28786951 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288776725 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287550824 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287942107 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287957355 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287927677 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28757117 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290336222 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290099566 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286623723 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287440345 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287070753 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286198821 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287519864 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289534745 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287907351 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288109439 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290675969 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287120688 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287167762 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287988314 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288086747 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288122916 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291378842 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288286448 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288224876 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28809894 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2885047 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288783404 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289649545 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289731596 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.288189172 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290476453 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289571449 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287720521 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288139625 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289824377 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290488056 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288026912 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292941767 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289212281 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288292744 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289179679 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288399692 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289273979 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288309977 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288738571 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289107537 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288918612 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289275908 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289833341 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28991441 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290007221 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289351051 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290293166 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291071651 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289386119 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291219412 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288495865 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288830964 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293420249 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28896114 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289891227 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28998659 seconds)
  done (took 86.278604363 seconds)
done (took 1662.739964241 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.321867149 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.294412414 seconds)
  done (took 13.823389414 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.451988188 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.407122939 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.290499378 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.302130953 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.290200863 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.30310848 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.284143922 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.290230808 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.290349107 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.289264905 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.290341847 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.480425369 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.285806444 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.29129854 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.290602207 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.38818008 seconds)
  done (took 42.435387017 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.318491706 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.296543933 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.403232479 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.314028256 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.315872535 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.475060036 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.343688775 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.294094162 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.457615737 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.334857324 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.787803044 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.316462911 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.295324933 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.349924168 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.310104232 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.471734278 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.528551723 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.787545035 seconds)
  done (took 29.60881453 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.720896746 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.317758691 seconds)
  done (took 9.246149455 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.310453656 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.294184788 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.294347505 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.29175274 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.284944346 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.285122444 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.290135311 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.285269968 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.728898232 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.415686128 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.292772601 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.300319331 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.310644802 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.293122715 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.291825284 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.327539939 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.441985866 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.292483276 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.291295882 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.297937396 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.291856952 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.411467351 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.331668459 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.29288204 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.411011123 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.726264733 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.299507681 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.29990615 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.422807836 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.291240623 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.291541182 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.291748286 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.294156757 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.884143605 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.755396891 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.307436577 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.330596895 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.300664703 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.290736875 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.481111678 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.294816036 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.299260571 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.284445494 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.744373778 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.419019531 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.402604584 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.451933046 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.309238113 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.294432537 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.351554264 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.292973665 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.293497222 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.319811483 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.025008902 seconds)
  done (took 108.622241915 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.293873963 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.672473788 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.454148378 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.309443136 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.995977574 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.935696158 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.307784141 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.551699333 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.324656444 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.284722814 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.567789403 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.775804842 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.309455082 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.319807374 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.759815238 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.289781891 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.28650998 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.009851729 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.306832337 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.289193323 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.763080307 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.291266947 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.285572282 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.414650243 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.32226038 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.719536628 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.559773988 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.690717187 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.312282812 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.286871573 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.737791471 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.315332744 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.311533771 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.288168414 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.537903159 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.622974591 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.613965597 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.303931604 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.290519493 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.286572216 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.311249251 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.717059229 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.623192215 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.304572063 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.303603925 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.723451474 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.309170371 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.292101682 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.292363107 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.493924676 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.997385774 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.287733009 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.550438702 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.288747556 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.575288758 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.352151303 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.316912569 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.756382478 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.308991497 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.393702044 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.310013727 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.289640361 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.289954945 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.28953449 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.288044258 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.614034811 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.66958203 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.292168256 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.611986705 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.750793579 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.30980114 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.810659837 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.185389321 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.293797071 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.353723902 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.301593983 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.846472958 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.762018367 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.330976031 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.289811799 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.595789565 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.307197446 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.555124414 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.304624419 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.305247353 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.792852506 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.298532239 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.324588855 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.29052631 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.296069142 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.070070146 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.294066832 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.561837076 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.3470865 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.289563721 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.29132082 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.334232131 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.288768569 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.306041543 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.292652271 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.792771936 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.315477567 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.254844468 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.309117347 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.290208316 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.295815911 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.292937581 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.291285481 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.513049586 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.744576664 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.318651467 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.291331677 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.292136332 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.30370911 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.417043256 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.292334156 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.575868745 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.308633995 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.290982833 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.297662081 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.951204125 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.316757665 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.299879751 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.296845423 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.186870867 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.50068462 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.309710375 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.297699782 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.292436627 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.308749022 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.457136201 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.310362386 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.299838002 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.276798018 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.960207402 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.287229114 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.308032669 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.610153775 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.274724359 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.106171167 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.287058089 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.254929463 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.531188071 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.51424543 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.544126852 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.255030601 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.273395779 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.926601992 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.278101004 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.400713029 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.275078706 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.241291088 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.450049108 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.478945628 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.253367646 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.848654211 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.252317969 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.466627907 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.264461689 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.543906678 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.724172159 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.265856438 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.257383473 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.939023264 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.932856379 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.996483097 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.252361892 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.508128949 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.192937326 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.709955408 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.243183209 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.242776876 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.839814077 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.243871494 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.244691273 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.23990347 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.241868728 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.304607881 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.413331249 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.535336389 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.243579595 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.667406589 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.310434949 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.247709039 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.254396854 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.24395554 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.584104585 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.313623848 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.246864743 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.283320789 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.243061877 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.244349101 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.689363471 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.169527872 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.2427472 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.392307673 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.853002373 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.258568073 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.243612036 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.85892428 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.485298607 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.762979567 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.298808509 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.528687305 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.264778601 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.278192445 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.966117427 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.330321629 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.731529645 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.259452758 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.243038842 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.823788796 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.259554353 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.316599387 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.242683747 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.244417605 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.762844908 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.255559003 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.240681097 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.395879972 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.25365239 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.496475632 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.23100743 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.278869654 seconds)
  done (took 1095.803093425 seconds)
done (took 1300.744846017 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.230099596 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.235104488 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.220975259 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.237314695 seconds)
  done (took 26.079953953 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.240502154 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.236961237 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.240612273 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.237226461 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.238095703 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.237906271 seconds)
  done (took 8.590535132 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.263031854 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.237322993 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.238593732 seconds)
  done (took 18.896011238 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.427322222 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.491440432 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.576043781 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.330907774 seconds)
  done (took 9.985950707 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.240608829 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.239299132 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.238345242 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.240504655 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.243242979 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.244475226 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.241411945 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.24103037 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.242533561 seconds)
  done (took 12.329979752 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.240817264 seconds)
done (took 78.276042817 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.538447455 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.121472595 seconds)
    (3/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.241593897 seconds)
    (4/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.222508615 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.640000002 seconds)
    (6/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.229362475 seconds)
    (7/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.090059813 seconds)
    (8/286) benchmarking ("sort", Float64, true)...
    done (took 6.253952781 seconds)
    (9/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.220156826 seconds)
    (10/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.85416273 seconds)
    (11/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.251346279 seconds)
    (12/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.262256729 seconds)
    (13/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.483260146 seconds)
    (14/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.231395207 seconds)
    (15/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.306152879 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.794119931 seconds)
    (17/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.276337593 seconds)
    (18/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.46237875 seconds)
    (19/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.25077649 seconds)
    (20/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.321559071 seconds)
    (21/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.578599726 seconds)
    (22/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.262664851 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.070177708 seconds)
    (24/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.049522704 seconds)
    (25/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.257335652 seconds)
    (26/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.038052064 seconds)
    (27/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.32749996 seconds)
    (28/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.319453321 seconds)
    (29/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.416929936 seconds)
    (30/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.510363508 seconds)
    (31/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.679711982 seconds)
    (32/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.241640701 seconds)
    (33/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.309946174 seconds)
    (34/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.606436462 seconds)
    (35/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.239684513 seconds)
    (36/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.284231093 seconds)
    (37/286) benchmarking ("sort", Int64, true)...
    done (took 6.236323437 seconds)
    (38/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.251738844 seconds)
    (39/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.276148904 seconds)
    (40/286) benchmarking ("sort", BigInt, false)...
    done (took 6.238578562 seconds)
    (41/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.339168867 seconds)
    (42/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.319454055 seconds)
    (43/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.352513413 seconds)
    (44/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.595549088 seconds)
    (45/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.936881085 seconds)
    (46/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.272781217 seconds)
    (47/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.774273892 seconds)
    (48/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.125975386 seconds)
    (49/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.311128889 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.140719313 seconds)
    (51/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.664285881 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.35393144 seconds)
    (53/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.33591774 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.500277392 seconds)
    (55/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.32298749 seconds)
    (56/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.302115239 seconds)
    (57/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.95674109 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.648670872 seconds)
    (59/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.234387633 seconds)
    (60/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.060577588 seconds)
    (61/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.275072004 seconds)
    (62/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.298269938 seconds)
    (63/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.18930001 seconds)
    (64/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.225812136 seconds)
    (65/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.422081692 seconds)
    (66/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.319409148 seconds)
    (67/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.442871083 seconds)
    (68/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.338553716 seconds)
    (69/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.067674558 seconds)
    (70/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.244665444 seconds)
    (71/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.589315892 seconds)
    (72/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.219273709 seconds)
    (73/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.634262647 seconds)
    (74/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.337961871 seconds)
    (75/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.220750525 seconds)
    (76/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.230270826 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 5.416005862 seconds)
    (78/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.271636947 seconds)
    (79/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.43911269 seconds)
    (80/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.572100609 seconds)
    (81/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.2203981 seconds)
    (82/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.277898723 seconds)
    (83/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.631637579 seconds)
    (84/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.30885689 seconds)
    (85/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.427448961 seconds)
    (86/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.245113523 seconds)
    (87/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.355552509 seconds)
    (88/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.264687729 seconds)
    (89/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.259641979 seconds)
    (90/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.93926792 seconds)
    (91/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.241644103 seconds)
    (92/286) benchmarking ("sort", Int8, true)...
    done (took 6.253704528 seconds)
    (93/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.620586191 seconds)
    (94/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.225870353 seconds)
    (95/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.14325278 seconds)
    (96/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.979317602 seconds)
    (97/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.268379462 seconds)
    (98/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.272361947 seconds)
    (99/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.720710316 seconds)
    (100/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.255486568 seconds)
    (101/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.762575704 seconds)
    (102/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.827118728 seconds)
    (103/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.566305026 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.868239463 seconds)
    (105/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.460688928 seconds)
    (106/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.300242668 seconds)
    (107/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.266011129 seconds)
    (108/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.773531112 seconds)
    (109/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.268033111 seconds)
    (110/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.241381556 seconds)
    (111/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.60655247 seconds)
    (112/286) benchmarking ("sort", Float32, true)...
    done (took 6.242778436 seconds)
    (113/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.557609719 seconds)
    (114/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.228091563 seconds)
    (115/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.452300755 seconds)
    (116/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.297457257 seconds)
    (117/286) benchmarking ("sort", Bool, false)...
    done (took 1.753266252 seconds)
    (118/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.28093173 seconds)
    (119/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.77738832 seconds)
    (120/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.273531969 seconds)
    (121/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.261820148 seconds)
    (122/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.222175271 seconds)
    (123/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.769950999 seconds)
    (124/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.501016183 seconds)
    (125/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.251907603 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.966746404 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.528317648 seconds)
    (128/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.25666474 seconds)
    (129/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.347746324 seconds)
    (130/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.242781992 seconds)
    (131/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.334767385 seconds)
    (132/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.617578689 seconds)
    (133/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.233355104 seconds)
    (134/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.263849044 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.983338967 seconds)
    (136/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.274370485 seconds)
    (137/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.268820566 seconds)
    (138/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.222865814 seconds)
    (139/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.277468414 seconds)
    (140/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.241610008 seconds)
    (141/286) benchmarking ("sort", BigInt, true)...
    done (took 6.245511039 seconds)
    (142/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.94474878 seconds)
    (143/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.363435549 seconds)
    (144/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.353581568 seconds)
    (145/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.224369446 seconds)
    (146/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.271991355 seconds)
    (147/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.244092588 seconds)
    (148/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.855791856 seconds)
    (149/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.450278254 seconds)
    (150/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.382932599 seconds)
    (151/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.224527293 seconds)
    (152/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.051264448 seconds)
    (153/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.230489633 seconds)
    (154/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.972487907 seconds)
    (155/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.25124776 seconds)
    (156/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.478416705 seconds)
    (157/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.336327728 seconds)
    (158/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.390207504 seconds)
    (159/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.347613542 seconds)
    (160/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.349455599 seconds)
    (161/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.270276044 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.857243458 seconds)
    (163/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.028810518 seconds)
    (164/286) benchmarking ("sort", Float64, false)...
    done (took 5.554639998 seconds)
    (165/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.386737153 seconds)
    (166/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.292163412 seconds)
    (167/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.52748617 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.160600413 seconds)
    (169/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.332500763 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.64826024 seconds)
    (171/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.251787168 seconds)
    (172/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.81122676 seconds)
    (173/286) benchmarking ("sort", Bool, true)...
    done (took 5.328043262 seconds)
    (174/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.240223311 seconds)
    (175/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.323757469 seconds)
    (176/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.970244471 seconds)
    (177/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.266991281 seconds)
    (178/286) benchmarking ("sort", Float32, false)...
    done (took 5.233209229 seconds)
    (179/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.455554631 seconds)
    (180/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.267479961 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.088313823 seconds)
    (182/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.60403636 seconds)
    (183/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.276805577 seconds)
    (184/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.993789143 seconds)
    (185/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.232859505 seconds)
    (186/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.439076809 seconds)
    (187/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.227044944 seconds)
    (188/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.388314272 seconds)
    (189/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.247228261 seconds)
    (190/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.256527415 seconds)
    (191/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.908799727 seconds)
    (192/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.46334232 seconds)
    (193/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.247489543 seconds)
    (194/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.277797628 seconds)
    (195/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.922930033 seconds)
    (196/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.306117458 seconds)
    (197/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.23648072 seconds)
    (198/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.357532536 seconds)
    (199/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.068458495 seconds)
    (200/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.288249485 seconds)
    (201/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.33299032 seconds)
    (202/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.751861832 seconds)
    (203/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.077579093 seconds)
    (204/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.305137523 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.639536068 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.854548825 seconds)
    (207/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.268691113 seconds)
    (208/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.231165733 seconds)
    (209/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.573237175 seconds)
    (210/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.800622858 seconds)
    (211/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.235555524 seconds)
    (212/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.237165755 seconds)
    (213/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.011487429 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.598008912 seconds)
    (215/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.243991941 seconds)
    (216/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.282175364 seconds)
    (217/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.228783791 seconds)
    (218/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.833655606 seconds)
    (219/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.363159081 seconds)
    (220/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.228941306 seconds)
    (221/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.393476272 seconds)
    (222/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.9690852 seconds)
    (223/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.235836281 seconds)
    (224/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.204341088 seconds)
    (225/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.432254526 seconds)
    (226/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.364573214 seconds)
    (227/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.066143848 seconds)
    (228/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.242170236 seconds)
    (229/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.457633668 seconds)
    (230/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.245786826 seconds)
    (231/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.784101469 seconds)
    (232/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.236064728 seconds)
    (233/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.266280974 seconds)
    (234/286) benchmarking ("sort", Int8, false)...
    done (took 4.305468987 seconds)
    (235/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.230886841 seconds)
    (236/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.565825003 seconds)
    (237/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.282042169 seconds)
    (238/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.634995824 seconds)
    (239/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.269659759 seconds)
    (240/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.654501483 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.593899926 seconds)
    (242/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.271655397 seconds)
    (243/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.296310577 seconds)
    (244/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.600710352 seconds)
    (245/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.6276455 seconds)
    (246/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.847720924 seconds)
    (247/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.092325191 seconds)
    (248/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.251455531 seconds)
    (249/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.231945466 seconds)
    (250/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.250915422 seconds)
    (251/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.273646551 seconds)
    (252/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.355497207 seconds)
    (253/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.470394582 seconds)
    (254/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.532048794 seconds)
    (255/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.237986976 seconds)
    (256/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.370220347 seconds)
    (257/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.294099668 seconds)
    (258/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.680709242 seconds)
    (259/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.260061976 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.340860278 seconds)
    (261/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.359078182 seconds)
    (262/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.661792451 seconds)
    (263/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.246776755 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.341858129 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.360791381 seconds)
    (266/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.2318367 seconds)
    (267/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.623031224 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.122707585 seconds)
    (269/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.243606616 seconds)
    (270/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.455443795 seconds)
    (271/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.29363101 seconds)
    (272/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.278782699 seconds)
    (273/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.475114966 seconds)
    (274/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.28483853 seconds)
    (275/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.05865583 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.294332818 seconds)
    (277/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.029359607 seconds)
    (278/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.235741498 seconds)
    (279/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.047742019 seconds)
    (280/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.268475359 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.275554709 seconds)
    (282/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.335253321 seconds)
    (283/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.832326595 seconds)
    (284/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.022919529 seconds)
    (285/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.644969044 seconds)
    (286/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.276894785 seconds)
  done (took 909.640025459 seconds)
done (took 910.795250739 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.286806486 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.280419875 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.263053331 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.285735106 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.37420223 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.293043225 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.273681247 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.265221141 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.31187114 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.312911487 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.262960147 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.291928472 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.263993853 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.263418343 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.263580893 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.282848305 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.251562515 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.264681763 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.280424782 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.274665618 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.280489691 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.262525017 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.314787468 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.291144434 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.269073733 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.267026729 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.267914398 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.283959419 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.37578971 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.267053267 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.26718938 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.275750372 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.250875363 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.262882968 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.259817493 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.284250536 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.276214009 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.274599815 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.269694037 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.295737061 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.632944451 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.281437783 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.266627097 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.266552228 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.266547344 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.270781411 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.265751144 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.271237735 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.279727076 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.280701305 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.622140589 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.296202226 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.268849964 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.267575354 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.278063404 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.266555881 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.271274984 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.28402424 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.287068144 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.284139597 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.241008373 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.272301654 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.270600746 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.283728867 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.274648451 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.661169459 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.277970773 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.270796384 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.635815206 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.288022294 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.660125801 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.290974623 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.268884341 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.281529455 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.299241334 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.256317656 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.263398252 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.267557399 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.275482433 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.26630809 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.277868267 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.281204665 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.273590827 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.26965801 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.283742893 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.297032423 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.27845017 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.268366904 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.277271644 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.288402313 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.275375494 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.280433588 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.272602298 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.265539204 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.278402265 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.272749123 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.271790888 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.271879729 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.273646555 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.280180019 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.636164028 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.302348378 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.266015453 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.266566113 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.269451032 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.283702612 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.63786682 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.286881501 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.292141876 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.317943881 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.271989557 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.246874818 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.274509602 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.287622749 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.279600693 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.274367873 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.266747105 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.249628312 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.630511437 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.301807748 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.273054894 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.269593397 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.288301705 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.272986629 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.268037106 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.264761005 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.273559108 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.285857741 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.392334264 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.282462217 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.302243714 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.270189055 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.275521126 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.300233593 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.289463162 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.303406555 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.275634886 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.28877182 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.287395766 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.269306998 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.282813934 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.28308049 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.272897642 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.279068977 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.265969403 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.301311077 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.286933946 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.285891562 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.293877382 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.392593714 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.269994654 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.251756559 seconds)
done (took 214.620213413 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.329945181 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.266856432 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.353080342 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.269326892 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.367359885 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.367773599 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.267780872 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.266655457 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.267018372 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.647816054 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.267498176 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.268049718 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.263085158 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.267780645 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.350867578 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.270544401 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.267773095 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.610626476 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.271487473 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.341273436 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.2707078 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.268827904 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.270726115 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.651069843 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.263457099 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.268995896 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.341167619 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.271997858 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.616112077 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.266473618 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.269938057 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.616081607 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.360072324 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.290302989 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.280846616 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.279664713 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.369912003 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.28981172 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.351417267 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.351765545 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.356131739 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.309831074 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.265876938 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.263018796 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.272204621 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.272432944 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.270064231 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.299548744 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.273483435 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.269397004 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.612414925 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.281858315 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.279560738 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.270736888 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.270210436 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.291955628 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.270686963 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.27339677 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.361988061 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.273920873 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.335115028 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.65306103 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.648953733 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.273069769 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.265573169 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.271973612 seconds)
  done (took 144.206043257 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.339452232 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.345742887 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.382228304 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.288105797 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.32332454 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.386706327 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.289355325 seconds)
  done (took 10.545122195 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.27833699 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.273945629 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.323613457 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.322963055 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.273254631 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.421366566 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.274002999 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.285326223 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.282603481 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.32675846 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.275447144 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.274502274 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.271867317 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.266343991 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.322402654 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.28534005 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.388505473 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.275145745 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.274434594 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.431133739 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.273308592 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.282209865 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.331033017 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.286201634 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.27814776 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.278770689 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.841068742 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.275188559 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.27219329 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.276093786 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.272853721 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.313029696 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.276570473 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.275643471 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.272779404 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.390222788 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.275435285 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.273520071 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.274805283 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.269366233 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.275171751 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.276179914 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.276895549 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.274288836 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.276386903 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.298979866 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.277093085 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.276778512 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.276445135 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.277406151 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.326629915 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.276691442 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.274330219 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.273714358 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.331716634 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.283526438 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.276561929 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.274421148 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.277555247 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.275010966 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.432289678 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.323364801 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.27719144 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.324382435 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.278746167 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.278325483 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.277469536 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.278114721 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.331617115 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.277621745 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.325403643 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.274433695 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.433008636 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.300405992 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.279902544 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.280678675 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.279762271 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.278357169 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.273679171 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.283574349 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.275402998 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.279606207 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.284273715 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.276162722 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.276248236 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.379820406 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.38699287 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.276270691 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.290032978 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.285432908 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.276274701 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.331752139 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.279192294 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.277268515 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.329990792 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.393981644 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.341720221 seconds)
  done (took 147.593070813 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.285284037 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.286853837 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.280798649 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.295686901 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.27928296 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.278360672 seconds)
  done (took 8.901813715 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.281392594 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.281485392 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.279781009 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.280189739 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.27888099 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.281191227 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.280158432 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.280720578 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.28274228 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.280428054 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.281013085 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.281125345 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.280983404 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.280550294 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.281273358 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.281658619 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.281429161 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.279041733 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.281406557 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.280872793 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.376897528 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.281101283 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.280804086 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.282965713 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.285405639 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.281730812 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.290037491 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.282645191 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.282536005 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.287367522 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.300070082 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.282197313 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.282109402 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.28699262 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.286096085 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.283064029 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.286106589 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.283695723 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.278926105 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.283353819 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.283099325 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.283087992 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.283648171 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.283332699 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.284065316 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.286335135 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.287239418 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.290481005 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.28316592 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.284331114 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.283989789 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.283093005 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.284849129 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.284306721 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.285126641 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.30293618 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.28848533 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.284643529 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.283515875 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.285216698 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.285432585 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.285420904 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.285616359 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.286767204 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.291188462 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.286059742 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.284573412 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.288269955 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.284488333 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.284156076 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.284848491 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.282741059 seconds)
  done (took 94.743016191 seconds)
done (took 407.171212144 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.571986028 seconds)
  done (took 7.77271471 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.325371938 seconds)
  done (took 7.530484828 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.125967787 seconds)
  done (took 21.329327946 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.311561694 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.367997634 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.280009201 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.288943242 seconds)
  done (took 26.449664905 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.440540219 seconds)
  done (took 7.641843044 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.277856967 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.278492082 seconds)
  done (took 13.760444536 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.602617983 seconds)
  done (took 7.803955102 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.382153087 seconds)
  done (took 7.584811999 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.281561482 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.302949215 seconds)
  done (took 14.041076738 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.260943572 seconds)
  done (took 7.46400967 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.966420447 seconds)
  done (took 8.171949606 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.293688698 seconds)
  done (took 7.498119842 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.335432644 seconds)
  done (took 7.538525353 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.087037754 seconds)
  done (took 9.289768595 seconds)
done (took 155.074193142 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.280811636 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.287887416 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.282170599 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.282636298 seconds)
  done (took 26.337498157 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.322040668 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.322848093 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.323552922 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.331468882 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.325244068 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.323196305 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.314222377 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.31528265 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.332486141 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.325547677 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.324079478 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.32458692 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.324279441 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.332031154 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.323896033 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.323520131 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.33371973 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.32321026 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.31416651 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.324730758 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.289762423 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.333698667 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.325316382 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.290407188 seconds)
  done (took 32.928612713 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.810824552 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.359869341 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.441341703 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.358796531 seconds)
  done (took 7.175727893 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.341236786 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.341805046 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.354059433 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.393677008 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.419066772 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.353117142 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.318025887 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.311823196 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.297621283 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.344174083 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.419423207 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.358938522 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.428916012 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.290970864 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.49835156 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.290684663 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.290629977 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.34247783 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.394712149 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.407825085 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.29204751 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.342627584 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.346372638 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.361359793 seconds)
  done (took 33.744875779 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.291696396 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.30910419 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.292096484 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.290214515 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.299200649 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.291518061 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.29140767 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.291009372 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.290742681 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.297159645 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.290064914 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.303532147 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.290549699 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.291265618 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.297150342 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.292685191 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.29707484 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.291233099 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.290850417 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.297527742 seconds)
  done (took 27.093700823 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.285175585 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.137868086 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.636296729 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.540977351 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.285660154 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.284006965 seconds)
  done (took 27.377260254 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.359111036 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.504152113 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.291552902 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.634555194 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.723711112 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.308408602 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.293150819 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.525947157 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.828280268 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.826708255 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.353943572 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.358077391 seconds)
  done (took 19.215842774 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.287890742 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.293027749 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.29432455 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.309481734 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.344560897 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.312655291 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.299488182 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.286501478 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.353283629 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.367197822 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.313054368 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.346751307 seconds)
  done (took 37.018149476 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.376256323 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.33090222 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.177063747 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.321980869 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.026350535 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.500904915 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.30957756 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.735745156 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.293103032 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.561488336 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.288034396 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.39947115 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.544817757 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.29772253 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.296703797 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.256308947 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.531903455 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.751713877 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291024379 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.241986134 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321373919 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.297479826 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.310691592 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.324887022 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.502175023 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.431920151 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.550644038 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.065321402 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.578978921 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.307969789 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300774 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.291007615 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.564499231 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946528572 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.412193234 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300506375 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.304851591 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.844200428 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.280540811 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.24559697 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.085226538 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.292262745 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301991951 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290747961 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.224157236 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.29957305 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.722561851 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.297525433 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.003128833 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.291386278 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.303212681 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.385617396 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.295256764 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.861762491 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.362015123 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.297480365 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.290696529 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38477902 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.8829397 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.630117039 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.301190546 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.249100862 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.290221358 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.190431873 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924609997 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.417673147 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.296734692 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.297023947 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.226197286 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.165135237 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.315038117 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439665355 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.315386784 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.942649274 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974809739 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.310686224 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.241367695 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.819742956 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.305649556 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.234059404 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.520834655 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.071316177 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.229465345 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.239817614 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.227194696 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965634379 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.302058386 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.63886546 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.314685817 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.735030583 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.306881578 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310357546 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317530429 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.518209142 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.173323093 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.29411096 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.131331732 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436914675 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316694912 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.717919118 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.228803926 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.29792818 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.550447033 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.506118868 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.294518748 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.274596372 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.506990994 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.306809602 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.315974206 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.301514806 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.312333409 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.858881672 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.322568531 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.635383282 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319186794 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.072390198 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006594722 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295998841 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.404115672 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.301396298 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.535588944 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.023368774 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.19433283 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363843151 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.299869295 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.296961654 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.288747492 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.888536834 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.191358893 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.292465795 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.2994981 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.313744782 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.297807307 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.246487149 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.293932975 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.311338685 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.074060139 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.519137985 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.29642595 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.580187037 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.640367837 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444483265 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.307165213 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.520295307 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.479293429 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.321157443 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.55724061 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297057251 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.315326775 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.317584229 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317207934 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399083135 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320086084 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.302108761 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.559385283 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.301642332 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.302518084 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.30236895 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.075752677 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30091112 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.303312204 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295974237 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872128326 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291985662 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.305089515 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.188116611 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.31362736 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.367017714 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.304785521 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.308995505 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.055670691 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321859855 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.324039002 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.301297729 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.5218266 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.31047407 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.211904582 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.377636826 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.489565506 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.872574739 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.330310388 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.234833128 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.011786615 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.992403294 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.299833514 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.489179496 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.299386916 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310900246 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.310788194 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.311933768 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.871657658 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32553574 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.215315469 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.305897295 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.31078401 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.306311483 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.300600513 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.054033914 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.69251309 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.30283531 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.320507236 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445521451 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.315223711 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.234496306 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.818649904 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.307147207 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.30106301 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.078874134 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337006566 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.219494712 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.771238774 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.561204451 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.317051814 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.321206157 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.296511016 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.342072631 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.299549879 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.169787875 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327896319 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.311484281 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318124678 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.312209629 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.311377968 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.664071753 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871181451 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.024516275 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862134774 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.222073856 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.308163731 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.225931681 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.729729707 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.238051018 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.965533137 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.484837107 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.75225999 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.249488078 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.496866935 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.479207602 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.076569189 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.314621639 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.530824506 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.204232001 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.145130664 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.340801469 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.516047616 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338643572 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.311758392 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.240140397 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.58566172 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.534512929 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.147964866 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.382422635 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.729209162 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.178413976 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.100685828 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.350685749 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.611620303 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.488900713 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.851888586 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.715718712 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.313676347 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.32352392 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.773152503 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.31156436 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.830689211 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911129968 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.336881813 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.50320846 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.241114336 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.317103691 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.316426011 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.301864772 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.562905665 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.313126028 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.560948878 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.31566625 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.239391561 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.306295742 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.833699648 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.183844814 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.310950636 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.306697077 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025446301 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.307332963 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.600268961 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.327603276 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.050899501 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325378646 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.240610874 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.241298751 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.000914786 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.308719058 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281440983 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788128068 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.329852951 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.324510869 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.318419573 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161045408 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.561893901 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.321710266 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.878077443 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.557419006 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.305945752 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338512422 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.409156545 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.184214058 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.316592252 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.199068267 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.543936115 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369539385 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.539032488 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.216936988 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.215965046 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.348670011 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.526962979 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.208768383 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.313644371 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563545536 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.044392665 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.323068076 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002415961 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357197742 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.314806993 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.327604224 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.322568195 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.336992867 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397527356 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.320990917 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.319903915 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.320594393 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476334987 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317232035 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.319725011 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.324106685 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40329642 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.679320488 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.059347072 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.083188952 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886188103 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.056289006 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.908599257 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.347169745 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.309553545 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319708575 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.245005945 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460675722 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.836140893 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.584187563 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440330514 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.313362055 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342035242 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.200776567 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.339914491 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.529739967 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.585976182 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.281464843 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.324716907 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.103718967 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.192398682 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.322400167 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.522730377 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794945977 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862476115 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433831361 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.326009221 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.744250772 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.586669059 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.4038706 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.311983203 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.902550296 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.311747739 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.622940639 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.337535758 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.324513814 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467183507 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.321252798 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970695142 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.348166656 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.472839018 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.087571609 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.305993759 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.574670476 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.762933699 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.33290738 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89119566 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.024365336 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.583534185 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.383302355 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.324015117 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.419129418 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464544069 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.314796796 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.202834235 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.314669928 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158302584 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.02390686 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.323172857 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.890976855 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.600120003 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.312491695 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.316487939 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34526803 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.324376223 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.537387738 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994323839 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.537925974 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.32647395 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.317108264 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.305172068 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.890917039 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.350564733 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.249300596 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.318050301 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559495416 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.575803522 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.337466786 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.767808711 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.026944174 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86782176 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.294030656 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336813503 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.320231989 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.008360119 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900583733 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.089358031 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802668909 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.981950434 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.316370476 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615287528 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.321128702 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.315714707 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615424056 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.319289183 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.315250093 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.335587856 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.894789842 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.087439081 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.344439456 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.367361713 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.252095908 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.543305294 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392000591 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.27813721 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.325717951 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.488183203 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.317827663 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446492901 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.32872857 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.321756521 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.324656279 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.096173727 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.597053145 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.323243942 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.300511605 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.248997774 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.336105994 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415426575 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.54960298 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323800512 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.029259854 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.668634796 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.572932126 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.318988161 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.306669721 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.322513697 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317504991 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.036282632 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.327609529 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.329134429 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882302713 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.329571177 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.335939349 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.323102651 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.53407238 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.530180474 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.333576878 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.339949878 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319221177 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.358155701 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.219966565 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.086195002 seconds)
  done (took 1623.365932975 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.333759764 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.337591297 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.348567494 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.342082003 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.318852146 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.357027805 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.371839634 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.344945014 seconds)
  done (took 51.993835361 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.32340475 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.474360757 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.357782007 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.331023952 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.33591264 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.321375938 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.777516807 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.35185806 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.327339283 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.33077363 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.329636962 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.335163049 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.965568876 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.335812223 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.325701293 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.316309001 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.335071237 seconds)
  done (took 65.114194146 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.319475732 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.816853122 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.419041443 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.330663571 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.314149688 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.340180016 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.024730496 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.324966699 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.336221373 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.611037506 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.993154796 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.361310046 seconds)
  done (took 84.432666221 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.339918463 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.338872613 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.337744843 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.338967321 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.339520385 seconds)
  done (took 7.936333087 seconds)
done (took 2044.936920607 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.327548595 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.995513529 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.944200037 seconds)
  done (took 5.179965352 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.468779205 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.518857831 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.638074081 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.659355885 seconds)
  done (took 7.528060198 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.615624154 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.715608048 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.509418341 seconds)
  done (took 6.083410714 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.597990771 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.331005334 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.343487159 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.322273261 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.330827294 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.327085327 seconds)
  done (took 20.224672059 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.327313278 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.330444695 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.327005662 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.332068585 seconds)
  done (took 6.560580354 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.304363092 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.008895005 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.30604511 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.321217079 seconds)
  done (took 18.183228088 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.075050383 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.088186153 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.072027985 seconds)
  done (took 7.479493484 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.355567498 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.35670257 seconds)
  done (took 3.956135406 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.616267947 seconds)
  done (took 2.859620168 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.343776151 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.381129272 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.337720455 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.258532991 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 4.678398539 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.568309621 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.904123755 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.505814139 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.231053362 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.487969489 seconds)
  done (took 29.941414144 seconds)
done (took 124.833496341 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.059526601 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.569628428 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.529351585 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.02849822 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.550672931 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.530264544 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.530382092 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.997321749 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.537307485 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.528327605 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.027619248 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.550124889 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.689887902 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.575009034 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.691215141 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.574439792 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.547656026 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.094453932 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.711836757 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.94529687 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.532961891 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.664993214 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.858683864 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.726115269 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.55343896 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.481831047 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.259337661 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.328695567 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.887991769 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.312489224 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.487883838 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.118614431 seconds)
  done (took 191.727384238 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.326102019 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.326267045 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.343658405 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.333534879 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.355540008 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.333324818 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.334783733 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.363588152 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.3470767 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.33504661 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.351468493 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.332942813 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.327818262 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.326171267 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.33447096 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.32648513 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.334967452 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.334570725 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.349016957 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.334619067 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.335293972 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.351369311 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.334286586 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.337772086 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.334822201 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.335602941 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.345488631 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.33603034 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.335598876 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.349120694 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.33571869 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.341546674 seconds)
  done (took 204.071052416 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.335847848 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.336168917 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.337951518 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.336389057 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.334170659 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.338572747 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.338163307 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.343595879 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.338541197 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.336914546 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.335665509 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.336606628 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.33412014 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.365449466 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.33580537 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.348566083 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.350468785 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.335989015 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.337411985 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.352372773 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.338419154 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.337435108 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.335596678 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.354633564 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.352611359 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.337429747 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.336830114 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.354320402 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.336952327 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.35808943 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.337303388 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.337092036 seconds)
  done (took 204.173475312 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.523607217 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.33724148 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.337604958 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.269460437 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.338734942 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.339041631 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.330558552 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.533975107 seconds)
  done (took 14.261044653 seconds)
done (took 615.473283883 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.582350384 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.307660965 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.541673558 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.358396818 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.070873933 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.383775543 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.358426709 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.521454094 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.244911931 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.536279022 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.57212004 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.379329584 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.714292497 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.364317589 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.607524235 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.458763592 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.20943447 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.343109486 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.669460278 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.85667179 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.617604361 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.835932696 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.546814797 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.271662292 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.723663502 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.830760515 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.053954408 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.210503069 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.375047955 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.671850496 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.927805744 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.29557027 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.424173009 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.423321497 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.479381248 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.458384821 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.27641249 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.419883659 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.563467468 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.606023373 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.844323317 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.070739083 seconds)
  done (took 91.259146853 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.32325616 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.321302445 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.32142477 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.321063923 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.322211605 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.322586674 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.321291956 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.321028515 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.323294519 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.322030346 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.321667072 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.32309496 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.324690096 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.323871707 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.32264378 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.322997468 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.323101555 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.324269895 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.321575843 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.321669292 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.322225431 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.321404986 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.322941158 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.323123351 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.323661683 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.32369427 seconds)
  done (took 35.641302777 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.340965652 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.585279155 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.745363605 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.358378587 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.341728571 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.346506512 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.418411398 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.349908805 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.345537248 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.345447448 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.497308842 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.353699764 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.376306688 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.76996639 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.352843189 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.343517077 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.343248446 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.341553252 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.595445472 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.359942967 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.43653367 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.351257931 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.418954462 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.361021958 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.363347834 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.34388012 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.34806996 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.908033675 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.361502922 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.493318793 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.104617939 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.422141443 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.890783981 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.772608827 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.102423094 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.352622578 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.343636687 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.497417952 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.346169327 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.344673976 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.418787633 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.350167702 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.750696591 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.011746693 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.361662534 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.344448837 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.927989829 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.521179381 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.586860357 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.352219085 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.773613284 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.348078048 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.345945958 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.345475375 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.581436167 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.350429796 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.344383628 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.942861277 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.37591612 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.41940249 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.353779227 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.346973143 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.600682876 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.345686834 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.589431216 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.346518223 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.353729038 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.364719584 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.757908745 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.356240126 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.040404695 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.362608215 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.346837806 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.495992341 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.590540364 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.962649932 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.371202676 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.609877037 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.907274642 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.437030569 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.359066858 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.899623762 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.440925074 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.359070841 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.350287377 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.349853665 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.348154625 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.399146588 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.421168861 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.980906095 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.046042869 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.977599323 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.450847119 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.368316108 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.34822102 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.947671471 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.375397335 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.349014247 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.75696028 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.047322889 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.372996388 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.355937662 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.040515636 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.376237083 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.424397843 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.360873393 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.761649745 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.358194688 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.398885726 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.348144007 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.35622585 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.371643494 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.423865146 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.360560028 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.35012333 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.008292635 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.527598518 seconds)
  done (took 178.097217273 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.35061327 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.341935802 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.344604023 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.342616897 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.343122581 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.350762467 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.34459626 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.344408106 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.349416955 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.344613727 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.344286684 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.344085168 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.34399387 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.346132092 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.353965238 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.350756377 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.954346766 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.343276084 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.343306479 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.344212436 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.134596053 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.348787419 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.359565024 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.345121594 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.344146301 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.342636142 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.357023479 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.34779275 seconds)
  done (took 152.369028138 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.352379707 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.890943971 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.368228842 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.475781606 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.377536295 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.349375982 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.475671488 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.413817278 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.369313509 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.350441194 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.349698202 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.640762269 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.352710765 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.854631056 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.541047241 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.500528611 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.860396956 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.376274041 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.350571283 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.350873203 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.479574875 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.360840891 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.644437252 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.90638276 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.377866691 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.894696744 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.337676854 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.353844036 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.352036125 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.899831242 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.375791861 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.643144164 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.426286025 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.417920609 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.91408654 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.871646699 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.875627433 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.496167043 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.360730156 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.352302241 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.351315165 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.337709085 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.897174902 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.371283123 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.354745476 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.890235521 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.372350718 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.355455662 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.360159282 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.351743746 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.409731063 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.428065912 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.663225474 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.9039386 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.444155317 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.373896421 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.480825658 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.720623732 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.365363813 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.851918762 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.336358866 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.904572164 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.372580326 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.338340115 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.354191588 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.359647587 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.496612752 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.488740455 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.861016752 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.370648919 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.851221601 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.513134841 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.361246844 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.353837382 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.355806491 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.907888054 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.877374342 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.513426072 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.491008165 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.542372336 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.346866504 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.354690556 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.339982534 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.427940813 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.362532622 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.909294465 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.878581767 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.373399039 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.357435015 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.356835526 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.356651205 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.522837436 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.932872618 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.454169233 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.852118234 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.669052405 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.660259716 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.365731479 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.411762196 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.37129144 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.653416853 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.36656556 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.410116774 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.773400517 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.661792327 seconds)
  done (took 161.312278968 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.593192444 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.528180805 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.441718929 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.496967764 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.959148156 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.911652389 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.564988325 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.497547787 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.463242393 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.611923832 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.469725246 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.448546294 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.562219702 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.451022988 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.083408281 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.448503906 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.464747703 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.500271414 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.512391202 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.361547965 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.024927605 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.637549009 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.552759136 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.192874213 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.444461095 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.090861815 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.90459859 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.913537329 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.529947282 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.654338401 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.871532323 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.47261304 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.293781034 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.053438181 seconds)
  done (took 65.280395309 seconds)
done (took 685.205234406 seconds)
SAVING RESULT...
DONE!
