cset: moving following pidspec: 19033
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.250603971 seconds)
loading group "string"... done (took 0.557292908 seconds)
loading group "linalg"... done (took 7.620975174 seconds)
loading group "parallel"... done (took 0.174109881 seconds)
loading group "find"... done (took 1.187472199 seconds)
loading group "tuple"... done (took 1.870814979 seconds)
loading group "dates"... done (took 1.267266289 seconds)
loading group "micro"... done (took 0.234742949 seconds)
loading group "io"... done (took 0.768709259 seconds)
loading group "scalar"... done (took 41.141316854 seconds)
loading group "sparse"... done (took 12.841450979 seconds)
loading group "broadcast"... done (took 1.150436847 seconds)
loading group "union"... done (took 13.471813647 seconds)
loading group "simd"... done (took 4.781797046 seconds)
loading group "random"... done (took 9.704113623 seconds)
loading group "problem"... done (took 2.175264288 seconds)
loading group "array"... done (took 22.691165607 seconds)
loading group "misc"... done (took 2.123586727 seconds)
loading group "sort"... done (took 3.470743278 seconds)
loading group "collection"... done (took 19.496731186 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.583508097 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142685139 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.15085101 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.14766853 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.190727669 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.156756798 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.159783736 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.09920042 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.995681408 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.176094761 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153389106 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.521349615 seconds)
done (took 5.272649341 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.223194368 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094992017 seconds)
    (2/2) benchmarking "String"...
    done (took 0.105001838 seconds)
  done (took 0.929858191 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.076974474 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145458508 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095770499 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077648737 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094940629 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077198844 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.0945188 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.08028502 seconds)
  done (took 1.401805232 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086670159 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.098292442 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082076329 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.09655696 seconds)
  done (took 1.105555262 seconds)
done (took 4.482705092 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.740102933 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.275475645 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203637079 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.464563209 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.196768471 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.216919049 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.687996485 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.356843439 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252883793 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100060462 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.142769637 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.386015212 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137790966 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.68823308 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089667022 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123263288 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.179594356 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.478962716 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082545453 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110836206 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117318859 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142414481 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.12943003 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092055814 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.18325779 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081341071 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194691177 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109688477 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079988161 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.290239779 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201250149 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.696137961 seconds)
  done (took 11.012198227 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111374919 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133975241 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098342674 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137989488 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.1378436 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.102047601 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084465197 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097450819 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121509536 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177065345 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113216842 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.137493106 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09560808 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081465 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116249708 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244214 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120708901 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103097472 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.10125714 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.104012075 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12169735 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114710049 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109452701 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092404519 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167637937 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.223764052 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110595204 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126410718 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097542125 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112126782 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144657422 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145264634 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096526765 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080026493 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172638669 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12624816 seconds)
  done (took 5.214808257 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.083237497 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189676696 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121344911 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.170410367 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080090299 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142393408 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.095788074 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114548555 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257844827 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.181706828 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178359163 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142056941 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100597738 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09755603 seconds)
    (14/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.128319203 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081018193 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098426455 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.638943483 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.162187237 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.115302501 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115374774 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107629775 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099677965 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.348396766 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10434534 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095044555 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081171897 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.082050225 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159450904 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081680764 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.161073049 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.101679989 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101153356 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133368605 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193715287 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125968154 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.117295745 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096960762 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077651431 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.195403196 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087980664 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.122391303 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078955177 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.121235709 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134377286 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.135151942 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096620204 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080784507 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204676656 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.097099321 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113421502 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.929905044 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183995967 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091219964 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098085379 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.322619909 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.103166185 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097553402 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077105134 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.278138577 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.183590276 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098288427 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079228605 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096641716 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081724005 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.397466854 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081617107 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.691766307 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083935516 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106608548 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08279374 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097502218 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.075696356 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105066506 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103195397 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.097646153 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.096729421 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.0810352 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.097317208 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078060186 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.100135045 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.106374251 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080047488 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101856983 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080042885 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165902571 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079169266 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116311215 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126218246 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083123787 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096154439 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128868048 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08280911 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097984693 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133252656 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080287895 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109409242 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099829082 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143035977 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080668946 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.151672796 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.078935878 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124264985 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099226982 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113306023 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11305845 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098335545 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083583049 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.09610621 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.075997984 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165734562 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080310318 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.098354873 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080188808 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110805031 seconds)
  done (took 22.497320624 seconds)
done (took 40.54747612 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.319246198 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103875715 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104272911 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104029915 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101369635 seconds)
  done (took 1.548089572 seconds)
done (took 2.337346305 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.290414518 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.173482897 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096518731 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.168065582 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093381686 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.17341976 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159891873 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.112024883 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.200958367 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.096760737 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.16387816 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095303003 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076553355 seconds)
  done (took 2.714920312 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095344972 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116150329 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082413241 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11314986 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075851818 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112586035 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092292099 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117935656 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110677776 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087012378 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094742555 seconds)
  done (took 1.883521719 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095474293 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114569393 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082419736 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111545518 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07644419 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111318227 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091573125 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117189868 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110585106 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085543041 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094421189 seconds)
  done (took 1.874325884 seconds)
done (took 7.25235694 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090603603 seconds)
  done (took 0.873297887 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.93846562 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.955220065 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112659826 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150281224 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.299239735 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.194604965 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.483455529 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125592812 seconds)
  done (took 11.247857098 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.113747971 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.116426838 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.103683057 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086160671 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.102672459 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.083587382 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.101122122 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101836238 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086067196 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.100595665 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.08272283 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.101976289 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101735794 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084957752 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.101505776 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085373889 seconds)
  done (took 2.396901892 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118373572 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117670927 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.1081628 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109538095 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086613498 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.108004582 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107398683 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088751911 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103544801 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105544874 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089655228 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107288997 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104076673 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079116002 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107253443 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107417359 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085662595 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.10656811 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107039324 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.09004393 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.108094327 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095628786 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086797561 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107383079 seconds)
  done (took 3.327010967 seconds)
done (took 18.632477236 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161427654 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108469357 seconds)
  done (took 1.05606865 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096057359 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114133967 seconds)
  done (took 1.000972661 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098193461 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09685973 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.123022221 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109600298 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.07952419 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097909294 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.12004542 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.07954105 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097049239 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.078657214 seconds)
  done (took 1.774441081 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083566609 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.11039417 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102586003 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095723884 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105939836 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094766682 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089030702 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099944916 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109758535 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076731689 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103119497 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114605544 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086435804 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117448066 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105961759 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082512551 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.105239428 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100314081 seconds)
  done (took 2.580739669 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.07986518 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097044374 seconds)
  done (took 0.969584446 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081546997 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09516719 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080448779 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098534544 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094400215 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077195218 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095170724 seconds)
  done (took 1.415209325 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.490006905 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.136276244 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.255371918 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084552752 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120866014 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302274647 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.099057647 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084161411 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104869848 seconds)
  done (took 2.527488462 seconds)
done (took 12.114821364 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094376265 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.118576816 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111274319 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.468840127 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107412786 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.099933583 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.146534312 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.252813309 seconds)
done (took 2.201321742 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.143922898 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.326572527 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.116837913 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067481645 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.098965223 seconds)
  done (took 1.411160168 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080042179 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099812524 seconds)
  done (took 0.981907646 seconds)
done (took 3.346383178 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081718559 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.096991141 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.113053591 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.097800108 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079126476 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.097521624 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077182143 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.097669385 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.078588838 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098824864 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.096619127 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.080921106 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096837783 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.078558282 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094772827 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079013431 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097721469 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078604554 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094754756 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080298352 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094822226 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080571227 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094523861 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077619442 seconds)
  done (took 2.983022385 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100113551 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100484397 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103459637 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087571784 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.1022528 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085495561 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104564879 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.09847902 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085703512 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.101220915 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101133791 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084987564 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100721377 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083936696 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100973996 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101960731 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086066146 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099240663 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082902201 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103479319 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103159853 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080785292 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102591795 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103148665 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.085201104 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101426595 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.0827064 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099421045 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103274112 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084692093 seconds)
  done (took 3.668709822 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086234544 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094305572 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078970438 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102520585 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077619185 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098820956 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078836233 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097093122 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079460172 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096580418 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079326574 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.09726023 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077459029 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098173925 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077944816 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101711413 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.108734482 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079032435 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095897813 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079455057 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.09887904 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078208914 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096286767 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078350102 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09577007 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077778647 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096635634 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078006496 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097134493 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077260232 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100402082 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081154832 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097031112 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083507478 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100344119 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.076570487 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.100774624 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077191497 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.098308567 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094537595 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079221025 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095325498 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078890662 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101545527 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079242775 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098101159 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078475367 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097050594 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078105849 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.1004361 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077147033 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096232486 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079017679 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.097291585 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081108063 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096808061 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095346667 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078705411 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096712091 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078328199 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094954421 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078136164 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097415958 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079538162 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111628936 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084992217 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096426071 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078729592 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098231662 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080352699 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098241743 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109022469 seconds)
  done (took 7.251430435 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083549241 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107497424 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079835172 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098783311 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076327089 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098038789 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098586121 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078725295 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098018353 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084603811 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097505155 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078882867 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098976345 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107779428 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080047424 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097370744 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084553628 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094970088 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078830257 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100663503 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078641122 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100883502 seconds)
  done (took 2.810619067 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.211757713 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106279858 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142924147 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10696769 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083825304 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107533093 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101919666 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086394312 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103828235 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082518299 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102252438 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102449323 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082685263 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10260947 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100816566 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085521096 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103876392 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084278699 seconds)
  done (took 2.711400528 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094108416 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099671978 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102318039 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100353423 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098702917 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083242361 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105209811 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107989035 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084040536 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099130704 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090071678 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102399549 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101006245 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081476888 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101152638 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081207878 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101900036 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080065054 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109420645 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105152907 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103924011 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0913175 seconds)
  done (took 2.938441784 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097073535 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102303541 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118682986 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084383978 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09529152 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079528361 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106999248 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080301254 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108412548 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100882621 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082324626 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098038521 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.08779337 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099827431 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105602035 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08199116 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101367178 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081415165 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102566774 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076743365 seconds)
  done (took 2.708101738 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102984286 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102350751 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.208910249 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092811946 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101458928 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.080670087 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110300773 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101792452 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081850696 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126459207 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101653046 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081418463 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111563657 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106528797 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09930849 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092976109 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110910582 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11094085 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082293111 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102290603 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125810303 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081942591 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110338733 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101194856 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082153067 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101243997 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10009836 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088296647 seconds)
  done (took 3.718629542 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081698899 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098619383 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079874346 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096601055 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079317097 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096565208 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.07957349 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096072788 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082399281 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096027702 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.08145618 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098641633 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082999758 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.099842281 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081738933 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099212052 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080512629 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097526477 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07848165 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098105934 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081430729 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100102482 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080065427 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09770827 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077999873 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100275659 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077795641 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097541402 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080003203 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097665004 seconds)
  done (took 3.496249411 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.09140978 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10739981 seconds)
  done (took 1.017785784 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079970018 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115271479 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078360174 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103559745 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085513717 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102041786 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108655018 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085970696 seconds)
  done (took 1.579725453 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096621559 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111031512 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.081758168 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113788395 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.110070921 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.09469306 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.16538619 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101769302 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086203353 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099765812 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.11284833 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080476826 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105358315 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08152507 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106438818 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087191655 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098440378 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105456184 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.086565316 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098235887 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082826977 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111800948 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083470441 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.098200778 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.101034633 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091693193 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.109566491 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.08199087 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104532444 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108770619 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088040015 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.09409791 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082037958 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.10087862 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079397673 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.110239138 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112141434 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085245936 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110163841 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082624366 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112438499 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094863818 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086271924 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106414327 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091070437 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101702583 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100553824 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077750549 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.09703181 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084772502 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09545064 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081321254 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095403008 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088285931 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.104829895 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11264059 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080934843 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102145348 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084913715 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103907705 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088764524 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103496075 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101650607 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.08220895 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106717292 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086401834 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108822787 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076187017 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.098585037 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079167084 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109121526 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123310329 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089340308 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102512372 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100593237 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080632286 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103448411 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08393139 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108662862 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.08917413 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.102752012 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107928037 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089245238 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101559505 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08263698 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.109777654 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097537703 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084185204 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098887005 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095366703 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100775465 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097372377 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080368986 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109614351 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085107645 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100807329 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079229693 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108671811 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.075132933 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102738948 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101508496 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083690504 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109124071 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087917822 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107225168 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107453801 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089315673 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100985989 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084127716 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.098517958 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082754579 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.103862833 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106970125 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076631448 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103675737 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083721387 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101697602 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.08859904 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.099946971 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.081513654 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109365652 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107827497 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080464797 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.098380848 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.084484615 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.102019396 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103450782 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.089593336 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099085985 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078078311 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096322038 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.085868172 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.101764337 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086020186 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108257207 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10368256 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077141211 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099771362 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086942022 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110177228 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099732904 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083783404 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.105141291 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082457021 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.100793197 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.087179503 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.105020037 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.080510192 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.106104832 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.10198788 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.078469067 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104029616 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.08441723 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.101396119 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085850798 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105823675 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103282539 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083444804 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099561241 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087497141 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103381067 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080282828 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101295763 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080207765 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.11070768 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.10281879 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.07750076 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.098623889 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089322518 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.099996667 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.080804718 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.100764004 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102657149 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083981436 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.099095118 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081539825 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.102459141 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093573524 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106956116 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102822247 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087011608 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.111827473 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.081114183 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.103918045 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100002317 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084352065 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101997538 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089075321 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.107539887 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10600177 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.085172756 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097490645 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087906003 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109184897 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.080776731 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.09960992 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.080028141 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.105976219 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107169026 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.08580946 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102691615 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079625849 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101931825 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104942041 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086362104 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100141251 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081589045 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.106170636 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.080869284 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.109071591 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101291501 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.091459095 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104886749 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077066832 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106741283 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079950824 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.108763236 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.09564194 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080104026 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099202092 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.08408211 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.100849681 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.084625093 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095513531 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088339176 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110060176 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101393247 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082146528 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100725464 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090459698 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.103581172 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085296879 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.105454372 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105694696 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095662534 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.100682805 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.084494186 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.111059776 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.081387612 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.096446674 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.106212314 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081383481 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100978488 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081514819 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.100405949 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084955262 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111892533 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105922446 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.07718563 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.104056107 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.080690005 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.100525952 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078435229 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.10891959 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.085108386 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.105153965 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110941265 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084297072 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102954729 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085629269 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.102418981 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.10215085 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.085007249 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106482433 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.082836611 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.104546073 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.08252886 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.104384725 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.080440828 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.103155901 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.10272621 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.083482123 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.101701748 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089410868 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.101548628 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082212622 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.104466932 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.0822165 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104019332 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101852589 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082482179 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105044185 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083030944 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.102116906 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.084896759 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.097769705 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088995983 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.102697247 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108662853 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083686929 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.098316562 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088094483 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.105026268 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.086172164 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104451135 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102872651 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083859806 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101470361 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.08451029 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111500353 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.080024749 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111442356 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107288449 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083010788 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.10487126 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.081824382 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104217537 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.081099928 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.104543576 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101935066 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083233076 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101189727 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.088295911 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.104891874 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082011952 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104771979 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.083407767 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.103120328 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101435292 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077662872 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.100574407 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082353437 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101875484 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089620748 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102890202 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084735445 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.10147338 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103319353 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082875624 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.098075323 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091679737 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111720093 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101781981 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091141636 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.101248955 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.083546663 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111761494 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.075378122 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.101176977 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098915631 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081214774 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108799344 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084251746 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.110882494 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.082184322 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.101663524 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.079108742 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.104044781 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.080950276 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097392333 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099285079 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086998931 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104280197 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081940037 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.1026232 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085310114 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103934546 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.118221513 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.082862146 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.103617996 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.083574598 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.100011017 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081619558 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101899074 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085458373 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104759744 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.079491494 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.100410359 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.081829397 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.105217434 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.10227259 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083302629 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.104023291 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089167276 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102595805 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.084979971 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106847659 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096295941 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.086534477 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.10170392 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.08306618 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.101159959 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086067435 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106367414 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102516472 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090908632 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101743354 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083742759 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103318002 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080845764 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.102727395 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.081483033 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104189123 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.100373528 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.085279057 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110900692 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080907801 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104680473 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081703827 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.10368505 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.086227796 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104228481 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103551661 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091001459 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105979993 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.083304326 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109038764 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104996208 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086435578 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103751466 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.083868126 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110120931 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.080899648 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.111254105 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101100793 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084491753 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103554436 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080591988 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10198273 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.082454009 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101707252 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.086282789 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104723931 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.100001208 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.083411781 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100150114 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085076471 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106680687 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090608045 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.106258282 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103925935 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.079795347 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098582906 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084393086 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.100667247 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084374339 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105861223 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088590572 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.105449523 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.082405219 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.10258362 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109630772 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089452995 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.107700764 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080664187 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.107884474 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.083155408 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105296519 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103459699 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084167692 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103638832 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087904347 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.10506052 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082196935 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111409122 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106209193 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08518777 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104324815 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.083231996 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.10346984 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078774016 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.104408964 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.083848449 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110147497 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104739371 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083209035 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112177393 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.081610296 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.104184627 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105052358 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083510113 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.10964399 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078881674 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103601186 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084132898 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105319838 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.077526248 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.103177638 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.079449282 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.106089137 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101775465 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079343133 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112030139 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.08983351 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106140391 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.080900733 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103433972 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.09730299 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.080167611 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.10184825 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085338918 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.105198986 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.092755843 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.103274707 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08157924 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099535005 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08249637 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107385776 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.107313416 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080594464 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098878792 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.081533934 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105558794 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089850094 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10244637 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082186056 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107580688 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105071762 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082140918 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10734852 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080212571 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.107635468 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092499973 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105339528 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103674943 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.088969367 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112245143 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.083736537 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100243256 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.083935574 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.106197996 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103111872 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085013346 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104531034 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097220779 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10773025 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101370856 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083449838 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105887115 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.084372173 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111455573 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084698082 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105592995 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107206477 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.087005051 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112677015 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086335212 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109696354 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.085307222 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.106668224 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102527298 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084398209 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.10135378 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082600373 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105046846 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.084004283 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108830041 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.112153363 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083077407 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113235761 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.090498747 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.109357953 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.079426119 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.103933761 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102185655 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.07993401 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104483055 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.082899029 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102114408 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082573048 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.10361316 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.08440428 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109778624 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.084195551 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.106303552 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103174538 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078336311 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.106848014 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.087572584 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10473775 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.080061413 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.104725471 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.084543439 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.110918713 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107158689 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.085265373 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105737548 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085469211 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105298253 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.078901339 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.110742763 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082282943 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.108174791 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.101473954 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085470631 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104883667 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088021116 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109787535 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084056839 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.107046145 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115237798 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086084725 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.10161858 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.080990265 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.110592916 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.081792319 seconds)
  done (took 57.875116526 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148305696 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080844372 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099357453 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079073472 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114205561 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099762712 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080021362 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100344727 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080088338 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10355371 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078589143 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100238554 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109363922 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125384837 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094214423 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104966866 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077728488 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101977449 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09876237 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081842997 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110970328 seconds)
  done (took 2.94274658 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104517108 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118909536 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116072286 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120136183 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08956443 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116162786 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.116089431 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115901378 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099432154 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112330099 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120681466 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11570223 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091064679 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112273786 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11103713 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093581694 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119620001 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111253826 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.11662943 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094444991 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114363876 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116162504 seconds)
  done (took 3.295766076 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086099498 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102708978 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084799285 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098767146 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083719564 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.099336235 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087355062 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.102530751 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.085770409 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103727538 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081077226 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.103616763 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10496353 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079677307 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102331324 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082241539 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151724981 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.109099229 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082325162 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106059126 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077628458 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.106992855 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.100043531 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079738945 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102350116 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087818064 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104926567 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081047074 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104190005 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081814724 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.105359032 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080958891 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.106040708 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103633591 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083755645 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102625711 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083582019 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103768301 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079018888 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101762419 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084260214 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.100176088 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083556091 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.106348129 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.080564305 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102978726 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084566061 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.105468552 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.077575568 seconds)
  done (took 5.51271685 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105198191 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162327674 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085729394 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.1447441 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122946217 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113013509 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087765288 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143087058 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103725526 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081724625 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124202619 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120305168 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105381214 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089217768 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.108423193 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103831968 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085617908 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103041587 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088090318 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105500768 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109605175 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090302557 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120535044 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.119721487 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108639176 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082925169 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104777754 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109159549 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.09771211 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110682972 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109903629 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090064261 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121667038 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109735915 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082756141 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107792248 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122964341 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104381534 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088400316 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102707122 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086177138 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111120859 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110794552 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102258544 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106614547 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109958952 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084875342 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102422741 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117361187 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086454696 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.115041275 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120913882 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087241406 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.106310616 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110196367 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.12080097 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085121241 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103233857 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087163577 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118743855 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102504288 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088454803 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119594078 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107272707 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112240669 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099481617 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110810307 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108898818 seconds)
  done (took 8.217577032 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094214057 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112442391 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122424049 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12071201 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09078998 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112986825 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111219895 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090984446 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112686719 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117951618 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111645665 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.135144584 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086687101 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115822041 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112032505 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091365041 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11257511 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11167196 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09101252 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112232242 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112299125 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121465422 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091211293 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123098976 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142815486 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107048341 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090627209 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112803657 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121653672 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111933944 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12387769 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091550309 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112609799 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.122372205 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.125567002 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090598147 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105116654 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111464126 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091122709 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113084771 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10646031 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100322788 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113043065 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106835346 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091426216 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113369806 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122185327 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124546035 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115265154 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096955177 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112977924 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122583111 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111940868 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091597824 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121399709 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.148086178 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12187239 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122073907 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111213293 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10066904 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122350999 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.130052527 seconds)
  done (took 7.778097877 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107509507 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.117544308 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118454567 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099997324 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083500283 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10973399 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082316114 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103742315 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114111845 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094486993 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116872045 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109928028 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090782836 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118246963 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110070801 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113087273 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088369032 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110544019 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116696838 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109293219 seconds)
  done (took 3.000972604 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093617082 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125511949 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.083839784 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113525735 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109347114 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090297957 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.109046733 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108285802 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086094554 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108396484 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09584021 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118155254 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106475993 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089960005 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117688381 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112257959 seconds)
  done (took 2.553393948 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097095769 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119179364 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121037561 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083673049 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106144178 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.079840273 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107879569 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100730719 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081456452 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.122300696 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084281703 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.112109153 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105783372 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.08379214 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101913617 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087968463 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102745658 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081215194 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10664718 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119631352 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096289551 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105509443 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105829466 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087776585 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.107173525 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090072204 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107321349 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103002838 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083628288 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106465935 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084339073 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114206389 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101499523 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.08375471 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103835769 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082557514 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.107120112 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08524103 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109811975 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104893811 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083852439 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105122201 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084258109 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107510743 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.079935038 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107125747 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100997384 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091905307 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10407023 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085004782 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106640205 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.085585358 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108721199 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116677303 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088265841 seconds)
  done (took 6.322385143 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099768884 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109812318 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079492928 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104597898 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087657326 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108752274 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10853958 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088262667 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106895005 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082647483 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107917597 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088532926 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108539444 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109240747 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087933948 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110511322 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080670091 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109002685 seconds)
  done (took 2.673737641 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091042759 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105576657 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092706649 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107555486 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084279855 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110068388 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079783538 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.1064326 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103389382 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086273313 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105726881 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087415228 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105011918 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087400907 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107808665 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084318583 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.10908751 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103145201 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086233516 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101731946 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087803098 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10508732 seconds)
  done (took 3.032100393 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118439599 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125340205 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091704484 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.231736713 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103180999 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133812096 seconds)
  done (took 1.699055895 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109218247 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122284227 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106594934 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107628074 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116683182 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085634815 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109657338 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108720952 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11837362 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100761952 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109089088 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119196808 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118164071 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097387551 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115866894 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11649026 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10835852 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088737216 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107643929 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12869706 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087064604 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11960883 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108021422 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086381054 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110071418 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119576986 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118590677 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122185082 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08755817 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119227723 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114038954 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087076253 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119406739 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123629405 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109660527 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098716819 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109609723 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129088795 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114209417 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097072044 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111190305 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116065071 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098465819 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115961945 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119374304 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108376864 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093463309 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109409036 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108837958 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136227979 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094563934 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119620105 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116436583 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118410053 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098125622 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.157554452 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102820338 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11965657 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115717283 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123029023 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118410608 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094149643 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118975387 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123730625 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116667778 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117959189 seconds)
  done (took 8.247712112 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102569834 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126431032 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108495389 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122698541 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097356492 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10954762 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108104885 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087488262 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109291457 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107108808 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153202163 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088041286 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119198401 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11897963 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086531216 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110473198 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109088287 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118245179 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087052704 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136871933 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109951005 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119197813 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118098329 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09829775 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123999532 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115734985 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108118775 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088307264 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1094301 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107421861 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094086446 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110751219 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118047381 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086481668 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120096392 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11001768 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08695859 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115162009 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109146264 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114419904 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097717536 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12975159 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109695827 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10871938 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102470371 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109573263 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10870453 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086075082 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110208075 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107414886 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102048174 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124467296 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123820777 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118429629 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108041738 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08787446 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110364475 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108103503 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088081456 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116407886 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118959258 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086929245 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.157307065 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088837991 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109408247 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119024661 seconds)
  done (took 8.11160616 seconds)
done (took 156.949331485 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.220652401 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.230421089 seconds)
  done (took 1.349534633 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098083303 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.13726265 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095562439 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169855007 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106092516 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.11945708 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.1395821 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096535922 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.10772853 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085613981 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107597111 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087362535 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.173374122 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084997406 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107388243 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.10840684 seconds)
  done (took 2.731574265 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.200452891 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255912688 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101307778 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107164388 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088333568 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.112330658 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104557797 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091078812 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109782963 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085126616 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.110035077 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.08609814 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.107464943 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085127042 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.11199811 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.086955224 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107427151 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086818234 seconds)
  done (took 2.944479472 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112447498 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.149705908 seconds)
  done (took 1.174793844 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118625874 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181806191 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318116321 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.15585679 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.105830341 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128031704 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157733133 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132577092 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197270519 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123851408 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122377502 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097298981 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140985749 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115776419 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093807503 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119477028 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.143280655 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.091841976 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116699743 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116168162 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115628262 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107487649 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115583571 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093014327 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182566888 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120155908 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.08481282 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.10829141 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116256747 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095159814 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113798471 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.126353337 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097112937 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.178037015 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10253198 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.178109343 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.09720258 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.113418021 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115237433 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091009776 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119627247 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118572078 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104583984 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118739362 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084014632 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119556477 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106244813 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085218312 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115998567 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096712677 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116350482 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114000361 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.156447978 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118572555 seconds)
  done (took 7.611285226 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.793612762 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156974838 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089995865 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.88686644 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138073686 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103049729 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.78250097 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133808393 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.233923505 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.758295736 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134030359 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121945225 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226852778 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.237339984 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.989321834 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.311236963 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.669985001 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102140392 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151767983 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153737097 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119550846 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137394693 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.107072147 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.449889368 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095038191 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112737382 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095312273 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.121887623 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.1585689 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125991059 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114141025 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179369049 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.248566276 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205121041 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116135987 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089232499 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112300939 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.16979827 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267183741 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212561678 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180938161 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086664451 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.11118797 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.099281801 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132886318 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109009418 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164252205 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.173029656 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.193551518 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091937482 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121855267 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119546787 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099470132 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.187363255 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098626535 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.321011186 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.313712482 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111792314 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098411856 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127107935 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263411238 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122864116 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.19955511 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138609557 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212598596 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111362512 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.785129173 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.190343774 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089364885 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118843125 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.096189418 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11661341 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121828854 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167348704 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.393132288 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123283802 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093213923 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11105982 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.204015469 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.126020848 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110683371 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162229546 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093929956 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12143629 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125227552 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122256159 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.17007009 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.230277294 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123443549 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118820048 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092750371 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125553576 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.11609003 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.210871746 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219210854 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163012281 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.212695058 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122973726 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.164835492 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.190469692 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098252773 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.193859392 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098311108 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126365452 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122413408 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215944091 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145409987 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101433979 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116627545 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118107391 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148782427 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10531336 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119215684 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.170196421 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.478686028 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168900862 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109164727 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106357251 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120694662 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160135047 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118222968 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258058561 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099674251 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.191446815 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096901015 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.109901865 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120029912 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165010047 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121985789 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099600813 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123514359 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118049661 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235528933 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218012213 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100190648 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245214502 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184511866 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118785389 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174030407 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121282179 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168582361 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119793632 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099147819 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118214279 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.798388819 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.099751847 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122144189 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116264433 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187723283 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089672335 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12501173 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125054547 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086115755 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.800875293 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127809486 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098103678 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.124321273 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119278388 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12023892 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096585487 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116019534 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162074448 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229469063 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120655375 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097174011 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.125814076 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158944949 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117501717 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125960121 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125098149 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.10411723 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123104385 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114737017 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103674444 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192392039 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163186175 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220976879 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.56812171 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113203145 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124229027 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.204990145 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113175742 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287131863 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118818556 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.204599899 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186343474 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098164345 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.310026053 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.188774377 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187512236 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106051022 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.195830281 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088425791 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118528639 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.165245743 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112363971 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094961085 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.184555064 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103266647 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124156519 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.958329517 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089256088 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.246965167 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087584322 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.170204289 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118131623 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122006731 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.29688787 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090122434 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130533229 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.164721036 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115678571 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125392295 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.702782341 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125743867 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122497194 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096586212 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222961559 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162729492 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120294823 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120013172 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0978581 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.186118243 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.209811917 seconds)
  done (took 44.128840579 seconds)
done (took 60.846395819 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.277312558 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.215907414 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.265913089 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169690025 seconds)
  done (took 1.943987048 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.172181819 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150535575 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121610712 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108614853 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151759115 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084391744 seconds)
  done (took 1.725207286 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.3587755 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.275911734 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.240789272 seconds)
  done (took 1.81831502 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.286458138 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.246322421 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.47422711 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.324941751 seconds)
  done (took 2.394771421 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.210715569 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13333596 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.112536836 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103130568 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.199512312 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.247445006 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142825801 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202216359 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.099088726 seconds)
  done (took 2.438602821 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.198179098 seconds)
done (took 11.460901828 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.166633322 seconds)
    (2/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.298082687 seconds)
    (3/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.122906974 seconds)
    (4/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.17047908 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.184674507 seconds)
    (6/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.201986721 seconds)
    (7/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.118500617 seconds)
    (8/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.156070444 seconds)
    (9/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.245133035 seconds)
    (10/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.120539954 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.091449175 seconds)
    (12/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.19474766 seconds)
    (13/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.086934299 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.123930471 seconds)
    (15/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.088482521 seconds)
    (16/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.167523252 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.119358844 seconds)
    (18/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.122556961 seconds)
    (19/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.098921504 seconds)
    (20/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.190380249 seconds)
    (21/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.139058754 seconds)
    (22/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.231044594 seconds)
    (23/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.22240898 seconds)
    (24/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.099709728 seconds)
    (25/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.23235277 seconds)
    (26/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.149675003 seconds)
    (27/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.181489523 seconds)
    (28/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.113308899 seconds)
    (29/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.11818597 seconds)
    (30/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.230598941 seconds)
    (31/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.115149673 seconds)
    (32/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.170172447 seconds)
    (33/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.195493457 seconds)
    (34/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.119204255 seconds)
    (35/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.089080758 seconds)
    (36/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.24853259 seconds)
    (37/286) benchmarking ("sort", Float64, false)...
    done (took 0.173324298 seconds)
    (38/286) benchmarking ("sort", Int64, true)...
    done (took 0.221972188 seconds)
    (39/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.193884634 seconds)
    (40/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.093885086 seconds)
    (41/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.144345344 seconds)
    (42/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.202374139 seconds)
    (43/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.122859415 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.110759892 seconds)
    (45/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.135771296 seconds)
    (46/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.182132123 seconds)
    (47/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.189135524 seconds)
    (48/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.118401746 seconds)
    (49/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.139249229 seconds)
    (50/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.14931477 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.118384769 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.093291517 seconds)
    (53/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.190748037 seconds)
    (54/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.153203769 seconds)
    (55/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.06661987 seconds)
    (56/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.135766315 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.147480754 seconds)
    (58/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.086412808 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.136679933 seconds)
    (60/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.22107067 seconds)
    (61/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.066567379 seconds)
    (62/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.113105927 seconds)
    (63/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.09298272 seconds)
    (64/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.124784069 seconds)
    (65/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.119499076 seconds)
    (66/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.076536219 seconds)
    (67/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.066296367 seconds)
    (68/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.109817529 seconds)
    (69/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089432026 seconds)
    (70/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117859909 seconds)
    (71/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.17133478 seconds)
    (72/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.11694098 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.110628372 seconds)
    (74/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.137710832 seconds)
    (75/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.108280071 seconds)
    (76/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.126120418 seconds)
    (77/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.190171276 seconds)
    (78/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.093703989 seconds)
    (79/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.167460392 seconds)
    (80/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.120831592 seconds)
    (81/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.097740864 seconds)
    (82/286) benchmarking ("sort", Int64, false)...
    done (took 0.111556457 seconds)
    (83/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.099040689 seconds)
    (84/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.119006725 seconds)
    (85/286) benchmarking ("sort", Float32, false)...
    done (took 0.174453148 seconds)
    (86/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.160480211 seconds)
    (87/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.173783991 seconds)
    (88/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.175161724 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.136865456 seconds)
    (90/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.168714816 seconds)
    (91/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.107796049 seconds)
    (92/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.137851311 seconds)
    (93/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.111328673 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.085620213 seconds)
    (95/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.198246684 seconds)
    (96/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.074610639 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.110656583 seconds)
    (98/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.116439728 seconds)
    (99/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.169800297 seconds)
    (100/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.090742354 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.086782104 seconds)
    (102/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.118802811 seconds)
    (103/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.092501717 seconds)
    (104/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.173345445 seconds)
    (105/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.133662217 seconds)
    (106/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.120121142 seconds)
    (107/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.175724071 seconds)
    (108/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067679426 seconds)
    (109/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.111550356 seconds)
    (110/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.06778971 seconds)
    (111/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.139433874 seconds)
    (112/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.076341924 seconds)
    (113/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.185139952 seconds)
    (114/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066873867 seconds)
    (115/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.116170179 seconds)
    (116/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.11134496 seconds)
    (117/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.140140447 seconds)
    (118/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.06564225 seconds)
    (119/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.155367488 seconds)
    (120/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.118333604 seconds)
    (121/286) benchmarking ("sort", Bool, false)...
    done (took 0.18197778 seconds)
    (122/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.094793502 seconds)
    (123/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.114471901 seconds)
    (124/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.093336352 seconds)
    (125/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.120599132 seconds)
    (126/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.149696436 seconds)
    (127/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.093308586 seconds)
    (128/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.091781937 seconds)
    (129/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.185318648 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.116474159 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.094827595 seconds)
    (132/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.111024319 seconds)
    (133/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066360108 seconds)
    (134/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.065124263 seconds)
    (135/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118873211 seconds)
    (136/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.191385674 seconds)
    (137/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068405786 seconds)
    (138/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.174747526 seconds)
    (139/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066799415 seconds)
    (140/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066049717 seconds)
    (141/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.134732102 seconds)
    (142/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.16554973 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.085323574 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.110942521 seconds)
    (145/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.09294654 seconds)
    (146/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.091668938 seconds)
    (147/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.127580794 seconds)
    (148/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.120600689 seconds)
    (149/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.121922949 seconds)
    (150/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.078277432 seconds)
    (151/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.20035451 seconds)
    (152/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.095099413 seconds)
    (153/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.126919421 seconds)
    (154/286) benchmarking ("sort", Int8, true)...
    done (took 0.220550353 seconds)
    (155/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.082047095 seconds)
    (156/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.155196409 seconds)
    (157/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.138654752 seconds)
    (158/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.092717695 seconds)
    (159/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.068590917 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.110442927 seconds)
    (161/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.067557776 seconds)
    (162/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.115428533 seconds)
    (163/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068600871 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.086034865 seconds)
    (165/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.128448062 seconds)
    (166/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.108344351 seconds)
    (167/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068563402 seconds)
    (168/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.06723566 seconds)
    (169/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.090938344 seconds)
    (170/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.09801939 seconds)
    (171/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112491084 seconds)
    (172/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068442716 seconds)
    (173/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.076832851 seconds)
    (174/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.121143479 seconds)
    (175/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.141955906 seconds)
    (176/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.068366923 seconds)
    (177/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.092535096 seconds)
    (178/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.149657936 seconds)
    (179/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.06566084 seconds)
    (180/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.118220664 seconds)
    (181/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.090812994 seconds)
    (182/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.146368038 seconds)
    (183/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.111159767 seconds)
    (184/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.096681721 seconds)
    (185/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.171100738 seconds)
    (186/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.09480316 seconds)
    (187/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.121371281 seconds)
    (188/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.116749344 seconds)
    (189/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.334801941 seconds)
    (190/286) benchmarking ("sort", BigInt, false)...
    done (took 0.220743735 seconds)
    (191/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.112283246 seconds)
    (192/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.086809115 seconds)
    (193/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.115699333 seconds)
    (194/286) benchmarking ("sort", Bool, true)...
    done (took 0.219900176 seconds)
    (195/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.108350843 seconds)
    (196/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.067347355 seconds)
    (197/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.075427249 seconds)
    (198/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.113357974 seconds)
    (199/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.087908046 seconds)
    (200/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.120346168 seconds)
    (201/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.085702164 seconds)
    (202/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.111053445 seconds)
    (203/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.091456804 seconds)
    (204/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.120564585 seconds)
    (205/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.092928487 seconds)
    (206/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.156548337 seconds)
    (207/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.112670125 seconds)
    (208/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078476221 seconds)
    (209/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.117454117 seconds)
    (210/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.129161115 seconds)
    (211/286) benchmarking ("sort", Float32, true)...
    done (took 0.228378294 seconds)
    (212/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.124694835 seconds)
    (213/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.06780738 seconds)
    (214/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.146925839 seconds)
    (215/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.077548395 seconds)
    (216/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066456718 seconds)
    (217/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.091071352 seconds)
    (218/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066907822 seconds)
    (219/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.065688324 seconds)
    (220/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.116195117 seconds)
    (221/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.108249536 seconds)
    (222/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.068243452 seconds)
    (223/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.087210251 seconds)
    (224/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.110101091 seconds)
    (225/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.117300925 seconds)
    (226/286) benchmarking ("sort", Int8, false)...
    done (took 0.212032911 seconds)
    (227/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.100115442 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.10987194 seconds)
    (229/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.092519115 seconds)
    (230/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.089215823 seconds)
    (231/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.095908815 seconds)
    (232/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.109783022 seconds)
    (233/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.161258614 seconds)
    (234/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.108231731 seconds)
    (235/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067080209 seconds)
    (236/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.066002218 seconds)
    (237/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.10053655 seconds)
    (238/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066948269 seconds)
    (239/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067752574 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.111410439 seconds)
    (241/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.18070296 seconds)
    (242/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.085850587 seconds)
    (243/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.111705476 seconds)
    (244/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066567403 seconds)
    (245/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.067201076 seconds)
    (246/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.112805818 seconds)
    (247/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.135123115 seconds)
    (248/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086848857 seconds)
    (249/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.111672045 seconds)
    (250/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068395548 seconds)
    (251/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066375662 seconds)
    (252/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.119716796 seconds)
    (253/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.086005444 seconds)
    (254/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.117895379 seconds)
    (255/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066784529 seconds)
    (256/286) benchmarking ("sort", Float64, true)...
    done (took 0.228258897 seconds)
    (257/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.12069917 seconds)
    (258/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.188059903 seconds)
    (259/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.104537646 seconds)
    (260/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.113891707 seconds)
    (261/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.086945795 seconds)
    (262/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.092382906 seconds)
    (263/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067491533 seconds)
    (264/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.066476193 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.12021877 seconds)
    (266/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.108547082 seconds)
    (267/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094521429 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.107919507 seconds)
    (269/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.06745637 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.084241311 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.119514299 seconds)
    (272/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.085068295 seconds)
    (273/286) benchmarking ("sort", BigInt, true)...
    done (took 0.228290669 seconds)
    (274/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.092319752 seconds)
    (275/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.085855455 seconds)
    (276/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.110314515 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.091550941 seconds)
    (278/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.11487259 seconds)
    (279/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.110775194 seconds)
    (280/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136491551 seconds)
    (281/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.117299279 seconds)
    (282/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066815862 seconds)
    (283/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.07663 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.117089326 seconds)
    (285/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.06743978 seconds)
    (286/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.111114524 seconds)
  done (took 36.103351895 seconds)
done (took 37.051855024 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100319684 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149444687 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095036802 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136444229 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124225547 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091145794 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.120262765 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097270603 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124988945 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125307406 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097535578 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093500333 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.095974332 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121931832 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098391928 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139530381 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123246843 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093098774 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119161487 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.08475443 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119551689 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085396835 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112870831 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.068935312 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.12224903 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.09311574 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117941838 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119138054 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087468435 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109942975 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090516016 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118005985 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086627902 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124472137 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094163116 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.120782066 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096538289 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121785999 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.08709252 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111906616 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117912498 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.08794567 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116515781 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095242361 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116414228 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091897921 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119181567 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098687571 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139681 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114990152 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095741635 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120250028 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095579287 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119003638 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089551122 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119325138 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.090533679 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139805715 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118232357 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091078854 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119154122 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094821688 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117337774 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094245408 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.120079664 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.11982048 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099211278 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115687088 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096220731 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.117093617 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086561447 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120197271 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089616565 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111874083 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095041415 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122419642 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.084589172 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117439892 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.092560056 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.117574021 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109207825 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08998481 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111970745 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093955733 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11337355 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071016441 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.089297938 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.118015962 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.084865609 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.120587125 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.11698752 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.09474003 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113265808 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098485097 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111360035 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091868867 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111442351 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086974361 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113276613 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091020478 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111163803 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089099854 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121409937 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088183356 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118299118 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.097642588 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.112539982 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116924851 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087108994 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109885104 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102318238 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121699769 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.085799702 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116769901 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.08498031 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119963835 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085242436 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111206228 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085533091 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111861849 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.091503719 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112409792 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08823708 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.119281894 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12441591 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087853129 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114295399 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090132401 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110360553 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093410175 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110189353 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.08747272 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.1131207 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078397068 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112992399 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087599121 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118133797 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090171438 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119326191 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088954072 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120808738 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091782005 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117440995 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091956066 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.112100525 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074063661 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117032297 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089280322 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.11385884 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086120389 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113295069 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086792195 seconds)
done (took 16.985981061 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088128772 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183464806 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151259827 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142275951 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106429177 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113443581 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121371955 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118649051 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114330824 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14279059 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109178021 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133058743 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147413833 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086743361 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112939177 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091708471 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.11358579 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101019535 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146746954 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132395775 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164665931 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085847951 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146793189 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135873654 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120196321 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105165434 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.11254955 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091075858 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.11553175 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.111884957 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133477995 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114116442 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088779698 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134778756 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.103956238 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121539872 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086311617 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119920135 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086446497 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112712077 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140664603 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133733615 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094042449 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117635073 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091188446 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115360581 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088565059 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121559326 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09695922 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116810559 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126245712 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155397049 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090099055 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12242 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085873974 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124378542 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.12045596 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090149236 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112659627 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089823298 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111181548 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091642484 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.12718335 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.14138969 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091179794 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122995409 seconds)
  done (took 8.659602823 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105630579 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139807263 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.129615239 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.10764801 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112419337 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088440579 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112802965 seconds)
  done (took 1.799132188 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089385814 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134096966 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110914539 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136631751 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131249121 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.10934086 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123856173 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087831583 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13297153 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088115056 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135528701 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151877529 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.088848686 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122269603 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137626086 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088904211 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138002702 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088275918 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116602996 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111407134 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11735559 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135280779 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.09095401 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113749919 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102431927 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114614468 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162119687 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093861287 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115274246 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091439977 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113199803 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.166461742 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101853736 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.127068209 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087075382 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129814124 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.145790553 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086502009 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.13045423 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093075798 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.12851065 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.088301373 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116383333 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.085679462 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119447107 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.122714326 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090545073 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114823512 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091893205 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133248813 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089259509 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128244018 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088933589 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118866473 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089078588 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120792102 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123025012 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090841643 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133180823 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090961743 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132542755 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104282556 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.129476837 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130562687 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092050264 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128560694 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102831841 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117707422 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089280087 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.11975358 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130470458 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087927438 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115219764 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100156147 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115537768 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.111767054 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138579404 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090217402 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124988607 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113508455 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089974947 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113981044 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112010514 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118974721 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088481663 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122177036 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090936288 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112714587 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087574466 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.119084816 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.08712503 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.118958547 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.117941631 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.090430146 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118442239 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106244614 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115605051 seconds)
  done (took 11.902939008 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.093223159 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.11398349 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092637723 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114467964 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090069888 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116103715 seconds)
  done (took 1.638455346 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113626663 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11868062 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103178541 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121861611 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156804792 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.102733581 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130452655 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123433275 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.106909983 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127516223 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128902732 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104522684 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136405118 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120341689 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103745068 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121258505 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103738704 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126224177 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127221841 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09551112 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137433225 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120971176 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096717839 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132036641 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117599167 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096565135 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125596195 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.101452556 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.12909932 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123092235 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096123452 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117866129 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094706459 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.124187427 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130207328 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095181905 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121788259 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.117490942 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101019381 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118391303 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.103719222 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122225386 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126285014 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093649834 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.12434003 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120764684 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094477121 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126050119 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.102817771 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119606654 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119039526 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09534786 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118248031 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093207616 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122426221 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123783513 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094033057 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130174084 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.09423848 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122096846 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117704571 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093699791 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124366004 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.116164068 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104346487 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119712023 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094815552 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122905061 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122435202 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.09602155 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119742714 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092449594 seconds)
  done (took 9.261172377 seconds)
done (took 34.262251233 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.695761142 seconds)
  done (took 1.711594221 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.82674131 seconds)
  done (took 1.844788725 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.313120931 seconds)
  done (took 18.360010206 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.505740081 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.591527053 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.002358885 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.18104511 seconds)
  done (took 3.297969696 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.983548282 seconds)
  done (took 2.022034534 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.285284033 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.231887534 seconds)
  done (took 1.540618857 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.795021866 seconds)
  done (took 1.828591356 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.383729611 seconds)
  done (took 2.408741272 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.329228762 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184146923 seconds)
  done (took 1.54368052 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.549038117 seconds)
  done (took 1.577693471 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.016637517 seconds)
  done (took 8.051009135 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.270045637 seconds)
  done (took 1.311537643 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.302768625 seconds)
  done (took 1.336298401 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.627477575 seconds)
  done (took 4.66618534 seconds)
done (took 52.528905835 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099234774 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126337 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101887821 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125892026 seconds)
  done (took 1.484508833 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101887668 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121867494 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099909129 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121837057 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126016656 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097265879 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122847469 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100889564 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121777993 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095721134 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.123054136 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119723821 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099331351 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122928137 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093232781 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125071293 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098357167 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122467892 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124714181 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.09606548 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119641461 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097552491 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.127366722 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.092510039 seconds)
  done (took 3.713168314 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100931418 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119744541 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.09750347 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118949631 seconds)
  done (took 1.479361319 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101399283 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.13170342 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105575326 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127308177 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130540734 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106961722 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118550234 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092530697 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.120767632 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100189256 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.117012532 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.112278364 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132674666 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124453924 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101972956 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114723334 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.090162478 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.132585138 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125339938 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102826854 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118077357 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.100928556 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.116449199 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.108906667 seconds)
  done (took 3.770568833 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169563938 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.12865886 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138100342 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095124652 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161055245 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141152942 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088928157 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140939193 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087426459 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132343392 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117287472 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134129128 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129982033 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.086548504 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114595086 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.086481484 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129990292 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128967368 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091054217 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.12736021 seconds)
  done (took 3.47787864 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.099008928 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117143886 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088322311 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116802207 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099527412 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120880868 seconds)
  done (took 1.687550009 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091431765 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114769451 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091784179 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.11429445 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094508381 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115270178 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088965402 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114727054 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090654698 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11543999 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089634038 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115300659 seconds)
  done (took 2.283131942 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.502526754 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.121856511 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120666786 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089373071 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.121832338 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.08924375 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129546466 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092645844 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141379228 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088120861 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.117701685 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090453836 seconds)
  done (took 2.751052066 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234257168 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126617948 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286857717 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.371217974 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158651518 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177532635 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.284014025 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166295575 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.225578647 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166655571 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203729214 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224077632 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151941837 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191530869 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13792895 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145083664 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204654883 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24847098 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154172417 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207927902 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227768739 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168053776 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180106713 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152360887 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138756664 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171728198 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094191757 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131288241 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235530976 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175462131 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214961398 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162718289 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14584323 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210375006 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253520436 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222581299 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283489371 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137835626 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.148538481 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.169061125 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266482635 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139623483 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202257618 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155588007 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131502023 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218335808 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168158693 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176979142 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.152380587 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138766493 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195290689 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241771449 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193606106 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139345213 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304347346 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151903223 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.201384717 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194463564 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251873209 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200408231 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213031017 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.096024368 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189075638 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221373606 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187232053 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.174393946 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.208493551 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146964578 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201158035 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189259116 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165238175 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221375166 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.186961932 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141264208 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169971633 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172962881 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171998235 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257674019 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211549071 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.096388632 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169583413 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150092279 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133823354 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.194595675 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098427754 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240264124 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143684736 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.163381519 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215856847 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160700277 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16061696 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202527295 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229895611 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148773459 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083676597 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154685814 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156264038 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19372964 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140984626 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159975737 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163218454 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130745942 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184462134 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.125152974 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184228455 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.118273161 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174464765 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183089854 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127801112 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161199261 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151863838 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.124800028 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201866352 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198545041 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143281628 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132325355 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210725194 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177496837 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.151604614 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17783221 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228261889 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.116668525 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150404861 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228914055 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216685624 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140631739 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229393319 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157161018 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108276888 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132569175 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181547996 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155243098 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162482205 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135202868 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.184312094 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233762179 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.09865809 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1391793 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192928518 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134445037 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132516387 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163477618 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148833681 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.110811272 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.152206083 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.153312133 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209274132 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179440243 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154755638 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166457192 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152667461 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253907188 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140682923 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.124327011 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150680665 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121059565 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193572084 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197831688 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131914763 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232197525 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.17327953 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203524098 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170270473 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135333855 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178721855 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130853901 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.092761711 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222972586 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16824839 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161555973 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.19719715 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228046796 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.184661355 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.18349828 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199657184 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175430068 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164565526 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15782362 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.110946762 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161713044 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170517325 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.125398798 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.144346325 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133614766 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147835044 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116391601 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135044903 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223740048 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171160018 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190180384 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16213746 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150859259 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183456629 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129395236 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175424696 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.178204459 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14857021 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.198229226 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223445443 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185851687 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144423706 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201076721 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.122147429 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124879 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.115972567 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198139308 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107508533 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135807862 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163351013 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181350102 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180683136 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204872416 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212146595 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200809356 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191168265 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.09504081 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169585055 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186549221 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177193529 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.193538803 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143364845 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.150477017 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180841453 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159417487 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258255178 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169866089 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175665904 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236915983 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.121924328 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132831115 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152727427 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193320838 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154670251 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205783086 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120540036 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141915744 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163075091 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.135227474 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160699524 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184192358 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16412045 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218846503 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149969523 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187430634 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127549262 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163760395 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160048138 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165498318 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081759765 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176167382 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235220225 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148983689 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169753718 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189150568 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133438667 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.310614232 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245652865 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196672976 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138775041 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156278756 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161629726 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164890614 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173462731 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180370548 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160689037 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188058553 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159907537 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137634904 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140296229 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122390107 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151605921 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131995219 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149117129 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.179101722 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139710849 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18577312 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164641459 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160517366 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171896431 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151684351 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144323673 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150035823 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217258863 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183084268 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240434865 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.152620978 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179940099 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234726847 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098911177 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133247002 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133800146 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178552673 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110050386 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223445915 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.188623098 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234605914 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18589281 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19435315 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140832612 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120438033 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12945905 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20122422 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207836239 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155403493 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.160107206 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232800114 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.118891511 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134449855 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178433421 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295859148 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146068008 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225074501 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080776674 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.281253663 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129646205 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104988129 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16534974 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238104284 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.13733424 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.190914146 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17536674 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172102137 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16598623 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150430693 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191921826 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245136295 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203976143 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181007634 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.134469568 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157034693 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177462329 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221216871 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15780534 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.113318191 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233043975 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196249855 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196094506 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.14358712 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170806728 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169077697 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157724529 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217135464 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1066931 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236910051 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135039738 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195524432 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154198508 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145461166 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177625243 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.189834576 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143755295 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21737758 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185686681 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136165446 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10657363 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170123932 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211573046 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157369586 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099775449 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207657531 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098010779 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221746873 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232172892 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136794892 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156915188 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149067502 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108350048 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156210426 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187330693 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114358144 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.167356759 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204750405 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136782449 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191864491 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233490202 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171159632 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174493263 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1463717 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.69349231 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.132245987 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19596071 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160002728 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237337789 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150550191 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17479599 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158703454 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169076256 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197383945 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162233573 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232578198 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221384669 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.181231176 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103889167 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158932841 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193448017 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.116216757 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15226661 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169261193 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160753559 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.155808107 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.206314454 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174364849 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.106506111 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141405724 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200034131 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161482673 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213098665 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181283361 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110338695 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202896541 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189401689 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133585284 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.181012849 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239085995 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113401478 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152790274 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135461901 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.158587354 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265209382 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096496273 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236612956 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186533138 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160834803 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169911933 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.149024256 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22285015 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159302105 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187663423 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148268883 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.161285413 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157665522 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138075246 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.103208723 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156857022 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169315766 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151392058 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160757037 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.166880111 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199142529 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.095030643 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146022874 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317721326 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195514685 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24548706 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.1079244 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137216364 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164136394 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152288977 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.178065775 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179801918 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137997559 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136709974 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.108011452 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.160271839 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112661053 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158269467 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196417983 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195234629 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210594414 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.137100034 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279789693 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113204629 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156806654 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.116861416 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.104261881 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151817884 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147245249 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161137372 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194916631 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267727616 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149183656 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.134093699 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150645423 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.099141049 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137047268 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165899676 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166154839 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178708406 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146603916 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.08028399 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157962982 seconds)
  done (took 83.787327121 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175331698 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.148817883 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.168883354 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.214213767 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.179611272 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.27074851 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.212113705 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254869461 seconds)
  done (took 2.75737215 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093674549 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.148620673 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157896885 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134401377 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092421963 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119566801 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.350369013 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133919161 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.118820462 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121481224 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.176561837 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09389159 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.556964929 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091717884 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.12015054 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.109867906 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.093154987 seconds)
  done (took 3.843656837 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.478704686 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.740627626 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.51925637 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097134116 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.216170308 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.11294646 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.831121077 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.202626799 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.117656906 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.494930499 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.78182413 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.162314886 seconds)
  done (took 18.895152028 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.115788246 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137366539 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.122903748 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.152968173 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.140735117 seconds)
  done (took 1.813236163 seconds)
done (took 132.776441317 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104794102 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.404699025 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071088318 seconds)
  done (took 1.651064925 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107820972 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138401862 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109062846 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.137384386 seconds)
  done (took 1.645179592 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098753 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126803819 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109148674 seconds)
  done (took 1.481091723 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.326654336 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.19040987 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.170288949 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106904444 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128868589 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103655772 seconds)
  done (took 1.48779457 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098103546 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128284605 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097430416 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130983066 seconds)
  done (took 1.604417909 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095511878 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070534227 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100806471 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075235055 seconds)
  done (took 1.487698166 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114727149 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132301571 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103599558 seconds)
  done (took 1.501641301 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.129250233 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139617237 seconds)
  done (took 1.420046684 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106651349 seconds)
  done (took 1.255393583 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.11858945 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169920064 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.182004831 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.161279157 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.204649714 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.160406238 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.144035171 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.13883952 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.129718407 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.140676316 seconds)
  done (took 2.702070971 seconds)
done (took 18.170846227 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103844325 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.513255969 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.383312315 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146026234 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721892549 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379074524 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.03190625 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146408566 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164601512 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093187888 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139723473 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671061985 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.061042169 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.468780972 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.018511197 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.374263833 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676107526 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121916451 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118615327 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094725408 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.016157975 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092442513 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12272458 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092523677 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704387635 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425891925 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09536376 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.37160406 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092432533 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126983393 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382478095 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123420918 seconds)
  done (took 17.215783087 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095417217 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17360694 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09718665 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138016089 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123896869 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093904221 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124505008 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093162416 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179651577 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123387359 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109948096 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122441666 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125860128 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095946517 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141972441 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091705539 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125719517 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092311528 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122914764 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120282108 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111995293 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121324507 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.0945092 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121765868 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093575355 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135258031 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.092975539 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122466604 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119747563 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099254248 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127333846 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093940296 seconds)
  done (took 4.879161197 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140981493 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181757774 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129012705 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126369479 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169064064 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124168336 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199296675 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118133832 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183126689 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123766525 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139495723 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094854012 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157836589 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093663082 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143451042 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121710392 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097335383 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122448461 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092192674 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124477146 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139199207 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093053577 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122277633 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094416323 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122946415 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107776266 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125011622 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120222439 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093727286 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127353001 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099917202 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12426459 seconds)
  done (took 5.215004357 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097361251 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125805199 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109372849 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139678209 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095292251 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127029597 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096928004 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125488973 seconds)
  done (took 2.075992654 seconds)
done (took 30.533481666 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111565713 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127441234 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106805397 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135545285 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102459505 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131993594 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090638731 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134627808 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133097379 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103251117 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138772198 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092587505 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123197374 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091778086 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135901255 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098200051 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133467682 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101958433 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.135314527 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.13161244 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095470855 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134072581 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103322708 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133581678 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104593576 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.135032927 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.13727168 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101331399 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123706492 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094597906 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125767548 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104500956 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123899281 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105048141 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127671321 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097425488 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124541483 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093712226 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133755624 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132070665 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100527304 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132865158 seconds)
  done (took 6.076336848 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108879772 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139007508 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105451139 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080540529 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.11801346 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080745224 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138429629 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079578175 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109907956 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.10887371 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073618967 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107923687 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078332194 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.10138509 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077838702 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075500852 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.10900777 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076929733 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076492852 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106728832 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080355028 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072110388 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108633435 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078302514 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074599402 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110904059 seconds)
  done (took 3.642028289 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.101431294 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134733314 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113200412 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183458571 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160592791 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099373632 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132700984 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.109217227 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.138844572 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119532573 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096734134 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149934439 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109291788 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130662037 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.090566089 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138403864 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134844868 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093972918 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127553051 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11170596 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139552019 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102516867 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140934857 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131996977 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093114131 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122299492 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097537635 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134955485 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.099492079 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132300316 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096676291 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.126451299 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122433173 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105296004 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126966827 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093858967 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142425945 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10230693 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.132464161 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092586869 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.131082502 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122187715 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114917529 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161914017 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091023758 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130746302 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095477452 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133107509 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121034063 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111113234 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132209129 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.093066428 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125128021 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091203044 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.12188106 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106189916 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.125216281 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094104014 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131896718 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126008532 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106492038 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125250406 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108668685 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122548702 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099474067 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122046251 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092559085 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121425245 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.113477211 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124413981 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161313753 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.092688505 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123797336 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101070853 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.131082371 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127059263 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094453772 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138530374 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103234444 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125978428 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.10272696 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126406935 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094671726 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.141476939 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.094197151 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125460127 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.092726754 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.130032058 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123956975 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094511592 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136783303 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091878499 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126158265 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110603118 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122863298 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.092570889 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129803419 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126876633 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093319995 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136690024 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.09754475 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123920513 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102278179 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.123792971 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.094563408 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.133971377 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126510529 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.093093111 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126369433 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098681524 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123421852 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093490688 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125449403 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094394971 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133618587 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099976277 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.128749076 seconds)
  done (took 14.894602288 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.230047815 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215313575 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.235308293 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.263130753 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136137382 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113936111 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.210798072 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155872587 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123953791 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159888538 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.174523217 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.18044198 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.168377922 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.184268969 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171602898 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093656952 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142480152 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.133600395 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.246255294 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.257837792 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144513127 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.10073532 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161102289 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160167106 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.13715164 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.131078289 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.111517725 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.136878749 seconds)
  done (took 5.859154723 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109019305 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156031156 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097478619 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146125097 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150197799 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093110195 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129524763 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094047957 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.137152225 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136237397 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093161873 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130519166 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099583129 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133443394 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.12231842 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104042528 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132410352 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095575436 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126222904 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.09696889 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134510901 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101239192 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128286804 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.091622905 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.133294386 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121588932 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087559276 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142480176 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.091584589 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.146122389 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120601727 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102291278 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.137286092 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093554851 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122725349 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095327733 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126146349 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095008174 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124894557 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091598924 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122725166 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077696664 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122323885 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106536359 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.130255194 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080161787 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130963365 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.097692248 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.125817516 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119902174 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097470004 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12550606 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.09843943 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130322293 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096942771 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123599933 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096634942 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115431587 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100563148 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125622813 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085266062 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.090723987 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.129324844 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118216922 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102540808 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128862511 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092675109 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125667169 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097930392 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129935972 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095546488 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130331751 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090520436 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126893266 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095638634 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12981312 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095885236 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.124256644 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.09192132 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.124604792 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.07503992 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124123805 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074484986 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126978336 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092110673 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122670023 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096076743 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130453908 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137874444 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096024263 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132630787 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094091166 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122536043 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096312281 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112979182 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096644883 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139630286 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141117963 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.09454829 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121662561 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108234652 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126889544 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092910598 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106510183 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102777199 seconds)
  done (took 13.050306686 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.127665216 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154786376 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095139824 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.143070546 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.15742489 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.156901511 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102233818 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.13067574 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095990684 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142449263 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093928123 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132740483 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.093715716 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138432961 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156434571 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104405854 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126154849 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108395995 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129029737 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169639209 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112012513 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143641951 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.111221771 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125631865 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.097899427 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.141861351 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161560362 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106946733 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.138033366 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141937674 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108463934 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.16195116 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.112182216 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.129732859 seconds)
  done (took 5.549094242 seconds)
done (took 50.230676531 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.260616059 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.495520597 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.259284846 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.260708072 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.298708541 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.260142487 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.294098037 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.260915574 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.313659145 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.25920097 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.509716107 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.927927613 seconds)
done (took 59.589323499 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.289888116 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.390506143 seconds)
    (2/2) benchmarking "String"...
    done (took 1.522907281 seconds)
  done (took 4.102549509 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.616001297 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.217726701 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.523214302 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.25835276 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.260066026 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.556000431 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.095157709 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.696765148 seconds)
  done (took 28.79487073 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.270042017 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.349773358 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.289376848 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.269236402 seconds)
  done (took 6.3689579 seconds)
done (took 49.359756462 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.250508444 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.324523869 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.270809739 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.239985549 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.379388493 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.286826692 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.643380473 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.302505568 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.281828021 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.247463107 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.291965353 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.268871382 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.274462076 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.636280674 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.276563593 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.276154103 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.308136568 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.775568359 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.683049717 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.262404576 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.284545667 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.291254323 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.272395235 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.267551973 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.323073507 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.263390075 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.280907726 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.30546804 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.04374205 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.267772511 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.291947739 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.804594596 seconds)
  done (took 193.168007244 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.260638221 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.221983566 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.34648002 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.306179174 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.619566641 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.462506338 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.404193849 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.828790542 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.286953005 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.284550078 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.406590892 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.263581843 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.478791493 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.239794807 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.292530799 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.265673629 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.51773831 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.512260452 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.317585241 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.443842736 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.286270466 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.341209813 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.252050447 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.389317667 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.290380566 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.371615586 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.302609223 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.311556053 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.453078007 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.427491238 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.268810057 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.302297141 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.920456533 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.123083019 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.272040823 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.279541458 seconds)
  done (took 151.544369968 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.330895422 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.264267968 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.264335919 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.265106723 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.298854015 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.264328956 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.878620171 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.884821336 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.767210762 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.660544007 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.798455531 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.62500173 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.268642824 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.362094219 seconds)
    (14/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.263669781 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.278301725 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.265121041 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.280263427 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.311553364 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.265212294 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.264845534 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.877484842 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.282150602 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.37910486 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.446519983 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.284789737 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.298740974 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.657745264 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.266010189 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299254298 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.602136501 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.321154173 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.266257871 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.714977437 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.967288645 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.384983377 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.268589796 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299967309 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.266950091 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.550651225 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.265644134 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.265862459 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.266502132 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.268888097 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.003296394 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.271175524 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.880925386 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.270926891 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.296216862 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.269925599 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.267118762 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.73943993 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.071623301 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.290988499 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.26706436 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.270368256 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.26750545 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.26779748 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.301632211 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.699960399 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.366829123 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.286489555 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.27075277 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.301178556 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.266676276 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.287128331 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.271522909 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.54991697 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.349068449 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.492802762 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.884830895 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.271361575 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.267886639 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.367291662 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.389801207 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.268944605 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.266812439 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.267565376 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.268374038 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.381084372 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.268085823 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.717416393 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.268584393 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.450311938 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.28834336 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.798524741 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.371259454 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.269513856 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.703601225 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.272658912 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.269205248 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.064324901 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.369056621 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.269417786 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.268525239 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.270118711 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.716515542 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.887308482 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.59386661 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.271939506 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.713677075 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.271876497 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.72720375 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.851029911 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.000682542 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.272720949 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.382614333 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.448756703 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.288262503 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.268230484 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.77882526 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.27217511 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.326308126 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.268124148 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.668471628 seconds)
  done (took 375.672686757 seconds)
done (took 722.903264989 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.868960453 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.864048184 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.976834501 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.856327975 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.821362814 seconds)
  done (took 10.586013399 seconds)
done (took 11.779194101 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.469467833 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.468998369 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.333918473 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.470746387 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.299055258 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.490772225 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.445429511 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.285443361 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.372537248 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.353494834 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.372306347 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.321960453 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.294614718 seconds)
  done (took 19.176634622 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.5905923 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.589285604 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.326387272 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.612059809 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.302709762 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.592688769 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.465776819 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.487163575 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.501506351 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.298050232 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.276484687 seconds)
  done (took 17.239770965 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.615483246 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.593982502 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.328472334 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.589593639 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.301739352 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.594588086 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.46774527 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.485114365 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.484591894 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.298506307 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.275072557 seconds)
  done (took 17.22628038 seconds)
done (took 54.838201402 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.272287678 seconds)
  done (took 2.463403584 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.309385243 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.472848887 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.288932734 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.274734009 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.271436686 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.272781992 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.276221663 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.271799344 seconds)
  done (took 11.630365552 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.2677374 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.269569514 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.2698404 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.269797699 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.268277261 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.270607919 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.267093167 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.269887667 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.270386569 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.268330852 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.268395989 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.268629242 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.270832243 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.267978695 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.267853724 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.273547597 seconds)
  done (took 21.502473884 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.270329968 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.268319863 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.268675333 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.270342343 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.268070693 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.268529632 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.269781021 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.2686648 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.26821208 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.268389915 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.270707552 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.26838578 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.269325923 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.269223943 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.269722729 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.27074213 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.269889114 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.269245492 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.273901963 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.268833759 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.269332944 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.27096431 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.270528538 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.269949902 seconds)
  done (took 31.664979961 seconds)
done (took 68.448613441 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.422795296 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.965326067 seconds)
  done (took 9.581630192 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.272171322 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.273064389 seconds)
  done (took 3.738955969 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.272481119 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.272793891 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.271073206 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.271660842 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.271828927 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.272252404 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.270434822 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.272010214 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.272923782 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.271390339 seconds)
  done (took 13.913703279 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.272457992 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.271995071 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.270730294 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.271988504 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.271840813 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.271310117 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.272034729 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.27283569 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.272330167 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.270729762 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.274871448 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.270661264 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.273602407 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.271298255 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.272647915 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.269977106 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.270739733 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.271632349 seconds)
  done (took 24.088501876 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.273420222 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.273099445 seconds)
  done (took 3.741721583 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.272018158 seconds)
    (2/7) benchmarking "second"...
    done (took 1.270705613 seconds)
    (3/7) benchmarking "month"...
    done (took 1.271632616 seconds)
    (4/7) benchmarking "year"...
    done (took 1.272303112 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.271840511 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.271395352 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.272411475 seconds)
  done (took 10.09733871 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.275328386 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.457723066 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.540115539 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.870671642 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.276033091 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.278980619 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.147880653 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.278728023 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.2810392 seconds)
  done (took 14.602235546 seconds)
done (took 80.953717506 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.283907493 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.287090569 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.450751039 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.288424085 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.283688667 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.611496776 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.306060353 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.4152596 seconds)
done (took 38.11953394 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.289856752 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.2570885 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.01977665 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.268324343 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.321537694 seconds)
  done (took 19.063051668 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.325251847 seconds)
    (2/2) benchmarking "read"...
    done (took 1.607439808 seconds)
  done (took 5.129703607 seconds)
done (took 31.676971561 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.276762203 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.274949804 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.27622146 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.273105366 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.276668692 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.273594478 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.27385529 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.274376586 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.276667457 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.27605045 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.276520389 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.276794013 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276389236 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.27272197 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.274902326 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275260448 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276943722 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.273977735 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273838085 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.277277363 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.275217572 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.277858895 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.27413097 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.275403432 seconds)
  done (took 31.807193786 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.277865388 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.276630294 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.277770347 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.277396172 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.275595142 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.278049648 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.278117555 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.274860255 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.277645836 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.277776437 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.275451226 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.276530802 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.278536238 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.275165035 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27752139 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.27577176 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.277944436 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275860249 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.278407584 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.275557843 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.278109734 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275852238 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.275647705 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.278776208 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.275859344 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.277188312 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.278901912 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.275441595 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.278854784 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.275553537 seconds)
  done (took 39.506883488 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.284572734 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.286039127 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.280636136 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.278690283 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.279758194 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.277797191 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.278732737 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.278140861 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.278929045 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.278791595 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.278296408 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.278824586 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.278224672 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.278741831 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.279341421 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.279939396 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.280222555 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.280176597 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.280004762 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.279107676 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.280136351 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.280379874 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.278703546 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.279605636 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.279648453 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.282353692 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.280227539 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.278881968 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.278510091 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.280196597 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.279245003 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.279683465 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.279126071 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.28255059 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.279300462 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.279407446 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.286361989 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.287426993 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.280002616 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.279743293 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.28035086 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.28074393 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.280248297 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.279210526 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.280552611 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.279486247 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.279777189 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.280084477 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.280164146 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.28234845 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.278804851 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.278790028 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.278832341 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.279960351 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.280397709 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.28006634 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.280633042 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.27887687 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.279080263 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.278552882 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.279967839 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.279687438 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.280378534 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.278967877 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.280378884 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.2788875 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.279736323 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.280649552 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.279425999 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.280011233 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.280503439 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.280220275 seconds)
  done (took 93.364962265 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.280338211 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.277760828 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.277498235 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.275958967 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.276529611 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.279512529 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.27686981 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281216643 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277624111 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.280763601 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27982916 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.278194574 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27795772 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.280693388 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.280401966 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.279669992 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.280225499 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.278478884 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.279932741 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.280495589 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.283021664 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.278996782 seconds)
  done (took 29.346441901 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.283887662 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.282996773 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.278263115 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.280833263 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.277966685 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.280859472 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.280795759 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.284614266 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280765416 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.285384285 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280055113 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282869943 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.279366171 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278860966 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.279145083 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.280545116 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.28182358 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.281022151 seconds)
  done (took 24.262953675 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.279568957 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.279326562 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.283295659 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.279443275 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.281230135 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.282804407 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.280279856 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.283240897 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.282157822 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.281080393 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.282565981 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28172186 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.28394345 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280944174 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282787507 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.279394717 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.283433622 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279989394 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.282116986 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.281151757 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.283355954 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.283426792 seconds)
  done (took 29.400268772 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.284382423 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.283002725 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.279782375 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.280420028 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.280496168 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.286979095 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.282152613 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.28147864 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.285269123 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.281550134 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.280661185 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.283764957 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.284376557 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.281979609 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.280045994 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.280906743 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.282962291 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.282487906 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.282785932 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.280755082 seconds)
  done (took 26.850262818 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.284205384 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283324126 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.284887833 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283528951 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.284401797 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.284428971 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284795451 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.28767007 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.284466027 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.284580837 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.284180383 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.283376515 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.285042018 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.285335409 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.284578792 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.285158632 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.284121838 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.284431001 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.284739382 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.285172858 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.285662147 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.284629509 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.284433694 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.284268247 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.284220362 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.285000489 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283704134 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.284868487 seconds)
  done (took 37.175492113 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.284541249 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.285011371 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.281383065 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.280844229 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.282079974 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.281160705 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.280828231 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.281388659 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.285066238 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.280396621 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.28427015 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.284606442 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.285322531 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.285105153 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.284451625 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.284718314 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285201966 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.282206379 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.282240226 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282159367 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.284191984 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285498079 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.285207055 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.282422684 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281825222 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.285089783 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.281833945 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.282499606 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.284726555 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.282697338 seconds)
  done (took 39.703022928 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.303980442 seconds)
    (2/2) benchmarking "in"...
    done (took 1.302819249 seconds)
  done (took 3.811566287 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.282607953 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.284313211 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.285709039 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.282947361 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.282606392 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.285854464 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.285935027 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.283272355 seconds)
  done (took 11.478459666 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.28635598 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.286529264 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.285524697 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.285488558 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.286469318 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.286149252 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.293402291 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.30734796 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.286251354 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.288377977 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.29458745 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.293995302 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.288638869 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.287366368 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.286716087 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.287941227 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.286732411 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.286501476 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.288676999 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.287235392 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.286418386 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.288515372 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.290001562 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.284945311 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.289393669 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.297756551 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.311424661 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.287532414 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.288038783 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.29241424 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.288087409 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.284605458 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.293283819 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.288484861 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.28705 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.287659355 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.2957694 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.307167369 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.294593551 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.309286575 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.288845647 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.285457991 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.288745256 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.289307142 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.290607242 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.290025877 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.288274976 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.287792196 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.288429704 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.292451785 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.295108503 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.288246829 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.286253403 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.293529534 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.289509904 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.295715142 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.31150772 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.29259132 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.298292363 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.300766016 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.321292679 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.315316088 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.291748133 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.290078368 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.300657162 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.313589036 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.296579057 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.309688799 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.288851055 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.290930083 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.297204136 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.323684599 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.31767243 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.291106462 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.29122168 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.291063557 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.291013482 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.290941117 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.297930003 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.312798335 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.292438857 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.291683478 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.301177003 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.313600544 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.290640788 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.291412236 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.291821904 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.291217394 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.293263449 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.302335112 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.312234752 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.29255295 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.290770091 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.29118433 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.293408776 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.293301932 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.290790265 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.29150383 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.289360333 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.292449059 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.291521876 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.296032133 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.301023224 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.29468518 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.292221571 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.297604393 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.312391227 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.292541276 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.298057375 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.292496469 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.293676408 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.29569703 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.298411868 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.291497599 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.296664159 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.301777771 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.293150445 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.294560152 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.294101607 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.294209628 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.303712909 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.319321655 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.294473696 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.293979171 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.298238269 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.305773122 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.295091358 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.297695817 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.29379767 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.292390822 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.291864109 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.295291352 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.294438719 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.29588039 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.294876989 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.295798389 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.2914337 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.296060384 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.295843795 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.295892391 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.296016486 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.296071131 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.295792466 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.296497813 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.295175656 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.295162611 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.301165289 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.31489076 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.296535017 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.294453204 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.292030205 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.295504449 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.295951538 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.296220703 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.296064611 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.29600675 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.296370024 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.296824799 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.297315632 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.296516897 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.296998227 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.29724476 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.300241404 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.296765303 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.299738731 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.295527876 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.293549049 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.295580949 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.296074554 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.296992232 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.29652692 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.294608427 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.299780648 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.305085297 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.297699472 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.2973429 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.299544603 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.298606121 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.298170174 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.297399133 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.301677939 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.306134401 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.298086933 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.303317164 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.31853792 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.298070062 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.297548419 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.296916265 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.296860953 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.298263393 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.302080667 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.30633197 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.310008535 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.323825831 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.29918216 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.303014314 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.299615486 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.303086411 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.302055074 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.298859221 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.299014377 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.300491591 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.299551291 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.299083345 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.299687024 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.300796972 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.299536711 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.299558984 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.299896032 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.29955867 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.299629567 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.298671283 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.298978744 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.296176705 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.300126803 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.299959737 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.297943582 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.296904724 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.298245626 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.299388629 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.300827699 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.300435952 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.304414645 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.297672276 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.301087752 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.30069004 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.298725695 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.298505116 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.300296733 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.30115023 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.299799788 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.30670372 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.319798234 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.300428146 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.306420263 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.321155945 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.299203136 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.303616004 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.300089512 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.298203135 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.304089901 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.30880351 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.300883677 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.302482496 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.30209216 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.300720236 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.301750286 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.307275412 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.318626121 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.300698621 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.302302694 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.302174151 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.299315241 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.302977532 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.302366711 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.302604659 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.303193091 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.300927027 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.302895508 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.304232671 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.302472483 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.303714328 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.303425426 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.305610722 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.311452824 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.306626861 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.302648242 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.305066482 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.304315636 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.307281941 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.30283699 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.304234231 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.302083899 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.315227475 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.329293203 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.30911471 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.323903192 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.303563426 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.309472871 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.325133486 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.308052787 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.30355598 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.304433918 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.303322328 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.304122759 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.301300128 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.303951245 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.305214127 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.30642313 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.306468537 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.309631674 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.304350696 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.304581695 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.305882301 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.305376025 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.306277607 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.303769474 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.304459253 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.305800032 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.305387461 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.303626205 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.305320094 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.311132783 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.324819903 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.304653238 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.304806087 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.30500925 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.304336785 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.307222173 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.305696421 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.30943424 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.31288018 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.3097785 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.314115924 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.307435892 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.315116419 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.306154429 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.309560369 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.314051466 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.303644038 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.305307152 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.305615137 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.305679175 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.311885256 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.327330738 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.309067382 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.310823506 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.307794323 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.307711323 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.306762574 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.305748406 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.307400858 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.306622693 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.314449338 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.327349528 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.3106884 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.308465452 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.303342052 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.3069498 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.307600324 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.307446491 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.310947455 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.309516386 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.309150513 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.307215638 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.30874235 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.307156795 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.307526424 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.3083942 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.305396084 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.307431454 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.314087991 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.331351683 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.312469499 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.308340902 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.315467127 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.328452055 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.315169478 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.329625403 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.309470618 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.309930224 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.309961263 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.309695165 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.307870371 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.309133848 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.309754464 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.311602682 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.312500154 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.307625591 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.310585617 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.310675561 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.309440418 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.309979045 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.319419731 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.333242982 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.310586132 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.314610569 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.306701994 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.310859631 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.315636374 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.309143274 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.310140182 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.312811686 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.321712072 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.318092339 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.310689159 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.311931996 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.309728173 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.311703662 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.312347974 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.311362815 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.311166051 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.312063747 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.311595769 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.311960646 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.31347715 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.310225794 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.311686002 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.312196909 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.312766588 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.320370664 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.331683858 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.313058205 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.310962875 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.313171486 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.31129658 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.311113669 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.311158193 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.312920518 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.312425035 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.312005114 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.319744967 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.318614621 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.313490546 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.31249992 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.312462686 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.311712117 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.312932682 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.312559186 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.312033596 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.312740041 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.31381808 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.313223979 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.313868124 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.312071277 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.312137916 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.312598028 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.313608507 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.316218938 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.319705069 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.313983959 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.311037659 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.313022034 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.313815809 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.311844693 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.31417715 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.319794631 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.33700562 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.324388168 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.322539332 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.318167841 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.314252702 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.317252488 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.32162098 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.313211456 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.31447455 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.315017422 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.315205541 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.315708437 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.317849289 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.31568491 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.320917249 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.334646546 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.314257305 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.323253641 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.334814532 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.314975281 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.316996059 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.318233915 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.313675971 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.313310424 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.315211751 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.314315826 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.321107676 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.336156578 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.31642361 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.315979347 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.316151427 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.316109202 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.3182993 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.316295975 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.315976958 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.312502689 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.314844502 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.315373909 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.316007584 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.313269998 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.314827717 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.315562553 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.319890217 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.32305488 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.313482462 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.316894439 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.314419429 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.316017486 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.317058642 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.3161591 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.312897691 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.314624821 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.315444316 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.318046647 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.315554387 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.318271081 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.316652347 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.318800091 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.317143362 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.317767428 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.320387222 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.326938261 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.325191665 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.316759544 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.315904133 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.317863894 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.320390325 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.317891726 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.318336624 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.319148965 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.3195684 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.317719391 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.317777605 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.31919755 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.320887843 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.333671258 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.337779834 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.31860126 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.319597339 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.319734228 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.318674556 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.315986863 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.319075026 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.32099838 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.322860535 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.328170242 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.319624963 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.325593443 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.33924251 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.321444705 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.324086059 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.322708902 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.326426835 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.320706502 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.319325331 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.32071112 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.323989072 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.336220316 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.319388309 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.330254804 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.348497195 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.34057642 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.31986832 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.319884233 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.320035506 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.320827744 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.321140911 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.320418429 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.320671705 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.320304766 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.320349484 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.321330733 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.32599964 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.320586802 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.322626489 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.320609288 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.319504673 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.321756315 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.31702904 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.320699867 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.32145238 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.32205053 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.322442709 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.321601033 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.320962276 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.332454894 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.348333159 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.321872428 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.322502012 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.318932978 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.324018429 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.325100434 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.332471723 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.3304923 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.321899924 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.322361981 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.324523321 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.324444033 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.321055113 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.322338858 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.322440373 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.321441332 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.320111985 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.335181579 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.347927481 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.326192157 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.322848053 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.323661321 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.323440445 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.324328291 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.32313986 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.323669045 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.324484579 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.324948145 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.326551054 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.323783197 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.324044371 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.326555612 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.331726606 seconds)
  done (took 780.709006663 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.321924705 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.322153924 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.321039956 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.320970324 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.320801385 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.321762819 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.320508994 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.320981991 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.321473918 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.321275706 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.320201234 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.321241706 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.321141204 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.322027536 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.321857827 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.321916097 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.321307693 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.321490605 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.321813486 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.321822457 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.322118724 seconds)
  done (took 28.992069709 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.325448762 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.322336708 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.322621999 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.324392668 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.32239638 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.325149547 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.322533816 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.325085721 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.325392887 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.322685439 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.325458136 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.32566261 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.322625003 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.323111788 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.323317976 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.325227064 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.326099944 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.323279348 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.325495744 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.323902657 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.324896026 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.323542474 seconds)
  done (took 30.373630342 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.326812617 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.327414879 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.326119463 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.323041221 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.327038578 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.324990389 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.328517351 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.326711042 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.327622335 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.327512288 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.325950244 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.329341529 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.33504803 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.333423138 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.328392781 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.328419254 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.472990782 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.328426688 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.327733952 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.32959585 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.326293578 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.332000201 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.344874887 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.325847343 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.325880418 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.327817307 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.327344474 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.328705866 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.327746181 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.329384481 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.33355468 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.329017107 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.32893822 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.329747475 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.328601113 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.329243174 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.332642115 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.328957196 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.325862049 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.328256807 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.33961369 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.35045071 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.329371035 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.334075238 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.350487944 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.329411134 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.332077856 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.337729954 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.327120822 seconds)
  done (took 66.571253198 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.329800911 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.329915957 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.327069613 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.330310955 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.329755862 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.329250807 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.330457143 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.330034703 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.326612668 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.327155176 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.330472918 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.327687093 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.327523239 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.331042879 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.329595556 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.326487724 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.327189121 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.328294067 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.328728878 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.327348622 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.327788216 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.330143843 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.331133945 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.32920362 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.330499869 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.327802357 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.328530415 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.330374647 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.328717149 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.329394686 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.331147571 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.331723369 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.332380993 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.329081319 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.328465449 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.331714816 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.331631333 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.329734662 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.330867978 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.330341331 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.331246003 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.332442177 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.332150322 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.330959054 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.329137062 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.330278225 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.329419806 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.330252324 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.330401613 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.332574203 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.333627822 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.329812964 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.33232445 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.331471408 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.332379414 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.331359274 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.330572724 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.330816802 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.333316604 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.330111564 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.331669923 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.331824795 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.330060253 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.332727212 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.332621361 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.330560576 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.330654363 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.3334034 seconds)
  done (took 91.703375017 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.333536462 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.333841316 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.334172615 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.33371663 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.333976124 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.332809558 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.334326845 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.334468049 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.334994404 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.334427399 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.334623356 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.334460759 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.334863697 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.333723841 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.334012411 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.33513671 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.334751729 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.334526442 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.334955967 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.334991196 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.334337222 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.335722378 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.334849706 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.335410845 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.336837803 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.335444178 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.335298321 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.336502099 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.334870173 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.335571032 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.336419988 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.335592798 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.336359707 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.334953173 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.33624161 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.335229293 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.336339134 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.335142179 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.336663342 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.336626233 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.336554992 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.336990444 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.337469746 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.3362522 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.336486098 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.336788318 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.337328913 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.337503583 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.337144875 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.336195624 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.338668999 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.336478453 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.336179554 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.337952336 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.337188148 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.337843164 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.336766064 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.339196038 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.338934918 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.339052952 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.3365385 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.336826015 seconds)
  done (took 84.071761865 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.337581687 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.338058641 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.335593514 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.335301223 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.337257609 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.334016269 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.337345697 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.336741444 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.338313434 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.338563301 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.337511324 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.335129159 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.335434871 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.336942081 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.336036679 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.335019368 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.336420192 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.336497051 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.339318732 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.335709595 seconds)
  done (took 27.986524426 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.336505673 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.337851422 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.336482907 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.336986007 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.33945816 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.336623258 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.338965386 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.338951575 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.335613279 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.339830384 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.339152551 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.339762523 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.337211181 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.336156279 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.340695118 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.337120068 seconds)
  done (took 22.662491095 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.338039397 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.339011351 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.339679822 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.339413764 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.336829193 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.337238564 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.339507768 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.336918054 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.336930642 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.34025475 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.340595729 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.339151352 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.339720168 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.340223933 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.338146654 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.339681013 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.338189389 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.33809512 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.340198432 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.341064016 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.337900727 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.33748666 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.340531689 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.340849219 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.33905846 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.339306605 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.338133012 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.339614005 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.339074946 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.341427942 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.339235514 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.339508827 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.339189112 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.338972759 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.341953744 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.338844202 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.342983226 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.341808088 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.341710214 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.34243467 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.343017332 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.339951417 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.342396977 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.343168864 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.340484771 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.342483576 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.339842472 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.341125843 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.339670897 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.339660021 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.343586702 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.342811721 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.341744487 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.343639513 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.342494383 seconds)
  done (took 74.962149956 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.343616408 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.343093553 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.340793389 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.34289149 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.34347716 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.339824084 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.343393359 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.342569073 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.341061838 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.34404855 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.340888956 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.345162753 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.341340126 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.344186942 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.342244368 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.34452854 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.34158094 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.341232881 seconds)
  done (took 25.425582962 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.341958714 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.342157147 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.344427215 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.341545889 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.342598867 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.344889185 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.34085832 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.343903516 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.34534844 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.342037649 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.342368355 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.344694167 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.343835745 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.344653187 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.341623765 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.341323503 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.345799795 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.345262763 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.342829633 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.342330194 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.34649045 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.346328746 seconds)
  done (took 30.817358559 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.3457124 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.344217634 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.344437437 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.362227282 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.363864423 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.369208375 seconds)
  done (took 9.390105822 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353674586 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347088964 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.343338992 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34641593 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346189358 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.342977584 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.345141262 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344103444 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.345656557 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.345602279 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343858764 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.346180797 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.346976059 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.342719518 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.346308406 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.345573455 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.343573855 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.343393753 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.343814298 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.346564748 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344800817 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.347371072 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343279222 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344372155 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344302579 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.34479883 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347034496 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.345067992 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.343760174 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.347246031 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347568089 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344592389 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347106971 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.34565374 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348741392 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34739653 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344458153 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34790982 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.34848958 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.345894261 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.348063296 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349107457 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348232711 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.346372073 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.347902267 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346550686 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346422877 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.345910106 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.346848485 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349098257 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348990043 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.345963577 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348919046 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349019415 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349380349 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349004537 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.347518061 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346665256 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348657021 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348596738 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3477405 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.348620585 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.347651338 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.347744147 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.350631538 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346823695 seconds)
  done (took 90.162476914 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348264768 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.34831623 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34878612 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348842527 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348379243 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348777299 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348106713 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348354139 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34855996 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347930421 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351347513 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348631961 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347552329 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.347895384 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348714347 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348451895 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348465874 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349203116 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348846383 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.353053361 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.350073437 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349228004 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349169151 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.350254012 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349131358 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.351444163 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348720654 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.350234342 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348867357 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3486507 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.350276593 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.348337938 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349810078 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.350174275 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349753225 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349629721 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348383251 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349016157 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348858624 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352266821 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348739679 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352803641 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349046923 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349346876 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.351854774 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349712533 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350411779 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349859773 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349438605 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351050787 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.35109636 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35083205 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350822152 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351252311 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351420138 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.350249331 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350007075 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.350732701 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.35124019 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353222203 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349848953 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351111439 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353933414 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.351524687 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.351721929 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351492897 seconds)
  done (took 90.359686762 seconds)
done (took 1822.088628446 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.3595588 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.458909789 seconds)
  done (took 14.088724459 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.516769689 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.470798107 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.352829279 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.382581912 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.353425341 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.34740727 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.351296452 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.352162002 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.351665926 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.352103466 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.351155783 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.541111962 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.403170936 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.351335544 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.351234353 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.445389245 seconds)
  done (took 43.546691219 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.379275388 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.357219817 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.472417681 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.379400368 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.377662459 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.547992219 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.414068999 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.360780806 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.534243939 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.401219195 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.939853334 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.377637454 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.354501004 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.480715349 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.3742378 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.547539927 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.614531287 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.938280854 seconds)
  done (took 31.121023951 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.820689208 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.366572839 seconds)
  done (took 9.454717882 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.376981678 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.361129383 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.357749745 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.354256045 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.351457308 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.348279596 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.355039246 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.349522403 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.031501498 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.487104133 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.365247557 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.363503654 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.374044085 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.356338463 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.352606777 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.390301058 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.512119325 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.358595342 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.350116015 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.357873419 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.352816941 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.47584756 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.400860584 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.357630675 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.481454453 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.001257395 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.363870553 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.359963133 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.486376118 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.360165061 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.353965494 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.355103491 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.355541454 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.964607916 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.840195597 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.368985393 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.382639416 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.366625411 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.350991828 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.542021215 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.361458406 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.359327515 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.346532183 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.837496797 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.488927491 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.475223639 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.597559001 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.377105565 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.355248223 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.416554219 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.360543183 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.355649041 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.385455834 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.123721179 seconds)
  done (took 112.789365521 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.354677858 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.74019787 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.518003905 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.373504642 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.032783583 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.03552254 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.368847131 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.634268648 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.397348237 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.345604195 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.651093032 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.865265311 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.372395313 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.353527668 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.889423255 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.351453064 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.347997448 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.187831631 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.369170951 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.350064073 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.840833801 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.352991022 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.371479306 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.475527542 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.386688913 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.813064453 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.725328328 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.759547171 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.37486215 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.347937216 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.816713897 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.373746096 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.368985665 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.349795999 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.61113833 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.714885452 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.699974694 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.372131015 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.373079479 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.34947137 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.370925896 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.800568987 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.713547144 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.36226047 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.363600064 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.816031712 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.370662065 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.35766822 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.349009378 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.554725084 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.042995463 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.353507371 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.70999105 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.357080694 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.630276244 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.388966691 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.429982074 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.835914659 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.370811061 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.446207596 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.371125215 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.34858669 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.357412011 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.354762304 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.350084317 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.698399368 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.777870107 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.346960689 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.695254598 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.827749706 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.380306071 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.872724544 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.272670218 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.358071699 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.416611006 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.348953567 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.9353313 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.846479767 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.376286404 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.346456362 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.683972275 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.369677822 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.626748112 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.36630047 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.349085126 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.852144718 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.359257692 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.404072402 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.348885792 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.367660356 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.111177463 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.354124321 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.62967916 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.39361174 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.350484928 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.348642652 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.375065133 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.347294028 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.353274222 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.348669704 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.870533786 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.373664591 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.327597974 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.370603628 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.353407723 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.371772053 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.35096316 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.353096497 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.574406231 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.799477155 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.371259806 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.352007398 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.352406922 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.362012852 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.492008001 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.351008051 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.6617345 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.36845111 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.35088584 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.355600126 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.062957219 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.38092505 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.348364298 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.374514623 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.259212017 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.560402859 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.371982266 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.350349186 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.354443844 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.369237481 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.62257381 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.374198535 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.429835078 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.356745184 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.05043244 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.38471826 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.355819916 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.702596307 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.359097249 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.354061194 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.35584107 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.353796957 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.642107683 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.624275898 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.62747556 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.35255753 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.37170204 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.038222899 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.385225023 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.498824279 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.375081852 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.337481859 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.549148913 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.572665953 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.353617372 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.956956256 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.352221269 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.570744077 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.366466778 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.652066863 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.848693676 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.371677473 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.361206948 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.060452379 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.052861916 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.104045337 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.356563695 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.628785409 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.303596704 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.824982621 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.357357566 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.355961087 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.934085459 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.357084844 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.357951856 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.352658487 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.357840149 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.411805158 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.527878208 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.543023891 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.355638029 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.809131649 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.415200857 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.35269103 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.358378569 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.353916898 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.704717343 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.360384055 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.358485514 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.395032772 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.355866388 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.361395729 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.833145619 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.315288399 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.35677543 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.51089239 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.987772412 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.372839875 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.35960124 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.977994596 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.574242281 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.901326876 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.437374144 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.666235717 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.376628043 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.393947117 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.989512164 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.442047177 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.870780784 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.378732088 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.353637495 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.954421138 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.375168354 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.410627759 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.354418698 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.355505659 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.890189026 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.37431647 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.365690543 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.620027577 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.374963861 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.60983129 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.362393495 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.384580724 seconds)
  done (took 1115.242703674 seconds)
done (took 1327.508431673 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.362277724 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.362259206 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.342397983 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.363906787 seconds)
  done (took 26.704014338 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.37173845 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.368203127 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.366903413 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.366939354 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.368613367 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.366851701 seconds)
  done (took 9.48183369 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.405701559 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.359975734 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.362004384 seconds)
  done (took 19.402968662 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.568697555 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.659180322 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.715972695 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.570936106 seconds)
  done (took 10.790339752 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.369340369 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.368313543 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.367938695 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.368023684 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.368315681 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.370063588 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.36619165 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.367436331 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.37178142 seconds)
  done (took 13.590339045 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.366504117 seconds)
done (took 82.605558594 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.369048897 seconds)
    (2/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.093746734 seconds)
    (3/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.415890886 seconds)
    (4/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.821468114 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.927749347 seconds)
    (6/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.724454609 seconds)
    (7/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.500895921 seconds)
    (8/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.379725316 seconds)
    (9/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.722588979 seconds)
    (10/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.46873448 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.637462752 seconds)
    (12/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.001240915 seconds)
    (13/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.545471374 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.420795736 seconds)
    (15/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.443825522 seconds)
    (16/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.345054641 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.38972815 seconds)
    (18/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.363633989 seconds)
    (19/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.469713609 seconds)
    (20/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.577602311 seconds)
    (21/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.54585263 seconds)
    (22/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.624064111 seconds)
    (23/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.344659686 seconds)
    (24/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.421474329 seconds)
    (25/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.360199977 seconds)
    (26/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.005876526 seconds)
    (27/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.335719197 seconds)
    (28/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.724838873 seconds)
    (29/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.392158823 seconds)
    (30/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.358016314 seconds)
    (31/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.483421381 seconds)
    (32/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.774997887 seconds)
    (33/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.810148766 seconds)
    (34/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.41269636 seconds)
    (35/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.370267884 seconds)
    (36/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.369108151 seconds)
    (37/286) benchmarking ("sort", Float64, false)...
    done (took 5.676877974 seconds)
    (38/286) benchmarking ("sort", Int64, true)...
    done (took 6.359756933 seconds)
    (39/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.340219943 seconds)
    (40/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.462073265 seconds)
    (41/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.545682845 seconds)
    (42/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.345730299 seconds)
    (43/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.718834822 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.794608594 seconds)
    (45/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.397071257 seconds)
    (46/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.454221059 seconds)
    (47/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.341451943 seconds)
    (48/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.388765735 seconds)
    (49/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.394604234 seconds)
    (50/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.597520842 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.494543891 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.643364996 seconds)
    (53/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.341697548 seconds)
    (54/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.130863228 seconds)
    (55/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.130613778 seconds)
    (56/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.398981096 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.239141765 seconds)
    (58/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.37252807 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.774000876 seconds)
    (60/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.205460736 seconds)
    (61/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.37143627 seconds)
    (62/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.419127278 seconds)
    (63/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.391866021 seconds)
    (64/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.511098056 seconds)
    (65/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.485055554 seconds)
    (66/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.12077389 seconds)
    (67/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.346449906 seconds)
    (68/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.734365114 seconds)
    (69/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.447159093 seconds)
    (70/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.390207675 seconds)
    (71/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.583785127 seconds)
    (72/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.372808733 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.300572162 seconds)
    (74/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.396422489 seconds)
    (75/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.757577075 seconds)
    (76/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.606728588 seconds)
    (77/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.928208807 seconds)
    (78/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.149763576 seconds)
    (79/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.348000662 seconds)
    (80/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.363265212 seconds)
    (81/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.391484934 seconds)
    (82/286) benchmarking ("sort", Int64, false)...
    done (took 5.587476997 seconds)
    (83/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.474399313 seconds)
    (84/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.390335778 seconds)
    (85/286) benchmarking ("sort", Float32, false)...
    done (took 5.384523706 seconds)
    (86/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.39370767 seconds)
    (87/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.602853274 seconds)
    (88/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.633025546 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.246563629 seconds)
    (90/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.389040872 seconds)
    (91/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.344765443 seconds)
    (92/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.664733551 seconds)
    (93/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.367505977 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.958525574 seconds)
    (95/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.344208538 seconds)
    (96/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.73961955 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.784304089 seconds)
    (98/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.410153936 seconds)
    (99/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.382800509 seconds)
    (100/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.344247957 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.023686272 seconds)
    (102/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.576265945 seconds)
    (103/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.858345416 seconds)
    (104/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.343469588 seconds)
    (105/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.801416154 seconds)
    (106/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.379175723 seconds)
    (107/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.40489289 seconds)
    (108/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.346235266 seconds)
    (109/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.42948799 seconds)
    (110/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.367126867 seconds)
    (111/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.856476393 seconds)
    (112/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.72532043 seconds)
    (113/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.351578222 seconds)
    (114/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.956729087 seconds)
    (115/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.136818679 seconds)
    (116/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.366158335 seconds)
    (117/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.219893614 seconds)
    (118/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.378029965 seconds)
    (119/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.170333211 seconds)
    (120/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.371320119 seconds)
    (121/286) benchmarking ("sort", Bool, false)...
    done (took 1.887968932 seconds)
    (122/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.409617532 seconds)
    (123/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.430173158 seconds)
    (124/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.622510917 seconds)
    (125/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.424976722 seconds)
    (126/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.347441926 seconds)
    (127/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.350866094 seconds)
    (128/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.48195077 seconds)
    (129/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.189271896 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.150055366 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.637737441 seconds)
    (132/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.390891601 seconds)
    (133/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.398027241 seconds)
    (134/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.839523869 seconds)
    (135/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.473332324 seconds)
    (136/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.930504436 seconds)
    (137/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.348636865 seconds)
    (138/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.347257617 seconds)
    (139/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.51609111 seconds)
    (140/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.365822928 seconds)
    (141/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.877315633 seconds)
    (142/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.390971678 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.275948402 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.139900867 seconds)
    (145/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.393338695 seconds)
    (146/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.348561186 seconds)
    (147/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.818807921 seconds)
    (148/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.414176381 seconds)
    (149/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.084306528 seconds)
    (150/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.710129054 seconds)
    (151/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.464846027 seconds)
    (152/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.410380719 seconds)
    (153/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.084659132 seconds)
    (154/286) benchmarking ("sort", Int8, true)...
    done (took 6.389076819 seconds)
    (155/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.899944764 seconds)
    (156/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.651919437 seconds)
    (157/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.369198742 seconds)
    (158/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.814536755 seconds)
    (159/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.368184335 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.333515772 seconds)
    (161/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.738616056 seconds)
    (162/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.827633368 seconds)
    (163/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.935920838 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.312022216 seconds)
    (165/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.772460219 seconds)
    (166/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.455776253 seconds)
    (167/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.192798607 seconds)
    (168/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.407285204 seconds)
    (169/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.370028964 seconds)
    (170/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.474965672 seconds)
    (171/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.432147942 seconds)
    (172/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.939888094 seconds)
    (173/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.18538289 seconds)
    (174/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.380336403 seconds)
    (175/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.531705951 seconds)
    (176/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.217888355 seconds)
    (177/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.400559689 seconds)
    (178/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.188833496 seconds)
    (179/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.353097644 seconds)
    (180/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.41763175 seconds)
    (181/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.395442216 seconds)
    (182/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.350827226 seconds)
    (183/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.419076332 seconds)
    (184/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.494840161 seconds)
    (185/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.146331962 seconds)
    (186/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.431900366 seconds)
    (187/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.373296853 seconds)
    (188/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.462796634 seconds)
    (189/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.405663735 seconds)
    (190/286) benchmarking ("sort", BigInt, false)...
    done (took 6.369924224 seconds)
    (191/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.391103347 seconds)
    (192/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.503090352 seconds)
    (193/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.39011352 seconds)
    (194/286) benchmarking ("sort", Bool, true)...
    done (took 5.45913693 seconds)
    (195/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.444742049 seconds)
    (196/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.343655751 seconds)
    (197/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.840052561 seconds)
    (198/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.515927246 seconds)
    (199/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.472302839 seconds)
    (200/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.371346621 seconds)
    (201/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.414306507 seconds)
    (202/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.849748601 seconds)
    (203/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.587738458 seconds)
    (204/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.027165394 seconds)
    (205/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.590322476 seconds)
    (206/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.468302802 seconds)
    (207/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.457420498 seconds)
    (208/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.361962293 seconds)
    (209/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.40007013 seconds)
    (210/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.664679984 seconds)
    (211/286) benchmarking ("sort", Float32, true)...
    done (took 6.369026968 seconds)
    (212/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.633437727 seconds)
    (213/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.856972975 seconds)
    (214/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.353815865 seconds)
    (215/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.361189207 seconds)
    (216/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.366721554 seconds)
    (217/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.610527906 seconds)
    (218/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.356758465 seconds)
    (219/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.375311918 seconds)
    (220/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.415827014 seconds)
    (221/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.376416487 seconds)
    (222/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.358405968 seconds)
    (223/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.473258999 seconds)
    (224/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.413982359 seconds)
    (225/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.5837713 seconds)
    (226/286) benchmarking ("sort", Int8, false)...
    done (took 4.446403685 seconds)
    (227/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.753007898 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.779914301 seconds)
    (229/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.413145647 seconds)
    (230/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.982722043 seconds)
    (231/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.474838399 seconds)
    (232/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.42720705 seconds)
    (233/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.384945851 seconds)
    (234/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.857766288 seconds)
    (235/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.352758455 seconds)
    (236/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.982693157 seconds)
    (237/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.753024004 seconds)
    (238/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.59363521 seconds)
    (239/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.365453884 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.063990407 seconds)
    (241/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.495508124 seconds)
    (242/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.137410784 seconds)
    (243/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.387619595 seconds)
    (244/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.149833632 seconds)
    (245/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.360647808 seconds)
    (246/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.660736556 seconds)
    (247/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.240640397 seconds)
    (248/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.608203317 seconds)
    (249/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.391815809 seconds)
    (250/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.371255701 seconds)
    (251/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.898248261 seconds)
    (252/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.13190621 seconds)
    (253/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.384808807 seconds)
    (254/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.400423221 seconds)
    (255/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.389958662 seconds)
    (256/286) benchmarking ("sort", Float64, true)...
    done (took 6.381555234 seconds)
    (257/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.765935872 seconds)
    (258/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.471234759 seconds)
    (259/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.410751925 seconds)
    (260/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.462040519 seconds)
    (261/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.459505691 seconds)
    (262/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.354950787 seconds)
    (263/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.359777847 seconds)
    (264/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.981790645 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.462460502 seconds)
    (266/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.02280681 seconds)
    (267/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.400547273 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.457529151 seconds)
    (269/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.121617576 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.513033733 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.192428772 seconds)
    (272/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.223799385 seconds)
    (273/286) benchmarking ("sort", BigInt, true)...
    done (took 6.379032192 seconds)
    (274/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.356721056 seconds)
    (275/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.778975009 seconds)
    (276/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.45720209 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.421761738 seconds)
    (278/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.441349994 seconds)
    (279/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.722414195 seconds)
    (280/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.459711941 seconds)
    (281/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.405255193 seconds)
    (282/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.771390503 seconds)
    (283/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.358317745 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.41886894 seconds)
    (285/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.208771355 seconds)
    (286/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.211573614 seconds)
  done (took 949.421080907 seconds)
done (took 950.693691609 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.412513452 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.408186614 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.387010459 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.412487739 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.498635103 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.415198326 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.401153271 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.392349006 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.438984335 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.440342379 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.387231509 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.412746967 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.391575486 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.391397464 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.39042976 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.406370781 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.440150707 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.392560868 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.407156099 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.400278564 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.406921292 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.389644963 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.440700332 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.413778315 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.395827181 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.394554961 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.395009458 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.413061509 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.502708023 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.396673615 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.393075197 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.403653164 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.44129205 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.391856214 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.384408011 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.409565549 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.404228492 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.404163323 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.392873146 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.424096607 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.849210874 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.408002075 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.393913195 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.393496396 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.394018657 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.39775238 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.394161942 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.398218898 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.406119652 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.409894672 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.858282772 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.422412045 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.397596139 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.392505959 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.406066369 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.390539898 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.397403391 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.410586141 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.411207805 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.411174562 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.418764458 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.395580725 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.394194436 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.410693494 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.402595102 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.904264052 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.406964999 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.396749277 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.854466244 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.415560346 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.903859018 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.419970544 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.397021721 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.407056419 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.426242077 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.449605606 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.391736802 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.393879046 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.401102876 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.391218042 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.402612277 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.40865281 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.397931188 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.393347944 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.408566784 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.416562972 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.403670911 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.393589726 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.402732616 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.414099867 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.400945517 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.406473011 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.395946879 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.388441659 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.405391452 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.399461537 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.397837419 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.399013334 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.39977249 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.406166818 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.855926981 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.431631621 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.391221387 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.392641175 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.392957488 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.40781622 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.855981155 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.41410496 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.417146188 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.445343092 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.40001505 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.435879796 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.40143339 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.416015239 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.40226564 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.398972744 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.389421251 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.438884421 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.868843305 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.428880519 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.399060858 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.392231986 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.414616836 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.396986789 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.395548618 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.45253521 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.402929896 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.410381865 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.520285943 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.409472902 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.426860693 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.398027271 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.400807638 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.42114663 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.416899883 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.42642543 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.402595154 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.413956244 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.414198001 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.395741274 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.412094659 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.408228067 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.397655067 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.402637059 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.393186963 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.421897357 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.414926714 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.412005624 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.418763691 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.51714931 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.396329453 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.439870141 seconds)
done (took 235.213827269 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.458509694 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.400189006 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.481655632 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.398131281 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.498479412 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.497648154 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.393553472 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.396866969 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.395898192 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.770472918 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.396184233 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.396429478 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.389449318 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.395195961 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.478987802 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.396189953 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.395082234 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.735109797 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.39699827 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.475354899 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.395634369 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.395980787 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.394884028 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.777771325 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.395044544 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.397050932 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.47149347 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.394290296 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.745236332 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.395339893 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.399511182 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.770696402 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.488912646 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.415111781 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.411012513 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.403309612 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.499895169 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.419182962 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.478036715 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.476500025 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.483612742 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.439256948 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.394412062 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.393424574 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.402177667 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.401129073 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.398923648 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.425011191 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.399330821 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.397781781 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.739999683 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.410805664 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.399047138 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.399652306 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.39898535 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.431268074 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.399746904 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.402349562 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.49170192 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.40306211 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.463194511 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.781636177 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.778150592 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.400282785 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.390783538 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.399369311 seconds)
  done (took 152.798803193 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.471085884 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.475097077 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.516704337 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.418956518 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.45335502 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.515679501 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.418496015 seconds)
  done (took 11.575226226 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.407709257 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.401973694 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.452469968 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.449867854 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.403038579 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.546823648 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.399686078 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.413412232 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.408861938 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.453021118 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.401236809 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.402522342 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.397332671 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.397552899 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.451837544 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.413837949 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.518215223 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.404079634 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.404473796 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.560424121 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.397815003 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.410728524 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.452152131 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.41646339 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.405004562 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.405222531 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.969578672 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.403679893 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.403299976 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.400385305 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.399735379 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.437996047 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.404122252 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.400636399 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.401477863 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.521285731 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.404625872 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.398738726 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.401754978 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.403519494 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.40266306 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.405285307 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.402668567 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.399051089 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.402060903 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.425523132 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.405364139 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.404148111 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.402475241 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.402996707 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.452553645 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.403188713 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.403132792 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.400160041 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.457729675 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.412962834 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.407495639 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.403427403 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.40372859 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.403934286 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.559409903 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.451684934 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.402305064 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.452206614 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.404839376 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.403491087 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.403389225 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.404093261 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.460535416 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.407939464 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.455769793 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.405373583 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.558550057 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.429808937 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.405222796 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.409869119 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.405502418 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.40752724 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.405677012 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.41041816 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.403610978 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.404510498 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.409666318 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.400676594 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.403382562 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.504884994 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.515517485 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.405013414 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.41769645 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.411073434 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.402503973 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.455514349 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.40379049 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.401482706 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.456019646 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.519275932 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.458919217 seconds)
  done (took 160.053046913 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.408584253 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.415676378 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.410326762 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.420455943 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.402513994 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.408914373 seconds)
  done (took 9.777732605 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.408311977 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.410012124 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.406475815 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.409204715 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.408212854 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.406773924 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.405972451 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.408838458 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.414072154 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.40651637 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.406958468 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.407025765 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.409428618 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.40611391 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.407145228 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.40671019 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.410031317 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.407099532 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.406851555 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.410597389 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.501240955 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.409576552 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.40670727 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.411851547 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.410669013 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.406596378 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.417894462 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.406514571 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.409741696 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.411176621 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.425632742 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.408175089 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.407899962 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.415188707 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.41460786 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.41074028 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.411168579 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.411592659 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.408493002 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.409238436 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.407091174 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.408662408 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.412474059 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.410109045 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.412729775 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.41729705 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.414108512 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.416213059 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.413371266 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.409142938 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.412430494 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.409039542 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.411736938 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.408521725 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.412223961 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.431619495 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.415990856 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.413720737 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.411677219 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.41418739 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.40987244 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.412909792 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.409937122 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.415403157 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.420743327 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.414670912 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.415118536 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.41305753 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.41047512 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.412311364 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.413589674 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.410512754 seconds)
  done (took 104.011518291 seconds)
done (took 439.515126872 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.754384014 seconds)
  done (took 8.068213967 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.577820717 seconds)
  done (took 7.894006089 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.354501698 seconds)
  done (took 22.679281444 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.403143578 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.496072786 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.403277129 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.428168614 seconds)
  done (took 27.049436199 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.910249053 seconds)
  done (took 8.227083907 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.413524333 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.406128478 seconds)
  done (took 14.137814798 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.530099432 seconds)
  done (took 7.847181732 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.413305047 seconds)
  done (took 7.738779697 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.430454642 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.424438345 seconds)
  done (took 14.185594505 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.385600484 seconds)
  done (took 7.704116446 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.306379411 seconds)
  done (took 8.623521351 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.405106676 seconds)
  done (took 7.726238634 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.439115169 seconds)
  done (took 7.757633926 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.538880808 seconds)
  done (took 9.855336077 seconds)
done (took 160.806640057 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.407793971 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.408829481 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.409460137 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.409665647 seconds)
  done (took 26.951702889 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.445427768 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.445821632 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.448189189 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.457579565 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.449282986 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.445984037 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.438998729 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.442175869 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.45968188 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.4479072 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.45059407 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.447845212 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.447471327 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.437099511 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.449137686 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.449999698 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.4565025 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.447272166 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.439912559 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.45027971 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.414052752 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.458072978 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.450199176 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.416045454 seconds)
  done (took 36.014159567 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.935809846 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.4872457 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.569313291 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.469383609 seconds)
  done (took 7.779262221 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.469342528 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.470353332 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.481100995 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.520691724 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.554147439 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.478174107 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.441632049 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.438821518 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.424600356 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.469880176 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.54173586 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.486169316 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.566696364 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.417759033 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.61459671 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.41768253 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.417615524 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.471164518 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.518629208 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.536692988 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.416743678 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.469251943 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.473205999 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.483142763 seconds)
  done (took 36.8981203 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.418363867 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.435902641 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.417483251 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.414495143 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.42216321 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.416099156 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.415329303 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.413256884 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.416681542 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.423698938 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.414419572 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.429337511 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.415984178 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.416487127 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.420720019 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.418710368 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.422116301 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.417658959 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.418961451 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.424913572 seconds)
  done (took 29.71356085 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.413100105 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.267027545 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.764791572 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.667794099 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.413038696 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.414230596 seconds)
  done (took 28.259265881 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.488131416 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.642178408 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.419195131 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.780217974 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.865393556 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.42944216 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.419893951 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.666556438 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.985321644 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.976553247 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.47748955 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.489391599 seconds)
  done (took 20.961475808 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.426043844 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.415214957 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.415303761 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.43068575 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.476641458 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.439996325 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.426811564 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.41538801 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.477071835 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.494579472 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.440353348 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.478231273 seconds)
  done (took 38.658225381 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502531621 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.459494274 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.349011667 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.441931803 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.125980134 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.621790147 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.487065509 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.873247985 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.413811753 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689008479 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424337847 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499615455 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.671599794 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426489961 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.419153 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.445029807 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.651367667 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925924143 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417318709 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.557960539 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44207756 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.422405797 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.647001611 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.448555554 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.627659241 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.554870739 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.677809029 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.187859549 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.719060874 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.429354574 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427376864 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417642417 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692480351 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084570505 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524394874 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428764906 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419265687 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.965448363 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.404045026 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.552698246 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.429144865 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.413875492 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428800295 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418125435 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.352340276 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.422334008 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.884942909 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.416406584 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.129105314 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.417982452 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.43072926 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512905663 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.422134838 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.407560116 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.468717515 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.436977087 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.417383709 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.513741034 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003845425 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.999010549 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.42930934 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.354984718 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.420868245 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.476342846 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077893503 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.531089903 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.423541045 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.42387875 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353362763 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.5639849 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.436828216 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.567108693 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.437151477 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.070597184 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123873289 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.437167358 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.353969753 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001774207 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.421921727 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.357623063 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.643449224 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.19466441 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357284156 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.365135966 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.355952624 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.14411947 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42129129 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.83995305 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433979011 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.898303861 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.425615195 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438927273 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444873643 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.646107797 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.298240559 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42079539 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.429575895 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.541872736 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437200336 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.887088368 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350398053 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.419179179 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.678223044 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.62962672 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.423965808 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.441385126 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.653245227 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416715068 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.437007237 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.437813647 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.43431496 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.020094599 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.453066468 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.020642005 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435891581 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.201861559 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184647069 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421784139 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.524714222 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.426971382 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668181799 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.205905516 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.575597622 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491089468 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.427106232 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.423207074 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.586811052 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.01734226 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.584474819 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.421001428 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.43909537 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.435655955 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.425712098 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.375001352 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.415752052 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425762469 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.19352076 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.647760606 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.434850427 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.702235002 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360590895 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.570884534 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.428327392 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.643455048 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.657596077 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.442006655 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.684545703 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.856269865 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.430430022 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.437559268 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444119436 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528085636 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447032854 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.428661615 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.682807077 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.428743021 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.430433119 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.615215535 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.197586217 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431697745 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.431850203 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429108833 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.030449083 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422395999 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.427816325 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.317349762 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.438433124 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494143253 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.43207184 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.432892147 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.269741945 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452786155 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.432818929 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.427826365 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650480866 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.438147763 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.511344316 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.508676402 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.643742193 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.021385781 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45919007 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.364704852 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.139283766 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.121738058 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428576401 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.620709985 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.428079566 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439189323 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.440062941 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.446570259 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.030876689 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.447857216 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.503083003 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.435169543 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.438474755 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.432825427 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42882876 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.252779765 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.043437938 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.444012652 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.441525327 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571188086 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.442679565 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.363732864 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.946873808 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.43421623 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.430422383 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.20615266 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464220044 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.513417741 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926487796 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.682858158 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.427758684 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.44259941 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.627956804 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.465366877 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.425300576 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.429553689 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438411245 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.45226676 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439323894 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.44074588 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.522732111 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.79494461 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992745465 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.210979869 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016001222 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382446464 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.434983621 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.313762691 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.896304063 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.358101731 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.082247412 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.621968978 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.912775772 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.369422937 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.645312206 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.666211873 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.226623262 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.443757676 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.658148449 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365604474 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.43033903 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.444071812 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.641607737 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466159416 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.439547424 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.361236512 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.706458933 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.709109098 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.428842318 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.511226625 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.897472909 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.434291504 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.211463398 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.441472056 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.794181526 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.620727551 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.054581481 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.819243237 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.438868612 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.43966497 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925374622 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.434518187 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.958727936 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091456016 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.467282743 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.651961272 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.361995646 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.445687737 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.443476285 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.428524161 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.770212015 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.444368758 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.690126261 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.444653863 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.36810156 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.43457254 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991116028 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.309954442 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.440460056 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435122024 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199664737 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.432934883 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.735701341 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.450286286 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.24537329 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452192574 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.369636549 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.368920429 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.124412208 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.436969486 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411822625 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949096816 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.43759661 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.455276936 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.440902404 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281357609 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.690700845 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.447935595 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.041512959 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.677609585 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.436909978 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.475770249 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.536533445 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.444592436 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.4185015 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.319343985 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.671063826 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.499913873 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.653811567 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.391247526 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.329113122 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.440100601 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.640444011 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.319630859 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.437766446 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.700426284 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.157925283 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.448909094 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.203381375 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480539248 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.435620308 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.464757473 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.443184655 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458025124 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526131342 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.447451697 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.448460273 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.447661398 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.615967721 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.437200063 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.440697946 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.451807509 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531025789 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.057261412 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.253908332 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.211958069 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048167971 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249266804 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.066241347 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.466812482 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.437128415 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.447146777 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373992403 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.584022093 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.964455385 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.712389025 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.57084159 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.439062516 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46374722 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.439014894 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.454162468 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.654025575 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.712568325 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.415244457 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452200182 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.226972224 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.598563778 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.451505045 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.650785561 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963730706 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037321458 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.551252919 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.445792625 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.906297871 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705328998 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.529590149 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.440479488 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.031188404 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.440352857 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.809170226 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.456312451 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.454438472 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587553187 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.448857954 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.111526995 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.459530774 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.593875375 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.214272627 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.558704429 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.696772609 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.924081459 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.444775448 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.054125445 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.192250983 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.712736532 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507527835 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.448560286 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.549450618 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.589732255 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.440183959 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.34372721 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.442775436 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287025655 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.148547082 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.451328689 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.056511766 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.721649792 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.440312086 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.441919209 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465619314 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.452254925 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.664895801 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.168047079 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.658618461 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.450103854 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.444901596 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.014078721 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.057245731 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.474313533 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.378951714 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.441189597 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.700553517 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.690930048 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.462272973 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.897429142 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.153195896 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021927497 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.415375389 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462134828 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.445871025 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.177395092 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058544258 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.286635096 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967487634 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.103053443 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.447985347 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.719557778 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.446930563 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.440650594 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.722711889 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.449176024 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.442290373 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.457110345 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.059405026 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.248515193 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.468211616 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.661898424 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.375906168 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.66817157 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.509200872 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.374898053 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.43614971 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.632464768 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.438597487 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.576332201 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450922966 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.446094578 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.451061931 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.180895323 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.719926646 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.445075708 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.430709752 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.432194237 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.447114178 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.53972594 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.717346978 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.446455348 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.31099131 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.797012817 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.700245791 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.446058503 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.426609603 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.450773285 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.446977668 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.166566553 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.452040927 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.442293736 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043739466 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.449325616 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.473374737 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.451423074 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.664454774 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.660650378 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.449529406 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.452873559 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.46055726 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.463349331 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.346981561 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.215412457 seconds)
  done (took 1692.414942362 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.500323197 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.468335817 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.478299943 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.524900229 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.472804142 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.567263394 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.47289065 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.582677355 seconds)
  done (took 53.419742606 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.447072216 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.60297976 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.479526729 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.460708036 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.458411117 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.449624664 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.916936695 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.478200344 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.450088688 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.458389862 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.456667372 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.448976169 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.12277056 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.452139059 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.449319443 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.440917144 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.458079216 seconds)
  done (took 67.389508728 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.451797681 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.545909525 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.55611654 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.442172623 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.676827755 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.46402034 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.534749304 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.503093372 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.45346932 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.513042005 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.119230737 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.451283586 seconds)
  done (took 81.065603153 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.466423076 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.464543505 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.465174115 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.464231828 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.466702937 seconds)
  done (took 8.682542772 seconds)
done (took 2129.521385805 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.457110823 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.171066932 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.093600444 seconds)
  done (took 5.618761574 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.598456114 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.647046282 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.767945667 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.77225004 seconds)
  done (took 8.140391687 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.735805595 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.836199793 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.645463393 seconds)
  done (took 6.572309662 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.739151921 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.450718435 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.449819323 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.448246691 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.451891641 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.451237101 seconds)
  done (took 20.707958871 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.456031696 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.458642521 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.455466841 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.457996223 seconds)
  done (took 7.18343764 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.432131194 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.145497815 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.432105905 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.447385082 seconds)
  done (took 18.810679641 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.209244441 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.219660422 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.199983559 seconds)
  done (took 7.984520978 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.482776695 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.470889982 seconds)
  done (took 4.309021345 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.750702534 seconds)
  done (took 3.1069035 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.47015848 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.509305019 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.53104212 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.456010636 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 4.786881774 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.921026934 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.121668512 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.699943043 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.430305561 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.712693548 seconds)
  done (took 31.996188571 seconds)
done (took 131.878277027 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.345924536 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.826599452 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.654680435 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.304381591 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.679448842 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.659282566 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.652784678 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.288106416 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.89759369 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.809157253 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.33776085 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.67969185 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.817174437 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.832613082 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.81638641 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.457335115 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.692111813 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.422025702 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.982987076 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.219973616 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.654984181 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.947595928 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.168220586 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.054263601 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.688461148 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.611923521 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.525298222 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.449763842 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.161338776 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.547205368 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.602309004 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.402497579 seconds)
  done (took 195.548198368 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.458235129 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.459417656 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.447503358 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.447568601 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.447311833 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.464781488 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.447922559 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.462905224 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.463025276 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.465285664 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.46476352 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.462833022 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.450679245 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.450326359 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.448281059 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.456876683 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.448300428 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.449984754 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.457247619 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.448673518 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.448054823 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.477656604 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.455528624 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.457309157 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.457002315 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.450108698 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.45863036 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.450071612 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.44882771 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.463495971 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.470961222 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.470911147 seconds)
  done (took 207.970600511 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.461643004 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.44926203 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.452248858 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.449626729 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.474174546 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.45204719 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.45273567 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.453895628 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.449559092 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.449942927 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.449066744 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.449244175 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.45171325 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.46942766 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.453196582 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.465223005 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.449998945 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.468685025 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.45679607 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.450136011 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.466873651 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.458699726 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.451867099 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.450630715 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.465649296 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.452604923 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.469790589 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.451165582 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.45036964 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.45189951 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.467764505 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.455016314 seconds)
  done (took 207.963183867 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.660266382 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.465293368 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.467598371 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.418794634 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.467511152 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.466703255 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.461520703 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.656600734 seconds)
  done (took 15.426769224 seconds)
done (took 628.261448354 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.87537538 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.558830707 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.673773316 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.486389541 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.291592501 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.502641124 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.482736853 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.657363038 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.420227412 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.669123994 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.752189923 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.501070465 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.895620844 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.481059611 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.747396112 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.586206817 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.406858134 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.545080715 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.805846061 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.062418883 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.754326261 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.01352847 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.680312049 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.417940212 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.878293952 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.993521214 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.240291751 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.39742332 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.495469383 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.813732864 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.185436102 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.480581918 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.550663602 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.546724912 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.605154368 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.585212269 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.48064977 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.545553528 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.689517712 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.7811551 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.056324724 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.231668897 seconds)
  done (took 98.188387988 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.451121806 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.447669862 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.447803174 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.448529551 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.449838542 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.451592383 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.447340354 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.445914351 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.448925937 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.448061237 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.44703812 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.450681925 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.450996123 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.452764561 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.451705132 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.44767939 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.44980606 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.45017291 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.446647163 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.449600897 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.451304113 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.447391309 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.452660259 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.449536775 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.450369436 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.449073352 seconds)
  done (took 39.050565051 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.468030236 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.722050405 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.880922916 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.478151345 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.466069737 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.471462297 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.547007924 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.47288047 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.474170738 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.46897618 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.630989501 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.474920755 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.502299263 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.914223102 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.473516368 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.467749692 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.471991277 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.471491384 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.728481794 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.480633453 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.564958929 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.474044226 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.551505372 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.483068957 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.486021273 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.472122795 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.472735928 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.05695242 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.491864023 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.629302495 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.294555798 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.549125651 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.998693051 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.917264795 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.294875902 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.474431018 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.469725132 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.634915743 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.474554025 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.468703633 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.547580049 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.473461393 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.896514127 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.151358858 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.485121548 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.468133449 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.078715371 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.65250656 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.720275889 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.482237802 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.918048305 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.478125693 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.470721879 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.474117066 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.721207986 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.483540064 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.468215894 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.086658878 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.49903281 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.550198543 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.476654448 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.475075749 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.734707913 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.468513995 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.718069541 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.47030767 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.481870929 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.486735929 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.898096364 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.477215039 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.16752999 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.484849995 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.469121862 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.63102881 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.71881404 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.107313343 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.487234893 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.736583951 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.004750256 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.564616276 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.475782424 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.049319218 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.570646565 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.473636316 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.475252445 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.474231193 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.47223799 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.52169798 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.554248281 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.109069718 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.174670092 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.110351808 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.570234675 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.489786578 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.474492366 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.087043194 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.490968217 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.475370295 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.89726538 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.170276287 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.489420246 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.478681045 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.166347036 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.492200214 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.553467767 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.484171138 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.905318322 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.471592518 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.518615768 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.473232784 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.481002616 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.493608152 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.553414377 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.481538791 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.472766808 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.145151883 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.651452038 seconds)
  done (took 193.289250318 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.467879945 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.483002867 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.470037259 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.464890595 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.469821077 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.475792094 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.466408133 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.468155753 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.474340417 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.466081211 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.469202248 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.46813991 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.472879181 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.480036582 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.476530816 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.474232603 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.119702112 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.468528849 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.480469016 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.465219235 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.267689767 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.474305534 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.467589546 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.48308429 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.470578476 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.469744922 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.481613102 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.489131564 seconds)
  done (took 156.060297111 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.476919355 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.067463094 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.497907994 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.610697881 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.494933446 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.47651806 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.611913957 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.538897822 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.498865709 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.473460978 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.478867644 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.796024954 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.482189163 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.018504528 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.676142256 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.631415728 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.004109899 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.491693866 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.478966393 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.480657327 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.616252383 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.478113882 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.795854868 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.069566832 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.497303013 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.067367252 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.463641155 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.4821996 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.479256101 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.06724073 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.496353111 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.798471107 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.56073143 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.534803387 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.086867138 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.034118396 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.034819237 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.634191754 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.475339993 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.481483946 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.476155289 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.461057059 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.067094338 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.493220085 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.482191679 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.046729797 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.49515599 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.485557237 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.489877712 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.476582153 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.543584689 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.561572779 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.817045363 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.065136815 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.570890842 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.490371888 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.613559902 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.841879599 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.486850323 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.014544995 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.468236714 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.073092886 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.497957708 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.461805753 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.482853808 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.483802874 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.632978593 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.611198762 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.003131932 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.492595108 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.000319216 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.644909672 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.47566925 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.477438642 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.481356467 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.071486259 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.037412668 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.650122172 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.614735653 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.674596978 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.468137305 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.47771931 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.464900166 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.558246482 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.480396878 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.074702457 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.034465141 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.498935398 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.481255571 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.482220015 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.480903017 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.660449912 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.091583446 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.578494377 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.997020504 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.813013721 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.80499417 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.487387423 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.5428954 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.499844273 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.800241696 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.489136735 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.544154793 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.916138417 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.804612664 seconds)
  done (took 175.667959608 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.732613039 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.699423261 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.575723895 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.639423521 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.108343839 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.066317377 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.812653304 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.630697885 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.598999475 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.74894005 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.646156494 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.583342368 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.698855485 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.562525036 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.229900532 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.573424228 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.59785036 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.636802305 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.643416636 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.511229847 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.175037483 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.791081998 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.673869253 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.391473594 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.577712159 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.27789277 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.052302827 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.07305275 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.655576136 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.819452739 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.037797406 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.634484816 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.478496239 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.201966486 seconds)
  done (took 70.521292913 seconds)
done (took 734.137055556 seconds)
SAVING RESULT...
DONE!
