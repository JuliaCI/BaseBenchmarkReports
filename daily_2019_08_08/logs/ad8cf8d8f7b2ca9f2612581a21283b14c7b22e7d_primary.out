cset: moving following pidspec: 14409
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.346674751 seconds)
loading group "string"... done (took 0.547865617 seconds)
loading group "linalg"... done (took 6.770202203 seconds)
loading group "parallel"... done (took 0.157338803 seconds)
loading group "find"... done (took 1.183407631 seconds)
loading group "tuple"... done (took 1.770436718 seconds)
loading group "dates"... done (took 1.180276372 seconds)
loading group "micro"... done (took 0.290324746 seconds)
loading group "io"... done (took 0.899729833 seconds)
loading group "scalar"... done (took 36.443586574 seconds)
loading group "sparse"... done (took 10.905976996 seconds)
loading group "broadcast"... done (took 0.907332447 seconds)
loading group "union"... done (took 11.710705724 seconds)
loading group "simd"... done (took 4.135673271 seconds)
loading group "random"... done (took 8.506760372 seconds)
loading group "problem"... done (took 1.852955241 seconds)
loading group "array"... done (took 19.88937392 seconds)
loading group "misc"... done (took 1.675807094 seconds)
loading group "sort"... done (took 3.104461991 seconds)
loading group "collection"... done (took 16.607991875 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.479209681 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121264243 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113657515 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117078165 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.138654939 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113525032 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122116687 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083559605 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.764597549 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.138417808 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11733613 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.406161798 seconds)
done (took 4.873650196 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172692855 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081449407 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080298785 seconds)
  done (took 1.276945226 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064573999 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12041239 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065311807 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066320161 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066129519 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064977157 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065095169 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064887357 seconds)
  done (took 1.629615037 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071411422 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06745431 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067564124 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066544926 seconds)
  done (took 1.392104109 seconds)
done (took 5.663203594 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.759136265 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.197482869 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181023191 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.389214923 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.125280979 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.160675653 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.645818299 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.312695896 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.180613861 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079056626 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101546109 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.318048898 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.104987579 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.624410798 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077009895 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088861348 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137579367 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.443142151 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066110152 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081201938 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088066887 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127294129 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086128513 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074290275 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.144511274 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.066694579 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.127337479 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079037358 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065518238 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.204996644 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171412797 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.657203742 seconds)
  done (took 10.122103099 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.094606809 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096250192 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067401795 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.121979987 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094399719 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068458148 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070008452 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.065969912 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085690269 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126024281 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.08709766 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.099348059 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064189338 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068509163 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083133685 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.20250571 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080855438 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080125913 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069504249 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074156912 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104135579 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.076905032 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076734693 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076442588 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12712092 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.17952007 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095122569 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096450548 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066092341 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.078827323 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114264101 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126831151 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064645528 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065324349 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122580624 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093713905 seconds)
  done (took 4.516649128 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.897268517 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.137429864 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089221176 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159211339 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066679115 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.105053881 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064257962 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082944196 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.196295412 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.03863764 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.426581668 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109330258 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.083486325 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066773368 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067375729 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.107941127 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065662779 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.341463746 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108196994 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111023981 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082465441 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072558928 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068244204 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.341074414 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065541746 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065363783 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067209434 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.05738802 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.110768403 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067376296 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.973232099 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.115666436 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06667945 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099878634 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16353694 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066178521 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085350691 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.131376037 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.064266905 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063798571 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.144467748 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072268228 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.064606793 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.080326905 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100861232 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.099756349 seconds)
    (46/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.062150737 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.196961192 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161260808 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066340021 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.0682417 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082649205 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.709867927 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.151140706 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075277726 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065963195 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.243331866 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084442057 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066060113 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064076774 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.156390488 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.128134222 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06702071 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065788979 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065259622 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067009925 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.356723845 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066996208 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.718426753 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.07007176 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076443847 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064019942 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068404633 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066241201 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072001136 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071496213 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084766288 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065231397 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067746515 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065596414 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065134487 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067032735 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083453781 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.188623469 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065584757 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066434356 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064019423 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089321461 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096267155 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070760888 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065160334 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099251262 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067452956 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066687753 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.100268231 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065656224 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.082491411 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.067918892 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112008581 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.06685597 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.090800628 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066052802 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.09449464 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.066698516 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097683818 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.076544695 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.158645147 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.217090101 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064313498 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.063857939 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066414719 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067100747 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066136678 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067888604 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078524121 seconds)
  done (took 19.658696189 seconds)
done (took 36.310422387 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.271802826 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.073233734 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073541664 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073565562 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073843034 seconds)
  done (took 1.770851995 seconds)
done (took 2.954555496 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118787752 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097429835 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063949242 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09460353 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063273085 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098590007 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097813816 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080089817 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098551998 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063609716 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094583561 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063265098 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062997594 seconds)
  done (took 2.302186893 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081736133 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082847419 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069174009 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082288904 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063005186 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081067484 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079703304 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087813353 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080179479 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071406717 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062722143 seconds)
  done (took 2.020751752 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08127888 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082831324 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068983915 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080838013 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062914991 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080442478 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079452004 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084444243 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080101681 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072508253 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062624473 seconds)
  done (took 2.014198886 seconds)
done (took 7.50916924 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076949249 seconds)
  done (took 1.247649308 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.577440625 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.025315028 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079888615 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110189546 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.180948458 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.117025013 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.272128585 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085328383 seconds)
  done (took 8.797634829 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.088238582 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.079972919 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067660016 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070400951 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069778078 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070995946 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069692192 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.06845715 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067495635 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067172149 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067325167 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070702087 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068001757 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070307505 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070396206 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068253275 seconds)
  done (took 2.372638069 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.090329906 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.08997374 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072471657 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073474825 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.070722278 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071195894 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073228315 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072001554 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.06935344 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07127945 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073801316 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072054115 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07015815 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.063924731 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072623419 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.073929531 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069609745 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073010591 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073638522 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073320998 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07321013 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063188129 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.0699997 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072464687 seconds)
  done (took 3.022924197 seconds)
done (took 16.617368878 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109423448 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070544204 seconds)
  done (took 1.356451627 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080106116 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08167983 seconds)
  done (took 1.345720797 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081082814 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064532018 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088011152 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076253579 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065605391 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.064765639 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085210609 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065212546 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06459332 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.064967441 seconds)
  done (took 1.904630171 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067476536 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07653312 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068829167 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079567601 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072138387 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.062841489 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07121055 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066390107 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076268826 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061751258 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069176316 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080673149 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069540127 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082732235 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.070747717 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.066731863 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069174107 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06558479 seconds)
  done (took 2.463764217 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064679124 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065724456 seconds)
  done (took 1.321499687 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065854614 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06258858 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06606204 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064949278 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062621422 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061354816 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062474903 seconds)
  done (took 1.633612918 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.372008352 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109091898 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.290713939 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069560296 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08051831 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247736381 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06430182 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069349093 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069086493 seconds)
  done (took 2.603716265 seconds)
done (took 13.817257622 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.07808438 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08506439 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093322057 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.338649849 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090274408 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064568839 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112331225 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.186448933 seconds)
done (took 2.248953976 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.204698053 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.559846492 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.364199996 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.192244241 seconds)
  done (took 2.312069351 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.311182302 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089607594 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059019898 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065978533 seconds)
  done (took 1.727560961 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064722814 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067923333 seconds)
  done (took 1.331733188 seconds)
done (took 6.775999791 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065102486 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064961848 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.062389675 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064967419 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084289655 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062205805 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063056729 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062564784 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064961159 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062400124 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067684543 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.064770009 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.064909863 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0646937 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062231019 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062503644 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064633079 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062813894 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062420322 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062407149 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.064661426 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064435826 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065371502 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062264729 seconds)
  done (took 2.785559333 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082318979 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065592608 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071604515 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.069842397 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068639746 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070138722 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070163734 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.0650553 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070134605 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067430863 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068271613 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068560116 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066637552 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.06890372 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067316759 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068833785 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069979055 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065414851 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067044689 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069344486 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069961878 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065618392 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068668631 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069541936 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068514243 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068366505 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067120912 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065565936 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070010615 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068508338 seconds)
  done (took 3.271126129 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06910708 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062833743 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063503812 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069610584 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062898086 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064145099 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062247629 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063411723 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063571053 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062359361 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063839164 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062173609 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062622953 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063710357 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063422058 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065820953 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077363055 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063216881 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062313467 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063647552 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065918345 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062518182 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062682822 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062839759 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062762919 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062462435 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063310505 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062695006 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063210571 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062566668 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065769712 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066133691 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062543992 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.06907452 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065978235 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062873518 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066260832 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062048274 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064245351 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062039092 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.061884198 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062568612 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062234364 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069065976 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062934747 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063808801 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06262831 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063639765 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062870467 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065306438 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061881946 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062064085 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064113897 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063365085 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.065993208 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061881186 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063092248 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062400029 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063246096 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062090039 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061896542 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061722755 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064453853 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062731529 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076834085 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.06878434 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061923938 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063773439 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063176478 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064659107 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06368397 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07516159 seconds)
  done (took 5.835588787 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08836161 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.198349811 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065180084 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064085911 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060877017 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064566377 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066112108 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062956685 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064196242 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068570544 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062890144 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063740304 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064204278 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075411119 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063148912 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064230902 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068501215 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060772169 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062672395 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066025301 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063112926 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.065997646 seconds)
  done (took 2.803991294 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.151116376 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069538921 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.103815202 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071532246 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066563032 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070963287 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068642706 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068927515 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06898634 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067408399 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067045582 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068908477 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066022269 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066388154 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067155093 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067503893 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069117658 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066972472 seconds)
  done (took 2.560386293 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076109757 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065087038 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085036169 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065531425 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06477125 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067122825 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069297693 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073011653 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.066794789 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.064441848 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072558325 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067101026 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067603222 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064642066 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067063193 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064598287 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.066797015 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064806318 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072469046 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0693372 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069030064 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072615887 seconds)
  done (took 2.731592789 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078501814 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066830676 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080835223 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067570736 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060886572 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06310532 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068624146 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064738395 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.068743131 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066394939 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064534349 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063128116 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068031554 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064391706 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.067652666 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065265479 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066129339 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064442038 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066610594 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060475195 seconds)
  done (took 2.553449615 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085140893 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06654274 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066307098 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073887816 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066049534 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06638581 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073651694 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065830513 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066363889 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085580687 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065990828 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06569372 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073337492 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.0708351 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065946646 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073655214 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073021367 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073036677 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065809726 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065665657 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084953696 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065889893 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073327992 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065814349 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065832042 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066119294 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065933767 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070693515 seconds)
  done (took 3.184929897 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066050123 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065062348 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062799113 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062724508 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06287958 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06218396 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062125903 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062451793 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064894956 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062837325 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064923756 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065132837 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06475833 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064849409 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06456912 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064697247 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064970211 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062278749 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062453597 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062412936 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064960155 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065191669 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064517359 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062359485 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062260209 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064597111 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062259923 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062623976 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064361121 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062208911 seconds)
  done (took 3.131174219 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.073839903 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071205543 seconds)
  done (took 1.367808549 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.061590529 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079023604 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062762972 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069066208 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06854836 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06528883 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072014868 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068446099 seconds)
  done (took 1.765105195 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.079569698 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075959282 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067033023 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078670307 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.074936674 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.081385842 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130575948 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.065849349 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.071549373 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063201052 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078130147 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064890252 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.070970767 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065148157 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070394132 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071845389 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062806835 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07060522 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067264771 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063704414 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06632395 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07317347 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067173489 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060723829 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.065889337 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.086180712 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075431913 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064897825 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067708698 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072003796 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07015765 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059063279 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064479969 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065270753 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062989145 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074015191 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079222089 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06769584 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073132511 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065641309 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074977405 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060063787 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069303256 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071444727 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075160953 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065429878 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065730976 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060242338 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062942778 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067435999 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060341452 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065293113 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059757949 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074320521 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068314247 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075209069 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063826252 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.06650396 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067731123 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068308037 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071727065 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067189094 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067455598 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06434716 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074433153 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069345274 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073566674 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060052495 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059225654 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062986393 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074074127 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086925817 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.070902417 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065192931 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065953866 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062482785 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068275059 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065926318 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07045401 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07140558 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065056115 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070724751 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072702879 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066001164 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067746344 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.072991494 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06344754 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068468925 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063330505 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080952522 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064264911 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063376536 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063453932 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076497766 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068738632 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064689881 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063205373 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072188494 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.05940428 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065716602 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06632447 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066038329 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074908976 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068312669 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068680342 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07280149 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071418496 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064664602 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067040538 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061361954 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065129478 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063557204 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.070909404 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058632613 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066698125 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064944537 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064643789 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.196821319 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064433328 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066483772 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073470256 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071939543 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064645676 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062948081 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069012995 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065648495 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06881612 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074369637 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064441804 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061381609 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060886053 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069039145 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065492252 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069141616 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070692668 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069164 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060114639 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063799171 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07073436 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074546775 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06614955 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067282081 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071546391 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06714723 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065169299 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072556035 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068283851 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064734325 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071315373 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067102957 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061088245 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069210705 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068169819 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064176338 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069717559 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068549054 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067383591 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066495301 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064370112 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073029619 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066302479 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064971041 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065989441 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064163197 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.075008954 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06760064 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061405992 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063243511 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07446065 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063800619 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064827506 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065777017 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068246784 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066593413 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063751526 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064713205 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067899886 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075841709 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069451538 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066050821 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071314019 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.0770691 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065018753 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068390446 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065115712 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066330935 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.065793661 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073868321 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070412359 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069456962 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067299665 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062447701 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070591274 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07235719 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064537397 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063537204 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064295669 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.0690571 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070663059 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.068957174 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.0654743 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062998192 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065577403 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06790195 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.067859256 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065030648 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064068284 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071420316 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063220516 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071716411 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065897442 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075525871 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068456872 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060385611 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067869402 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063285106 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.070993162 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060517357 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.062865579 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064213823 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065863954 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064092444 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067349855 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059525376 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071208588 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071514541 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.063951567 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063202749 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063470518 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070107999 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065009955 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067692649 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067030317 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.069540614 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073598127 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063260054 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.066930134 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.073388617 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.190022725 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060365756 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07139703 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064750536 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064774253 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064708434 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063593847 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06879668 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074827687 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072350554 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059658476 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068572065 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064188096 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064484913 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061224903 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070507175 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069250972 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066775344 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072936786 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066150203 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066008422 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069118924 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065029587 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067015371 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067118846 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069399139 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.065726088 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068003356 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065735389 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068984296 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065247012 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06414962 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067737952 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065473202 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066098793 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071383542 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065596506 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066308242 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068217463 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066376537 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066506331 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.0658092 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065367425 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068665324 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066781034 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066412517 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.067964867 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.060812634 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072433942 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065261751 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073359425 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065877377 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062579041 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073027341 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068313434 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07107664 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066679307 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066076787 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067287366 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065386946 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068518387 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072639598 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063475121 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076011569 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072776356 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065992548 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068358403 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066305771 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067394351 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064900383 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.0668046 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066478604 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065702618 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.064685045 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.06972387 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068028479 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065580966 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066932482 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066178296 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065676298 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066623475 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060158072 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064928647 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065069088 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065406448 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074741248 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066087212 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065207836 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064434596 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066009582 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064340853 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062313009 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073031187 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074299315 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066145347 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072841343 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065105527 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067345264 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075682309 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059888007 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063900599 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063404922 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063631004 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073055548 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066404975 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074888365 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065296569 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064722387 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062889264 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065814863 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063130483 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059223896 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062597443 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068117228 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063239545 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063163175 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.063998683 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066568778 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064453814 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072966571 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.062956667 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064894293 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.063979904 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061516149 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063376953 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.193700571 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069044809 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067582437 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063675439 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063804256 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065421981 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066616235 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06710614 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065508392 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067430721 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075416398 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065367661 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068624078 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068568589 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060933822 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068886762 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06628244 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065835365 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065075128 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069688587 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068961475 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066882685 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074739592 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065784356 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066853996 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06577825 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063849119 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065396019 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065494514 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065699535 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065746757 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066480639 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073902864 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063809779 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069571042 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066393358 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066442359 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072824513 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066428728 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068523404 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072548414 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066025038 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067096412 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073412681 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070310082 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069372345 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067175253 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067826383 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071341108 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06522497 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072146139 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066491383 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06619069 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067307328 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063863956 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064976842 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065757115 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064874259 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071866154 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066256894 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065597965 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06546473 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063682591 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066381932 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069278971 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073225243 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068163656 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068950883 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06146739 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063223744 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066221668 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063749814 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067100542 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067934083 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070820825 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067511737 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06611192 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064007327 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.073878869 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07071729 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.068785136 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.0634989 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.068745516 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065734582 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06721983 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06652314 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065401985 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066157907 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069085543 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.066407763 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064654634 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072196392 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068306694 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066006845 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066797278 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06622987 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065614258 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060574904 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065712484 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067349187 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070363496 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067183844 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065176985 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075395017 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063369207 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065558856 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067986835 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064155906 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069574078 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060485577 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066182518 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065486888 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065465701 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.059861302 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.063846647 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062148333 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066065306 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063106085 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059298184 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.073468282 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073023492 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066810493 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062930985 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062636853 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059298252 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.189611361 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065357237 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067101305 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06760842 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075173702 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06520773 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064394116 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061240987 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065758793 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068517739 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068688216 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063591016 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061117801 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064509742 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069033257 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071385772 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064451156 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065584573 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068897164 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067398162 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06404098 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069367193 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063037936 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069492235 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078185218 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066438325 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066595217 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.071173341 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073775367 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066563012 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06135366 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066059989 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069158322 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066365003 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066271303 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066578239 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080155541 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068692736 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065743074 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064872153 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.067896326 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065299288 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073761653 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06660335 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066160052 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.0696828 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067731577 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075084144 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068310136 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07403785 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068837764 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068718337 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064491334 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065453401 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063835989 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064575074 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067001369 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066912998 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070762763 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073407919 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065505183 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075481839 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074457492 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.06759121 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06258556 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064692892 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065064835 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060823762 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066306928 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063720969 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063679941 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063451464 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064229557 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066357081 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070548258 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066125662 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065820522 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064704688 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059416987 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067158076 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067691102 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066067446 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062055616 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065090785 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065438916 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069271865 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068293162 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063078593 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066937693 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066855293 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066136865 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060371119 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071689345 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06434367 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067013945 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064441423 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065320914 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.065989346 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068514571 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069488074 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066067559 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067618657 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069069231 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067202917 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062685075 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062468062 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.069906454 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062966367 seconds)
  done (took 41.883414452 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098218635 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061910886 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06102291 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060568721 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071924083 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061664436 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060767839 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061882719 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.061962949 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064166892 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061259404 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060961973 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069459769 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.075904179 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072215075 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065163328 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060825488 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061709212 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060821006 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061816016 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069250058 seconds)
  done (took 2.702343873 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072690244 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.068748844 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071734723 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073785998 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066000884 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069406791 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070689177 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068935795 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073996377 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065800523 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074547131 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069145764 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07420491 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.065527985 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06566494 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069051196 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073801447 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065930074 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069134975 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070726234 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069035905 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070787419 seconds)
  done (took 2.835812192 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066046572 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064951963 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.065906631 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060367202 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064706247 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060248435 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.067678648 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062598041 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068152099 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064313898 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064456487 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.063933622 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066009846 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.059988258 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.064714414 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062560294 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.105479937 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067671271 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064242118 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065150196 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060627388 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066302668 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060597382 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060780913 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063750427 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.067851256 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065244157 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062551479 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064525656 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06357576 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064557128 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062348085 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066335971 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.064917955 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064046673 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063811237 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06425917 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064387765 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060341397 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062686709 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.064974449 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06043817 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.064674711 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.065877519 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062641912 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062421923 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066206108 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064165474 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059655778 seconds)
  done (took 4.471824002 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078247957 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.106872832 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066431931 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086875913 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078327893 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.073659591 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068100604 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.087910308 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062293137 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063114129 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079265421 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077496031 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064479497 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.068509621 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070514392 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064282703 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065471281 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063421424 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068205025 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064044823 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068504887 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070362271 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078318172 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077180249 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067755769 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063674518 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063586043 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068475347 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.07637616 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068583447 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.06869405 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069459952 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.078359563 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066157972 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063578462 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066162323 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079718499 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064425027 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066375649 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062446235 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066287289 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068384199 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070415906 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080216132 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064882661 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069310744 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06438636 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061696815 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076572009 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066594852 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072316854 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078296674 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067638537 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064905917 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068591322 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078539105 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064149689 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062921344 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06732305 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.075697402 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062186676 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067658475 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077248206 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066351497 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.070831974 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077569469 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069486442 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067841001 seconds)
  done (took 6.225161448 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074143864 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071199443 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079145983 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077884582 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070703763 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070880662 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070578662 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071033258 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070346551 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075104424 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070779112 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.09060381 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066199317 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073515522 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071022439 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070820825 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071125013 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070689424 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070927077 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070417431 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070953205 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.077914968 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070437562 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077955253 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09627266 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066092704 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070992674 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070560961 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07806266 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070781872 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.077859499 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070900546 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070786092 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.078229659 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.077534169 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070480056 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063864913 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070111257 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070706462 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070225297 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065817127 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07804374 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070056674 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066128654 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070429555 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070440779 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078185403 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077756699 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073042634 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075134402 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070946512 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07851142 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070310634 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070719999 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07823495 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.102410123 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078050376 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07798076 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070397438 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078004929 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078007106 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084033653 seconds)
  done (took 5.910440338 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08262252 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072745141 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.074420749 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060445331 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063026798 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06838083 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063057374 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.0630316 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072769503 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073353595 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074870297 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068106788 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070964086 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074826244 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068527799 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071000244 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068223797 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067947052 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072710732 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068412679 seconds)
  done (took 2.719569828 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073558342 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081107082 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.0666047 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070267705 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067887926 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070196421 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.066957768 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067451724 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065562034 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068230118 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074119364 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074159246 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065609192 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070174122 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074035501 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070221645 seconds)
  done (took 2.438682802 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.073808936 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071092386 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078303671 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065028009 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063099958 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061185355 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06417785 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060549887 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061232357 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07678357 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064883171 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.06679733 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064583925 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063299478 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061374234 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067263915 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061087901 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062097836 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064250824 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076331316 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075059722 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063256956 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065523347 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064717476 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064421274 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069381276 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063899808 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062437438 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062215038 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.064808305 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065290576 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068340036 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06183863 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063250173 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063098884 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062490814 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064206671 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064787573 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067097692 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064314278 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062624111 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064638694 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064817624 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065898037 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061391599 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065140091 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06145729 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067031421 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062727834 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064908692 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064696633 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.066868641 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065182619 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071328286 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067120393 seconds)
  done (took 4.917481412 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07833231 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068903762 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061864816 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063162057 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067945972 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066428516 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068226845 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066198605 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066566453 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062903187 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066217558 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06735018 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066511201 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067960771 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066846562 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06835304 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060979406 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066549273 seconds)
  done (took 2.526991843 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07023535 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065341303 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071649488 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065256574 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064643323 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067217126 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061037367 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063768788 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063515162 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065121021 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064961598 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066855509 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063379047 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066987009 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064604042 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064622272 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067004003 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063335628 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064834068 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061151669 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066671553 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06356644 seconds)
  done (took 2.754365152 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071443647 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091399968 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.136082892 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.082221815 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.079960845 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077178373 seconds)
  done (took 1.857516598 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088628692 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07775414 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065811909 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086477955 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071859771 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0660899 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065729094 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066506042 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074683743 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074227058 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066146318 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074340413 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074153395 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07364532 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071389942 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071275775 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065838473 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065955152 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065350942 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082157037 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066331822 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073905836 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066032091 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065736361 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066011252 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073401056 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07426321 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074383484 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065672984 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073980199 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071367619 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066080797 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074154082 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07454951 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0676599 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074543766 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066218006 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082149418 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071614173 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073526979 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067576684 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071714536 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07456895 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070593483 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073902792 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066199828 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070617887 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066210837 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066030638 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08398303 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071706302 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07355584 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071789607 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074599735 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074407547 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084294669 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074735897 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073710961 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072610509 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077371648 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07379824 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072013011 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073305091 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074607517 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071670825 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073674351 seconds)
  done (took 6.094967472 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079747564 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.084746525 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067067743 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074596485 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073931083 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066008787 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066344638 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066174959 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065928421 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066201029 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105398213 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066491017 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073710933 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073718487 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066373169 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066131329 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066286514 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073794557 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066003595 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084262842 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066042788 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073574817 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073604019 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073604809 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074768118 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071448942 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067097193 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066271609 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066178194 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066050077 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070756578 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066367292 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073728718 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066533708 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073750006 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066344769 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066392939 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070877177 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06617508 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071598938 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073812678 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081813864 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066423474 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065836054 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074501684 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06623696 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065909459 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065475498 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066223224 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065848162 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074708481 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074716081 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074991078 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073311918 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066730606 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066480692 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066365766 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066364162 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066334754 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071535521 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073614388 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066143451 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084304741 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066427176 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06694713 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074260005 seconds)
  done (took 6.011712921 seconds)
done (took 126.536700248 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.182444304 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.167732501 seconds)
  done (took 1.671188836 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067206031 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094614703 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.075843938 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127367655 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065408169 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.098275568 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.097282909 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.076809489 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065352071 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065726119 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06515834 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.066721699 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.129894827 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065359528 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065034668 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.066831454 seconds)
  done (took 2.626169701 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.095257803 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.171661666 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098762203 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064225521 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096120441 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.071823805 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.063678429 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.073807115 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070100722 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.063935239 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.071877005 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069196546 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064042913 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069375511 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069481093 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071472518 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.063926623 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071244742 seconds)
  done (took 2.752435362 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098346467 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.088981279 seconds)
  done (took 1.523493397 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.151754258 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103528358 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.148845514 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.331536525 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.158392988 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.2284726 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.125546654 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.12408446 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11522353 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.121498965 seconds)
  done (took 2.94162283 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.09643395 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.145261624 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.252663349 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.113831335 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071266733 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.08952987 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.114920461 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076357497 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.076333375 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.076025842 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.076153874 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.074666166 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.094876726 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072534863 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072485729 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074635153 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.098069299 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07184325 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074625553 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.072973584 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.095351797 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.064883925 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07205121 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071241098 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.073472601 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.073601824 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064930838 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064519026 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07306885 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072484755 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07559777 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.088502574 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.073195748 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.103089364 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069029476 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.103866561 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075179808 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07022018 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072357936 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.06956534 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07435947 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074498004 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.070981237 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07467913 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064368659 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07520015 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064284238 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064318391 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076458394 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065572508 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076638136 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075458952 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.102511701 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.065657571 seconds)
  done (took 5.803636292 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.657739655 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.102016116 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068689572 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.106454773 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094617164 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070887936 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.678997637 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.088717324 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.172165515 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090929935 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.086984163 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068748889 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079370814 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081713724 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109152255 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100025408 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.091918019 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070025518 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.099675463 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.097186762 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067182452 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091666232 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088612469 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.372978575 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066349991 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068676281 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066639475 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068804233 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.107820816 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.076539147 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068540372 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.119087786 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.082624897 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.119081602 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065814528 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067900749 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066703573 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07765379 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.176913539 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.130738763 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.128163532 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066337199 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066334606 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067664232 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.087904336 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065823881 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.108713144 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078520298 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.117086596 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068692402 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068797886 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067127145 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06810212 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07850904 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075873558 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079312537 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.227887819 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067277971 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067223261 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070342735 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.177632384 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076833304 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076880775 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.089738077 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.126197527 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065964047 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.689601171 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082749744 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065680896 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067647676 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065861685 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067148727 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066024651 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.242386143 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.341898016 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069535004 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069658942 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067672237 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.158892779 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077778469 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067499381 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.111945204 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066967634 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067478116 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069668955 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069351907 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.117228529 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079955618 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069101859 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067175785 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069421904 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067612466 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066453689 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.16211847 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079657224 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078379131 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.157568574 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069045435 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.110914762 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078070303 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069335417 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078690021 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067785853 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069441105 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069023325 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078238354 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.09493541 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079014405 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069509371 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067102213 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.097718501 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079397651 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066943736 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077601769 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.395725392 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079663629 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067080251 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079938189 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067275394 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.109554238 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068744953 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.17472228 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068118651 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077431492 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067702351 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06613823 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067644897 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.10903658 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069002276 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067472541 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068008191 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068910225 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078088315 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.131540205 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068916674 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.160178443 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.132047879 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068591157 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.117713426 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067117989 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.114820073 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068844415 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.0677511 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066035356 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.704428662 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067212705 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066595531 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06787557 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.134277491 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066635322 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077378201 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074769309 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065447111 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.686719964 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076181152 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.202088884 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079284906 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069075674 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06798978 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066763229 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069814949 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.108362011 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.144733512 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069167508 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06828664 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076969712 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.110847567 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066013374 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077280092 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077221274 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.076830899 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068621438 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069410058 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.07927217 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.116338865 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077472981 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.133186209 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.51177188 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067806166 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076388833 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.142276225 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067061593 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084519596 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067657103 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081589716 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.111728103 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076276759 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.227330741 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.112759956 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.13752543 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079588251 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082345529 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06645795 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067245832 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078907807 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067193041 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068893506 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077239396 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068998927 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069211125 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082866044 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067292874 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.17162031 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066289559 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077504406 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066278903 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068939828 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082313216 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067146451 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068819878 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077921964 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068716157 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075919867 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.670178645 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07629493 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066943748 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068887636 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.133731613 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.110446865 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066665432 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066712795 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06901858 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.114116144 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.15638272 seconds)
  done (took 27.798217665 seconds)
done (took 46.459284082 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.206305239 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.149025634 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.199314939 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116113719 seconds)
  done (took 2.103952258 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120212716 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099587862 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094219384 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064446319 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100135969 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064429452 seconds)
  done (took 1.914496566 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.30668847 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.207501232 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.179462325 seconds)
  done (took 2.060218501 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.194874101 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.184950199 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.393733035 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.250574854 seconds)
  done (took 2.499985346 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.141921071 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.087491595 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066657675 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082344414 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.131887477 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.157845326 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099191595 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.123227319 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077244009 seconds)
  done (took 2.387641126 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.143323211 seconds)
done (took 12.49261355 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.202735568 seconds)
    (2/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.180952143 seconds)
    (3/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.100439772 seconds)
    (4/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.230947335 seconds)
    (5/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.174694789 seconds)
    (6/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.170363466 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.122482034 seconds)
    (8/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.182453862 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.070705311 seconds)
    (10/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.111360114 seconds)
    (11/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076376573 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076983723 seconds)
    (13/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.150102207 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07228379 seconds)
    (15/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069020955 seconds)
    (16/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.174134488 seconds)
    (17/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076185629 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.161309837 seconds)
    (19/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.072977736 seconds)
    (20/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.108452444 seconds)
    (21/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.172625665 seconds)
    (22/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.176705017 seconds)
    (23/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.149794269 seconds)
    (24/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.099665629 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.08948894 seconds)
    (26/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070599615 seconds)
    (27/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072994017 seconds)
    (28/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050264412 seconds)
    (29/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080827648 seconds)
    (30/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.182200878 seconds)
    (31/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.155098037 seconds)
    (32/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.101716827 seconds)
    (33/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075754069 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070829728 seconds)
    (35/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.178928449 seconds)
    (36/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070980677 seconds)
    (37/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050366144 seconds)
    (38/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077231623 seconds)
    (39/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071068488 seconds)
    (40/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.07081072 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.105406047 seconds)
    (42/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.152478208 seconds)
    (43/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051183328 seconds)
    (44/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071479203 seconds)
    (45/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.071498626 seconds)
    (46/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.166828112 seconds)
    (47/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074629543 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071669292 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092614953 seconds)
    (50/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.158316858 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.131641839 seconds)
    (52/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.087685199 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.089707292 seconds)
    (54/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066113556 seconds)
    (55/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.065876717 seconds)
    (56/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078353136 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066304997 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.093799594 seconds)
    (59/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.146956635 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.11870173 seconds)
    (61/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071193915 seconds)
    (62/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.166014502 seconds)
    (63/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.162638279 seconds)
    (64/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.074088345 seconds)
    (65/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.174254726 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.09444067 seconds)
    (67/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.105856915 seconds)
    (68/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.07189884 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086369321 seconds)
    (70/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.074091013 seconds)
    (71/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.050959262 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141502835 seconds)
    (73/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.13397729 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064014565 seconds)
    (75/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067320163 seconds)
    (76/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.086777498 seconds)
    (77/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.135241572 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137879284 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.08671293 seconds)
    (80/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064394086 seconds)
    (81/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.097304834 seconds)
    (82/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.131454262 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.065255193 seconds)
    (84/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.066656531 seconds)
    (85/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07100756 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.108509247 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.10534762 seconds)
    (88/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.336924921 seconds)
    (89/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051777731 seconds)
    (90/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.180912672 seconds)
    (91/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.07798006 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.095655669 seconds)
    (93/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079884752 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.097205375 seconds)
    (95/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073956977 seconds)
    (96/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.136799653 seconds)
    (97/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.097852538 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092055051 seconds)
    (99/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067676311 seconds)
    (100/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052511401 seconds)
    (101/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.149036401 seconds)
    (102/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.138711565 seconds)
    (103/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075986123 seconds)
    (104/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.170732624 seconds)
    (105/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052321237 seconds)
    (106/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.179633557 seconds)
    (107/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.062157709 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.093961534 seconds)
    (109/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082988523 seconds)
    (110/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065656594 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07259394 seconds)
    (112/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067196655 seconds)
    (113/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.196591246 seconds)
    (114/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.181344047 seconds)
    (115/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.097223369 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134596898 seconds)
    (117/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.050879326 seconds)
    (118/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.074332237 seconds)
    (119/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077519923 seconds)
    (120/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.391921098 seconds)
    (121/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.166124336 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142118852 seconds)
    (123/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060728805 seconds)
    (124/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.138100947 seconds)
    (125/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051891323 seconds)
    (126/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.174862815 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086147163 seconds)
    (128/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145181237 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.113635653 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.069468806 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 0.132665705 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073133929 seconds)
    (133/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071151477 seconds)
    (134/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.062390209 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071667224 seconds)
    (136/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.073829152 seconds)
    (137/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074420703 seconds)
    (138/309) benchmarking ("sort", Float32, false)...
    done (took 0.125480923 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.069973 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089998951 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.070741166 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092837548 seconds)
    (143/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.049969548 seconds)
    (144/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080158611 seconds)
    (145/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065649843 seconds)
    (146/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.04993115 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.070450729 seconds)
    (148/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.066871887 seconds)
    (149/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.071710944 seconds)
    (150/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.05026578 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064020188 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.094052334 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071410412 seconds)
    (154/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.099550527 seconds)
    (155/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.107927111 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089074723 seconds)
    (157/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.050765931 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072744972 seconds)
    (159/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050438221 seconds)
    (160/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075247961 seconds)
    (161/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051487888 seconds)
    (162/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.083888141 seconds)
    (163/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.063636314 seconds)
    (164/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.101891196 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064233852 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.08837961 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088210906 seconds)
    (168/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050341668 seconds)
    (169/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087511366 seconds)
    (170/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052146166 seconds)
    (171/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050437128 seconds)
    (172/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.051908574 seconds)
    (173/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070703126 seconds)
    (174/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.053211803 seconds)
    (175/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078513866 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.11051098 seconds)
    (177/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070289378 seconds)
    (178/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051371278 seconds)
    (179/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.08628864 seconds)
    (180/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072790039 seconds)
    (181/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066576482 seconds)
    (182/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.143735284 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064013771 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070161462 seconds)
    (185/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.04968053 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085344219 seconds)
    (187/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065153764 seconds)
    (188/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050296934 seconds)
    (189/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051067607 seconds)
    (190/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066234666 seconds)
    (191/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.049699242 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07150698 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092733265 seconds)
    (194/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.145952871 seconds)
    (195/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.063334506 seconds)
    (196/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.115927123 seconds)
    (197/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.051022672 seconds)
    (198/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.061393714 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.063116594 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.061891816 seconds)
    (201/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.062659843 seconds)
    (202/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.083389287 seconds)
    (203/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.049270079 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.135319737 seconds)
    (205/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.049335667 seconds)
    (206/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.069852006 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.063159577 seconds)
    (208/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.06971257 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.072419479 seconds)
    (210/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.059316332 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07017161 seconds)
    (212/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.166383388 seconds)
    (213/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.066303116 seconds)
    (214/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.052302743 seconds)
    (215/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.0732227 seconds)
    (216/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.050544159 seconds)
    (217/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.100521613 seconds)
    (218/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.051773192 seconds)
    (219/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.0495643 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.06299336 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.068686124 seconds)
    (222/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.133991737 seconds)
    (223/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.070072554 seconds)
    (224/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073704725 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.061856483 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.062897627 seconds)
    (227/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.049011205 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.062854712 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.065132408 seconds)
    (230/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.096381965 seconds)
    (231/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.06007447 seconds)
    (232/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.059817842 seconds)
    (233/309) benchmarking ("sort", Float64, false)...
    done (took 0.121417838 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13350914 seconds)
    (235/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.049337559 seconds)
    (236/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.068837292 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.092821695 seconds)
    (238/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.050634714 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.084445476 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.063065656 seconds)
    (241/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.132065108 seconds)
    (242/309) benchmarking ("sort", BigInt, false)...
    done (took 0.175564791 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.098635815 seconds)
    (244/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.069533673 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.072517476 seconds)
    (246/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.05008955 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.120658065 seconds)
    (248/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.166024411 seconds)
    (249/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.05097116 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.140507225 seconds)
    (251/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.064821838 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.062838488 seconds)
    (253/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.076994471 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.103281229 seconds)
    (255/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.061255518 seconds)
    (256/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.062530723 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.068862806 seconds)
    (258/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.072427325 seconds)
    (259/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.070652297 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.070055641 seconds)
    (261/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.066209801 seconds)
    (262/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.158926823 seconds)
    (263/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.067503839 seconds)
    (264/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.163984561 seconds)
    (265/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.070298068 seconds)
    (266/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.049925421 seconds)
    (267/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.064156744 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06197892 seconds)
    (269/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.068990509 seconds)
    (270/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.066001893 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.0622227 seconds)
    (272/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.132533289 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.062826437 seconds)
    (274/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.049107473 seconds)
    (275/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.069418646 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.084436696 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.069539544 seconds)
    (278/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.063002103 seconds)
    (279/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.063537485 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.061919695 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.060594661 seconds)
    (282/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.060740119 seconds)
    (283/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.049324751 seconds)
    (284/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.069657139 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.062754561 seconds)
    (286/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.050111102 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.081342589 seconds)
    (288/309) benchmarking ("sort", Int8, false)...
    done (took 0.130890755 seconds)
    (289/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.048671515 seconds)
    (290/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.064111218 seconds)
    (291/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.064262955 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.063609918 seconds)
    (293/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.062530442 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.068424704 seconds)
    (295/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.052291984 seconds)
    (296/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.060064365 seconds)
    (297/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.068625025 seconds)
    (298/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.049407791 seconds)
    (299/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.050089863 seconds)
    (300/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.050781655 seconds)
    (301/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.092145555 seconds)
    (302/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.058437162 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.067160672 seconds)
    (304/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.063605269 seconds)
    (305/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.063897342 seconds)
    (306/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.058559923 seconds)
    (307/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.061174893 seconds)
    (308/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.05243449 seconds)
    (309/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.049403456 seconds)
  done (took 29.536849463 seconds)
done (took 30.914264008 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.09084242 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091542484 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07459906 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093023844 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080280356 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077505193 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072970435 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07884692 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08049923 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081803608 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078514829 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055422908 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074171291 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074112608 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074256772 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090655152 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077866574 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072828234 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072689794 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065070837 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072915623 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065738172 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066917548 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055216244 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07739752 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071060054 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071809755 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073634421 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064993904 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065425228 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068707105 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072762945 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064995502 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077079647 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071363554 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072445886 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073811791 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075789459 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066848172 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065302825 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073161738 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065126824 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.0719993 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072424722 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070705311 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070288798 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072024812 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077428221 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090324674 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067641407 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073595757 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076385642 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.074899446 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072022322 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068714772 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072530655 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.06998902 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089801652 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072498679 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066864042 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072594727 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072655457 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069651487 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071884035 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072523556 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074256698 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074827446 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070133763 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073732701 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070595306 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065069343 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072069211 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068010273 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065764203 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07492074 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076457316 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064787667 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071196011 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071839947 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070642982 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063717929 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067420023 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066660082 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070962781 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066956438 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053880121 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068997723 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071129551 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064548053 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073186919 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071127953 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071653307 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066889994 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07481768 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064332356 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069778529 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064979556 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064589203 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066227571 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068598297 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064692844 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066998144 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073295173 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065864986 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070716146 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078047333 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064894193 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070844889 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063637076 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064146007 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078551181 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073924741 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064912097 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067258718 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063658564 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071321288 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064037941 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06464386 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064583336 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064838845 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070355352 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064361087 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066280333 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071154619 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076424447 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064320507 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067633499 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066370782 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064324945 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069408323 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064331822 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064127517 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.199176441 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061303121 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067463582 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064751034 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072039095 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067236913 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07290108 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06625662 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072564949 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069152489 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071147941 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.069436776 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064426266 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058164012 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067450587 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067371603 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066678221 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06481294 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06614701 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065304245 seconds)
done (took 12.504234128 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06541871 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.140757751 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096712962 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093442821 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084595483 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065694069 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074509487 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.099749838 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06718183 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100562132 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.085547415 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083879178 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111126943 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063507269 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064856597 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068509724 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.065846871 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080100655 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.098915757 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.084964111 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.10690862 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06399151 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093047361 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088596543 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.085381744 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.099663594 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.065518906 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.06842101 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068271028 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.089328222 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.084982916 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068867058 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065496252 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098670134 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.090716994 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.081747762 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065569941 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081132122 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065609519 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065081667 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.079263812 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096088522 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078161902 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.078902036 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069280437 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068127582 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066099452 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.0824652 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087510196 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077266432 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.084883265 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101032883 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067405696 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064656176 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064180806 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.083927149 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064464438 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067386408 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065150767 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067231676 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.064781836 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.067804998 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079587786 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.085364657 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068951515 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.078683363 seconds)
  done (took 6.739233696 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.081855448 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089281452 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081309942 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082346196 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06470924 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06521941 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065391344 seconds)
  done (took 2.048425884 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.065650379 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086624819 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.087441784 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.087085371 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08243224 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.085674622 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074656932 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065560087 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079372389 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066503377 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.0863194 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099883553 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.065753826 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.071819498 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089092225 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065668827 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.08863196 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06586565 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068484376 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088568989 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067485533 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081142565 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069077748 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066436053 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079703703 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065532513 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111070093 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069734571 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067255393 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068541263 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063575489 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.104502924 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.078903896 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074682726 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065441647 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079702481 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080164201 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063875734 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081323162 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070572201 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.07891529 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065912882 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066482936 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063447398 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069784904 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.075435745 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066513812 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.065970551 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067680169 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084549547 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06626091 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078901203 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070130579 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068198927 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.066879109 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06927912 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074850641 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06658954 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085158693 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066707943 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.081562318 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081347683 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.078966451 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081307399 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067450201 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078161439 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.078787655 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.067836204 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06706053 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068425763 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08111915 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.063793943 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.066972195 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.075802776 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067062616 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.087487035 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.087547751 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067346482 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074448167 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065964254 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065790635 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065771994 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.087428839 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067661537 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064941783 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069400942 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068545495 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.063845247 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064870842 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.06898678 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064217986 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.06672719 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068362145 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068951296 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06821839 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081827928 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067958491 seconds)
  done (took 8.668533732 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067510083 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06773074 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068279864 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06713429 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067064362 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066670514 seconds)
  done (took 1.946464603 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091857582 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069366209 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.078825193 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071458694 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.102736133 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.084986091 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085604861 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077455006 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082607109 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077833231 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084923548 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086535823 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090900506 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071695473 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085032367 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071075104 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085633485 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074233321 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.076956793 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071766832 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085261806 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072065085 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071986959 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.08002236 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074640952 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.070861728 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066761039 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077752368 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077394265 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077629414 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071325873 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074423285 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069567646 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077271428 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085276821 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069426173 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070802644 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076338194 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071076895 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074420107 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086274349 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071784997 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073620329 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075741449 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077109702 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069923351 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.075935191 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075087965 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.084803519 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075481796 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.075837379 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070127205 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.073986496 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075615043 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069257416 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076515251 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075647693 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08496577 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07109711 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.068725853 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067787529 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074324591 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076095889 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.073862922 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077065309 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.075727471 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069146941 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071459595 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071982742 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070653816 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075541995 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067984122 seconds)
  done (took 7.017962635 seconds)
done (took 27.926214311 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.537842193 seconds)
  done (took 2.050373293 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.609551143 seconds)
  done (took 2.143565475 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.882148054 seconds)
  done (took 8.413430378 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.388286852 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.499972476 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.702244799 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.128310533 seconds)
  done (took 3.290856973 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.658455294 seconds)
  done (took 2.20576695 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.209151625 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.193282925 seconds)
  done (took 1.956984589 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.366527492 seconds)
  done (took 1.902387681 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.095072462 seconds)
  done (took 2.633258187 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.257108475 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.164391138 seconds)
  done (took 1.963384407 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.455181114 seconds)
  done (took 1.993151661 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.812377033 seconds)
  done (took 6.354862132 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.203624258 seconds)
  done (took 1.790777067 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.237440222 seconds)
  done (took 1.782685387 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.695159324 seconds)
  done (took 3.239104132 seconds)
done (took 43.25904038 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079634296 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080749314 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08006146 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076850368 seconds)
  done (took 1.850487805 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075940439 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071920816 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075281079 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07243001 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075233634 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071440718 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073163096 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075957984 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071381948 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072315087 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071447836 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071705032 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073688091 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073552567 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070268878 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074253184 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075071163 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071717015 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074609448 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071613449 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070358294 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074030785 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074510457 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071111356 seconds)
  done (took 3.300859958 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077079638 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072278062 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074194359 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071956441 seconds)
  done (took 1.853596439 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076426189 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091075341 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.087843878 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076711769 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.090510434 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084995674 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068204729 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068226136 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072307627 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076202091 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067253973 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094655328 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.0864741 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076133066 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078085959 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065495225 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067353547 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085764251 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076522657 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.07708969 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069040855 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076247034 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067173407 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087221407 seconds)
  done (took 3.421814752 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076577303 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10140357 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076105286 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086674826 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088620134 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064498578 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073435128 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088173896 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121826327 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064694377 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069341422 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065184363 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071531447 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064435583 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.07513987 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103957744 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107608467 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067940499 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094986967 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064857997 seconds)
  done (took 3.191658857 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072274228 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069361515 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06583839 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068394532 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077068987 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072096151 seconds)
  done (took 1.984294484 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068051776 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067056512 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067024211 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066449584 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071207682 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06671761 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065159985 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066519262 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.06645968 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066846388 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066304037 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065282004 seconds)
  done (took 2.359640077 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.321866587 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06757998 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068191679 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065149889 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070151226 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065597885 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079394683 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067305179 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.09026946 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066069837 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066246162 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.06803853 seconds)
  done (took 2.653827154 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20242347 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075911184 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231831878 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135394482 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109746418 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113917437 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103051437 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111579368 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.140529482 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10003002 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165245987 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162920822 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106044488 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135415272 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08842561 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097089693 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152614361 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159945522 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10220834 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162925667 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141597677 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122712184 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144453365 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100162972 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104375733 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120240112 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069987706 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079031054 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167311651 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129336224 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143751926 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10985212 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092954416 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173482619 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167964671 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140744622 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133696968 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083349784 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101020519 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131571732 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196341795 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087654912 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16178534 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243931721 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080900925 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139879072 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118988031 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119222949 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106329875 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089883258 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143807576 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179803155 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137855356 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086702673 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110860289 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114436726 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115215498 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10284665 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178692924 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160054353 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125704998 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070767268 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098305052 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151027906 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130264226 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107586672 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125212691 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092908107 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131699382 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152668225 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116954971 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140810001 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127658547 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087793337 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119370879 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137717739 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125686149 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16746839 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12296906 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072386427 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122790383 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102239251 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080812604 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141716545 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074633233 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173169694 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097476285 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104565863 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111478806 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107562125 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109286474 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16010466 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141070367 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243246238 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.06596424 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102465835 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119250713 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146405951 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086999697 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108170915 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114809835 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077614013 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136481413 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07420071 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122065099 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074433234 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123684246 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131382077 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075846381 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120540528 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100248417 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099418063 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131876 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157921558 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088351602 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081526018 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164960273 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12126286 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103964972 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141320162 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154285117 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098003312 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101116006 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148289085 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177210731 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088739169 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160728942 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106054666 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08309685 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086742314 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122578391 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111194884 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120617815 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081463504 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116858044 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165579712 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074616946 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094295579 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131446119 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078424357 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079966432 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102628178 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098787635 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094607681 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098447649 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10215411 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136088159 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121428523 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103407419 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266683433 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097982909 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168900474 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087963828 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.09919944 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10302654 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.06946832 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135129856 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155667992 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079734678 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162487553 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122054705 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104709408 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118074263 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082613709 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138114593 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0781219 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070167305 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142892713 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10959908 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109227042 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.148793602 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103972432 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125799361 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118631484 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133084691 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130580656 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.12818889 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104934216 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087083661 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109956644 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124283447 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072650367 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090386535 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079454142 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10236765 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094247035 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082570546 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139900787 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122945735 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099230608 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110151904 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095328347 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145475445 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075942799 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127519535 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.11769444 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093146025 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149426693 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149235168 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129028713 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097787437 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142242319 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.06934653 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073364252 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.23077107 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123282576 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082933222 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083141576 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115595688 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145495381 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127900196 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137214032 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111012406 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120420604 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154365575 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068780796 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.114784152 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145928964 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120467245 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103348854 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089566228 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098269243 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141687992 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107624719 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178203151 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113024327 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125318806 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151442423 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099054476 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079055986 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102088936 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133933572 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102801949 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147298953 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098636137 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087022363 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10879966 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073544093 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098664077 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125406319 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1178332 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133145442 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113152746 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13080761 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076551364 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115530212 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118943069 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120836737 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063757399 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118467794 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157917164 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092539727 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116064977 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14942641 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078496243 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.122530478 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.317789027 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144511313 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084977129 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108276723 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117839176 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127880574 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119823241 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138915843 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10956858 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133400033 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108587469 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08502282 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087021288 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097341831 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103881988 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094531276 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107568691 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113023024 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094650384 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130936812 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102293664 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108397719 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116604415 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096158375 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088242416 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096926056 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173444881 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118086081 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169178059 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098474675 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.14300536 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16037713 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074684439 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078588769 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077555094 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137727097 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083076021 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128673153 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.096908804 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104473845 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122289146 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140064909 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094073699 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068334439 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106917088 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132515193 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111197192 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097480531 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10290726 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159768864 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.098906527 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078574923 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111794735 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102864699 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100713866 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312812473 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.06208967 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097895911 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075825712 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080115752 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126537959 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151453519 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080128833 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10233746 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118604992 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110245287 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127004127 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100163729 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098513119 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113476769 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148312127 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127531305 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.08945351 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110767503 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127500746 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172308661 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104821536 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094786589 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169956726 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149301486 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.157948513 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087585548 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113138822 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112725865 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109181439 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137101796 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082982531 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160216906 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080683652 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133841771 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102853562 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088960116 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128191303 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.097682101 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087391225 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145439532 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11665226 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082018475 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076824823 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116580057 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118971491 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105343269 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074830959 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136778937 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072125014 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129349421 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165216006 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07998485 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.245035239 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096430758 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079534193 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107035226 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102793056 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089846129 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097215828 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170372301 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087102189 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148629709 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139826474 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11262147 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134660218 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099344674 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635007645 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07738271 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149860584 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115257663 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170869222 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096651587 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116557388 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107765052 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123938459 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141967793 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104231595 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177937427 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131122945 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114544698 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079116646 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102055267 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101270093 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087479351 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103590177 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112223272 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114297567 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092674653 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114133763 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12141861 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081286727 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094546342 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15423355 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115439624 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142030916 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138107967 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084517114 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116326982 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135810428 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078608835 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.118916921 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148091256 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104244739 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096834281 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.222513306 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101971095 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169009333 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073248823 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159836234 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117929167 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108227599 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112945665 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113624186 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130724054 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106458873 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120390487 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093572918 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109310962 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112820931 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081536931 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07641452 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103617377 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11113274 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097170398 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097334095 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096777736 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148705558 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071369795 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094754934 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102046757 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142660729 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172165548 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.086872184 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082632273 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117664426 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111552155 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111538701 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119112386 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078453871 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081385468 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080576502 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076654605 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107403304 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11133507 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103136501 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109621396 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161101604 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081703832 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224059573 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09412866 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103761412 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069420174 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077823169 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094654322 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096078483 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10682778 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099782216 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168309305 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093780008 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.08825566 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090707609 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072546993 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082163731 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.270760163 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109560089 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118294129 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097382288 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062727225 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107950641 seconds)
  done (took 58.284919094 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107849699 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081491098 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096430146 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149373621 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121114667 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.21073717 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157070316 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.197730437 seconds)
  done (took 2.78685906 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067698988 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093136018 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099364785 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082695169 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066662588 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068373752 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223236949 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079902163 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06592634 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.087729384 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078880426 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068922625 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.399830727 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065333728 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067699445 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.06226362 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066590201 seconds)
  done (took 3.40096791 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.373667276 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.361755062 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.370135058 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072739954 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.65345415 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088839186 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.077175088 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.095825137 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070887269 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.279079636 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.702102726 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.091708983 seconds)
  done (took 13.902369327 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074979144 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.06913791 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083544016 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083381728 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071969029 seconds)
  done (took 2.04794608 seconds)
done (took 102.643257684 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080609868 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.292375194 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05292823 seconds)
  done (took 2.0380704 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082494329 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083609127 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08382301 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082378113 seconds)
  done (took 2.007443233 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.073572591 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075499275 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.084257084 seconds)
  done (took 1.903673797 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.221249653 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.139016158 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085943859 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081211671 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077025193 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077967644 seconds)
  done (took 1.911596587 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071660539 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074437316 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072117158 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075265972 seconds)
  done (took 1.964086885 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075830324 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052594948 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.0545664 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055524807 seconds)
  done (took 1.910277946 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085726717 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078543113 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077424213 seconds)
  done (took 1.91301375 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106067663 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084039352 seconds)
  done (took 1.862005754 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080505604 seconds)
  done (took 1.752463176 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097530105 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112755897 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.126697891 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.10802754 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.134715567 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107193382 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084397979 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085718381 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.075706397 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086223977 seconds)
  done (took 2.690687482 seconds)
done (took 22.141636118 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078261382 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.36695543 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360350245 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090175241 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670131011 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355978588 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.021455036 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091155553 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119560078 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067271521 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083182752 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649954105 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.976329963 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323571825 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.961321415 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319244883 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649629311 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067540922 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06701575 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067374254 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.008410797 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066876522 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06730594 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067873513 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649911164 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370707266 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067469094 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.318450015 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067146751 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069002871 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354234721 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067577222 seconds)
  done (took 16.220359629 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070697746 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117360322 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073259468 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083507204 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069948466 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068849064 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071111715 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068192259 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124389982 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067273343 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083719163 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067194199 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071771423 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068244997 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086570803 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06805989 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068281421 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067913177 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067958922 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068082558 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085634941 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06755706 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067662898 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068258138 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067458045 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079760162 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068225486 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067978258 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068239776 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069876599 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070740781 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068315056 seconds)
  done (took 4.065101221 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11427217 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124614465 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073982078 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102468898 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11106868 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.0696359 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142531003 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092308249 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126096271 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067676549 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084196506 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067912996 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100698558 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068234973 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08679461 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068066355 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069060806 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068233359 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067754015 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068030557 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086857988 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067826651 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06809134 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068537823 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067976495 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081102373 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06825376 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068137172 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068053944 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069800296 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07114741 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068561156 seconds)
  done (took 4.312109788 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072020272 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074788212 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082252077 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083559272 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069195069 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070862263 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072539509 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069464162 seconds)
  done (took 2.282386484 seconds)
done (took 28.554536149 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079125172 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068601112 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.07240544 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080841603 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07293873 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078129686 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066543982 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074021399 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071746329 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07244085 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074303986 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06707695 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071056129 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067163102 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073558712 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067237087 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078561008 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071175231 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079487874 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078652221 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069638461 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073085748 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073973454 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078844621 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079115309 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078623621 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076823903 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072720134 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068688271 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070328855 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076487164 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083847523 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068134991 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078841598 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067430577 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067590121 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070944211 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067443342 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078812575 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07631111 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069126084 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075538714 seconds)
  done (took 4.755123859 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08760125 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09085812 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084872934 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06132602 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.06738586 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064484786 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08815268 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059462151 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059511404 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088031934 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055411334 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058739376 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.0622117 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053944477 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059065731 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05636815 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061346774 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055858785 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059020121 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059105301 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057728807 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054256914 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059915179 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065080146 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056527595 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061688834 seconds)
  done (took 3.382938716 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074291663 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083576239 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088061492 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125645842 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103658001 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076252377 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.07749834 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.086885868 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.08438074 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066641818 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07050741 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092678915 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087778419 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073362576 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067528398 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083177841 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081199468 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068655765 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07277769 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090304861 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084003279 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.077330905 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091806137 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08021651 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066245599 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068866263 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070526994 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080690681 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071762079 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075649894 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070788521 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.06978766 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068459976 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078309556 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07030253 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068565422 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089133685 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076339757 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077155035 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067449785 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070123048 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067946094 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088630995 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122060888 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066285215 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073525307 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074595 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075774775 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066927197 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085562337 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077621315 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066431933 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.06995354 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066174327 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066824644 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079727579 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068638125 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069087387 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075427935 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069702199 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.07959628 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070700355 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08223841 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066344041 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07409614 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066051938 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.0678086 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066156389 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091954909 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068652355 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108396094 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068296203 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067819245 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075564843 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074879786 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072810641 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067495329 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082026739 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077277196 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070969725 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075439808 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070239337 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069996084 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087578716 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069623133 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068429193 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067777913 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07271273 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069620292 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068333685 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079827443 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066860584 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.06988886 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083321734 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066969562 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068116523 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072611901 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071620695 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.078065101 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077878677 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071676303 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068005544 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07608593 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066903589 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070338657 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077454901 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073391399 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066199036 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071176802 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073470653 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068128801 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068534593 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070200143 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069451013 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076397414 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073487631 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071204163 seconds)
  done (took 10.52395236 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.159420174 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152290683 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069746031 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143806079 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076410604 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079010626 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.148211146 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093773156 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067317217 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.0681169 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06851203 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114593256 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104920935 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121383537 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.07813132 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067166887 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082488536 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115735101 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.147366819 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141591163 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083001647 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077089048 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069324296 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069147735 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074011266 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081465526 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090243722 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076016417 seconds)
  done (took 4.44441589 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080517039 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.100289106 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073391476 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088770061 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.08996022 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067396092 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069831241 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068969201 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079682583 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077859681 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.06701397 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073127966 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074702934 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.074097 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068787738 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074655246 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074898853 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068864042 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070849663 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072526006 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076945614 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.079881185 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071598689 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066607795 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073659127 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066736308 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063831031 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083375468 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067661806 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089928156 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065597414 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074249107 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080972951 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068382504 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067474735 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067523613 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067106894 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067041394 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069394056 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066028979 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065865079 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057264162 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066788372 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078756404 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073660036 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056746101 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071864906 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072753977 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072174469 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064774648 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070114193 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069947365 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070095095 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074277709 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071988567 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072304488 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068372658 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065806458 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074981459 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067311328 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06416705 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065678089 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072175183 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065129483 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.07511276 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071399972 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066101806 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066971492 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069178512 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073250603 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067060964 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070275983 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064995575 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068967264 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071684921 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068787852 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068172911 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065712903 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06665326 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067449002 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055315214 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067023538 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053345599 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070193049 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065379655 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065564342 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067058946 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072280431 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078678734 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068165189 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.0726519 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067960847 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065872534 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070034316 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059663697 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069780706 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082375984 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081859872 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066907012 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06495769 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081146395 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071464399 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06609564 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056134625 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074430185 seconds)
  done (took 9.144371293 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.094698728 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087487508 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.06971925 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083033942 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.090784218 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.08624826 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07421174 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076768486 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068738885 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081844459 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073403148 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07603692 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067772269 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.0766299 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093696663 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076737818 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069486092 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076105778 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071716639 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100807523 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082316205 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081990797 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.074220207 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068257786 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075311867 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079915245 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090108773 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079974633 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.07828146 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075170686 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079467562 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089796106 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.073481095 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072045616 seconds)
  done (took 4.436167734 seconds)
done (took 38.366562332 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.781141476 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.937228521 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.766957628 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.113345854 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.840185498 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.98408574 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.826339528 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.761603163 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.956909466 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.800471872 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.998821131 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.812203521 seconds)
done (took 65.284033633 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.804603267 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.907806699 seconds)
    (2/2) benchmarking "String"...
    done (took 2.039774725 seconds)
  done (took 5.654330745 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.135177689 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.359606318 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.009242336 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.762196314 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.76967735 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.072381821 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.564983126 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.283202905 seconds)
  done (took 30.528266346 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.946937693 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.967389025 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.426868394 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.463328067 seconds)
  done (took 15.557132764 seconds)
done (took 63.563885595 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.761024578 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.807933029 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.807441993 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.748562962 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.823217754 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.770245801 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.99915984 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.014948771 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.76384917 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.752894249 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.765248407 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.200292092 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.776657879 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.261811198 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.766519564 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.77259789 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.815378354 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.385192182 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.920848831 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.775216554 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.765726209 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.815090904 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.772070397 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.774346408 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.791377534 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.766687388 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.204641378 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.764797305 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.394633867 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.767602175 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.793075218 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.781877149 seconds)
  done (took 204.788529973 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.765558891 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.892998955 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.933006426 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.800018775 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.494737471 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.960402141 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.903242453 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.509143461 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.768108737 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.769941337 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.88860151 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.765404822 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.902255912 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.780044192 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.773072494 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.87063075 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.018923672 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.927863506 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.766270108 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.015695121 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.786813834 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.691556046 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.678477941 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.888066493 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.784618926 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.775089688 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.773955921 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.926346212 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.961578537 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.997438951 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.771926072 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.772399882 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.988312715 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.638581568 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.789568113 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.773637781 seconds)
  done (took 170.214458933 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.154278048 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.766676137 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.766335285 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.767556346 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.779558167 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.767142855 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.88930563 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.896504007 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.225029559 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.860488811 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.819307345 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.619970471 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.767400015 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.834465512 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.780055216 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.770353134 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.768543596 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.782881782 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.793511282 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.769715217 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.768258877 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.894931209 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.779259986 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.30593645 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.776827611 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.768051094 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.772985849 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.138029883 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.768243723 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.774599973 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.028691155 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.768608383 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.767918228 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.680168095 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.002175069 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.773682834 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.852393139 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.770116507 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.774616679 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.769751641 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.987636858 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.769297354 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.768825067 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.771743804 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.959127759 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.772346003 seconds)
    (46/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.767799938 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.895019762 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.294510401 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.770332007 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.769179171 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.769347054 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.528043956 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.494845776 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.772157323 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.769308894 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.771806957 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.769357146 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.769625756 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.775585796 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.61104731 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.843602805 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.771349695 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.773082669 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.775448748 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.770678277 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.826689751 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.772276746 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.005826897 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.826204371 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.881042192 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.769403498 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.89461723 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.773756369 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.838276489 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.863743188 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.770746193 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.770079536 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.770071515 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.770809327 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.852580477 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.770870174 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.897557531 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.778633827 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.772302797 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.820180801 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.839980396 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.771280501 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.676554743 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.774695734 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.771034453 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.122606481 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.838442487 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.772232775 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.770692786 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.771507649 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.903794298 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.895571186 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.565229998 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.7740427 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.540008867 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.774288236 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.917948067 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.772862721 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.973983465 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.775575153 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.853632821 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.776333337 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.773711884 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.772008358 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.802483673 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.773196854 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.829570523 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.775750637 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.142577745 seconds)
  done (took 402.499127872 seconds)
done (took 781.415851267 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.444398018 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.411432627 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.530128858 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.439247538 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.418256592 seconds)
  done (took 13.957920667 seconds)
done (took 15.671701333 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.859355909 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.863566298 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.797176293 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.860909871 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.792725673 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.860793912 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.842888486 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.79839037 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.82855004 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.797735958 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.830329663 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.798149139 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.785484008 seconds)
  done (took 25.431329662 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.000233429 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.005348132 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.842379993 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.009566893 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.818674232 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.99870657 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.936009994 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.927448701 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.924807121 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.789932949 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.787157861 seconds)
  done (took 22.757572507 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.007667931 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.010393862 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.84677462 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.006001216 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.821279812 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.014092446 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.935677369 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.924346702 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.927562948 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.788917618 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.788271646 seconds)
  done (took 22.787990213 seconds)
done (took 72.689853799 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.783399428 seconds)
  done (took 3.500737609 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.803763496 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.942529638 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.789044519 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.787440057 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.783562041 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.783165002 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.786810428 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.782651473 seconds)
  done (took 16.177932549 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.781764898 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.782517324 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.779418207 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.78249828 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.782176964 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.783338505 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.783272649 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.780880264 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.780858864 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.780103312 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.780602226 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.78416484 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.781321037 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.783516872 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.783703532 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.78176955 seconds)
  done (took 30.230692196 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.78256337 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.780725668 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.781173615 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.782304228 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.780731052 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.781824185 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.782534872 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.781782325 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.780968311 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.781332425 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.782220964 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.781474228 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.782054697 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.781743051 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.781899514 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.782156058 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.78123645 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.782724204 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.785450391 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.782324779 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.782210384 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.781574271 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.782836278 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.782285269 seconds)
  done (took 44.490547425 seconds)
done (took 96.116313261 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.473414819 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.197239298 seconds)
  done (took 8.390581926 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.78578117 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.78471963 seconds)
  done (took 5.319384616 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.784662727 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.784124513 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.784917085 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.784336488 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.784199105 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.784739577 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.78522841 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.785705632 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.78575271 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.785387783 seconds)
  done (took 19.569822544 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.78518895 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.785569114 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.782337851 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.785289869 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.784953678 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.78382032 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.785540058 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.785927573 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.785544425 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.782787837 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.785717174 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.783857402 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.785505797 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.783827433 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.786719594 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.783430021 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.783773331 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.783487648 seconds)
  done (took 33.84491685 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.787090442 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.785998492 seconds)
  done (took 5.2941593 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.784049692 seconds)
    (2/7) benchmarking "second"...
    done (took 1.783480664 seconds)
    (3/7) benchmarking "month"...
    done (took 1.78377962 seconds)
    (4/7) benchmarking "year"...
    done (took 1.783559632 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.78467694 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.784729208 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.78422752 seconds)
  done (took 14.211484343 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.787793056 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.949310052 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.016946669 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.474936592 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.78792576 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.790263248 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.723749304 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.790908879 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.792491599 seconds)
  done (took 19.836855331 seconds)
done (took 108.18544848 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.586582148 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.784193569 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.118164938 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.828493292 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.842448769 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.079470347 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.826450525 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.000513616 seconds)
done (took 42.787678646 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.798789575 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.265645018 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.263454627 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.432772893 seconds)
  done (took 11.685038897 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.767340646 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.29908593 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.813123087 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.377363758 seconds)
  done (took 19.987394748 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.147679218 seconds)
    (2/2) benchmarking "read"...
    done (took 2.13527015 seconds)
  done (took 6.011754612 seconds)
done (took 46.206350873 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.788693352 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.789183451 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.786347579 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.78881422 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.789624421 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.785944728 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.78646493 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.786596347 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.788666824 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.787174124 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.788644818 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.788715034 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.788297841 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.788656926 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.787301927 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.786037734 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78796679 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.786751601 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.786526682 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.786845 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.789125699 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.789580615 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.78608952 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.787001242 seconds)
  done (took 44.629868295 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.789360564 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.788469593 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.790195157 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.790205975 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.78762934 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.790724338 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.789175632 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.787493626 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.791299228 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.790681709 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.788070619 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.788267996 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.79082988 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.788872226 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.790399058 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.788556438 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.791154575 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.789032711 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.790797089 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.789442319 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.791006543 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.788527218 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.788906442 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.792229645 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.78854241 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.789161428 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.792081605 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.789454836 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.79077949 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.788824907 seconds)
  done (took 55.416040606 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.796137978 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.79872464 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.791253888 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.793399909 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.791765874 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.792033705 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.791700079 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.791901008 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.79316926 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.792289552 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.791818783 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.792123758 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.792639111 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.791865355 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.792418786 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.791226378 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.792691772 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.793301275 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.792119026 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.792893815 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.79246124 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.793066343 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.791746069 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.792370668 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.792156266 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.793782938 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.792447808 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.792493919 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.793582377 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.793529982 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.792929634 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.792757982 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.793767073 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.794082876 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.793707817 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.794053668 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.798819822 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.801999414 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.794923858 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.793227091 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.793987605 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.793164829 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.794522649 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.793914225 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.793757582 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.793771554 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.794905475 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.795366938 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.793995464 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.794294069 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.79426923 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.793894537 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.794326384 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.793927776 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.794573424 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.794576946 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.793798114 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.794958868 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.794439146 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.794703937 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.794789339 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.794746152 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.79531003 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.795760913 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.795243001 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.794379807 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.794564804 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.79523766 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.795370609 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.795456223 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.795038819 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.796005816 seconds)
  done (took 130.88951334 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.794444752 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.793615491 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.792385715 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.792113362 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.793019308 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.796819937 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.793826743 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.794926741 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.793767361 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.795927991 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.795700408 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.79374754 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793030585 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.796677629 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.796409248 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.794359648 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.795992148 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.793712125 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.796377174 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.796698622 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.795652976 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.793725305 seconds)
  done (took 41.213998281 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.796265731 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.796776133 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.793673161 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.79691726 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.793942866 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.797524809 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.797770305 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.797418409 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.796446727 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.794570574 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794187885 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.798150384 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.794468866 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.794165628 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.795134331 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.795352389 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.7980075 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.795304194 seconds)
  done (took 34.058147643 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.794699899 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.795597044 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.797621941 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.794231978 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.795356274 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.797637915 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.79507163 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.797643561 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.798501549 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.795804635 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.798955636 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797866659 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.797904173 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794811349 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.798794925 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.796232182 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.798130118 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.796291925 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.798362158 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.795881057 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.796544857 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.799011188 seconds)
  done (took 41.264516262 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.79848929 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.798632523 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.795672801 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.7971043 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.797125814 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.799170789 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.800191462 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.79652133 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.800086141 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.799172378 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.797372417 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.79953964 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.797374799 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.797928727 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.796970648 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.796920552 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.79975568 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.798061489 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.799971102 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.797627007 seconds)
  done (took 37.698028785 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.801066952 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.800300576 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.801151804 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.800954263 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.799999947 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.801171513 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.800656138 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.800862267 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.800859583 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.801705732 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.80027997 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.800559959 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.801312542 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.801283916 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.801316299 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.80136283 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.801433957 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.800942345 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.801329807 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.801301354 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.801533316 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.801533124 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.801554852 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.802102172 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.801555649 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.801458776 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.801631016 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.801210713 seconds)
  done (took 52.168330747 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.800988546 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.801323869 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.799447248 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.7988017 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.798943742 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.798473443 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.799210388 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.799498957 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.802004664 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.799124856 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.801422905 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.801873329 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.803334968 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.802647969 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.80199881 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.802373023 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.80141338 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.800914403 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.801200367 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.800095033 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.801693694 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.803497602 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.802281155 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.799998572 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.799076274 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.80267781 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.799440211 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.800260268 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.803006833 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.800761498 seconds)
  done (took 55.765000694 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.820588103 seconds)
    (2/2) benchmarking "in"...
    done (took 1.821874564 seconds)
  done (took 5.379302516 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.801017925 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.803737166 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.802707442 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.800762769 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.800652469 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.803494037 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.803271333 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.801368237 seconds)
  done (took 16.154803143 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.802682273 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.802662465 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.803276431 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.804408685 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.804055933 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.805942969 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.810878241 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.803656219 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.807158961 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.807052288 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.811879257 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.816875395 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.808400729 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.805086699 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.804539324 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.805446602 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.804399558 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.805071061 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.80462927 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.80454875 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.804672649 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.807879652 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.806330799 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.801260718 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.80553344 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.818190142 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.811670521 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.803761192 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.804743805 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.812228643 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.805712853 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.801305886 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.806674321 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.806544519 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.805209295 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.806115792 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.81923269 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.805454182 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.812756945 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.805932504 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.805478488 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.803294731 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.807805371 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.809279151 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.807147481 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.80692943 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.805945877 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.802587307 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.804883286 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.808963201 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.811353348 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.805306818 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.802524589 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.813608748 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.808222832 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.814627743 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.806998397 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.810147433 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.816106473 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.81790984 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.821773603 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.813918657 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.807804402 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.806445361 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.817377913 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.831800393 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.814773873 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.803667114 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.804415787 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.806849584 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.817909211 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.822351032 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.817639885 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.808061374 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.807341628 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.808017127 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.808769941 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.80765655 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.816941137 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.812238233 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.807999838 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.806740794 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.817443791 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.830101194 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.807443915 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.80809002 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.80832987 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.808496036 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.809359356 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.821391015 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.808634039 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.808515179 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.809339974 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.808206368 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.813051324 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.809701228 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.807621796 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.811807772 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.806435067 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.808191933 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.809653741 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.811500259 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.818649605 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.808705361 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.808801154 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.818275857 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.808649347 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.808237759 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.819791345 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.807968001 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.80909474 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.809351767 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.819266969 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.806654128 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.812293429 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.82018738 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.809906174 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.812544949 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.808984881 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.80983383 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.819320899 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.838496142 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.810350688 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.808958801 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.815012271 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.821830045 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.810711168 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.815520508 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.810327901 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.807715749 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.80756238 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.81245765 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.809898187 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.812227462 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.81107971 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.81429192 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.807878565 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.811019319 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.811501982 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.813448734 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.812741025 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.811699515 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.813301477 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.814486317 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.810813467 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.814041613 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.818931053 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.813044656 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.814041223 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.814972642 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.808911342 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.811789622 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.815858599 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.811888593 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.81335407 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.812262986 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.811406138 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.812181966 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.810836206 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.811717667 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.812265705 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.812783889 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.816470627 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.812398241 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.818894041 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.811832504 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.808582159 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.811968261 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.812203496 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.812557718 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.813029591 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.811661662 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.815391616 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.820529519 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.812436518 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.813281506 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.816783756 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.814569856 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.813489385 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.81392537 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.816050511 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.82146321 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.813422838 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.819708328 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.81346308 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.81379002 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.813374142 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.813991762 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.812933221 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.814680523 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.815812338 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.82102347 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.828390341 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.824373284 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.815284959 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.818487826 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.81522739 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.818744202 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.821527057 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.814860751 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.813660013 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.815865828 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.816192211 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.817124169 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.81883776 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.817863102 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.814307385 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.814755357 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.813998631 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.815454798 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.81490631 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.817505573 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.818747293 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.812179803 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.814860305 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.814686119 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.813956306 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.812086935 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.813332362 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.814292815 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.815150019 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.815780454 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.827003604 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.811338466 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.816764136 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.815584833 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.816283631 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.814374372 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.814325086 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.818564729 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.816471993 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.822427461 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.818691465 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.817998614 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.8245448 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.815720496 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.815628468 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.820970743 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.815916696 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.813528974 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.818587106 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.823636484 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.816208174 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.817511775 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.816602268 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.816338012 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.816504044 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.824031353 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.814005062 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.816203666 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.816673255 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.820244989 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.81390946 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.819289608 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.819400848 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.81916151 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.821714847 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.816989186 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.817248768 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.820641984 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.817673955 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.817087767 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.817267312 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.820496422 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.825443941 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.824126257 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.819452496 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.822566241 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.818782549 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.821067867 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.819485912 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.818216459 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.818335086 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.833267374 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.825884316 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.825472726 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.822398603 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.817972975 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.823790912 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.819603878 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.824628452 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.818819398 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.818399014 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.819047385 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.817503177 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.815901796 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.821166501 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.819197433 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.819049796 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.819955846 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.822865886 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.818564243 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.818504507 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.818970765 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.818695034 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.81945226 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.817976139 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.818979139 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.825817264 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.822371665 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.820080116 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.820518901 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.826764067 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.821122568 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.822488125 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.819904127 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.820191669 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.819918023 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.822285842 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.82047488 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.824100969 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.828776553 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.823285076 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.832718108 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.822313734 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.832296083 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.821040582 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.82441923 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.828362525 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.81812033 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.819512969 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.822359645 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.820821595 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.829906959 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.821492501 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.821818606 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.825826868 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.820973685 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.821366686 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.820755267 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.821672016 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.820419646 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.821038522 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.831876967 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.821582432 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.825503797 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.824922666 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.818842302 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.82181326 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.821720781 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.820576526 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.829216084 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.82284717 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.824042001 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.821035695 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.823461935 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.822322601 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.822537949 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.821971755 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.819560125 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.821691622 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.8287724 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.823731833 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.827695686 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.822069463 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.835353986 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.822287853 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.832297519 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.822254388 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.824411089 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.824103057 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.822691647 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.825755547 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.824294773 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.826904734 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.823500949 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.824129945 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.827407566 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.823960409 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.827936763 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.823615432 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.824347497 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.824960274 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.834451487 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.848688526 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.825199574 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.828297193 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.820545983 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.824718237 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.828602525 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.824604149 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.822762161 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.827334362 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.83516966 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.832145507 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.824460433 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.824114332 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.825369724 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.824947679 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.823402639 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.823401178 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.824484746 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.824792475 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.826749281 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.825318645 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.831446584 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.8242071 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.827140795 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.825869262 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.826319844 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.836628384 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.825434974 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.828117024 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.825270637 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.823920128 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.828364324 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.826097899 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.825310594 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.82780701 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.824804671 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.827039599 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.83243318 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.832108836 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.830994009 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.825719266 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.826694249 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.827763473 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.827760157 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.827159902 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.826593663 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.826777519 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.82808412 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.827014397 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.827558474 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.825089992 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.826110127 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.829551996 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.82632531 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.830251412 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.833768087 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.827011548 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.824262035 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.826345684 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.826576932 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.825637229 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.828844321 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.839583178 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.829967584 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.837773599 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.836042368 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.831086882 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.828028111 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.82937785 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.837198963 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.825314336 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.828965325 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.827584301 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.832143761 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.826985783 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.829926485 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.826101621 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.83641801 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.828255782 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.827766011 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.838175589 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.828623982 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.826747606 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.82851024 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.831512525 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.827417605 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.825007069 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.827367981 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.826792081 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.837093881 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.830924533 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.827549682 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.829681525 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.824273348 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.827609718 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.830377735 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.826494935 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.829419907 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.82382003 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.827016359 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.827464958 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.826742909 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.824987375 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.827353452 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.827833088 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.830636282 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.834852558 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.82166438 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.830741674 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.827218702 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.828097551 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.826645011 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.825419878 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.823785749 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.823968507 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.827857777 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.827654192 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.825229376 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.824636887 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.819663109 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.820306798 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.821467356 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.820883649 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.821959155 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.829346113 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.826624617 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.816060628 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.819016414 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.821247487 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.822984154 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.818169945 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.818268881 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.819262051 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.822998499 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.816373275 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.816836392 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.817590601 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.820333682 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.837247579 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.817010634 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.816854385 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.818933871 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.824799704 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.816136093 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.814043707 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.816692099 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.821909749 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.819951929 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.825425188 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.818038026 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.82695629 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.817423356 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.818759579 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.822156978 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.821745 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.828327237 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.824038817 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.817635516 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.819115502 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.822995883 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.836723035 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.817436084 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.828609318 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.849175857 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.819870774 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.820887579 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.818694399 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.816526991 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.818286941 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.820891192 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.819581218 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.81832783 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.81849013 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.817637542 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.818850271 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.825656972 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.822431755 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.817777989 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.818951821 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.819938542 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.823925809 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.815514242 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.818734748 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.818821001 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.819356833 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.818789458 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.819392769 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.820218059 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.834927889 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.832083373 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.819627904 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.820025284 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.815643055 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.823439614 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.823263825 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.831120588 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.827129955 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.819055078 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.819619884 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.824395396 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.820685259 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.816733736 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.821564845 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.819609441 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.819705903 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.816328739 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.835215767 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.82958782 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.825447666 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.822069424 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.820521205 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.820618327 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.823969946 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.820429234 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.821167815 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.825703119 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.821338276 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.824724624 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.820174696 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.819731731 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.824800678 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.829713213 seconds)
  done (took 1086.064064942 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.817451869 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.816844159 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.817472204 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.817646336 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.81696743 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.817202785 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.817206219 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.817234081 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.817900737 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.817898807 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.817674357 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.816666428 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.816775605 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.818145144 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.819065689 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.813852698 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.814352192 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.813868532 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.813760839 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.814058178 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.813949028 seconds)
  done (took 39.900027399 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.814278576 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.811625317 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.812330467 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.814698043 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.813286458 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.81465799 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.81275932 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.814775469 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.814307041 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.813433241 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.814234123 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.81331553 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.81112225 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.811252248 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.810386729 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.815535398 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.813556904 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.810395513 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.812884478 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.810323054 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.815127177 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.809509844 seconds)
  done (took 41.634111397 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.814512978 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.813800552 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.813894155 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.811743614 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.812266515 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.811406133 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.813946725 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.81329386 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.814799412 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.816356511 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.812626001 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.814081442 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.821054516 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.819253587 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.817366839 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.812643893 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.957330248 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.813642532 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.814227101 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.815453726 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.811059818 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.820087997 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.810863309 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.810790087 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.812698214 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.813288096 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.813737474 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.813118501 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.814902873 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.815932456 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.818929595 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.814048472 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.81393092 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.816239492 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.8145344 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.816241062 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.817986877 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.814962748 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.810733843 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.814508812 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.824607153 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.839451092 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.815321193 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.822208167 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.813946277 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.813672584 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.81882926 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.823631568 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.810925857 seconds)
  done (took 90.854002286 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.814622803 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.814762454 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.813015029 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.812740595 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.813111864 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.81272675 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.812497847 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.812699523 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.811812469 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.811556653 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.813424766 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.810290144 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.811135171 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.813514401 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.812900485 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.810565831 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.810552041 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.810815784 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.810415887 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.810022554 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.809472017 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.812158165 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.812563698 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.810185756 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.814370793 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.808383808 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.807812892 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.810521425 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.808224193 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.808315788 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.81295784 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.81084022 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.810980475 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.808226316 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.80838792 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.813220749 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.809193803 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.807388889 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.809305905 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.807751523 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.809915357 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.811916714 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.809595404 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.808800285 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.806077812 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.807459133 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.807375037 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.804548964 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.805120609 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.807425639 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.806950713 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.806271851 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.808885377 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.80492183 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.806962382 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.808801626 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.80469343 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.804977373 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.806542889 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.805557076 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.805649984 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.807205182 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.80490983 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.808201331 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.808038815 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.804827044 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.805125965 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.807734235 seconds)
  done (took 124.789013485 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.809359452 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.807890119 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.808365655 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.80871415 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.808836927 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.808591976 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.807495205 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.808280053 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.808192804 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.807934867 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.807748594 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.80771588 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.807761393 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.806737885 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.807693074 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.808056314 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.807885198 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.807949682 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.807305275 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.807481155 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.807584002 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.807427829 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.808429179 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.807164938 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.808928093 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.808287414 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.808020797 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.808318641 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.806782205 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.807909634 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.808389353 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.807192605 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.808553023 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.808719286 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.808024613 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.808265472 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.807478477 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.80878107 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.809755705 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.808332881 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.808174476 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.807557476 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.808443775 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.807708823 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.8095419 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.808841482 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.808303352 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.809095994 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.808342899 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.808717578 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.807945331 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.809148689 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.808110105 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.808232405 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.810166541 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.80817644 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.807811889 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.808862883 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.807893508 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.807491636 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.809705523 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.80685694 seconds)
  done (took 113.852725524 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.806802315 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.807231024 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.804348724 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.804888604 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.806109688 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.804556537 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.806749249 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.807371003 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.807324884 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.806435674 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.806364474 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.80382612 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.803828438 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.806924379 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.805567278 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.803989241 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.803490068 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.803992911 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.806465101 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.804826682 seconds)
  done (took 37.853812066 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.804371225 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.806243473 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.804025857 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.804927898 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.807269303 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.804381138 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.806561403 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.806848231 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.803309375 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.806535556 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.808468146 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.807244696 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80484662 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.80514665 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.807487333 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.805806711 seconds)
  done (took 30.635887456 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.804012182 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.80793913 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.808223034 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.807252751 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.806729385 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.8043324 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.807033137 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.803607263 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.804949727 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.808306745 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.806327908 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.807085003 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.806499505 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.806243697 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.804166258 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.808259639 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.804184587 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.803435683 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.805682184 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.806933523 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.805292417 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.804242511 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.806078544 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.805759574 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.803464939 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.80421299 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.804961071 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.803686297 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.803700123 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.806172365 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.803452819 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.807251348 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.804449314 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.803982908 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.807008457 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.803681091 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.806516127 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.8081283 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.806932775 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.806804236 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.806695414 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.804626179 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.806541295 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.809174189 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.804142312 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.806852244 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.803351783 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.804699095 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.805321195 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.803242364 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.806281441 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.807097176 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.806111041 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.806575768 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.807241943 seconds)
  done (took 101.058659343 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.806142953 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.806781835 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.803976371 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.808293517 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.808039878 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.8034758 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.805980719 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.803887625 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.803687365 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.80634422 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.804478063 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.805616028 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.803545734 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.806692115 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.805774162 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.806090029 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.803324927 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.803361623 seconds)
  done (took 34.236858973 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.803334604 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.804775626 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.805889981 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.803598872 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.802906535 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.805486675 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.805466964 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.804681107 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.80483936 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.80310407 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802889474 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.806742758 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.806332266 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.80536095 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.803378308 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.802271462 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.806332869 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.807155769 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.801783985 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.803249976 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.805515703 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.805534875 seconds)
  done (took 41.44195177 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.805338618 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.805636213 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.822355603 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.848336825 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.835956659 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.80529908 seconds)
  done (took 12.663197467 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804087923 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.804824155 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.802266251 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807397106 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807149892 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.803158253 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803551566 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80282944 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805072802 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803732499 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802453845 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806051572 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806688434 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803805426 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806572996 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807085125 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.803546652 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804019561 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806357049 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807729999 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803840026 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806289091 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.803289812 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803115613 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804081508 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804476805 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808178179 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804855774 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804662301 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807067303 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806419037 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805095104 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809060775 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805808329 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807321953 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807450577 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805398812 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807904559 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807264142 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805394241 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.807731383 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807502824 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808192416 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806849802 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807874079 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806155124 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805416577 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805024742 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806601211 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810552071 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810559973 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807050109 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809828017 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809045287 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809399491 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807904682 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806241843 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806182078 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808338903 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806608904 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807246666 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809254503 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806010148 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807002729 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808472978 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80736075 seconds)
  done (took 120.956826844 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806212579 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.806942359 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806503289 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807517776 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806837743 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806601077 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805463501 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806459262 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807086962 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808306813 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809310057 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807259028 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806517856 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807483035 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807053989 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808118225 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806847461 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806508858 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806035609 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810734509 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808242078 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807533093 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806987624 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806694203 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80749335 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810458185 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808508677 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808217456 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808119784 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808244648 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807590502 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809555555 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807449948 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.808640116 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806764254 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808385571 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808154692 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80990406 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80798938 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810659463 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808826418 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810479465 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8103103 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808827829 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80895738 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808268292 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809004199 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808775232 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810809066 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810019222 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808944802 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809933016 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810025431 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809656944 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808701007 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809901673 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809875352 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809367012 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809260689 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812949757 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809639892 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809417962 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812388194 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809061301 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810545947 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809852127 seconds)
  done (took 121.110265773 seconds)
done (took 2513.411879437 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.878191235 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.896879781 seconds)
  done (took 15.521822599 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.98253189 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.934743791 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.819063277 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.835301619 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.818857194 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.837980093 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.836594802 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.821171215 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.81982343 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.818937125 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.819365421 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.005229228 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.823683757 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.819547904 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.819249369 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.913891739 seconds)
  done (took 51.641756901 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.822741522 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.82380596 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.834475345 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.825768577 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.824259744 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.841933782 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.854992178 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.827146096 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.880151366 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.847817055 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.953156531 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.834497058 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.823591684 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.882168259 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.838040412 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.838068412 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.924230574 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.899142137 seconds)
  done (took 35.13153737 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.901544337 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.829161485 seconds)
  done (took 10.493462429 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.819937984 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.815814258 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.832990685 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.838302755 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.815421991 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.835065202 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.834857758 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.841822888 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.823734716 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.847501533 seconds)
  done (took 70.064937925 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.829934266 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.824239696 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.824363625 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.823351241 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.81558557 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.82162259 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.823774182 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.817207817 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.523540604 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.860123447 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.829655817 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.829203638 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.824419797 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.825113893 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.823539897 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.84622906 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.983603976 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.822003807 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.822176911 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.829682386 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.824096766 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.88329363 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.836842854 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.824178187 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.85327322 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.516466905 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.832759374 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.829559569 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.94308278 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.823031418 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.825629862 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.824981461 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.826686508 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.20234472 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.144595499 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.82676567 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.835451299 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.833974599 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.822480936 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.935293595 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.825222999 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.830870032 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.768749105 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.136160304 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.922483477 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.870034746 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.17875343 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.828343111 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.826273819 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.855604087 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.829820621 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.826911114 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.83931026 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.343047148 seconds)
  done (took 130.287434431 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.870655636 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.305136566 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.975733999 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.820666851 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.112657864 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.059722644 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.823851402 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.871923477 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.850240962 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.072588793 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.000455244 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.94124049 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.821945633 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.822755927 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.822145809 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.818987781 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.97101559 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.892786277 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.823330006 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.82146469 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.857293371 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.089298946 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.948171646 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.964069595 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.845800749 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.046827985 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.949100924 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.939546358 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.827626263 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.820534828 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.889501721 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.830561825 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.823648976 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.821469571 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.987304184 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.927619158 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.92026815 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.82478455 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.827165669 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.821152939 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.853903074 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.042842074 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.931917402 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.960134775 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.072177192 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.050929076 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.823980179 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.821561482 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.829961839 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.015641 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.037624746 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.077117307 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.951825006 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.824366071 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.163933722 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.821649267 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.910090476 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.072122453 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.056031737 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.933575136 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.877362354 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.823695504 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.82203723 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.139597674 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.826880774 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.931344332 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.203107117 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.824773259 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.931834108 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.937520186 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.061258579 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.064337197 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.853997518 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.831154023 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.878031235 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.108209867 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.896284832 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.076186279 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.839917784 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.825908397 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.915282858 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.827984891 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.996742383 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.142516022 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.090122333 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.867637732 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.83379013 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.823684726 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.074926853 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.075694882 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.099113227 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.069178262 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.991891483 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.842545977 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.82559671 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.823913991 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.876579752 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.958311507 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.826543736 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.186238503 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.071484215 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.601063249 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.855861123 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.140805018 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.964172366 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.829520557 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.826724797 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.825661047 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.030835661 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.870241483 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.832192148 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.825360645 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.07208926 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.774435103 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.951914432 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.540707573 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.892534056 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.827665705 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.091367415 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.830574237 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.074139384 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.833038862 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.139614347 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.560620152 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.872455086 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.0231252 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.070531493 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.829121464 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.090478286 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.140612257 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.951922483 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.076676087 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.578693312 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.83074547 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.119630648 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.845450254 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.856368067 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.996804606 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.830047525 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.005828156 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.831566886 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.136200143 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.853754221 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.997578424 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.120844315 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.103748515 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.873521381 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.880896855 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.84120639 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.962130212 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.828245307 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.92239925 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.012515802 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.969245223 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.831270802 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.424162727 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.829238279 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.975209536 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.12680647 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.854416151 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.900593956 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.8300725 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.829237392 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.922277215 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.855406002 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.44081952 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.830509519 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.000360762 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.821220487 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.287875337 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.82772971 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.13758603 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.041119724 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.829016924 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.833813242 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.634831122 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.828097453 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.98929147 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.988590511 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.71485395 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.8320476 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.046314153 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.832630276 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.962956614 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.832265871 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.830397576 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.179925301 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.837188724 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.833347456 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.839624423 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.829218718 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.828749752 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.057949397 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.858120834 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.5499376 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.968394736 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.079486153 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.142495154 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.093205219 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.880231197 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.832479297 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.094150783 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.836663762 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.899695132 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.833399503 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.854849373 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.07468502 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.835360059 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.058430304 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.119243365 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.853858758 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.883425141 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.83318368 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.928841699 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.830791701 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.971719841 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.928369722 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.833479975 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.834593974 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.949142366 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.95712453 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.025536869 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.837301488 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.83311716 seconds)
  done (took 945.939716549 seconds)
done (took 1260.826300586 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.829604814 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.835823332 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.822256746 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.835089057 seconds)
  done (took 29.0932681 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.840077262 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.837069865 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.839012788 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.838334675 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.84042258 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.838282299 seconds)
  done (took 12.805104232 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.882793333 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.836912672 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.835820358 seconds)
  done (took 21.32819925 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.907172203 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.245185127 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.943737155 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.283927089 seconds)
  done (took 10.152825743 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.840884211 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.84079091 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.840094672 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.842035574 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.843108696 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.842273161 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.840291451 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.841492968 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.842713425 seconds)
  done (took 18.347555173 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.102400322 seconds)
done (took 97.59825045 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.122579254 seconds)
    (2/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.964494571 seconds)
    (3/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.976805481 seconds)
    (4/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.12217653 seconds)
    (5/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.823473125 seconds)
    (6/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.07828705 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.199808864 seconds)
    (8/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.219818385 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.977585257 seconds)
    (10/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.838216375 seconds)
    (11/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.961637718 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.875135291 seconds)
    (13/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.972596018 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.865247564 seconds)
    (15/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.899423789 seconds)
    (16/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.723626855 seconds)
    (17/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.8377173 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.971068035 seconds)
    (19/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.112019059 seconds)
    (20/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.118298646 seconds)
    (21/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.327375342 seconds)
    (22/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.487605238 seconds)
    (23/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.832097897 seconds)
    (24/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.351918479 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.721935909 seconds)
    (26/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.962006547 seconds)
    (27/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.937205707 seconds)
    (28/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.118806637 seconds)
    (29/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.341727176 seconds)
    (30/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.014996251 seconds)
    (31/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.401883373 seconds)
    (32/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.795680853 seconds)
    (33/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.941137418 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.934206416 seconds)
    (35/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.184897991 seconds)
    (36/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.849795878 seconds)
    (37/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.196977042 seconds)
    (38/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.497242224 seconds)
    (39/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.103740063 seconds)
    (40/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.23899184 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.840048949 seconds)
    (42/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.834583963 seconds)
    (43/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.973217908 seconds)
    (44/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.860728258 seconds)
    (45/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.132702258 seconds)
    (46/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.036289024 seconds)
    (47/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.975588559 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.042283092 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.521641434 seconds)
    (50/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.075811648 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.862973457 seconds)
    (52/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.841704193 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.107214459 seconds)
    (54/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.833633666 seconds)
    (55/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.922959849 seconds)
    (56/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.957629811 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.891168437 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.20863066 seconds)
    (59/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.821966274 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 9.255317096 seconds)
    (61/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.957481426 seconds)
    (62/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.19723855 seconds)
    (63/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.133190156 seconds)
    (64/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.932372543 seconds)
    (65/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.839276047 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.883751971 seconds)
    (67/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.026082225 seconds)
    (68/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.862107808 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.165964518 seconds)
    (70/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.839053649 seconds)
    (71/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.19196268 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.936272004 seconds)
    (73/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.938405714 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.006806353 seconds)
    (75/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.906376001 seconds)
    (76/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.86432899 seconds)
    (77/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.137367439 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.84009423 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.489076101 seconds)
    (80/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.845932073 seconds)
    (81/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.201243185 seconds)
    (82/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.904431977 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.521078831 seconds)
    (84/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.832721259 seconds)
    (85/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.945579328 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.914034388 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.824633941 seconds)
    (88/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.738542747 seconds)
    (89/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.123651874 seconds)
    (90/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.435334017 seconds)
    (91/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.925019457 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.10965351 seconds)
    (93/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.402662707 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.44434226 seconds)
    (95/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.965056419 seconds)
    (96/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.028854749 seconds)
    (97/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.9728412 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.106732916 seconds)
    (99/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.923915323 seconds)
    (100/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.254078363 seconds)
    (101/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.178262085 seconds)
    (102/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.056377859 seconds)
    (103/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.843877876 seconds)
    (104/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 9.135445826 seconds)
    (105/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.253476221 seconds)
    (106/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.826184606 seconds)
    (107/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.280206172 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.085276067 seconds)
    (109/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.654300236 seconds)
    (110/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.844896502 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.048354811 seconds)
    (112/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.296583533 seconds)
    (113/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.426729508 seconds)
    (114/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.828477272 seconds)
    (115/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 7.929506651 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 8.201600565 seconds)
    (117/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.854109877 seconds)
    (118/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.926212225 seconds)
    (119/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.840533718 seconds)
    (120/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.894281217 seconds)
    (121/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.804906626 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.84297743 seconds)
    (123/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.01203088 seconds)
    (124/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.126343682 seconds)
    (125/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.826657694 seconds)
    (126/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.856074973 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.782526229 seconds)
    (128/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.844796542 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.938931963 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.969518681 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 2.292535887 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.864703522 seconds)
    (133/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.186769231 seconds)
    (134/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.209176982 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.103039698 seconds)
    (136/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.888152147 seconds)
    (137/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.925611908 seconds)
    (138/309) benchmarking ("sort", Float32, false)...
    done (took 5.610306418 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.063779517 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.630526174 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.109800614 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.888991996 seconds)
    (143/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.898508426 seconds)
    (144/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.67688687 seconds)
    (145/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.958957897 seconds)
    (146/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.021163264 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.974919516 seconds)
    (148/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.903524101 seconds)
    (149/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.920147174 seconds)
    (150/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.825374064 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.0811159 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.224609435 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.871143587 seconds)
    (154/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.97631844 seconds)
    (155/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.076467516 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.992697377 seconds)
    (157/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.832111033 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.917411603 seconds)
    (159/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.215267798 seconds)
    (160/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.846762302 seconds)
    (161/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.018296395 seconds)
    (162/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.860788806 seconds)
    (163/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.774900667 seconds)
    (164/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.828486308 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 3.594822982 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.637028148 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.768890133 seconds)
    (168/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.215893012 seconds)
    (169/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.9267069 seconds)
    (170/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.47252198 seconds)
    (171/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.0078617 seconds)
    (172/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.831547768 seconds)
    (173/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.070637696 seconds)
    (174/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.938160387 seconds)
    (175/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.520191605 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.92445148 seconds)
    (177/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.927807597 seconds)
    (178/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.952638206 seconds)
    (179/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.59021473 seconds)
    (180/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.965006275 seconds)
    (181/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.844035355 seconds)
    (182/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 3.298011914 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.131597936 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.873736975 seconds)
    (185/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.994793794 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.734154046 seconds)
    (187/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.850188979 seconds)
    (188/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.187720531 seconds)
    (189/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.274724934 seconds)
    (190/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.914483312 seconds)
    (191/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.450748947 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.887708104 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.892840642 seconds)
    (194/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.829956876 seconds)
    (195/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.108791884 seconds)
    (196/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.848176428 seconds)
    (197/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.363238399 seconds)
    (198/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.246275061 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.598580609 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.901958567 seconds)
    (201/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.245213742 seconds)
    (202/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.860501162 seconds)
    (203/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.918363669 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.873995708 seconds)
    (205/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.027293057 seconds)
    (206/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.875755809 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.169562013 seconds)
    (208/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.973112521 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.563576084 seconds)
    (210/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.013116765 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.066258299 seconds)
    (212/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.829379953 seconds)
    (213/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 10.087171409 seconds)
    (214/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.035534301 seconds)
    (215/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.858460579 seconds)
    (216/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.979416173 seconds)
    (217/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.072634944 seconds)
    (218/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.833075508 seconds)
    (219/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 3.46793274 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.188601881 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.873926961 seconds)
    (222/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.100548074 seconds)
    (223/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.873139772 seconds)
    (224/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.869713163 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.886334874 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.23186218 seconds)
    (227/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.945382814 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.509534554 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.845813181 seconds)
    (230/309) benchmarking ("map", abs, Int64, false)...
    done (took 3.236413157 seconds)
    (231/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.15781071 seconds)
    (232/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.127332254 seconds)
    (233/309) benchmarking ("sort", Float64, false)...
    done (took 5.66999103 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.839771455 seconds)
    (235/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.929723461 seconds)
    (236/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.974299917 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.830656028 seconds)
    (238/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 4.444212529 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.833284753 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.230996492 seconds)
    (241/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.943922099 seconds)
    (242/309) benchmarking ("sort", BigInt, false)...
    done (took 6.851615227 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.923053245 seconds)
    (244/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.871713909 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.139820896 seconds)
    (246/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.43910165 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.942652924 seconds)
    (248/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.847457389 seconds)
    (249/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.213818095 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.852711842 seconds)
    (251/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.961885054 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.943022499 seconds)
    (253/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.775283196 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.837346492 seconds)
    (255/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.936304357 seconds)
    (256/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.943500064 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.878520685 seconds)
    (258/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.90587107 seconds)
    (259/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.872848601 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.237089454 seconds)
    (261/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.931702116 seconds)
    (262/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.847653401 seconds)
    (263/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.87634294 seconds)
    (264/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.848292298 seconds)
    (265/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.858751496 seconds)
    (266/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.389076948 seconds)
    (267/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.543676083 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.263113417 seconds)
    (269/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.878520107 seconds)
    (270/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.865945223 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.206245703 seconds)
    (272/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.054833083 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.151657104 seconds)
    (274/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.203749267 seconds)
    (275/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.861339358 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.490711981 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.939791388 seconds)
    (278/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.850797502 seconds)
    (279/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.8819925 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.935621742 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.965423595 seconds)
    (282/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.389463554 seconds)
    (283/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.95795734 seconds)
    (284/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.039261909 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.176642584 seconds)
    (286/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.361664647 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.866784163 seconds)
    (288/309) benchmarking ("sort", Int8, false)...
    done (took 4.826188056 seconds)
    (289/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.162246212 seconds)
    (290/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.999900248 seconds)
    (291/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.980999062 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.08664709 seconds)
    (293/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.071785773 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.893837292 seconds)
    (295/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.834596813 seconds)
    (296/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.06106752 seconds)
    (297/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.886270879 seconds)
    (298/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.143210378 seconds)
    (299/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.999725395 seconds)
    (300/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.744056102 seconds)
    (301/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.979625982 seconds)
    (302/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.365717319 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.873374637 seconds)
    (304/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.954508272 seconds)
    (305/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.47374157 seconds)
    (306/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.121783222 seconds)
    (307/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.939125016 seconds)
    (308/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.834932499 seconds)
    (309/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.909666917 seconds)
  done (took 1017.170592289 seconds)
done (took 1018.960583464 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.882949886 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.878289716 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.861082193 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.882444094 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.9739586 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.890867709 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.871893027 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.863437792 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.909104133 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.910352941 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.860671046 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.889608703 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.86383031 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.862155983 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.861212081 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.875030663 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.165091177 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.889556733 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.879847575 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.871636025 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.880748946 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.861585797 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.912561352 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.8895955 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.86608484 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.86569079 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.866850228 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.882885298 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.974532893 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.866222197 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.863984742 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.874615244 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.165180399 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.887245394 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.857494116 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.882423995 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.875361964 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.872585412 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.866640041 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.895446058 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.304174494 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.870064539 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.865644611 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.86370308 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.863214397 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.866546779 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.866168425 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.869481429 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.877194389 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.877547347 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.302967639 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.885670745 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.867392635 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.864597097 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.875248282 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.865502585 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.867483348 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.881235287 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.884575857 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.880750685 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.159772049 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.895078215 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.867312123 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.881905499 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.873254916 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.340007525 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.865343708 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.86922555 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.307481533 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.874549054 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.340627469 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.879099204 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.866110541 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.879696462 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.897090646 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.168837458 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.885735369 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.863484945 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.87419901 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.863907967 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.87456214 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.878024509 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.870866128 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.866790722 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.87967681 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.894820292 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.875927201 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.86821557 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.875363491 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.885718201 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.873940565 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.877350776 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.869591545 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.861523261 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.875487058 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.869731392 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.870275089 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.869883681 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.871641337 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.876799815 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.305094088 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.88888786 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.86400503 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.863385554 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.866123365 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.881001103 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.305567246 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.873085915 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.888939291 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.914837893 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.867970079 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.161291651 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.897759343 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.884379039 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.877433558 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.87098921 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.862424039 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.163088624 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.330059202 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.890392539 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.86933893 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.867238161 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.883686014 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.870077436 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.865550642 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.172075662 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.893816462 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.881737951 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.989775258 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.878786599 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.901163986 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.867070305 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.872332929 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.900970966 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.885349447 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.900345545 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.871452542 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.88460373 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.88480537 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.865946151 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.880511667 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.879448692 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.870427171 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.875209228 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.863172952 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.898866814 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.881940384 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.882558577 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.89121146 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.990519813 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.867713263 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.162052689 seconds)
done (took 293.291962259 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.938032572 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.857447086 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.959868933 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.8648806 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.950630908 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.951695341 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.862200094 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.863339558 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.863263247 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.244624852 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.863337591 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.864284544 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.862867312 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.862230252 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.949129043 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.865640256 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.863791651 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.208411633 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.867440291 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.937107821 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.865630973 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.862923117 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.865916769 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.247913889 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.860227336 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.864779434 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.93704198 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.865524293 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.213657086 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.865892978 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.859871325 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.213834185 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.958615569 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.884214741 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.877341618 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.87417108 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.952344905 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.870442075 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.949670076 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.949929113 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.962894 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.907088917 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.863838506 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.86945517 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.870027087 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.868212523 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.865350362 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.894925728 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.86915227 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.864840803 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.208463765 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.877449668 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.87450311 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.865453163 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.865198519 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.88920955 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.864899038 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.869011072 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.960221608 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.869026888 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.930066627 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.250238229 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.245042225 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.867778884 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.864522538 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.865506897 seconds)
  done (took 184.141882932 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.935735129 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.942508193 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.935692765 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.871692228 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.918098773 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.939686448 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.871248163 seconds)
  done (took 15.214365474 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.875477826 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.868721219 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.919756236 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.919968004 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.868952636 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.018749644 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.869961754 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.881541572 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.867207256 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.923473628 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.870566366 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.870644771 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.877139642 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.871958435 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.919288218 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.881843365 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.985176977 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.871717995 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.871592035 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.028410701 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.867734975 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.877138933 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.924972725 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.881991996 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.870567317 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.876515552 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.457314949 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.870772433 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.867787706 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.869925556 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.867382588 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.908854088 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.869377164 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.87098376 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.867843638 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.986375926 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.871502342 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.867769584 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.870771163 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.868730281 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.869523135 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.87167149 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.870731218 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.86766608 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.87035726 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.894978503 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.870768669 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.870946928 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.871001816 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.871384282 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.921845732 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.870824845 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.868938539 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.86902958 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.927253927 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.878773937 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.873539082 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.870412511 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.872324987 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.869224443 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.029822647 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.919578575 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.871102975 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.920669056 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.871802617 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.871868681 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.871772478 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.872503012 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.927824396 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.871715549 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.92083527 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.869452658 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.030522418 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.896428594 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.873157319 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.875371318 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.875441974 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.872817208 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.865675539 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.879372611 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.870295351 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.874046962 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.87892345 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.870269347 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.870869045 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.980002977 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.981665837 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.869893501 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.88583705 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.880301516 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.871200731 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.925317154 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.87340019 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.870800624 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.925833812 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.989307872 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.93014865 seconds)
  done (took 205.968620928 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.878952982 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.881283439 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.87462745 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.889720893 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.874445883 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.874627615 seconds)
  done (took 13.07832437 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.877193762 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.87382401 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.874200907 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.874251159 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.874681894 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.875335604 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.875651415 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.877332129 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.878234178 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.873914399 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.87535081 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.876486349 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.875376087 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.875303929 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.875273971 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.875269779 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.875973203 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.871371822 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.874310757 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.875028824 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.027305399 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 2.3072652 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.875196259 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.877152594 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.879680809 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.874791191 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.883456131 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.874508609 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.875798118 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.884144948 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.880301039 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.875863415 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.878017214 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.882036987 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.880157559 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.878213897 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.878759457 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.877818063 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.872724311 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.876906382 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.8768676 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.876642829 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.876243477 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.877619424 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.877721672 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.881394977 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.881132748 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.883389393 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.877381096 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.877932432 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.87711509 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.876639034 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.877422777 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.878034488 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.881342201 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.881527351 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.881815073 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.878143501 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.877801052 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.880420649 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.878298018 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.878064832 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.880201671 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.881479069 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.87420845 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.879148146 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.878887866 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.882214516 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.878404624 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.876801035 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.878700699 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.874947351 seconds)
  done (took 138.570566667 seconds)
done (took 558.783478378 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.144994488 seconds)
  done (took 8.952878313 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.024719475 seconds)
  done (took 8.932173931 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.196196217 seconds)
  done (took 10.005204847 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.886709284 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.889666938 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.880901903 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.874259701 seconds)
  done (took 29.350974257 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.233755373 seconds)
  done (took 9.043538457 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.884198849 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.870423632 seconds)
  done (took 15.635413353 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.935033883 seconds)
  done (took 8.745850506 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.951314215 seconds)
  done (took 8.76600457 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.89806522 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.873828528 seconds)
  done (took 15.596926321 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.857137198 seconds)
  done (took 8.665648002 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.554795949 seconds)
  done (took 11.372741647 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.87915804 seconds)
  done (took 8.701381563 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.947579627 seconds)
  done (took 8.757520135 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.969878143 seconds)
  done (took 9.779353161 seconds)
done (took 164.113096952 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.875118953 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.874024435 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.875298982 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.873943499 seconds)
  done (took 29.308453454 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.910502783 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.911953353 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.912311817 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.921745803 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.914511147 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.911270969 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.903036832 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.903577021 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.92236237 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.914538643 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.913147737 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.914296325 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.911808604 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.903581248 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.914631685 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.913534208 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.923718977 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.913180884 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.904426238 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.914462985 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.878375047 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.923092139 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.914782374 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.87970799 seconds)
  done (took 47.6598062 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.077454421 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.950682934 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.032909176 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.931507069 seconds)
  done (took 9.802593703 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.930332757 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.932426231 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.943766656 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.982957373 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.015442694 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.942215042 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.906709595 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.900289982 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.888411959 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.933073261 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.00862513 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.949414173 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.01623989 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.87968608 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.066470727 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.878972345 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.879268921 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.932291685 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.982882851 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.996438738 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.880078763 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.931617333 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.935177158 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.949733668 seconds)
  done (took 48.474304847 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.878717152 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.88736024 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.884809586 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.87918671 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.87914737 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.879924092 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.885365397 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.880941407 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.90072931 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.881256672 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.879219024 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.879766682 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.879390929 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.881023197 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.879679085 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.893021302 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.894387686 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.879784277 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.882958287 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.886305641 seconds)
  done (took 39.485428978 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.874389149 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.729613439 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.226359134 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.130214381 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.87647971 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.878054682 seconds)
  done (took 31.528276119 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.893667678 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.943749367 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.888600464 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.936565333 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.018270064 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.888648074 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.882389407 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.949425501 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.990558508 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.95284161 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.902554325 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.908999481 seconds)
  done (took 24.970547943 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.876747206 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.87929626 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.877475691 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.894543135 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.893356838 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.888978019 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.890143704 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.875861494 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.895938048 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.89968922 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.890556282 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.894103669 seconds)
  done (took 44.474225206 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964597253 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.919222623 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.914354806 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.561263983 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.255370486 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.088332633 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.530538988 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.206442471 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.881333956 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.151317107 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.941872739 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983274619 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.134341074 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.308229133 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.908271381 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.425333962 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.17625467 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08230838 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905893058 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.579564556 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94332338 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.005057562 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.646276928 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.937822785 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.090046101 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.011085751 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.139487013 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.878342857 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015203813 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916538876 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890108955 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.878024245 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153138057 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.258606656 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984318742 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889651124 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.493918998 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.595662578 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.870486614 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.703439928 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.636063976 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.007811536 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890877389 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879410716 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.813067006 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.967390644 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251109001 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.885178826 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.590240772 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.880045774 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.890862369 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975075642 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.883489045 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.696573949 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.790534275 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.881951006 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.878553391 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886863817 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.454387528 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.012469017 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.011726141 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.852551192 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.971888729 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.58364684 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.266486267 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.028608194 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.885833935 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.884832265 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816028001 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.657206032 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.937538793 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.230648424 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.902995875 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.51113145 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179799134 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.991674545 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.825607728 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145375256 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.359307141 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.853544407 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.10935607 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882215333 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.81747909 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.828258515 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.816053396 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.137923999 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918776688 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.636474555 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922315094 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.209175278 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.89254211 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899518004 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906140415 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.107060447 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.769342844 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882277733 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.716812972 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.035041187 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904233439 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.211690564 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.81705363 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.887175673 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140118726 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.094436239 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.896398201 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.380796005 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041536977 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.384614599 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.935293935 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.974679554 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.929227272 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.149845154 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941314394 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.01416862 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9400317 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.886995106 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17281353 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.401994857 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.017735274 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.949923787 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.011145335 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.192162744 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911897638 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968044703 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.895031031 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.885508172 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.660402578 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.438553618 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.884409617 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.887369582 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.898732547 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.932343324 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.885767841 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.833722928 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.509474789 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.947407876 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.899543955 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.107665626 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.390710506 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.195213546 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.81879485 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.214146998 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.941018868 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.107877284 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.533513584 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.964200929 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.146382742 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.900132296 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.935427182 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933168175 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905219204 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984313805 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90818041 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.972134847 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.178428259 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.889927074 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.890106732 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.681694439 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.923637683 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887022509 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.891138349 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.635418152 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154404753 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.910301216 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.891315346 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.776270065 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.900555793 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951058641 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.892370101 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.895845603 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.425213328 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.597750941 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.893060063 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.473305057 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.115394807 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897511319 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.64796696 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.004897354 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.969567333 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.156030771 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.945510382 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.821205931 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.598453379 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.580431821 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886927497 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.822369711 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.887771284 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897045923 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.898934827 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.084243646 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.156260221 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.930806876 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.5908177 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.931900144 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.898996225 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.893268958 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887815444 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.395997836 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.022947354 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.026314389 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.93302198 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032530445 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.902495456 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.822471696 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.892823694 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.893798449 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.888552299 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.888607205 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922168012 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.58856243 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267279214 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.150097925 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.498707417 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.902644916 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.660536493 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.948821381 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.903827369 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.743494059 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.995694632 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.952976582 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901628513 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.900106129 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.684046325 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.587161298 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.460387253 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195682028 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.184174688 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3241809 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.045852543 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.917200839 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.225212739 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.825024103 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.449345355 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.947981298 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.229545182 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834503699 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974121608 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.53882217 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.23725056 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904263127 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.117695936 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.274417257 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.804136642 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.914749614 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.101961118 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925936521 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.983423992 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.851338185 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.414214275 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031880705 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.611621163 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.102589997 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222465129 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.737400857 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.906289711 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.890789749 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.561781345 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973402514 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.601484252 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.064234807 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.04494451 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.990652883 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239680636 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.897098367 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.117048472 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233850874 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.997734303 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.011850445 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829340811 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.903094861 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.903028136 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.894344552 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.887934072 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.758590535 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.150225149 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904588267 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827992578 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.953919245 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.175424073 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.793738299 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.898411325 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892701612 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.178812706 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.377746284 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06114709 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.93232445 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.408415889 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900421816 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.827988215 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827389521 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.586351292 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.89915494 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.868643994 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.094034442 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.998053441 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.805080046 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.910720691 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.141203538 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.150708177 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.908017096 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.158964821 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.168094872 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.59102977 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919570985 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.994453867 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.595149515 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.008365493 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.895150929 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.12988494 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.649338891 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.120207908 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.914348901 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.846312516 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.89405969 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.10911837 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.895294659 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.842179062 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130547085 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.618380332 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.994498585 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.202631355 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96785612 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.8190487 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.943579387 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.986483278 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9041195 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975394268 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.906523441 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.906217092 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.905643067 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94198062 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.813468638 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.023226693 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.910049464 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988460842 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.029255577 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.417445703 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.900076457 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.16459771 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250633903 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.21207059 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95479126 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.896770216 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903916608 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830656272 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050014866 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.122291333 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17036092 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.028146848 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.013298333 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921995825 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.585140382 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.047408413 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.138322314 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172896745 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.792295905 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.341542069 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.937453556 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.898568586 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909048467 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.109573954 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.101303181 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193117081 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.070266314 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.91370649 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.254261513 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.173423058 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.898563295 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.89899156 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.49152396 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.005679241 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.572180106 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.938957734 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.840166918 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.177643558 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908721573 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.278397453 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.920643173 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.054591163 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.671776647 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.675899662 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.191563728 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.883393911 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.960942791 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.16673396 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.273757929 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211327262 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966116396 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910361923 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.007231072 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046843829 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.765141108 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.904000896 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.90026345 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.948578707 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.60991465 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.91007053 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172388404 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209629936 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.898501469 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.763253546 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92672358 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.910608569 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.123983388 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.157007339 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.153166757 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911717671 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.90596399 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.719253298 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.170018722 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957827267 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835407837 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.90490914 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000539175 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.149503408 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925230872 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.354186775 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.61209765 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.166040758 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.903524577 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924002451 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.998280505 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.257402087 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.220029495 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.432377554 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.104087485 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.490668036 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.407087236 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.204204078 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.90667375 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.990354296 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.20513816 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.905210454 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.912939902 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940267385 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.166133368 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.21282644 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.998011363 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.608317958 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.873897831 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.243004803 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.459416441 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.841054594 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.912190116 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.962787596 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.903429498 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.033934936 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.914819 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.78575742 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.001521559 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.663494063 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.175315145 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.908682082 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.890798437 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.670451636 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.128617654 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937240348 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045301003 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904145917 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.578641293 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.255883634 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.160616388 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.923656766 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.91277823 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.907431929 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904069944 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.891080949 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.100329246 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.101310581 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172419371 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.948004472 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.940854997 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.908021757 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.120148644 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.115588959 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.830583453 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.046316148 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.927164139 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.946324207 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.809993978 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.405669827 seconds)
  done (took 1683.424948583 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.917567987 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.951664114 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.963172024 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.012042713 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.948986851 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.033809441 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.911707472 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.957172433 seconds)
  done (took 57.538865805 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.904473411 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.125834921 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.915491015 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.905928007 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.915565055 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.906476474 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.076012926 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.914856381 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.914747169 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.91566725 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.906544001 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.904230419 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.218806159 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.928272232 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.906243688 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.895611254 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.915199763 seconds)
  done (took 75.018194736 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.90633311 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.131713706 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.944288079 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.925223265 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.898042231 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.915110449 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.691815372 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.925230862 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.910970753 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.019698939 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.537236305 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.927056066 seconds)
  done (took 87.578434466 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.916710379 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.913837331 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.912989246 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.913841601 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.913220979 seconds)
  done (took 11.416653691 seconds)
done (took 2192.517949397 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.16207683 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.123189962 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.131745492 seconds)
  done (took 6.098759277 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.055560713 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.102196889 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.220956428 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.227426659 seconds)
  done (took 10.450853407 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.189896502 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.275868788 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.112359763 seconds)
  done (took 8.420982529 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.305798277 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.910325895 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.014934443 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.904478513 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.907774431 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.90628727 seconds)
  done (took 22.561685476 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.909380126 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.911622131 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.909393933 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.911394755 seconds)
  done (took 9.484379158 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.891202017 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.610293916 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.891856058 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.903696119 seconds)
  done (took 21.139139381 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.657644547 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.668007038 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.653232372 seconds)
  done (took 9.822134569 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.580263635 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.834302187 seconds)
  done (took 9.257239474 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.167323143 seconds)
  done (took 4.011156172 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.041076667 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.172613937 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.376827197 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.407167793 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.46510208 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.770632122 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.219124613 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.148767824 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.308410166 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.346159206 seconds)
  done (took 25.099432533 seconds)
done (took 141.582114862 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.284727511 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.143887167 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.105581106 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.243111963 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.135895724 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.105929043 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.333166412 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.225190872 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.74929133 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.748952213 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.242976922 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.139523614 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.069549125 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.140139035 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.069399845 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.145525635 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.126069572 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.295785772 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.974435638 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.135720532 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.335888671 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.877483879 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.082279815 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.88969122 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.128388268 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.056375157 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.454117595 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.147084836 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.123895545 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.465329665 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.05943175 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.287908838 seconds)
  done (took 174.167611612 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.813244982 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.909260603 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.908010554 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.909123829 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.405132057 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.910534954 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.908288178 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.908389499 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.071493162 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.05716373 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.911802876 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.393464918 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.910570316 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.909103022 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.908246635 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.908784402 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.251728473 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.881676374 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.924664058 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.928413852 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.933609822 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.364103592 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.935320849 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.425928564 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.284243021 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.937613016 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.90892918 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.939122889 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.914681297 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.927073008 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.928447518 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.90807856 seconds)
  done (took 209.98278134 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.908753353 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.915183944 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.917363513 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.908937259 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.915966648 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.910056041 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.921704497 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.909989143 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.679015095 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.672799165 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.9169494 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.916406527 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.912661319 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.915884859 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.925969673 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.910463529 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.920534061 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.921026714 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.918528046 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.920054566 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.923244402 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.733701973 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.925552683 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.73034981 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.918032759 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.919288999 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.910275975 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.919419275 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.921866083 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.922527261 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.920993978 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.911509366 seconds)
  done (took 222.366672817 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.104836287 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.917018475 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.917050679 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.854256769 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.918101555 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.91778373 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.912096257 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.10618326 seconds)
  done (took 19.509808159 seconds)
done (took 627.88129672 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.337388316 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.17988982 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.089069509 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.940521801 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.161273346 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.970469813 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.937169887 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.997235236 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.114546994 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.008029243 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.618985766 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.954399356 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.720970007 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.958853509 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.067988684 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.991519062 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.499927673 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.592864186 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.111671745 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.988707729 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.100342327 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.893749836 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.008716875 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.169282463 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.738335709 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.939124168 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.093762808 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.503385947 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.946612778 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.100506607 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.619491566 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.290087244 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.947228408 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.93591786 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.989176554 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.972004709 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.267624004 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.946179563 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.058763205 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.700203788 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.987535818 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.996971837 seconds)
  done (took 106.298870541 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.910564319 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.908149839 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.907472821 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.909675548 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.909254381 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.908352486 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.90782656 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.908812839 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.908904179 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.908546468 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.907656274 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.909889017 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.907866697 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.910381343 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.909303769 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.908695676 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.910158814 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.912158308 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.908344572 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.907915883 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.910897742 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.908549049 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.910208521 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.908835815 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.910879118 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.910515837 seconds)
  done (took 51.504484235 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.92179195 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.062260935 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.142955727 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.938330403 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.922421261 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.925334197 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.941334076 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.926094001 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.924448813 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.924968882 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.012767482 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.927700762 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.94010553 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.143330323 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.934884917 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.923200754 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.923328391 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.923279571 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.068605784 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.937625746 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.941802457 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.925935508 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.941450166 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.935076814 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.924890466 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.92357537 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.927380691 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.356079322 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.930226758 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.014836394 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.964635752 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.943584164 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.310174709 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.15023283 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.97266751 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.929742826 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.924741874 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.01987003 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.928009693 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.92349516 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.940999041 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.929100292 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.146489679 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.420269416 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.935526027 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.92346156 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.364453743 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.024980835 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.964816836 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.938595657 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.148252569 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.938326904 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.924935647 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.925065265 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.960957462 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.935610326 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.925547779 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.227597185 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.934721285 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.942103945 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.928349367 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.926035744 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.077650417 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.931418986 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.066286031 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.932310778 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.932377142 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.926680276 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.146709274 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.937877986 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.423344761 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.937339861 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.925762497 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.016159145 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.069989736 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.391996571 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.936758409 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.08125135 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.325361642 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.947765827 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.93297895 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.348485469 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.952096026 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.933304461 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.928171268 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.927676971 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.926379039 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.971437785 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.942639045 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.357917625 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.425542016 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.240143019 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.951958412 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.941077651 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.927505523 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.232236463 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.93339336 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.927692708 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.149373171 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.440158132 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.939248129 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.935200179 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.411539626 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.939935578 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.946277384 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.935619525 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.15314119 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.940107419 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.97147255 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.927538411 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.93505892 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.930821685 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.946488087 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.93476441 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.928313829 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.400534619 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.032828512 seconds)
  done (took 238.023152987 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.921882554 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.9235743 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.923540438 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.92432049 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.921747547 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.928059452 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.922411115 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.921959951 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.928673628 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.921725447 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.922233861 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.921765029 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.923889711 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.932528341 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.413388821 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.933421194 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.536677748 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.929952076 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.926403182 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.924748369 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.6016835 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.930007233 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.923801901 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.925877953 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.928203097 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.925548193 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.932083814 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.949470656 seconds)
  done (took 169.580911252 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.933266722 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.113240437 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.952389738 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.969451811 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.94307837 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.931458337 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.958268946 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.954097011 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.938814604 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.931888348 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.931506914 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.995002776 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.946094112 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.07032051 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.967720852 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.965751156 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.038308771 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.942194477 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.931976945 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.93202359 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.962334575 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.929200784 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.994888002 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.062465247 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.954104346 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.050372045 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.940934192 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.934388141 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.934890071 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.05279281 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.951609384 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.994976581 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.962831196 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.952332627 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.055720838 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.054151573 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.042237145 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.968332966 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.938269215 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.932951206 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.932963188 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.922738969 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.051108665 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.956023925 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.935803224 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.04217161 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.954934834 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.935480306 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.943916223 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.933542214 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.948938876 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.953059505 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.003207701 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.068254007 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.971983553 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.961417749 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.960879693 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.223476365 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.945366478 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.035792648 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.930809739 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.051399623 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.95813353 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.925350232 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.93516948 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.940362411 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.964646572 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.967343066 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.040773382 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.945763851 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.036644183 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.972270572 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.94275273 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.935764024 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.937570075 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.054352145 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.05738598 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.972756793 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.974534406 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.968176194 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.932671094 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.936368827 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.926083105 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.955061896 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.940639906 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.052273102 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.05782035 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.946294885 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.938325033 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.938866571 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.938776431 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.963288566 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.061730969 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.975623135 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.034943157 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.006394476 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.012999495 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.95227692 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.950206449 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.940922155 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.000710214 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.953644233 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.948564628 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.272817711 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.009267481 seconds)
  done (took 209.724036026 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.033275084 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.4125452 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.994757106 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.994512189 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.230073341 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.356298668 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.703770198 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.987055429 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.988122311 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.012233051 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.145715318 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.047511083 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.999871188 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.973985601 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.395425384 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.976330183 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.988850596 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.008178598 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.989910286 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.517312526 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.294452169 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.117919439 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.984983539 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.10377949 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.969313509 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.24734866 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.476912064 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.369994978 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.021339934 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.329238201 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.309292089 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.670024118 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.203268604 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.228654064 seconds)
  done (took 76.958216929 seconds)
done (took 853.935608288 seconds)
SAVING RESULT...
DONE!
