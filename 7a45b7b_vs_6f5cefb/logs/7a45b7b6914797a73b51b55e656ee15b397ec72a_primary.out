cset: moving following pidspec: 4315
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.316119122 seconds)
loading group "string"... done (took 0.545702009 seconds)
loading group "linalg"... done (took 6.915322601 seconds)
loading group "parallel"... done (took 0.160736461 seconds)
loading group "find"... done (took 1.11359484 seconds)
loading group "tuple"... done (took 1.724768319 seconds)
loading group "dates"... done (took 1.183762852 seconds)
loading group "micro"... done (took 0.222965973 seconds)
loading group "io"... done (took 0.986958603 seconds)
loading group "scalar"... done (took 37.490445557 seconds)
loading group "sparse"... done (took 12.279192499 seconds)
loading group "broadcast"... done (took 0.930555309 seconds)
loading group "union"... done (took 12.636793831 seconds)
loading group "simd"... done (took 4.221820067 seconds)
loading group "random"... done (took 8.635232711 seconds)
loading group "problem"... done (took 2.010338444 seconds)
loading group "array"... done (took 20.561200467 seconds)
loading group "misc"... done (took 1.75939795 seconds)
loading group "sort"... done (took 3.220744655 seconds)
loading group "collection"... done (took 17.018817618 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.513508318 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140578353 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.133325059 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.135271154 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.170111401 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.129267128 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.139335075 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.099911701 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.075502437 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.157521621 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.13394427 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.465401501 seconds)
done (took 5.113838576 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.205858572 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087363139 seconds)
    (2/2) benchmarking "String"...
    done (took 0.096429792 seconds)
  done (took 0.948760159 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066137744 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122825067 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066333573 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.082597479 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067327584 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065555133 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.083181481 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066294087 seconds)
  done (took 1.325041675 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075631919 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06862206 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084454218 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067748451 seconds)
  done (took 1.066422188 seconds)
done (took 4.39318739 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.817092051 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.247122565 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183643096 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.448779561 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.148622938 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.182139489 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.663306278 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.33736618 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.205664954 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082975791 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.120838338 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.35788508 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124229905 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.663994383 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075057728 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106864105 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.161356324 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.455690003 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.068824508 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082316653 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104236853 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128760061 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101664814 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091418515 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.157616229 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082357193 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.147111821 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081805474 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.083619045 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.225999703 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.188064824 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.671615305 seconds)
  done (took 10.408849211 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099420008 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.114239494 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06844782 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139662348 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096946844 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087011228 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072425651 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067584247 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.104969859 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.144802553 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089490178 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.118461667 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064682967 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.085864583 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085286407 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.221294786 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079913839 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.098564096 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070688494 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.0915374 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106826271 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094382068 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079487357 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093852746 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12929887 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.209061034 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10086058 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.115183985 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070935626 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099490722 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130976994 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131509999 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067947776 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085411272 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126510862 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.11327907 seconds)
  done (took 4.544478889 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.037198039 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.159684386 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093759932 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.152339516 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067361466 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.125977883 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.102314705 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065899272 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101261887 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.235624202 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.065658163 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.467641607 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129585966 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.084682963 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084578666 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068479746 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083131343 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.556992735 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.143544146 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104010833 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103114615 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.076361282 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.088681331 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.356708122 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068091236 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066459918 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084542532 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059332719 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.142068528 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068020479 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.111130423 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.087015589 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066372298 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12181516 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.180938928 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.068198811 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107932331 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.155367312 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066651375 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065203573 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.165166182 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091118416 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065189622 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.100771197 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102764449 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120045692 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083390428 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067681856 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.177181073 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066657649 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.103501078 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.847302663 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.165946848 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078015077 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067579289 seconds)
    (55/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.110831828 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.264758948 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.104168588 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066425653 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.082149955 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.235316403 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.148504622 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067569089 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082893613 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066962472 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068343063 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.39103582 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084229269 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.750145364 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071503299 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078591676 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069579039 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068244702 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09437111 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075165491 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103497991 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06859363 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.069945384 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084610164 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068279934 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069904163 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.103353071 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.207895595 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06664874 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.084973749 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065575634 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103579406 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097610132 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.086985989 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066068178 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116010093 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069795887 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06779511 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.12024326 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068018617 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.102058963 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085382361 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114576081 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083354017 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.133636294 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066830059 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.068867703 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.114063851 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.086954503 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100816317 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.09599306 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068324145 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.149397793 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064322444 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082744199 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067667907 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06766164 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.085256867 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068957933 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.096394426 seconds)
  done (took 20.847203777 seconds)
done (took 37.607882912 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.297445387 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.096592987 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075817015 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.093724657 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.093154924 seconds)
  done (took 1.507641048 seconds)
done (took 2.329551379 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118637571 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117194462 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064329076 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114043933 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063807025 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.118391839 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09857154 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.099296906 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115190111 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065511214 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09612054 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082477125 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064414889 seconds)
  done (took 2.067357631 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085279757 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084474607 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.089434943 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084665358 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06506934 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102321151 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081958773 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10627836 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081453898 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072272336 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081258919 seconds)
  done (took 1.74954131 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084820981 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084315722 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0866411 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081735331 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062886393 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098163525 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080823947 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101699561 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081053599 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089917586 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064468873 seconds)
  done (took 1.732266158 seconds)
done (took 6.358343171 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080710229 seconds)
  done (took 0.888725146 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.689771028 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.002811359 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080096762 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.133643359 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.200533389 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.139274155 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.342189678 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087113287 seconds)
  done (took 9.684183484 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.08807191 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.100245619 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068662834 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.088955032 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06938606 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071352946 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.089901469 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069442853 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.087655561 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07160891 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068981338 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.085564526 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07155859 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088596601 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069555156 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.08612661 seconds)
  done (took 2.157438711 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093250714 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.109518774 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073248289 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.093277508 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072197457 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.090940855 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074933209 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.092063534 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070879194 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.089205085 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07540862 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.09108997 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071609997 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064634052 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072716629 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.093752765 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072106831 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.090690942 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076037332 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090833745 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076009195 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064184758 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088940329 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074205599 seconds)
  done (took 2.86788675 seconds)
done (took 16.414457176 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.115554834 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.089096921 seconds)
  done (took 1.021077878 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085242471 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100726215 seconds)
  done (took 1.005706795 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085808877 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082547838 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091936482 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.095610606 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065934238 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.082714539 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.10487031 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067022015 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065544474 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.082738954 seconds)
  done (took 1.647299639 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071533476 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094827139 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071724421 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098176076 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074380075 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.08147202 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074049151 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084181272 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080259803 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063121431 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.088301633 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098365633 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072083633 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.101739151 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073578248 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085474349 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.07115611 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.08475463 seconds)
  done (took 2.291542802 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068455549 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068981482 seconds)
  done (took 0.960791861 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070380178 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064824817 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085311706 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06774011 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080491085 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063026394 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079745775 seconds)
  done (took 1.337240302 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.411782756 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110276918 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.334117158 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071504336 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.101627404 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.26967223 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065380155 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069705227 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092045359 seconds)
  done (took 2.390385041 seconds)
done (took 11.47708187 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.083108837 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086251792 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114709311 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.417599782 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093063705 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.083451072 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.132641652 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.227672435 seconds)
done (took 2.064423381 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.129614009 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.620225601 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.387162819 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.21333613 seconds)
  done (took 2.04952961 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.318779007 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.11243528 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.061148255 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.084823742 seconds)
  done (took 1.408500021 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068654297 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068619179 seconds)
  done (took 0.966184227 seconds)
done (took 5.384172009 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069291383 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084189712 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08571983 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066236045 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.082048373 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066707049 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063369103 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.081779557 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067004066 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065785528 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.083059142 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.069602368 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065661083 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080745765 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064657216 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065582144 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.080926842 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064242025 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064151222 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.081384128 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063985401 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065586198 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.080953518 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064103721 seconds)
  done (took 2.59420411 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086253129 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083750698 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072781532 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070593686 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.088611564 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074296779 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.089414038 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066584986 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088114462 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068458018 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086651245 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071618325 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067934491 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087769822 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06867234 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.08769253 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071922973 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084374248 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068926344 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.086811591 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072249771 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066795597 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.087819547 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071671248 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087906657 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070298029 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.087035183 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066708911 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087981833 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.07035599 seconds)
  done (took 3.174273446 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072054539 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064102573 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08135411 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07167912 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063687553 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082558441 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064359525 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063839845 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.083121325 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06396106 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064679514 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.082091838 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064102514 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.081418707 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066258231 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067183376 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.097253304 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064917077 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063611186 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.082689977 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067597451 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063674512 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.083016286 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064293543 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.080982467 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064677642 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065441597 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080924 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066331104 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063899461 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.085296176 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068216847 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063263783 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.088732765 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067976867 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062990091 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.086317212 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064006844 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064717624 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.081528583 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063772457 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062561929 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062592047 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069721458 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.083558656 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.067069409 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063630839 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.083738167 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064622824 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065988641 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063153375 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063439448 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.084880901 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066042008 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067981017 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.081212719 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06533619 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06357881 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082239651 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064628783 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063667139 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080946711 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066759635 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06391397 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096818851 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071241545 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080350249 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066923873 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064307772 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084089766 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066317012 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075839805 seconds)
  done (took 5.986925343 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.095975568 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106763191 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066100819 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084585056 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062719909 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.082475376 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068996151 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06343013 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083492644 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069878528 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082076042 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066910774 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065718055 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093934704 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06582313 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082260026 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071841697 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062160955 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.192158594 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067431455 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081533624 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068878004 seconds)
  done (took 2.627573678 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.176261929 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071361621 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.124690457 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072254765 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066560945 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092402534 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070788858 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069550732 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089579278 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068433772 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086978193 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070176235 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085586195 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068311289 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08571833 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069114106 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086355551 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070011941 seconds)
  done (took 2.367368033 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080245094 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067033202 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10544526 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066026164 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084264258 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068870894 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089578606 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075599989 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085765172 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067223075 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074745302 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087221537 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068589406 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083984298 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06957572 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06552736 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.086895212 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065875613 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092822583 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071566607 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089221142 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075390695 seconds)
  done (took 2.566323744 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083327225 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068788561 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10213709 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069293883 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080780102 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064491254 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.087991792 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067375746 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071889161 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.085622021 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066461612 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.0819373 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071487803 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066133258 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.087388008 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067004925 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085704778 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067995205 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067426304 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080614916 seconds)
  done (took 2.370165498 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090238954 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086220845 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069105148 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094014761 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068276208 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085368151 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077404572 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085071416 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069314774 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105638314 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069057884 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068089705 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095645663 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090902145 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069017444 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094344355 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077481223 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094746898 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068692543 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086053546 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088141422 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06745278 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074070459 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.087969337 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068135835 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086239827 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069451177 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090759111 seconds)
  done (took 3.124272162 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06898162 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067924621 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082703301 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064427703 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063342729 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081867785 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065245039 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06394774 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084100165 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06499839 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066328168 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084168407 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067123005 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065742908 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083756278 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066601052 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065804116 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.082325126 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064017401 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063268725 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084056214 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067124021 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065198736 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082419673 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063615516 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.083230528 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065108798 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064116689 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083662371 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065052981 seconds)
  done (took 2.987765013 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079014957 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073185905 seconds)
  done (took 1.004013151 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06589867 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081303306 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082807288 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070715137 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089394662 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068526346 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073559313 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090269515 seconds)
  done (took 1.475233203 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085577549 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079256831 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.088311537 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080198699 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.096234748 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082910447 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.155520428 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086190691 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074195049 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064413903 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.099311195 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066371232 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.09154257 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067807498 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072717631 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071666949 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063648855 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.093351481 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070228491 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064562051 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087830818 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075576491 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088172431 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062915155 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067211015 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.107997415 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096395837 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068042902 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069490149 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.092715971 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072642768 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.078291399 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067948589 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067891225 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.082784884 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076281274 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100452348 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070337031 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092368908 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069535175 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096416653 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062931368 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071102561 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.090980043 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076864042 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084820095 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069607206 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062494096 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083313634 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069707401 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062226687 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085785696 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062057783 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091268598 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071493817 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078689708 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.0845096 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068426307 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087472414 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071184513 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072327381 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086949249 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069830845 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084551761 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077814448 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070277614 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094472942 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062276897 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.07939173 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065365162 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075678781 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108555049 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072054282 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066456423 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066316493 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.084570519 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070296919 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067859798 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091458584 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072709296 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084884998 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072302404 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092065514 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068069956 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068107616 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093991541 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065338078 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.088022367 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06480113 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101629739 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066475354 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065227966 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083138767 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077924395 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089198789 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066858456 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063488552 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092043748 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062239791 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.08479558 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069330838 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066867508 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095986485 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072071801 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090995103 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07573361 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.09219662 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067552923 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068632291 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063544436 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066404796 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086043845 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07451192 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060899976 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088997693 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067960366 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085135677 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076875767 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065026017 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.086298102 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074336968 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.090396459 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065540997 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063824734 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.08808298 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066857646 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088158825 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075101963 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064867973 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.080873793 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061575647 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.088041958 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067837088 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069772385 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090715438 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069524112 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.080158421 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066094514 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089534958 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07678316 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066603373 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.086340173 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073640554 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.08578654 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066779331 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072906624 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.067893871 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064322535 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092416963 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068187385 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062123204 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089581674 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069385001 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083210453 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072228982 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070144943 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087935881 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068095069 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083112091 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075331298 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085160343 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067097519 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066817849 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083396677 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077778833 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06800093 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.081435358 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063911144 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.095430202 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065172391 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065587434 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064526951 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067385128 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.088188261 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065059848 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066118497 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.0882589 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077408047 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090578238 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067858424 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090492913 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078428883 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065252378 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068033235 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064875943 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087912831 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068783854 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092939364 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073410822 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071809363 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088561102 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063584792 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090614568 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075001405 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065779742 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.083445648 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06598353 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.08950088 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07359547 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089582094 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069332605 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064782399 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08566204 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070754668 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086970086 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068717372 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065661623 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.093671996 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064883628 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.093116598 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06909439 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095423149 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071145733 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062078864 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088997856 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065388923 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090474707 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063339722 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064465665 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084410912 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069113975 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066105214 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088670668 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061416113 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091676112 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075556114 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067033426 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08472059 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067478362 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091973122 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069147887 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070891059 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089191311 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07289206 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095930227 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06672645 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069878763 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096229754 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067082268 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.079353712 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072768598 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064270724 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.085043178 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065821196 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083329277 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070691298 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093702382 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07468449 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060141537 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087911391 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065564196 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065625817 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081662854 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071448614 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087874283 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06868226 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072764576 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086503945 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067195724 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089087371 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067789837 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067379312 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087718826 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070370009 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.08694677 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070066275 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066105051 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089873371 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06687235 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083249709 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.07031048 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066781204 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086115004 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073525761 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084186558 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068578681 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069043339 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086637923 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067789453 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066783189 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085657511 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070335083 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085943554 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068079662 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.0686752 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.081551937 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074227998 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084792831 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075323398 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066764194 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082802665 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07511856 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087905578 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072969879 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.085511335 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068904091 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.06825492 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.085092148 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070434112 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091597658 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065407513 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076725396 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094215713 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067511007 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.087990979 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06736365 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067325613 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.085574136 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068217306 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085983434 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06849531 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066144854 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.090140261 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070248607 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065890507 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067076851 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066321809 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065459598 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066475719 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060183975 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.089369231 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067464676 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.085048979 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077138066 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066792882 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086083135 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065963209 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086816625 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.0670772 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063157582 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073723868 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07434205 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.089012262 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073221879 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085707253 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068998117 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095572299 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062723928 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064934864 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083923409 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065412463 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073156076 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086892792 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075924362 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085468559 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066793689 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06345016 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086804409 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065944731 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.06111561 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.083988902 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070883415 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085087323 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066847718 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066641917 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088747623 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068169372 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095914005 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066544242 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.06787291 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.086889315 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063936495 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084394059 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067869058 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069332628 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086871712 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065514413 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063607577 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.086518134 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068627035 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.08668513 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067939215 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067659357 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09270581 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066624313 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.08778075 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07223734 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064102937 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089688409 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067175482 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.084755242 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066933388 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070318234 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089643593 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068250837 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09370245 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067353955 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067221674 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086362835 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064887244 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.08494852 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068863507 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066409243 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086225581 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069172819 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092375625 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065794268 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070255036 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085693865 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067946607 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091756407 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069034822 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070702706 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094641436 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067846981 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087134974 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076479347 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070711933 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091031364 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.0682931 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.088207508 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073248667 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065931899 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072400076 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.065844719 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.088676166 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069860018 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06461172 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08706313 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067197071 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084502201 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073789006 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067581561 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085016262 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067157585 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083203853 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06998046 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069990345 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094129162 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070007755 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088256556 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063012275 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063432105 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086967035 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065591825 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067965619 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.089186828 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072627735 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087781045 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068021032 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065711456 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095883045 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073146836 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089760452 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065504047 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069898073 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.087167465 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068970504 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087232388 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067805831 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067701491 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090434986 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069180648 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.084558471 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075467912 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069448432 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087315648 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.06792195 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.086002745 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068840272 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061919206 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.087092032 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069139832 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09043666 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070056131 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06649496 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096442719 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064759996 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.085727344 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071647705 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065901225 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.091502844 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063022669 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.087364148 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069294657 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067268886 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.081546368 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067224754 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064240925 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.089586117 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066914254 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.081450533 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078342978 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075586814 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069089768 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065319232 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087108719 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06330984 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061636317 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.086674442 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068940659 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088127354 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078394822 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065523549 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085766331 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063189009 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085726046 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071268189 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069464734 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084106894 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063089755 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065080872 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089997855 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072270148 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084960006 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068041127 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069256269 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.088854631 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065274071 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089344999 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064924614 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069854073 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099323178 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067389911 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087183402 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073908943 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09333287 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068560309 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061574499 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.086921737 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071147131 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085850744 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069411176 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066740548 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102378679 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069576661 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.085926421 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066581358 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068135182 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086454164 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075604849 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087700886 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068609943 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.089552252 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069469393 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075447947 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068080805 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07286121 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.091348209 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070075302 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085295918 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068638615 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065821305 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085428519 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069271196 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067573043 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092100084 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076024992 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086401519 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076958005 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.096537203 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069567992 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063324322 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.087401806 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067040624 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081796666 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069388002 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065347831 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.084951463 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065302674 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065087398 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.089044787 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07304077 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.086741424 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069499281 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066734616 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081603208 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069706127 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.087815142 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069303262 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064056831 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086821121 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068009416 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070458379 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091517502 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064589311 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067769962 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066885384 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066649144 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.084406995 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073795553 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084922931 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070034836 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066346396 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087071923 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068553133 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069205267 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09267815 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067799894 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089187846 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070773725 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088735769 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065233777 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063728702 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092505873 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065286448 seconds)
  done (took 46.343100664 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102943834 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083275157 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063105243 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062075303 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09541218 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063034926 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083147569 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064230738 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081937849 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067330765 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062130091 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081888512 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07251409 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098891913 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074721699 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088338951 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061820517 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083029698 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063006961 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062178145 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091602726 seconds)
  done (took 2.505840805 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077698565 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069161246 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071229266 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074244658 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066941529 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094937553 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073460688 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09128512 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076732506 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089000471 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07593294 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091411493 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066928751 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.08860671 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067692336 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091769523 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076555357 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088621843 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070877497 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093974063 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071018027 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094528533 seconds)
  done (took 2.659252505 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069402294 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06635107 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087555455 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062592445 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065864458 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081100968 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071454449 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064078829 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.075973961 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.063798765 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.086850547 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06599358 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067572442 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.081847955 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067020256 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062982156 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.129789035 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.090462584 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066076861 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066285461 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060909992 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066602549 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.084603792 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06286619 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064813881 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.090932483 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.06695084 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.083796403 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067200591 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065247579 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.086094038 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064850654 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.0670504 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.086827128 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064989088 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064853182 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086630447 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065985205 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080790643 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065595422 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066691852 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.081747586 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066883948 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066631555 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.086097893 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064178571 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.088249442 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067232303 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06215251 seconds)
  done (took 4.490687124 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.083117574 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.130677346 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067559032 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090247198 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.102421152 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072550449 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.091543215 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110348682 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06535217 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064408186 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.105407656 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.103931999 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067010905 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.092018703 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070905212 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084603146 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069302361 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064589042 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.091639244 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065631761 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.090935007 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071888295 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100578393 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078653241 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068719661 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085498907 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067064458 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.07076669 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.100655931 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.090070165 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071621884 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091733583 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082192452 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.091516938 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066729448 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.087819639 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083218431 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.086322836 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069164629 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.083049205 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.070220477 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070097609 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.093990864 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102474835 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067692899 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.090322591 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067405704 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064084315 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.100915845 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067843263 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.094612252 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079413282 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068744747 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.087483603 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072299346 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101256504 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066812169 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.083399312 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071112078 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098440813 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065030863 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069247584 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.101230499 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087355436 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.0744359 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.10137813 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071658984 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090278397 seconds)
  done (took 6.660074301 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079482078 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092385189 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083090985 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103292834 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072068791 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071090758 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093793296 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074498741 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093002462 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07909693 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093354982 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114026103 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069432028 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.0958611 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074885092 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093521765 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07401153 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093127995 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073781577 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09342445 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072782534 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.102077794 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092014097 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082610625 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096920428 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066595362 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095487266 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073327258 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102494506 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.092340152 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082620854 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.093444405 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074359527 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101408137 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079343243 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.094657351 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065082439 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09360403 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072477075 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072065849 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066849051 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104636016 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.092311489 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069385225 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093273164 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073467836 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.101581631 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080116525 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096564884 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097999125 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074324845 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102260313 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07212833 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09411153 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101118163 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.107294359 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102675584 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10081075 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07400491 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101623622 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101676013 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088119528 seconds)
  done (took 6.326951829 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086937662 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09558232 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076895625 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.083392084 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064392936 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069502395 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063225133 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063512438 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098917455 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074116987 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099286385 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089497695 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075002287 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09774017 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071341679 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093935114 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07061164 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090608856 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075270363 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09225342 seconds)
  done (took 2.543537532 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07810406 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082809158 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089549986 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07240587 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090545504 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073014464 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089940891 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070382455 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086398733 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071865386 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076553434 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098129886 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067584069 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09348666 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.095866833 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074197586 seconds)
  done (took 2.224995514 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.078720557 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.093404951 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081344529 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086714636 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06589273 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062515087 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.08813202 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062487407 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062786402 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.099586563 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066503726 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.090694344 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066976317 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085455238 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065188374 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068711988 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.08473484 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064258031 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.085155305 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.080836136 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.097437823 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066930447 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067118544 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087649112 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065946785 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.092426434 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066457634 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.084339544 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065379667 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066434194 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089092899 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070395739 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083786588 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064652131 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064410048 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.086091124 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066081479 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086671898 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06950709 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.085930949 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065235471 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066099242 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086995821 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067601146 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061898948 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065804606 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061751254 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091161486 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064902293 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087376997 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067214674 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068709528 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.088571495 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073804612 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090397807 seconds)
  done (took 5.090725941 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081319988 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068829242 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083333888 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065577983 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068612963 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.090538495 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069827772 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089254883 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068986682 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083834325 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070406383 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068424868 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08921948 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070215447 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067611032 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068365412 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061120172 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.090794918 seconds)
  done (took 2.271792754 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074896461 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065764681 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094063961 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066502219 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06502925 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.090999221 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062385844 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086382949 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066380694 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066023341 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087360777 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068717683 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084598713 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06964566 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066279625 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086508701 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069270641 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064185363 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.088086118 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062733789 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088228167 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065664279 seconds)
  done (took 2.557025182 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.075782827 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092397359 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.160321369 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.105799055 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082286978 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.078780261 seconds)
  done (took 1.516656637 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094190609 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100209285 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067221287 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087202557 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096790615 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067437781 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090145061 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067430056 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097998243 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097953409 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069152527 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098357958 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076738661 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097994139 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09423353 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075974452 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088065199 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069736603 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066538678 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083388817 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090707939 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078208649 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089923239 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068932969 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089174221 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076706655 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098377044 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097051589 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069522477 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098023179 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074650585 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088809175 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077613411 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098205949 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070148127 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09786614 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068177643 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106395591 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093418391 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078346089 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089519018 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074990799 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098322685 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073189604 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098284216 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068587387 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095209891 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067597996 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09012799 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108138409 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073569069 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097357828 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074066147 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098599452 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097264642 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087554484 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098449144 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096828057 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075163192 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098026302 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076786733 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095278029 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095903172 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077874833 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095096044 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079934302 seconds)
  done (took 6.605462488 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085321717 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106898144 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069141926 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098681237 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075909704 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090094025 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068705247 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08996522 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068284225 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089194494 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129784282 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069802643 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097291688 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076978151 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090513264 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068364696 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089297759 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07561377 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089686784 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108098317 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069308582 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096676578 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07657772 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098293364 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097651208 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075701816 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089194837 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068965821 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089384019 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06946798 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094052353 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069277645 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097483569 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067950699 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097270151 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068355664 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088897055 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071972998 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090451814 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073791781 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098743566 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106658797 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06822942 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08977391 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077385032 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09000511 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068037778 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089236636 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068801157 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089447964 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077761338 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075998491 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075154295 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074018118 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092885804 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069233 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089716205 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069690395 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088922537 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07561722 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097742619 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06834741 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109252028 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067665489 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090656074 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096986754 seconds)
  done (took 6.484416161 seconds)
done (took 129.390361805 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.206247475 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.187349928 seconds)
  done (took 1.312691098 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071502553 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096106269 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09971181 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128068522 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088678 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100648776 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.09841166 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.1010798 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067145391 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.088063165 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067919592 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.06750761 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.153187901 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068094052 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066993311 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.090052378 seconds)
  done (took 2.380286898 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103474353 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.196644259 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110145884 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066058722 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100025157 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078613344 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065367331 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.097819015 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071238835 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.087048754 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079011807 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096288035 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066651868 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074731725 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070236951 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.098803726 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067218288 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077152769 seconds)
  done (took 2.537331466 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102728398 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.143574565 seconds)
  done (took 1.179313432 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.184284251 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.138506104 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.190557414 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.401172937 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.207403188 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.265018628 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.178851495 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.176127097 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.157781469 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.174310876 seconds)
  done (took 2.999235093 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101046694 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172603644 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.304429178 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116702181 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.095877413 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.115185754 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.120334637 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.099937259 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078500375 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.10119424 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.100213977 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078488963 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.118998894 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074930397 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.095711073 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078288655 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.123194138 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073906584 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097365495 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076212619 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.119288107 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067176501 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.095561698 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075181423 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076277898 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098166813 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066913671 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087505244 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075981839 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095769176 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079005458 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114106964 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075570438 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.130699237 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.09290207 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.131333926 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076912154 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.093898466 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074625877 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.09370265 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077147123 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.098838495 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073259294 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098225015 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067179159 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07670504 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.087992674 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066507681 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.100669361 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068240197 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.100180365 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078955695 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.130707105 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.088309244 seconds)
  done (took 6.18494494 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.715451793 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.130026649 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072183637 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.134067855 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118017215 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076636707 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.765960361 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114418157 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.200227072 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.093539427 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.108926703 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072317632 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.10213122 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.086499698 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.130476034 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.10194631 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116178086 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071559592 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.123468758 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.122068906 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068810267 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11465672 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091353104 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.399598402 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068329127 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092480324 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069222086 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070148304 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.134939951 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100518752 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070074863 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.166169627 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08743899 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.145487504 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.089698787 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068464049 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068214596 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078704801 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.206081824 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.181698656 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.154043496 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068926882 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068496359 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.091587015 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090893539 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088633977 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.13500688 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080833424 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.142805182 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092136103 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070363655 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088388517 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071191816 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.099885048 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079094449 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.10140235 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.257763234 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.08909515 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070466178 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071774997 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.22576353 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080393138 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101744108 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092196414 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.17826388 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069627865 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.740036977 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087026711 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068484947 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.092939208 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068262439 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091426236 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06987493 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.141085424 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.364274057 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071312931 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069609518 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090312523 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.188305889 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078404412 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091059628 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.135133286 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067394809 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090235872 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071597163 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068947506 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.140236342 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079292057 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069171641 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092680639 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070432486 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.089523894 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06818981 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.186725832 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.101295943 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080430821 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.156046944 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092416363 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.136038705 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.0811527 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.090861138 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080509868 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.089028446 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071645187 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069411731 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.101360514 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.118771982 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080798681 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091382496 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069550492 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.120621116 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080417534 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.089699048 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080087825 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.422176564 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.103056001 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068060242 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.1031725 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068711857 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.13614793 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092132395 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.20313512 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068545685 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10123548 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068882226 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089881934 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068383999 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.134958509 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.091152116 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070007252 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068915543 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069383152 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079130376 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.182788234 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071121106 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.184284721 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.158138377 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.090692753 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.144057873 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069298444 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.140361003 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069819227 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092145586 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070312098 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.760213732 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070279451 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068478177 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092343236 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160721383 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070806088 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079653233 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100739245 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06706856 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.7406319 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08042148 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099850176 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079794083 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091904377 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069629031 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.088903545 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072143364 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.133890326 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.167441397 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071909375 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.0690152 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.10072005 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.135171744 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067324907 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100398499 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077925952 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.10049408 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069180526 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.091375862 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082032144 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.140908806 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.100042961 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.159049038 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.558106609 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069401166 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.098631978 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.170600848 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068472238 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107069859 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068338643 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.104176246 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.137000494 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097639663 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.255470134 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.138502803 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.161790846 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080542514 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105307127 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067994107 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.08988718 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080986653 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090677556 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070654792 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.100676315 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071119404 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069570746 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.106675467 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069179652 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.197174276 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.089631482 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080087884 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.089737662 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070698201 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10539794 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070014352 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069487016 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07829062 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06896817 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101982294 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.660577777 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.100447734 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069777774 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069442586 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.184060674 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.137173866 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067986227 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090144659 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070655639 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.132977575 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.156096591 seconds)
  done (took 30.594686405 seconds)
done (took 48.114822724 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.23357155 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.175699479 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.250907898 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118524609 seconds)
  done (took 1.808367874 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.15097209 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103978363 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.118874576 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064729832 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.125975206 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086538974 seconds)
  done (took 1.609448978 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.415324028 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.238261413 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.230747687 seconds)
  done (took 1.833386182 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.220339483 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.235510771 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.415579509 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.300573476 seconds)
  done (took 2.237188294 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.167888628 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.113403562 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067551391 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.106566903 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.161628718 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.210459974 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.12473053 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.174333474 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07858991 seconds)
  done (took 2.211103652 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.192111275 seconds)
done (took 10.850975461 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.240432677 seconds)
    (2/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.123067828 seconds)
    (3/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077119655 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.124440998 seconds)
    (5/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.198557042 seconds)
    (6/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.140817023 seconds)
    (7/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.211719245 seconds)
    (8/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.231818497 seconds)
    (9/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.089038135 seconds)
    (10/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.164983707 seconds)
    (11/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.076713966 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.103822038 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.105480904 seconds)
    (14/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.213597684 seconds)
    (15/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.241261949 seconds)
    (16/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.193765664 seconds)
    (17/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.221165116 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077675913 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.096640193 seconds)
    (20/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.101047153 seconds)
    (21/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.244184753 seconds)
    (22/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.101634788 seconds)
    (23/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071953512 seconds)
    (24/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.077454175 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.117514562 seconds)
    (26/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.182079899 seconds)
    (27/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.053034075 seconds)
    (28/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.172795741 seconds)
    (29/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.146674562 seconds)
    (30/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.099413861 seconds)
    (31/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.135881823 seconds)
    (32/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079213096 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.142240376 seconds)
    (34/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.097793821 seconds)
    (35/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.133727469 seconds)
    (36/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.231806474 seconds)
    (37/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067731811 seconds)
    (38/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.139947357 seconds)
    (39/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.06049258 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089533109 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.099569352 seconds)
    (42/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079449009 seconds)
    (43/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.099522535 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090922634 seconds)
    (45/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.132608888 seconds)
    (46/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.155397635 seconds)
    (47/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.097333221 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093322233 seconds)
    (49/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.096878286 seconds)
    (50/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.112434656 seconds)
    (51/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073111934 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.112463378 seconds)
    (53/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054341997 seconds)
    (54/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.09476483 seconds)
    (55/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073920626 seconds)
    (56/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.144233486 seconds)
    (57/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072476697 seconds)
    (58/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.069730287 seconds)
    (59/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.097984915 seconds)
    (60/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.224601907 seconds)
    (61/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.07894301 seconds)
    (62/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.096630279 seconds)
    (63/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074266027 seconds)
    (64/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067736273 seconds)
    (65/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.082705864 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075317447 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.156829982 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.121527087 seconds)
    (69/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073831479 seconds)
    (70/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079285133 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.105971305 seconds)
    (72/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066702266 seconds)
    (73/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.098594166 seconds)
    (74/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.068382737 seconds)
    (75/309) benchmarking ("sort", Float32, false)...
    done (took 0.152482324 seconds)
    (76/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.05215696 seconds)
    (77/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.195867398 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.11448246 seconds)
    (79/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.061835626 seconds)
    (80/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.085399902 seconds)
    (81/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.112267262 seconds)
    (82/309) benchmarking ("sort", BigInt, false)...
    done (took 0.1823152 seconds)
    (83/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.190189561 seconds)
    (84/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074908005 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.091745956 seconds)
    (86/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.184287299 seconds)
    (87/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.066117031 seconds)
    (88/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072336867 seconds)
    (89/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.09358827 seconds)
    (90/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054855058 seconds)
    (91/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070866413 seconds)
    (92/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.092321449 seconds)
    (93/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.135869415 seconds)
    (94/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.074870024 seconds)
    (95/309) benchmarking ("sort", Int64, false)...
    done (took 0.067866591 seconds)
    (96/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076883776 seconds)
    (97/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.139792912 seconds)
    (98/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072816913 seconds)
    (99/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.096887874 seconds)
    (100/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.153789048 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.1484944 seconds)
    (102/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051777785 seconds)
    (103/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.09739856 seconds)
    (104/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066026866 seconds)
    (105/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077509689 seconds)
    (106/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064982884 seconds)
    (107/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068602979 seconds)
    (108/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.123157366 seconds)
    (109/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.176950682 seconds)
    (110/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.077919576 seconds)
    (111/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.162533591 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.0687024 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.094987431 seconds)
    (114/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.096670701 seconds)
    (115/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067734476 seconds)
    (116/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.107698926 seconds)
    (117/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.090860848 seconds)
    (118/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.203330366 seconds)
    (119/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.138483899 seconds)
    (120/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.075229862 seconds)
    (121/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079254424 seconds)
    (122/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.25422799 seconds)
    (123/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069567626 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.116772054 seconds)
    (125/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.10464909 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.146095025 seconds)
    (127/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.139653612 seconds)
    (128/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074573605 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.077232702 seconds)
    (130/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.112803551 seconds)
    (131/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.068641361 seconds)
    (132/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.268253567 seconds)
    (133/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.076277431 seconds)
    (134/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071725004 seconds)
    (135/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066952589 seconds)
    (136/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.077088182 seconds)
    (137/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.137486277 seconds)
    (138/309) benchmarking ("sort", Bool, false)...
    done (took 0.158575676 seconds)
    (139/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.097540383 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.092156533 seconds)
    (141/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077100884 seconds)
    (142/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.177085839 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.098352243 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093121576 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.115718176 seconds)
    (146/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066801825 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.101399 seconds)
    (148/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051960138 seconds)
    (149/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.192386574 seconds)
    (150/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.052113378 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065930799 seconds)
    (152/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.087799391 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.101729699 seconds)
    (154/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.095592056 seconds)
    (155/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052500702 seconds)
    (156/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051270125 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064623663 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07114904 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065894934 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.114773662 seconds)
    (161/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.200425001 seconds)
    (162/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.14739758 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.1002519 seconds)
    (164/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.052892064 seconds)
    (165/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.095932091 seconds)
    (166/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.076955214 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.112640374 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.113951422 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074601499 seconds)
    (170/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053013989 seconds)
    (171/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.09549962 seconds)
    (172/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068813156 seconds)
    (173/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.173846029 seconds)
    (174/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088110997 seconds)
    (175/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.089993748 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.142912704 seconds)
    (177/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.075841283 seconds)
    (178/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.109997323 seconds)
    (179/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050805126 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.173411888 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.122443422 seconds)
    (182/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.053740459 seconds)
    (183/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065025426 seconds)
    (184/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.080370612 seconds)
    (185/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.083963078 seconds)
    (186/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075624314 seconds)
    (187/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.105828226 seconds)
    (188/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.053069333 seconds)
    (189/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.113210701 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.078412435 seconds)
    (191/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.098449256 seconds)
    (192/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075200138 seconds)
    (193/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075623442 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.119197789 seconds)
    (195/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.052214489 seconds)
    (196/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061971669 seconds)
    (197/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.170361735 seconds)
    (198/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.108452222 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128351974 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.119392553 seconds)
    (201/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07281952 seconds)
    (202/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052371805 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.11294127 seconds)
    (204/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074484431 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.08959231 seconds)
    (206/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.069121609 seconds)
    (207/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066186811 seconds)
    (208/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.141760602 seconds)
    (209/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.107470747 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.13010226 seconds)
    (211/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054002222 seconds)
    (212/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.09080723 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065615278 seconds)
    (214/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065671385 seconds)
    (215/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.075862173 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066734102 seconds)
    (217/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051133988 seconds)
    (218/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112874418 seconds)
    (219/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.053168191 seconds)
    (220/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052342274 seconds)
    (221/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.103484935 seconds)
    (222/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.137629506 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.089341052 seconds)
    (224/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.052151421 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073757036 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.096157258 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.126189711 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.110558011 seconds)
    (229/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.053875687 seconds)
    (230/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069846701 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.090353666 seconds)
    (232/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.066430379 seconds)
    (233/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.162603429 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092355146 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.146724439 seconds)
    (236/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.10315295 seconds)
    (237/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.095032848 seconds)
    (238/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053365058 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065832488 seconds)
    (240/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.074608794 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.06742308 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064189651 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.193192674 seconds)
    (244/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07321805 seconds)
    (245/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.097623285 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137123647 seconds)
    (247/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.095561254 seconds)
    (248/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.05342995 seconds)
    (249/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060245574 seconds)
    (250/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.19158656 seconds)
    (251/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052471991 seconds)
    (252/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.085900552 seconds)
    (253/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067170074 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.088973305 seconds)
    (255/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.1619343 seconds)
    (256/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051902196 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.112107352 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065531003 seconds)
    (259/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.092165042 seconds)
    (260/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.052104167 seconds)
    (261/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.11923445 seconds)
    (262/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.193914908 seconds)
    (263/309) benchmarking ("sort", Float64, false)...
    done (took 0.148354545 seconds)
    (264/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.052473854 seconds)
    (265/309) benchmarking ("sort", Int8, false)...
    done (took 0.164557218 seconds)
    (266/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065936002 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.133393032 seconds)
    (268/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064459013 seconds)
    (269/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.095844618 seconds)
    (270/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053768534 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.110411569 seconds)
    (272/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.097273916 seconds)
    (273/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.052151063 seconds)
    (274/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072431608 seconds)
    (275/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.077528944 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08985518 seconds)
    (277/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.123400152 seconds)
    (278/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076015815 seconds)
    (279/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052428416 seconds)
    (280/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051681394 seconds)
    (281/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.091294475 seconds)
    (282/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.077936611 seconds)
    (283/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051225854 seconds)
    (284/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065258221 seconds)
    (285/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064396042 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.09889213 seconds)
    (287/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.141904422 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.163095369 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065296866 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063831442 seconds)
    (291/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.076083615 seconds)
    (292/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.052263837 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073047261 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.09057211 seconds)
    (295/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.170567997 seconds)
    (296/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.077136962 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07197703 seconds)
    (298/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066711883 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.091869076 seconds)
    (300/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134284859 seconds)
    (301/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.075506229 seconds)
    (302/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.052656199 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.11771482 seconds)
    (304/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.075914885 seconds)
    (305/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.052683648 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070913529 seconds)
    (307/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.090682611 seconds)
    (308/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079709793 seconds)
    (309/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062271271 seconds)
  done (took 32.854923536 seconds)
done (took 33.815850653 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084303738 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114938623 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075833672 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091874722 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.105009754 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075857565 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.096675864 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078571538 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078167307 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.079826098 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.104453552 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055502946 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073155695 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.0990146 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074919915 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115422891 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078063059 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.0958733 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074474932 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065180362 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.097102386 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066500226 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067146838 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.078837964 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079138376 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070774111 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.096995174 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074050474 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.089270239 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066928794 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069403471 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.096639794 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066488752 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077636012 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096326513 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073187089 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.098207114 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077368443 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06730166 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.090229487 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075519787 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065399399 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096857804 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073553147 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071342058 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.095248402 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073129897 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.102126578 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091505067 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09164782 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075340621 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076195537 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.101376802 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072699387 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093259792 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074943972 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070850362 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116264283 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073330192 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06758455 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072941399 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073025287 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070416497 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071842752 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07196978 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.104981277 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07499928 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.09551767 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076455737 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071800103 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.090521302 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074082717 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068954457 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064899527 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074631964 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07573848 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064175508 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070163973 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.101377819 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072172139 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06554213 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093385392 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068714588 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07199954 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093009361 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055728429 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068852007 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.096285297 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065684115 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.09645093 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073646358 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.0729853 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.090451625 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07728771 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06562041 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095689474 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066758259 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065979513 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.091898552 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070111368 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06511449 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091960251 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074800297 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06709816 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.096405095 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079825001 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089829719 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073203987 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064810365 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064311421 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078121164 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100177527 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067576295 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06856888 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.089447362 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074030645 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065031998 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.090050849 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066626508 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065327529 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.096179299 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066859957 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067386344 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.097286141 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078729869 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088663978 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07075799 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068469228 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.089096484 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072674525 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066412395 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.08999046 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06909605 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061819694 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091974752 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066767758 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072494688 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092863973 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073591123 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067104015 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.098285806 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070909426 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.094077099 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072615008 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06478003 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.081635921 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070289722 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068290959 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.090539672 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067322205 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067470983 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.08919404 seconds)
done (took 13.100951679 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069682111 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.169808497 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.122614146 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096927624 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.110100867 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067531879 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076930041 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.128513448 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.09149378 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.104723036 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111687362 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085078041 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.138547405 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064788549 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.090435409 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070953736 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067180213 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.112931361 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.124161733 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088184996 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.134849443 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064964992 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093279103 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088394847 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.115556869 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.12593422 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067919975 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070295007 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.093380765 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.092911142 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110906678 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069890995 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065680371 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123668189 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.117370907 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08534246 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088945049 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084660949 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065822243 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.091073603 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.088312841 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.122805422 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.10435986 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082351591 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.07187804 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.093695016 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068047074 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.10901985 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089494975 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.105014456 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109745957 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.106495615 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.093587383 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.081172286 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.088930608 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.087847511 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.105776883 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069705411 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066405923 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.093081201 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066404046 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069640702 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112452167 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.113912851 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071340441 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079459425 seconds)
  done (took 7.203914467 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087398689 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.08960558 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.108577431 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083076097 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065111393 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065619094 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065986321 seconds)
  done (took 1.591399104 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071662679 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090519932 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11414264 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089308437 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.109060893 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087891426 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.10081532 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068470167 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.082319382 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.093267715 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088620876 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126688128 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068967848 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.097876208 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092762228 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066940321 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115750516 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067299749 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094180586 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.092152233 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092928816 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.088519477 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068692848 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.092633069 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081987698 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.090091135 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114483095 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094756065 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069736371 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070699304 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088863209 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106136031 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105918119 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075467945 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066139778 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.107370674 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081602862 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089330512 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084058839 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071271311 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.106566211 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067468686 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092258949 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066898467 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07163219 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.10217279 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069385498 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067437574 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.094806856 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087156493 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.091758937 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081403914 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067094702 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.095688352 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069011791 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095862064 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078338758 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067998828 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.110977987 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069017437 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.107241694 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084824124 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08094757 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.108872351 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069357562 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.105234769 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082102493 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069877245 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094496649 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071696866 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.108197371 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066701625 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068304399 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.102857036 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070046117 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.115021855 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090929348 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06786084 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.102277634 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067942152 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.091351995 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068885191 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089280888 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095669847 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067977337 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.095522426 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072048883 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065319636 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.090498171 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072479759 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064940243 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.093305635 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071423217 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067844994 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094390188 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083978742 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.092519815 seconds)
  done (took 9.355739848 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072591247 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069813241 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09361735 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069142811 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068096658 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093086041 seconds)
  done (took 1.498184474 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.099302794 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.093311997 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082512284 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071948114 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.130352016 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.081022869 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.108290689 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.102623224 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086441274 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.07877515 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.107927037 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.081806164 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.113047111 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072692239 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.106227576 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073222722 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.106131973 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077446358 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.103283695 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07515185 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.112033165 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074693734 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073335619 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.108398421 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071261213 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097946956 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077234636 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103549958 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079853456 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.104000545 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074474983 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.069720911 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096182854 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079339983 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.107205025 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071104852 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07168204 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.070129845 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102373177 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072204333 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.081813266 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099872132 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074542313 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.097525866 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079818889 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.096030046 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072911935 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100726255 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082612353 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094900469 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.0730889 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072835929 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.095347997 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.072262556 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.095175162 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080763064 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095270991 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.084014965 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072814632 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.095970076 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070041429 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.09610377 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079714008 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.09611463 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.080740767 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.095733658 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072137383 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073581321 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099051036 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072768863 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.096728884 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070451887 seconds)
  done (took 7.324881286 seconds)
done (took 27.990562886 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.673682124 seconds)
  done (took 1.704303029 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.74844057 seconds)
  done (took 1.781442266 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.477645371 seconds)
  done (took 16.51606164 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.603111189 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.773061208 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.845516773 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.155768833 seconds)
  done (took 3.408481028 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.908469305 seconds)
  done (took 1.96223778 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.242529921 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224154417 seconds)
  done (took 1.503190523 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.7603944 seconds)
  done (took 1.805205846 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.28604437 seconds)
  done (took 2.322506379 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.327905489 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180519208 seconds)
  done (took 1.55736889 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.500029359 seconds)
  done (took 1.544978015 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.765788568 seconds)
  done (took 7.817384995 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.209151774 seconds)
  done (took 1.270977462 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.268309734 seconds)
  done (took 1.321633128 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.200657344 seconds)
  done (took 4.249499927 seconds)
done (took 49.810180216 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082450963 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08153965 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106620608 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079366344 seconds)
  done (took 1.392816798 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.08211555 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.0734598 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102122474 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07349828 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.101727366 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073578308 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073617446 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.102895069 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073301979 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.098082642 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073652698 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072281976 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.101806319 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074330365 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.095950976 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076938832 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099563138 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074082101 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075948318 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097684102 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072528856 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074756633 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.101243429 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072252054 seconds)
  done (took 3.072577083 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081741004 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074948427 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100628065 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073383854 seconds)
  done (took 1.389315072 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082622079 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.093610741 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.115874847 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077176646 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.090695218 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.114693618 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070044909 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06844934 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097546555 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07781457 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067424687 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.122834331 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.113501329 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077499263 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.10264759 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067886218 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068591567 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.113319976 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077665484 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102113434 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.074082334 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077136583 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.093915838 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.09018212 seconds)
  done (took 3.197646018 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.082535762 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104921257 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.108249693 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088254515 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.116697357 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065951859 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.101105617 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090125717 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.149740751 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065501782 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.09502954 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068015115 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072579487 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.090758026 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077474105 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.13046356 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110468471 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068600226 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.122207555 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065360638 seconds)
  done (took 2.936849175 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077069957 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071889656 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092984425 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.072234703 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079529641 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.100539291 seconds)
  done (took 1.558818519 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072620742 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069459499 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.094639489 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.070611512 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074348622 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.094896851 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069759949 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069051023 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.096019073 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070637392 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06768854 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.093216692 seconds)
  done (took 2.00188474 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.411394442 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.095295713 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070183992 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091607794 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071942956 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066675109 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.10632251 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068254805 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.116503756 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067608984 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066876671 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.095560687 seconds)
  done (took 2.386757034 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238023061 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078770039 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.293481092 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164008877 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139319405 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142556564 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103709285 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141191735 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143502739 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131356791 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223983806 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197685942 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134345835 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166525711 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115133017 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.099069439 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183160532 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191708718 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132519571 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22001012 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174160025 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153077108 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177331785 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129320633 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13363569 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151926045 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071505783 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106191323 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20005479 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161852708 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176538283 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138338053 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121276762 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232357422 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227297191 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171845571 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162250543 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084594855 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.155686787 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.162528509 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256493618 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115635528 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19494591 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135823169 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105259379 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16965588 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146655454 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.146758614 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.133578801 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089979234 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20107034 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21186453 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192594626 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087088099 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138400781 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142168181 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.14244223 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129416501 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238538683 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18968711 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154658264 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.096432117 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100260095 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206855235 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158927714 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.136165172 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.154765221 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119763425 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163720438 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183711641 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147050906 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171295959 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.185311678 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088480201 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145190358 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19388397 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156625028 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167461443 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153093498 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.09937435 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152752347 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103593432 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079789541 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168727648 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075074517 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229867495 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123709044 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.107388768 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140379463 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136008235 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135323704 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192206998 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200579474 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128019376 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066277619 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129862521 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.145835279 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146466959 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114477888 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108420137 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114477635 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.106982413 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137245308 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.102884694 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150223712 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076227502 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151836613 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156784305 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.102394581 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152039842 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100980637 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.127225306 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130521529 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218188402 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08887879 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109999397 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19539152 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149301258 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102933167 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20011035 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18651762 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.097868322 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101773592 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209376738 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237941344 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089823253 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219068798 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135328174 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084859832 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.113920046 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152489379 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140363978 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.149972236 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084042785 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.148167688 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224518505 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075288758 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123003209 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161856589 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105724333 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081923153 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132045109 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128645585 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095616473 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.128202337 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.132514713 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168421357 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152631773 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132219736 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154578441 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126200275 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228365002 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115350983 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10145204 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130079303 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069600632 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.192299702 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188749492 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104620117 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19587179 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.150339681 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132851347 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116172306 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081200649 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196211301 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080147008 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069905187 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201940136 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137055931 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110721629 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.179215254 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130341035 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.15682695 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.147100162 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164489521 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160926144 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.156954617 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133724744 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087978806 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140629988 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180993259 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074378984 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.119114207 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081397098 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130970796 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124047474 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083555947 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19680542 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155036655 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100852253 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139307614 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124436654 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175069671 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.104068154 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157108316 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.146556952 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121118169 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.182852349 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181728537 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184864843 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102415647 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202901688 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071625678 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073518713 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.117487636 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150721929 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110175351 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084653645 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145677115 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202170258 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158170642 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167535368 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139390737 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150411139 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183894034 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.06947924 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.143516515 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176087428 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174100167 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.128324957 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117242029 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100888894 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171066761 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1368568 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239462866 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142560197 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151206347 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210943437 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099552285 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110481287 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131024489 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16590957 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13322406 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173538762 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126412111 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114841875 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137760031 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076304805 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128958202 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15643429 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149175323 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164318334 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.142303426 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159786755 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07647096 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147339959 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151235058 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156397976 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063844081 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146913716 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219151181 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122259315 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146632689 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183092938 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107758197 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.151851139 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234661869 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176720104 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084379587 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107875307 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147905741 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155192945 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147163135 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196296806 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139217454 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164533011 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110160099 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.112819937 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113841946 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099574018 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132715283 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.121696899 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.137367499 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.142853095 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095633045 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159894181 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131051313 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13764164 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147556656 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.123732901 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092216865 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12476075 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20385674 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14726812 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229266356 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.127035081 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.17545964 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194090818 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075727966 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108553976 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078414451 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167097964 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111544088 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160046153 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.125891179 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131667709 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153609442 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173434127 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12192675 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071151526 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135864723 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164365841 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139194437 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124143869 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10798325 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221071423 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.126853088 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08191223 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142103802 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104642761 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130951209 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231566661 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061208225 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12676222 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075257521 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109508001 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156191315 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209066449 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084744376 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.151218087 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147881059 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139425293 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157791594 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102260468 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12678554 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142399142 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181336044 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184683816 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091469937 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140628072 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158286685 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214075777 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133170847 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096236785 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230346784 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180213653 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.218153545 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.115985179 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142384162 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115345122 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135763733 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197993753 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083128582 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222421992 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081228455 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194854465 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132431664 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090774871 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186820504 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.099782523 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134011778 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176837257 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145445866 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110872696 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078656587 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146803678 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149175415 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134877084 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.102984391 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169879379 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072083912 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189314908 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199262347 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109167339 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132215684 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098661861 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108488536 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137945824 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130216809 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089002814 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.146663277 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205993019 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087234456 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210334875 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172220688 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14298493 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166252963 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128431249 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664097081 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.104607211 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187573121 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145197416 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233201937 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12428242 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119732755 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13755763 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152396638 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174589231 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135327851 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177297095 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18957721 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.146077618 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08121068 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130398652 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130617552 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090508489 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133456769 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14187051 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145504748 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.121639316 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.145281006 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154449759 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081688112 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124419501 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185544617 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1450069 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203373579 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170499009 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085351015 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146718639 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196961724 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079601331 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.178924341 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184955097 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136820365 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126521251 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081646274 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.131671896 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228341809 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074034844 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222277032 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149785658 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137937033 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114462755 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.171320204 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162031653 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13699897 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150748954 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093984673 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.137292707 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115465542 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112974039 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076815143 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133301661 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141960287 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.126476397 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127746966 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.122727366 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181809891 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.099994929 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124027733 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105726413 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204179491 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208512344 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.116266409 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081995753 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149559647 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142300522 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.143584335 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149912933 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.10871907 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10869245 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084846105 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.103901152 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.136039473 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141187329 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13297422 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140075026 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194859311 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.110764637 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.221057495 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093866734 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136050542 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070062622 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.107189761 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095984104 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126982703 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136871452 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128618811 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205320984 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.12783496 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.122327152 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097396506 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.105135477 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08666829 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162016929 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142717559 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151333305 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131851112 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064441473 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142762125 seconds)
  done (took 69.57792564 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.13822745 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.107794864 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.123144784 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.175337529 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.150066204 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.239725898 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.183094367 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.227745676 seconds)
  done (took 2.477141555 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073203258 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.120577253 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10073292 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.109056567 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068460003 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.095493786 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.279224502 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082122858 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.093732481 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089433485 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.107181605 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094676259 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.461943743 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066829877 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.093083783 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065105669 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.094108141 seconds)
  done (took 3.224443177 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.435724234 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.6450585 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.426459987 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.101385439 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.892456234 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089970913 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.460209742 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.166825063 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072700009 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.441678736 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.755274524 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.133137236 seconds)
  done (took 17.752803279 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079442981 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071513267 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.1135426 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085936313 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073214206 seconds)
  done (took 1.569376277 seconds)
done (took 113.583374538 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083773945 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.363603731 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053879351 seconds)
  done (took 1.59286792 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087258668 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086684765 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.1151595 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082165704 seconds)
  done (took 1.519756945 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.078556752 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078502757 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.113643066 seconds)
  done (took 1.416596313 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.285785217 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.13944407 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.116074432 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08604258 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079686202 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10690786 seconds)
  done (took 1.418516711 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076108532 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076285673 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.1040539 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07812017 seconds)
  done (took 1.476122154 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080124842 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054648456 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056249797 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.086701451 seconds)
  done (took 1.425441119 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090027578 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079241038 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105715126 seconds)
  done (took 1.417192081 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110991309 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.112401795 seconds)
  done (took 1.36940228 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08570607 seconds)
  done (took 1.231083263 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.104130257 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.14365112 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.157076588 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.137934122 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.16610208 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.138303085 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.113131794 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089615762 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.105089646 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087972964 seconds)
  done (took 2.39354841 seconds)
done (took 17.030389975 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082222208 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.392012083 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361766608 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090169989 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.69750987 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356026657 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.044498708 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09166975 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.149321642 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094543366 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084360647 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647228008 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.998182923 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.318126076 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.984997647 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319514897 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676106472 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069894433 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067561246 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094163961 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.000552882 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067907243 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09526215 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06876296 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.676554718 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371881246 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067544318 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.351411479 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067795139 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094934829 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356858704 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068718412 seconds)
  done (took 16.046695732 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075001056 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.148148124 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074792203 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082846172 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.097962923 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07007977 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.097456719 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070428172 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152567642 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068359384 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110548536 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069726795 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072365951 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067494344 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085945132 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066795221 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067802925 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067008996 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.099713794 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070036801 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086421108 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096041407 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068056606 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095544408 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069859415 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079221351 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095661631 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068283142 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067851874 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098183975 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071092214 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094563604 seconds)
  done (took 3.860305611 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118768355 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.155735004 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075191217 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129049112 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113972893 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.099229314 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142439634 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121293135 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155326029 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068561986 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111308707 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06911247 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100264895 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067531335 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085866004 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.098745034 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.0698058 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095280672 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069640345 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068587469 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114560012 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068297356 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067696513 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067184117 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067385599 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109879137 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069029138 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067988935 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097299236 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070080548 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098033687 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06985998 seconds)
  done (took 4.133366249 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076293045 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076573598 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.11099044 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083886883 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068359486 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.099821161 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072089094 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.095381964 seconds)
  done (took 1.842401512 seconds)
done (took 27.035621503 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082609001 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069485794 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.098657732 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080874733 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072160185 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.105448209 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067071741 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.101029441 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073325717 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072893318 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.102664809 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06768829 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.06984148 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09543652 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073928661 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06708092 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.107941655 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071881944 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.105420261 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079464137 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069427321 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.101647312 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073552726 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.106111671 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079922713 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.104930358 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078972206 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071886846 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.096651527 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07060965 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075436836 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.111557689 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068246155 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106734887 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068689885 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067617931 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.099122369 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068359079 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.105811587 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078474104 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.06965235 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074403881 seconds)
  done (took 4.657241005 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092075423 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093817761 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.117013145 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06317107 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066571442 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.093160032 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088247422 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.087300433 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.061076425 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087713479 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.083190398 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060981349 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062179359 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053992515 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.0880016 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057557871 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061461034 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.083917038 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060605593 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059506174 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057550047 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.081949304 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.061169546 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.061957757 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.083261146 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063131714 seconds)
  done (took 3.096615406 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078691416 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086397003 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.119287727 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128994296 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.132927045 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077048312 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106555946 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088015674 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112206944 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06837569 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071401315 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.121997777 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089404677 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.104023455 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068747831 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083503763 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.110786497 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070337355 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.100778084 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092753551 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084621648 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.10646592 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093409662 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.108671263 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068225016 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069061884 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.10030483 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081928955 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.0990287 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078887653 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071513374 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.099081002 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070693596 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07842308 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.06997027 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06831612 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.120521667 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077839001 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.105596392 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069907442 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071344492 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.096859573 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.100643036 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.142122536 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068388734 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074077658 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074626349 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07628097 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.098063475 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087957851 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078515291 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.096144467 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071559698 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066900826 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067042989 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079676039 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.09954358 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071579106 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076686328 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099847779 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080792406 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.098360555 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084899983 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067216683 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103553305 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067614432 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068396546 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.09572871 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092878517 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096753774 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109656977 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.095996562 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069884914 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076510163 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.103530212 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074137369 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067339627 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111999744 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077736014 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098866568 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07736664 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071606578 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.099239776 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.089150551 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069102129 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068524335 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067366046 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072345826 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069093357 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067924094 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.112949166 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069072152 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070414655 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.113443295 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067938734 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.097789348 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074775416 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071739615 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.096052086 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078986867 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.100698291 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069777462 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076018842 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.096408778 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071845198 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104715195 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075435018 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066104448 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.09986055 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074651731 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067837729 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.098212118 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070843208 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068830332 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075845142 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072597496 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.102520184 seconds)
  done (took 11.241458626 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.191555271 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155199754 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.099018231 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.172681979 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076943264 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078357909 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.175667776 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.123204434 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068420248 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067745039 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.098104243 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114377833 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.136249063 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.149995006 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078988395 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.096510842 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084631099 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.145811184 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.177346418 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142056129 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.11415432 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07691612 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.099388937 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069560846 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074405286 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.111301202 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090831247 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.104695129 seconds)
  done (took 4.344655276 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084988063 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.131004816 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075388314 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088863939 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.120731073 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067768237 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.099179008 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071241105 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080902214 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.109313365 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.06742463 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.101937865 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074669818 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.101184512 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070230436 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074599101 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.103526862 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070254802 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070112278 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.10185223 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07736958 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.109074523 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072130394 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066379494 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103691837 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06771011 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.093641041 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085409364 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.096309878 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090640995 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065300394 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.104308407 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081640063 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067613463 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066425269 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066646831 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.097864951 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068365318 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069650243 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.095707889 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066801823 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057396426 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.095628165 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079968926 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101858213 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057133014 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071941244 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.10218812 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073452043 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064708812 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099171026 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071292498 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071052408 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.103468739 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073392506 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.100082166 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070380411 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066323403 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.103581203 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068276676 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064911623 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094377369 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073243823 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065821064 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.104782 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072316937 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066125118 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066532548 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068477912 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.103816221 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068657742 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071095385 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.094748801 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071340052 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072038701 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.098030015 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069793641 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066046685 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.097207079 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068710154 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056258839 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.098075866 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054891576 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071223505 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.095434056 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066691707 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094401726 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075064207 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080358958 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.098741828 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074187097 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095709108 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06875072 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07103798 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.088372887 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071681484 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083286763 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.112698196 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067981912 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.094389165 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083094968 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.099566833 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068997956 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057051015 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102799547 seconds)
  done (took 9.779423474 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.098390256 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089791426 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.100435747 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083306223 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.119026934 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088324292 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074257427 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.102972184 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069613034 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.107698239 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075363193 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076198576 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.09674792 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.0774363 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093342436 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.105147916 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070170079 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.104618267 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072968526 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100334507 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111533101 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08134131 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110037293 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069973733 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.071877659 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.108893163 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090442969 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107921246 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.07983692 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.082584326 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109236728 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090908126 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.110926224 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.073760311 seconds)
  done (took 4.285713011 seconds)
done (took 38.558552463 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.238204877 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.453059736 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.231041585 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.212889865 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.246637652 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.244669984 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.243837599 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.23418854 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.613947409 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.234555008 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.468045776 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.835897674 seconds)
done (took 59.439886257 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.290966366 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.379474742 seconds)
    (2/2) benchmarking "String"...
    done (took 1.513467057 seconds)
  done (took 4.070060101 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.65456625 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.137875214 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.496901443 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.236581136 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.237203026 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.554781002 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.93558196 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.098722349 seconds)
  done (took 27.872740547 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.238146151 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.598748682 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.628774615 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.63230953 seconds)
  done (took 18.275597401 seconds)
done (took 60.347073039 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.225370761 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.292407067 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.24103437 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.220372539 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.358705625 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.255179487 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.509120576 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.450829597 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.237328373 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.221836922 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.236284668 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.240386826 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.241867429 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.488330727 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.247729162 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.237724661 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.330508258 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.718379194 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.634063625 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.265504985 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.267464096 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.250590495 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.267927893 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.239205774 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.258154377 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.237913754 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.237311566 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.254849458 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.51634506 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.238594114 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.334077848 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.726155087 seconds)
  done (took 192.657195596 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.237155532 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.289292124 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.397034674 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.284429516 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.762795664 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.43842632 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.388142442 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.832966537 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.256390279 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.263421352 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.604875418 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.239180832 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.615532767 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.258451767 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.247082673 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.316591945 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.543547306 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.620850502 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.254201729 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.485575215 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.264050315 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.486762265 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.39245754 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.51879571 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.240464106 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.262266963 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.239650838 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.242223304 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.433898903 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.479203078 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.272023964 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.283889303 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.810282224 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.098943154 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.246914763 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.241208591 seconds)
  done (took 152.027389401 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.523637953 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.240024788 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.23922354 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.239571552 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.270122782 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.239502775 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.239940157 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.769128687 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.779112442 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.749011828 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.462894463 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.30317993 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.492347967 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.240734683 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.332835546 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.253171769 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.241516744 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.255225541 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.267569337 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.239449904 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.240446402 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.779744993 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.252473972 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.43101896 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.246459175 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.240614969 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.270793638 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.635211338 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.241629723 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.271011094 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.560218841 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.286578834 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.240684047 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.540051916 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.043204932 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.240589673 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.350014925 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.242659579 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.272588554 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.241267737 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.511637312 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.241351529 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.24247778 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.244841195 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.829824063 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.242602383 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.782854303 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.242701509 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.126174858 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.241506613 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.241319794 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.31041787 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.668438944 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.239812326 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.242409745 seconds)
    (55/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.242414328 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.243372029 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.242749249 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.242033331 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.273617833 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.21864035 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.339595895 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.243601044 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.246984445 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.273376126 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.243151755 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.478413401 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.242597463 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.791578707 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.298273778 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.35000867 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.783621239 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.243443511 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.335398456 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.362115874 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.242276201 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.24371994 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.242849457 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.243727122 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.350705826 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.242638632 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.639261018 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.249756306 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.245095122 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.305879628 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.33744636 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.243428344 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.552418209 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.244310151 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.243814001 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.935779521 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.336839448 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.242625283 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.243984806 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.243824913 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.641035388 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.784874475 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.423617736 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.246129409 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.514887216 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.244820955 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.243995773 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.654690782 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.762833924 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.844145244 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.246668194 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.354475318 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.249286879 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.246091456 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.244291276 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.275762286 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.246184208 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.304888015 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.245422584 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.641695638 seconds)
  done (took 349.819127157 seconds)
done (took 697.207543076 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.930028056 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.924154201 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.028360692 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.914198521 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.900957599 seconds)
  done (took 10.880691006 seconds)
done (took 12.070507722 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.437088818 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.436033537 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.306149326 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.440425233 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.274834541 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.457676375 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.417928682 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.265762387 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.353161652 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.328157116 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.350621719 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.302170321 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.273740945 seconds)
  done (took 18.827333343 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.555371721 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.55559341 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.310796537 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.561132229 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.285407495 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.564790611 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.441087841 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.449080677 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.436078482 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.260252637 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.259136469 seconds)
  done (took 16.864320331 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.569845929 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.563731003 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.312816974 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.570552427 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.287179522 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.565861703 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.440788306 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.452906012 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.438525756 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.260543671 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.25967024 seconds)
  done (took 16.908235493 seconds)
done (took 53.788151231 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.256535596 seconds)
  done (took 2.440985965 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.289966618 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.456903911 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.272610609 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.260750006 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.259137864 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.257455193 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.260608152 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.257100392 seconds)
  done (took 11.501376545 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.253124629 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.25545584 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.252337898 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.25538441 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.253184544 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.256087539 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.256387451 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.25296827 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.255700178 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.254854023 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.253248554 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.253482619 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.254859859 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.256604622 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.253580317 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.254313075 seconds)
  done (took 21.258238083 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.255192536 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.253934304 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.253434661 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.254234633 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.254137262 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.252979805 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.255002371 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.252909195 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.25357899 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.254501559 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.254893353 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.253713943 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.255097074 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.253912558 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.254593584 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.256202292 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.254400521 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.254796035 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.258328946 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.254120835 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.255523016 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.254114268 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.255386173 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.255419937 seconds)
  done (took 31.299323434 seconds)
done (took 67.689956164 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.307727338 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.940648462 seconds)
  done (took 9.434911323 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.259100625 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.257407375 seconds)
  done (took 3.706780505 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.257372817 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.256900495 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.258266179 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.25818897 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.258444148 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.258221255 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.258049854 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.257433119 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.25806191 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.258496163 seconds)
  done (took 13.767698257 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.258701344 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.258842815 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.255724942 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.258207332 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.258752652 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.255575947 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.259108763 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.258342843 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.258514888 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.256062566 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.25898884 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.256035741 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.258087403 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.256185616 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.258428627 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.256937457 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.256378551 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.255946378 seconds)
  done (took 23.823130287 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.259398522 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.257243585 seconds)
  done (took 3.706382905 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.256101924 seconds)
    (2/7) benchmarking "second"...
    done (took 1.255958958 seconds)
    (3/7) benchmarking "month"...
    done (took 1.255996897 seconds)
    (4/7) benchmarking "year"...
    done (took 1.256219071 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.256904019 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.257037002 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.256631436 seconds)
  done (took 9.984867551 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.259915075 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.433128008 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.513572653 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.966506131 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.260971065 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.262453812 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.209804188 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.263623814 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.265729321 seconds)
  done (took 14.626718319 seconds)
done (took 80.242567553 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.267942054 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.25145467 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.217801541 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.260203206 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.268156413 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.596603046 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.289266762 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.512997956 seconds)
done (took 38.859419854 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.252962756 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.000642978 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.024710524 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.256933687 seconds)
  done (took 11.47415191 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.237498445 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.170434406 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.241986341 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.302272086 seconds)
  done (took 18.143824587 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.88740418 seconds)
    (2/2) benchmarking "read"...
    done (took 1.585671822 seconds)
  done (took 4.665111122 seconds)
done (took 41.732369849 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.261311539 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.260591395 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.261294448 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.261502281 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.258695219 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.261528542 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.259719364 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.258462403 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.261062803 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.260863184 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.260843797 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.261322139 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260889732 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.258591582 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259020474 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260673591 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.259819159 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.260353499 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.259813349 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.259112076 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.259233684 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.262432843 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.259728266 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.258674429 seconds)
  done (took 31.437472666 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.261902089 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.259832784 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.26240225 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.262569865 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.259426282 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.261908299 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.26147375 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.259973329 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.263453767 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.262746077 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.25933519 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.259029472 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.262810671 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.260766388 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261922078 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.260666121 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.262867968 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2603721 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26355659 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.260850703 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.263406619 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.260506876 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.26008222 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.263058944 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.261258219 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.260237069 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.265122644 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.262783221 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.264830877 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.261558338 seconds)
  done (took 39.043686845 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.268872396 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.272827076 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.263577039 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.263922005 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.263684134 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.263123644 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.264433844 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.2648423 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.264071275 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.264322973 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.263527291 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.263544589 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.264801696 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.264158654 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.264227404 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.26535948 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.264539292 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.263990486 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.264254062 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.26391516 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.264527909 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.263959868 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.265915456 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.265008332 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.265494644 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.264599911 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.265243532 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.265294015 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.264952809 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.264959562 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.266440627 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.265402875 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.264740509 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.26543146 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.266256225 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.264663551 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.269813021 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.272552087 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.26632501 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.26530812 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.266182865 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.266009043 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.266487072 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.266237186 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.267339206 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.265842229 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.266067798 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.265702054 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.265548332 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.266360584 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.266132989 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.265848337 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.265766766 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.266494654 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.266704447 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.266978315 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.26682501 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.267338689 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.26652757 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.26625923 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.266700743 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.267440381 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.267847301 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.267739024 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.26741837 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.267602367 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.266420429 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.266373682 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.266346637 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.268245579 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.267262057 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.267760343 seconds)
  done (took 92.342884406 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.267388899 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.265762465 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.264829998 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.266242791 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.264454683 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.267262216 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.265971575 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269103214 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265253224 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.268186606 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268320425 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.266671981 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265797482 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.268631978 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.267230733 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.265408098 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.268619267 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.266000372 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.268330312 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.268436857 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.268892927 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.266109113 seconds)
  done (took 29.072544277 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.268070292 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.26759569 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.26634236 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.268524313 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.266302032 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.268342889 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.268923571 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.268242501 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268290659 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.266277369 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26644094 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268772886 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.266353907 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267227939 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.266897319 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.265224382 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.269541673 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.26686615 seconds)
  done (took 24.013013225 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.267530877 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.267475458 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.268831059 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.267420304 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.266715192 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.269475241 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.267897218 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.269414035 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.270704538 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.26755464 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.270390936 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269914866 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.270615825 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2672279 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27004603 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.267755948 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.269751826 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267480328 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.270747746 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.267696123 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.268488924 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.270259226 seconds)
  done (took 29.113016286 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.27109376 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.268915236 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.268211966 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.269246335 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.267782899 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.271177127 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.271945154 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.267492898 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.271911716 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.271350563 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.268583682 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.270850646 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.269568474 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.269444304 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.269260444 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.268339546 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.271366751 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.269616333 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.271381028 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.268689725 seconds)
  done (took 26.598350688 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.272639534 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.272884703 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.272830584 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273284571 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273655746 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.273825152 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27365562 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.272916302 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.273386446 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.274145577 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.274235525 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.273289505 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.273277908 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.273047515 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.27363504 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274564781 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.274206664 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.274822771 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.273618248 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.273735596 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.274110602 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.273937334 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.274284183 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.273631785 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.274745627 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.274006012 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27502779 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.274571998 seconds)
  done (took 36.869941613 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.273846376 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.272346883 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.26972546 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.271323862 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.270912088 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.270320304 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.270772421 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.271192044 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.273700465 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.271062019 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.272266306 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.27292578 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.274112907 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.272592215 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.272696812 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.273516656 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274803166 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.270646512 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.270880907 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27195221 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.273828991 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273204949 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.273493675 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.27059534 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.271076857 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.274246734 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.272294273 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.271250435 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.274623233 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.272342206 seconds)
  done (took 39.373055699 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.29305392 seconds)
    (2/2) benchmarking "in"...
    done (took 1.292746051 seconds)
  done (took 3.790125139 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.27249649 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.274661599 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.275544059 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.273106263 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.272480156 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.276047019 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.275328878 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.272655849 seconds)
  done (took 11.398087383 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.2758358 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.276293874 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.275247107 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.276025812 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.275767469 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.277394647 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.285226687 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.293608563 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.278826495 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.277750627 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.28397345 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.286651132 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.282812693 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.277667849 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.277249348 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.279076973 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.27632887 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.277243771 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.27754385 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.276743462 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.277693265 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.281418801 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.28079992 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.274573997 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.279274223 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.290761758 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.283942819 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.27706139 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.278698307 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.283396358 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.279126086 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.273992432 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.276888421 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.277539467 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.277617365 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.277829447 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.289342285 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.300312209 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.286834217 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278700666 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.276872326 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.27424782 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.279752296 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.281267616 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.279646935 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.278850237 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.277338411 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.274423513 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.278641986 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.281365154 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.284353953 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.278402925 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.275087902 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.285925631 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.281063233 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.286607746 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.296209528 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.281960312 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.289981474 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.292020956 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.294204749 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.288448702 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.281664469 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.279629723 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.290568089 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.305864012 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.289062228 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.293956172 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.276006068 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.280044864 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.289470114 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.294998402 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.292298738 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.279543209 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.280050454 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.279309873 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.281762049 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.279233527 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.29033719 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.301987498 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.280080189 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.279810325 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.290760816 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.305371004 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.28139642 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.281993593 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.280601651 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.281374307 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.282139015 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.293911113 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.298220217 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.282215205 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.280491094 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.281873493 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.28471885 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.28071892 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.281391659 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.283489327 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.279258779 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.280274449 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.280545982 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.285208959 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.291860886 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.281420884 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.280642405 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.293265926 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.281212121 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.28084532 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.293365282 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.280950256 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.281616145 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.282896449 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.291153625 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.278845971 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.284665684 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.292036177 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.282023408 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.28381881 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.282272906 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.282659119 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.292821544 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.312176598 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.282403376 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.28299986 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.288131239 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.295354676 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.282291532 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.286798969 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.28251224 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.280422651 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.28016162 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.285135947 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.282027329 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.286162036 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.282237294 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.285470404 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.279893546 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.281993181 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.283543573 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.285197453 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.286223721 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.285236254 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.286108855 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.288377691 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.283775378 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.286895983 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.292663788 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.285468662 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.28645867 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.286165768 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.281885614 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.284465757 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.287621416 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.285147718 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.286239364 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.284463585 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.284910669 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.285193631 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.283569391 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.283617552 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.285073322 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.286596644 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.290008 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.28422774 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.290126602 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.284936752 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.281383604 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.284774838 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.285364885 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.286265907 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.28555768 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.285407895 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.288315026 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.293857385 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.283512704 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.284619105 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.28997148 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.285347384 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.28473572 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.285210963 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.289314532 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.296434474 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.284568882 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.294951489 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.285916665 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.285991484 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.285154133 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.287063817 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.286100639 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.286525376 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.289640168 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.294639133 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.300328801 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.297965902 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.288377603 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.290515812 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.288175426 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.291386084 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.292639936 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.286927811 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.285507718 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.286927457 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.286120502 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.28738188 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.291132594 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.285682151 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.287657249 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.287614379 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.286347832 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.286934691 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.287436153 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.288440238 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.288756346 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.283387254 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.28822769 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.28790478 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.287731623 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.284296317 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.285984816 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.288105283 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.288333129 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.287282122 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.299407588 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.285157422 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.290114173 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.290588352 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.289166087 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.287146598 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.288199169 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.291286691 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.29084823 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.297553363 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.306482919 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.290540528 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.297453859 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.305952869 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.288942061 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.292461413 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.288439087 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.286004476 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.290905575 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.296867452 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.288774017 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.28895197 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.287767737 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.290173578 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.289602282 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.297723508 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.286964555 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.28920414 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.28896249 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.292665464 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.287838086 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.291517702 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.292290676 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.291492885 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.292793045 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.289710598 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.289580105 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.292088915 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.289553992 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.289310916 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.289417509 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.293644926 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.298773626 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.296952941 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.292134775 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.293623168 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.292459037 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.293287047 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.292033324 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.289439195 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.290552689 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.305288366 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.300336119 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.29979166 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.29422789 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.290116329 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.298832945 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.293260355 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.296353749 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.292559152 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.292089211 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.291505551 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.291553088 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.288259672 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.292869024 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.292033375 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.294317749 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.292946807 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.294616807 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.292937066 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.291481978 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.291907577 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.291282438 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.292151195 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.292673192 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.290914191 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.297212833 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.294941004 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.292694667 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.292211316 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.301261517 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.310441883 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.295748983 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.292956536 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.293613765 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.29301533 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.293984522 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.293633494 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.295251242 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.300492583 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.297101419 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.305472388 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.293799917 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.305848513 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.293513182 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.296417053 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.302583351 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.289986093 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.292276674 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.294507119 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.293315841 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.302826591 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.309602903 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.294467837 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.296782463 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.292218971 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.29351939 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.29345043 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.294085969 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.292811537 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.293038418 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.305416396 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.315852062 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.297999451 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.296076108 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.29085704 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.293372805 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.293259687 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.292531143 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.301654024 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.294264414 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.295827919 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.294709312 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.296522795 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.293429234 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.293398372 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.293679268 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.291701072 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.294132197 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.302889941 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.313219239 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.298458829 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.295290841 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.308232007 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.294868901 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.30555496 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.311092579 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.295987415 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.294700073 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.29462523 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.299203329 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.295852877 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.297633407 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.295429322 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.296694521 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.298581531 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.295881293 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.300116503 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.297370286 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.296130593 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.296761593 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.305533227 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.320189751 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.297194608 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.301415952 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.294275285 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.297952805 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.300870101 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.296050078 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.29676347 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.299796652 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.309096809 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.306609528 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.297653957 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.296814194 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.29769259 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.29705726 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.29630094 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.296418953 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.296338776 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.296560282 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.300129262 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.296583276 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.303198786 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.297429613 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.298758987 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.298660095 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.299409913 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.312764294 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.297826764 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.300336035 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.296051967 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.296245312 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.298672192 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.29833968 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.297009466 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.299712484 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.298026627 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.299299228 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.30748818 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.305901837 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.300550387 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.297701884 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.297770872 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.29935701 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.300746542 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.298515298 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.297090317 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.296710087 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.299077329 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.299251471 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.301060967 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.29772868 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.297482476 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.300106072 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.299582528 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.30126403 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.306813307 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.30045119 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.296192922 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.298346118 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.29804163 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.298000664 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.29978619 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.310839244 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.302909384 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.312104768 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.309807378 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.303017642 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.301746685 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.303763581 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.308643538 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.298257881 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.30154497 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.298738513 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.305229404 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.301361752 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.304292683 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.300557397 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.309893781 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.302777833 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.300385883 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.313712463 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.32274852 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.299699895 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.302126419 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.306750325 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.302211837 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.297965471 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.300611991 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.300135879 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.31073651 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.321148734 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.301297639 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.303178791 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.300181179 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.303246563 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.306395607 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.30066927 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.303576244 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.298651464 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.301457557 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.30071977 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.300851184 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.298952516 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.302427639 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.301246842 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.304289384 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.310558953 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.299387165 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.305133203 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.302586168 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.302395767 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.301373001 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.301789803 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.29895654 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.298828533 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.301647737 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.302816016 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.304875101 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.305056102 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.302916154 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.303067472 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.303515757 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.30154639 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.305491963 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.314118394 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.310788366 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.298294694 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.302678126 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.303840354 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.305734927 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.302486442 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.303498287 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.304424291 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.306473818 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.302201291 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.302691122 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.302929133 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.306468292 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.322699593 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.321751445 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.304346284 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.304842354 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.308957826 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.302918915 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.299956294 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.302727732 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.307766413 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.307488557 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.312400556 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.304275889 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.313726309 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.321026339 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.306083954 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.30867912 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.307261098 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.315150521 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.309507539 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.305800978 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.307028372 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.310248472 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.324476065 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.305244684 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.315360731 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.33876057 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.323022702 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.30739629 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.304926113 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.303866037 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.304727037 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.308045556 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.304006974 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.304900541 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.305207395 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.305371564 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.30566653 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.312878782 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.30720206 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.305179979 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.304683023 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.306943101 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.30851483 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.301198218 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.305662023 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.305254842 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.305412455 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.306584989 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.306257802 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.306886581 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.320172212 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.319850564 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.30538209 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.305247973 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.303347093 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.3108163 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.310217239 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.319817789 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.315323113 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.30583081 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.306706218 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.307936766 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.305398171 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.303642418 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.307941902 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.307660816 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.307517375 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.303514506 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.32157633 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.317179433 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.314328709 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.308657247 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.307284085 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.307699534 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.309551034 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.306479692 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.308328037 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.310534678 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.308282532 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.311299722 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.306716497 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.306932956 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.31137885 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.315985361 seconds)
  done (took 772.975416246 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.305443863 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.304951235 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.30475537 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.304944819 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.304948514 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.304610264 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.305438504 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.304919435 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.305864489 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.305696486 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.304576978 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.305677366 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.304886153 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.305588165 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.304455362 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.305206009 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.305851573 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.30452356 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.304320369 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.304757147 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.305171217 seconds)
  done (took 28.642803203 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.3093604 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.305274926 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.30451832 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.308801405 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.306480839 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.308638171 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.306127681 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309483095 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.307590467 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.307193744 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.309498367 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.308620218 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.306519448 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.307449749 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.305963998 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.308132106 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.309494062 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.307026721 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.309184331 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.305995627 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.309520372 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.307245196 seconds)
  done (took 30.006474207 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.310410568 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.30961996 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.309394353 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.307026115 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.309549241 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.308386296 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.309927308 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.309589975 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.310120301 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.310750176 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.309356002 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.311809875 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.318175241 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.316557093 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.314618333 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.309651931 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.454218083 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.310275963 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.311304613 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.311138275 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.308077328 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.3183108 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.307723266 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.307958225 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.310695719 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.309955293 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.311302288 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.310328484 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.310111587 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.31244073 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.314794434 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.311308615 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.311022635 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.314480697 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.312649888 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.314163078 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.315267947 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.31134731 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.30890895 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.31076186 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.322082341 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.333808629 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.312287786 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.321749199 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.311690292 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.311449693 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.315992701 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.320450155 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.309572677 seconds)
  done (took 65.692483064 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.312891506 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.312390656 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.309866209 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.312559748 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.312888834 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.311909436 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.312749732 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.313212083 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.310110472 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.310392297 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.312731134 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.310117957 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.309121787 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.312985963 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.313808275 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.309997834 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.309836824 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.309393128 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.309240071 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.309402319 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.309033159 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.31277658 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.312330169 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.311268649 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.312522402 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.312690096 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.310732511 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.312543308 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.310783829 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.31039479 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.313007752 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.312442051 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.313324543 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.311277867 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.310530806 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.313429057 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.314391328 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.309736129 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.314738393 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.310596654 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.314991765 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.314528069 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.314709655 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.314639526 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.312399233 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.312177795 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.312391228 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.312684505 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.31224173 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.313399459 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.315339013 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.311755529 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.315399041 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.312934327 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.314727001 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.315830054 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.311789735 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.31262037 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.314589055 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.312553455 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.312291602 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.315232602 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.312653809 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.31540563 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.315595167 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.314799513 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.312673056 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.316398468 seconds)
  done (took 90.495050926 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.315179428 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.315647567 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.316373969 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.315443239 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.316474881 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.317814685 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.317548739 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.316352205 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.317353172 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.317060057 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.316697383 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.316875826 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.316641051 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.317262105 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.316094383 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.316247734 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.317076834 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.317419384 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.317909193 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.317216696 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.31706165 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.317158285 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.318089211 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.317597633 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.318320401 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.318062013 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.316511626 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.317587666 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.317341505 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.31781643 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.31740678 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.31656984 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.317712469 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.317409748 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.318018752 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.317590621 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.317118971 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.317902908 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.317911838 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.318185469 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.31798497 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.316759383 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.318372694 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.317694158 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.318116696 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.318078412 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.317653858 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.318493129 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.318305315 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.316798155 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.317787494 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.318019659 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.3196268 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.320288827 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.317465578 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.319005482 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.318559605 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.317730247 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.31898397 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.319619265 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.320110811 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.318595573 seconds)
  done (took 82.936132558 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.319010357 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.317685789 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.316329213 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.316971603 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.319282058 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.316782975 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.317999982 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.318625678 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.318693331 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.319222123 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.318463599 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.316341558 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.316804795 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.318488744 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.317043936 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.318496364 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.316379691 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.31645725 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.319957494 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.316138639 seconds)
  done (took 27.602084784 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.317089949 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.319453218 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.317683152 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.318355559 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.320783142 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.318441913 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.320443139 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.320188566 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.317040153 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.319395459 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.320163829 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.319898065 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31822704 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.318228601 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.320788476 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.317699513 seconds)
  done (took 22.352130104 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.316958603 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.320172977 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.321607522 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.321165042 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.318862579 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.317852568 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.320096204 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.318905285 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.318216212 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.322126626 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.321676656 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.320786562 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.321215392 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.321422123 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.320985916 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.320501161 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.317222348 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.318382603 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.320799532 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.321038111 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.319470946 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.320044183 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.320145695 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.320115127 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.318593033 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.318313195 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.317482377 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.317657865 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.318679959 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.321382736 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.318150723 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.318298932 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.317953332 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.317133202 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.32072884 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.3179002 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.320385676 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.318544158 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.317979153 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.31812528 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.318919458 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.315629681 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.319728958 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.31859673 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.31665476 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.317804579 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.31473603 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.316002779 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.315128215 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.31739186 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.317040551 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.320214058 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.315606713 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.317577052 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.317236414 seconds)
  done (took 73.786364612 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.317666057 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.31758411 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.3157756 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.319135819 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.317486834 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.315141766 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.317756292 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.314166592 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.315649987 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.317116825 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.316268551 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.319666396 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.314619166 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.317238729 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.315384113 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.316467058 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.316709798 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.314776175 seconds)
  done (took 24.945057313 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.315125444 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.315381875 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.318075419 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.315327736 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.316103544 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.317485248 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.314546986 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.318518399 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31668004 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.315433458 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.314734835 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.317199714 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.316202125 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.317483694 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.315563672 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.315425744 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.318086019 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.316996643 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.315781718 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.315262891 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.317737934 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.31729144 seconds)
  done (took 30.209688316 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.317931291 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.31790209 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.335498076 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.362960351 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.349411366 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.318216976 seconds)
  done (took 9.248659865 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3177968 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317329407 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.315045475 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319703651 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318186663 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314705472 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315783806 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31668517 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317983185 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316852358 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31598457 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31907641 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319947275 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316390491 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318108767 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319154687 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315450078 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31698343 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316906514 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318650545 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316465825 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318480169 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31666553 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316688832 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316411989 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316373329 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318951113 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318379743 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317647792 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320878359 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320499851 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318160708 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320641249 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318796448 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321546394 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32205189 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318435579 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321021426 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321846567 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317785159 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.320547295 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321620925 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320285693 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319100712 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32159494 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320493689 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318098973 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318461278 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318759216 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321714371 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320241167 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317801517 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32124656 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322056234 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321565976 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321393554 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319271421 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318890226 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320588937 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319417812 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321569875 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320350639 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319043089 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318690462 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32186184 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319347451 seconds)
  done (took 88.296811832 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318919985 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.320368179 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318506187 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320195433 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318911598 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317794147 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317991769 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318982567 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318100045 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3203408 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321328781 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31830705 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318388701 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318197855 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321139183 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319220239 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320830268 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318287109 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31912892 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322967184 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319703736 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319325469 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319542512 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317895027 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319886913 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321002975 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318941147 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319882211 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318753463 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31884914 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318462238 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320728719 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319930159 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.318828138 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318908826 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319812055 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320243743 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319447008 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319177259 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32596592 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319652751 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322536702 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32049635 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320131733 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321564479 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319919264 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31926123 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323082147 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319753891 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319869603 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321625541 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320232635 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320160858 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32114301 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322148376 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318099546 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31888109 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320179329 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319052775 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321877115 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319509589 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319676041 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323226559 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31938482 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320049055 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318657296 seconds)
  done (took 88.364982866 seconds)
done (took 1799.803676434 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.379859782 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.421210707 seconds)
  done (took 14.051254544 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.481935902 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.437293448 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.320984356 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.346281311 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.320150521 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.340543617 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.329935861 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.319841276 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.322130603 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.322406139 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.320798917 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.507433608 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.328163273 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.320889487 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.32115717 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.413734761 seconds)
  done (took 43.007679061 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.358632739 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.324527586 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.449128324 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.336503518 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.35934983 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.517564418 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.376252945 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.32508399 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.492875779 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.369809893 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.835986836 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.357206427 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.32527386 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.406561344 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.341507868 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.518301415 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.57631213 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.83861082 seconds)
  done (took 30.360505138 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.753573671 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.332675237 seconds)
  done (took 9.33795106 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.346463813 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.320393937 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.325849157 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.361332603 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.353001297 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.354121424 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.364886867 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.361585361 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.327002261 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.337672326 seconds)
  done (took 64.706074964 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.343911099 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.32378454 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.322181846 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.320168183 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.313407592 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.323153152 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.32151141 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.31639364 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.674987969 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.439400767 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.341395115 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.329464671 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.321945797 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.321862242 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.318785762 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.35409814 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.456572766 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.317979124 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.316931898 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.326735724 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.321081641 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.426523293 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.359533699 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.319392372 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.438786736 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.686180535 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.32448515 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.327257549 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.452276217 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.319506458 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.321671784 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.32225436 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.324188316 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.88434957 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.755631427 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.32664358 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.34248623 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.329564755 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.319070059 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.433850814 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.322042126 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.326398541 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.315306201 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.728376576 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.473321332 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.430970884 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.539037572 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.32380198 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.32348446 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.380993956 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.322657183 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.324214153 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.350974796 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.086140609 seconds)
  done (took 109.939942352 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.363029879 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.802573752 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.484688944 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.330171105 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.822745336 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.760628349 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.312366122 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.578529138 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.337512914 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.778799451 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.595363425 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.655048774 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.314208605 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.312546511 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.311509984 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.31185875 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.567847425 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.606348384 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.310875089 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.317125969 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.36428645 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.814483645 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.539985046 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.501124675 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.350318393 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.750824568 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.538159514 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.647830709 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.3116921 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.309547213 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.590614941 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.310611733 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.314736345 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.307786608 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.577271608 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.63110627 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.612800639 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.308179625 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.346323647 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.313643923 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.331643932 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.7393579 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.619048991 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.541695735 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.665303078 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.750749676 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.309584838 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.31056584 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.308090688 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.515283715 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.55093614 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.781068771 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.532388001 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.319478263 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.567515667 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.309054715 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.402703184 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.765002931 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.636520954 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.633040242 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.320915331 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.309249045 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.307368715 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.831177315 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.31029248 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.622409533 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.632203413 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.309540883 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.620839488 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.62365113 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.637642058 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.757707392 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.349081169 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.332617924 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.363061653 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.796636787 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.579542884 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.763154748 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.348791374 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.307210426 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.609130134 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.314112384 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.581693396 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.841134093 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.782387636 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.362248616 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.326611066 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.310700278 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.766829373 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.762957021 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.556249085 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.664260804 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.579964298 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.323019245 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.310040517 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.309723964 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.311957181 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.538713115 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.318962033 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.675218479 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.763017683 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.079872052 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.356572944 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.832812451 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.544348653 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.319031734 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.312162577 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.310411485 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.530175605 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.37999707 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.332565052 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.311969734 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.766479322 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.179299727 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.455317151 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.019429249 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.580491707 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.310432761 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.780189091 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.309751235 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.762851911 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.341234468 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.831338816 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.728587592 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.368213053 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.530139654 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.667891957 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.320517555 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.782728661 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.828503312 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.529996805 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.773015686 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.076340681 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.315075687 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.81058872 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.349178089 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.348655594 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.493900082 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.326969211 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.583842701 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.328301019 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.7888918 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.349202804 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.581814069 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.515104365 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.794418156 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.366995516 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.577703593 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.341653289 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.460543112 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.32728324 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.313650299 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.509903594 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.45581348 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.313005483 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.854468125 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.31288586 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.473266655 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.827577707 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.346043374 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.585187571 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.311160066 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.318184492 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.609475264 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.349699698 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.949764584 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.317424347 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.581891749 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.302004681 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.769972212 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.313413628 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.825826298 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.532280466 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.329033379 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.310589513 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.116657991 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.312129964 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.454414967 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.486248803 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.781080237 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.312694478 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.735203487 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.312898327 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.543974345 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.324351961 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.314150555 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.667819733 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.361154839 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.313898342 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.358091004 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.316011875 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.314739345 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.747831943 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.352733646 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.034906269 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.466776222 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.778745093 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.622271988 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.787407492 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.373588133 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.331180541 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.784925049 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.348299785 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.587382653 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.312007073 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.354477138 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.759212604 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.314754992 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.743791386 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.800064002 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.33528944 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.566026701 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.317052012 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.352612587 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.313290111 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.553460334 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.629584861 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.313995622 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.315498195 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.529558509 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.545345716 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.529297489 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.328443684 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.339208014 seconds)
  done (took 844.515155161 seconds)
done (took 1117.173166003 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.317000816 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.314279886 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.300508514 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.316212628 seconds)
  done (took 26.499411914 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.325800772 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.323264217 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.324059307 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.323121229 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.325419488 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.32391611 seconds)
  done (took 9.197472496 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.360859638 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.315074543 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.318140021 seconds)
  done (took 19.247241608 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.526914792 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.477565194 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.655462826 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.275135856 seconds)
  done (took 10.187942686 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.323941238 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.325680478 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.324385451 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.326332561 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.328533695 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.327881395 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.326105586 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.326097902 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.327525132 seconds)
  done (took 13.189171257 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.821562896 seconds)
done (took 84.398738358 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.75857869 seconds)
    (2/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.403790953 seconds)
    (3/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.425086077 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.453302181 seconds)
    (5/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.582706971 seconds)
    (6/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.416415931 seconds)
    (7/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.898639533 seconds)
    (8/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.303182837 seconds)
    (9/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.325945385 seconds)
    (10/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.317901209 seconds)
    (11/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.760171345 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.045815708 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.550021142 seconds)
    (14/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.670251407 seconds)
    (15/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.303088653 seconds)
    (16/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.397280149 seconds)
    (17/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.646056597 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.358231518 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.344581682 seconds)
    (20/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.468873258 seconds)
    (21/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.285364069 seconds)
    (22/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.402046423 seconds)
    (23/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.740993758 seconds)
    (24/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.867088492 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.136825221 seconds)
    (26/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.498263942 seconds)
    (27/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.896717193 seconds)
    (28/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.224124508 seconds)
    (29/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.321338103 seconds)
    (30/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.430753372 seconds)
    (31/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.323302568 seconds)
    (32/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.404977582 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.368076336 seconds)
    (34/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.497789909 seconds)
    (35/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.858730405 seconds)
    (36/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.303375202 seconds)
    (37/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.403276732 seconds)
    (38/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.857680445 seconds)
    (39/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.456871703 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.535478724 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.450132149 seconds)
    (42/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.006756763 seconds)
    (43/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.429815697 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.364264252 seconds)
    (45/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.625329941 seconds)
    (46/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.585727607 seconds)
    (47/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.411185231 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.424658215 seconds)
    (49/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.425748022 seconds)
    (50/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.080199773 seconds)
    (51/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.347509848 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.56549007 seconds)
    (53/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.305179102 seconds)
    (54/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.335556965 seconds)
    (55/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.347641184 seconds)
    (56/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.320634822 seconds)
    (57/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.400632352 seconds)
    (58/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.998296982 seconds)
    (59/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.439256074 seconds)
    (60/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.848444033 seconds)
    (61/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.320674691 seconds)
    (62/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.347045489 seconds)
    (63/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.346596185 seconds)
    (64/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.428095007 seconds)
    (65/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.655419155 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.432112213 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.588892792 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.851890652 seconds)
    (69/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.991785855 seconds)
    (70/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.465691936 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.947212943 seconds)
    (72/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.376446405 seconds)
    (73/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.347948143 seconds)
    (74/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.381072501 seconds)
    (75/309) benchmarking ("sort", Float32, false)...
    done (took 5.302163768 seconds)
    (76/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.830988074 seconds)
    (77/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.324081457 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.394806944 seconds)
    (79/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.300577592 seconds)
    (80/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.63708549 seconds)
    (81/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.324091013 seconds)
    (82/309) benchmarking ("sort", BigInt, false)...
    done (took 6.335954509 seconds)
    (83/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.109787165 seconds)
    (84/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.3512451 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.781434994 seconds)
    (86/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.777145591 seconds)
    (87/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.447751015 seconds)
    (88/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.592390954 seconds)
    (89/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.451206803 seconds)
    (90/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.311365719 seconds)
    (91/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.348310288 seconds)
    (92/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.386196393 seconds)
    (93/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.824769373 seconds)
    (94/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.307553612 seconds)
    (95/309) benchmarking ("sort", Int64, false)...
    done (took 5.531960428 seconds)
    (96/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.427241753 seconds)
    (97/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.03601702 seconds)
    (98/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.088814208 seconds)
    (99/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.369099726 seconds)
    (100/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.53615209 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.379790279 seconds)
    (102/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.544473057 seconds)
    (103/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.333744106 seconds)
    (104/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.427963182 seconds)
    (105/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.323061934 seconds)
    (106/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.054240514 seconds)
    (107/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.387646364 seconds)
    (108/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.326159282 seconds)
    (109/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.363671139 seconds)
    (110/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.124544526 seconds)
    (111/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.154832925 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.322016323 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.373255 seconds)
    (114/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.408342556 seconds)
    (115/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.373453264 seconds)
    (116/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.493109287 seconds)
    (117/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.361093476 seconds)
    (118/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.31373328 seconds)
    (119/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.823248895 seconds)
    (120/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.343331346 seconds)
    (121/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.351423842 seconds)
    (122/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.608246302 seconds)
    (123/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.757938448 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.562177904 seconds)
    (125/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.493503516 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.323992654 seconds)
    (127/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.532057307 seconds)
    (128/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.362612215 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.925097763 seconds)
    (130/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.349537893 seconds)
    (131/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.448108613 seconds)
    (132/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.777778205 seconds)
    (133/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.664769305 seconds)
    (134/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.341495203 seconds)
    (135/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.406822124 seconds)
    (136/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.72412838 seconds)
    (137/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.019494472 seconds)
    (138/309) benchmarking ("sort", Bool, false)...
    done (took 1.820512632 seconds)
    (139/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.34654921 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.603073515 seconds)
    (141/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.335288247 seconds)
    (142/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.320377133 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.002537018 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.444538305 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.585921356 seconds)
    (146/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.32436132 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.74215502 seconds)
    (148/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.554343908 seconds)
    (149/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.093517974 seconds)
    (150/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.997462487 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.709586322 seconds)
    (152/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.108603273 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.325851746 seconds)
    (154/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.439501215 seconds)
    (155/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.329556468 seconds)
    (156/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.744618682 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.013259151 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.352205789 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.335671297 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.670451215 seconds)
    (161/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.339972634 seconds)
    (162/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.521151925 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.682625183 seconds)
    (164/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.330135139 seconds)
    (165/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.503171014 seconds)
    (166/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.873557316 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.410025648 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.299740668 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.358589311 seconds)
    (170/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.758735931 seconds)
    (171/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.350273323 seconds)
    (172/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.389970089 seconds)
    (173/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.822778593 seconds)
    (174/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.340682008 seconds)
    (175/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.333124775 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.42354843 seconds)
    (177/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.864277731 seconds)
    (178/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.463736452 seconds)
    (179/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.476569649 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.324039016 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.320802431 seconds)
    (182/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.868662587 seconds)
    (183/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.733104183 seconds)
    (184/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.311372308 seconds)
    (185/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.000278023 seconds)
    (186/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.345170432 seconds)
    (187/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.563763637 seconds)
    (188/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.282987355 seconds)
    (189/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.363273257 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.148608674 seconds)
    (191/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.434656611 seconds)
    (192/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.35997515 seconds)
    (193/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.315530952 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.671976616 seconds)
    (195/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.718831365 seconds)
    (196/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.455696956 seconds)
    (197/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.498826489 seconds)
    (198/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.340685056 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.40388909 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.09531677 seconds)
    (201/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.334226591 seconds)
    (202/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.297967297 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.585945323 seconds)
    (204/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.348971143 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.690681878 seconds)
    (206/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.316497862 seconds)
    (207/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.368709603 seconds)
    (208/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.283025247 seconds)
    (209/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.653438704 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.282557481 seconds)
    (211/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.300883591 seconds)
    (212/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.307748123 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.350076294 seconds)
    (214/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.550617441 seconds)
    (215/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.603827338 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.108484256 seconds)
    (217/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.846987239 seconds)
    (218/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.382640664 seconds)
    (219/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.09030127 seconds)
    (220/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.85986583 seconds)
    (221/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.825985249 seconds)
    (222/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.597744532 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.627189421 seconds)
    (224/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.429433343 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.818555508 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.504164369 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.382116294 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.636786425 seconds)
    (229/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.815182938 seconds)
    (230/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.372645373 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.148439681 seconds)
    (232/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.998726853 seconds)
    (233/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.427303964 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.108240719 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.389546886 seconds)
    (236/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.671152137 seconds)
    (237/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.307533409 seconds)
    (238/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.097241963 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.880404158 seconds)
    (240/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.827850133 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.815941728 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.320230124 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.282152017 seconds)
    (244/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.30582235 seconds)
    (245/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.290064731 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.281308134 seconds)
    (247/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.540780861 seconds)
    (248/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.285735277 seconds)
    (249/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.606668877 seconds)
    (250/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.277889806 seconds)
    (251/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.278254158 seconds)
    (252/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.611919633 seconds)
    (253/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.288220479 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.667633262 seconds)
    (255/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.519343768 seconds)
    (256/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.591393114 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.527638133 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.816806051 seconds)
    (259/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.337222093 seconds)
    (260/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.78035225 seconds)
    (261/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.274217159 seconds)
    (262/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.685108773 seconds)
    (263/309) benchmarking ("sort", Float64, false)...
    done (took 5.548786722 seconds)
    (264/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.643120548 seconds)
    (265/309) benchmarking ("sort", Int8, false)...
    done (took 4.295061199 seconds)
    (266/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.46786206 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.271115108 seconds)
    (268/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.061332577 seconds)
    (269/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.300556217 seconds)
    (270/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.261953274 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.35021465 seconds)
    (272/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.300300401 seconds)
    (273/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.535082777 seconds)
    (274/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.301107359 seconds)
    (275/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.258538136 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.047562516 seconds)
    (277/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.614482405 seconds)
    (278/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.662847972 seconds)
    (279/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.573169745 seconds)
    (280/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.871006717 seconds)
    (281/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.399154227 seconds)
    (282/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.282713004 seconds)
    (283/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.572670246 seconds)
    (284/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.282499326 seconds)
    (285/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.466675189 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.377576533 seconds)
    (287/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.274209202 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.292062136 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.356359098 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.390430577 seconds)
    (291/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.42841241 seconds)
    (292/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.515180371 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.421972839 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.127372178 seconds)
    (295/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.273930315 seconds)
    (296/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.479743112 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.314285515 seconds)
    (298/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.297401552 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.112351981 seconds)
    (300/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.273317362 seconds)
    (301/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.688261083 seconds)
    (302/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.456161762 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.296460065 seconds)
    (304/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.513513465 seconds)
    (305/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.088483915 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.2981451 seconds)
    (307/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.328372158 seconds)
    (308/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.296003185 seconds)
    (309/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.962171044 seconds)
  done (took 907.070861568 seconds)
done (took 908.330151876 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.308906374 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.303190454 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.289479848 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.305549297 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.395050007 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.311915443 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.293766398 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.28621004 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.331454417 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.333154669 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.283082688 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.309256792 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.284148584 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.282439123 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.280489187 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.295672636 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.198581898 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.283902906 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.298063512 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.290971243 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.298564093 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.280355918 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.3311176 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.309382944 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.285772523 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.28590001 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.284182787 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.300033305 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.392876346 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.283956755 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.28427483 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.292056661 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.198269583 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.27880086 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.27508615 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.300627254 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.292655823 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.289946708 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.284549067 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.313286008 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.558842169 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.281462405 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.283949338 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.282497365 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.282679243 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.286774534 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.283479366 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.287512163 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.29515035 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.295829447 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.56254554 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.296615716 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.285377654 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.284020747 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.293472443 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.282565469 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.28697455 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.299045868 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.302866072 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.297947584 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.191787984 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.287362484 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.284867138 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.298949331 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.290678418 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.589304383 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.276251703 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.288105626 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.561778634 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.288928763 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.604482963 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.293640092 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.285153289 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.29829369 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.314986791 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.200706411 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.278556413 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.282658732 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.290839139 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.281972457 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.293656579 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.297467527 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.288746906 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.284081542 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.298665173 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.313182838 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.294086907 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.285218491 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.293057395 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.304405099 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.291412733 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.295267857 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.287866811 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.279190086 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.293846981 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.288119137 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.288025652 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.287762859 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.289711196 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.295603675 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.556649725 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.300543024 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.281199499 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.281898426 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.284302022 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.299305424 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.557558685 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.286398092 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.306864527 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.332803091 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.284525487 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.191703094 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.285528504 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.298782898 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.292200538 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.286193622 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.278604235 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.190211857 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.562168675 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.296450432 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.283145132 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.280201741 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.298728347 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.28133639 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.277532967 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.199817548 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.281282775 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.293327705 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.401106406 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.291807807 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.310860894 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.278076267 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.282297206 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.307209397 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.295826611 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.311025414 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.282349247 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.295675803 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.295841473 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.276858055 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.290495929 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.290177711 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.280240324 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.285788945 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.27488693 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.312211509 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.291584918 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.29357869 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.300602879 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.40138278 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.277248888 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.188713059 seconds)
done (took 215.486100614 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.339376536 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.268846501 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.38303472 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.276504749 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.375109347 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.394970252 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.274458942 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.273673195 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.274258575 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.65762045 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.274297672 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.275077286 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.27805067 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.273568154 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.361715703 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.275915436 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.273719786 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.656653235 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.278439347 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.348515846 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.276464835 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.275570657 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.276506969 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.717907007 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.279102711 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.275800371 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.357115158 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.277497933 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.625476032 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.273446472 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.276632375 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.661800231 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.379606757 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.2942636 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.287548378 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.2840516 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.392956769 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.292756041 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.382019748 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.361335523 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.384520939 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.31754642 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.272138965 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.271744462 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.279265532 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.279055073 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.276905716 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.30554419 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.27055599 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.276058327 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.622568154 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.28816135 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.28629792 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.276311807 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.276247801 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.298930816 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.277084009 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.279267842 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.37046522 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.27970863 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.350330271 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.662339021 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.701862886 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.280486575 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.279875315 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.278201484 seconds)
  done (took 145.012487565 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.347044545 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.355694884 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.384481567 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.280190169 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.332920748 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.389082918 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.27987742 seconds)
  done (took 10.581109866 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.28712851 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.280772257 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.331239749 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.330650712 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.280416531 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.428701239 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.280531686 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.292651337 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.277717353 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.334115688 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.281345944 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.280402698 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.287225883 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.281455896 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.329701584 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.292343582 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.396022325 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.281796063 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.280193328 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.433622722 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.279388072 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.286887802 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.338732312 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.29207249 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.28116202 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.287434145 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.869380789 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.281007581 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.278439389 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.281988691 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.278347798 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.3187723 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.281366786 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.276712674 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.279184746 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.399657747 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.282026712 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.279890204 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.281812765 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.278379574 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.282302074 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.282445662 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.281707915 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.279630741 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.281496687 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.306248743 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.282160924 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.282135274 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.282261856 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.281957176 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.332867625 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.281992717 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.279193399 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.280601514 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.338687843 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.288865866 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.282395168 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.280033478 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.282941213 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.280404446 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.434990571 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.331493738 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.283372477 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.331343441 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.283713519 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.283449064 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.282728544 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.283486785 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.339094919 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.282746891 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.332238641 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.280642602 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.437761382 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.307312154 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.284235519 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.28704326 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.286569056 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.28413719 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.280905963 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.290599839 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.281442284 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.285441837 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.29084879 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.281216482 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.281385286 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.388084204 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.393335309 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.281098717 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.296461536 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.291646299 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.281512498 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.337660047 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.284174602 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.281508333 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.337263652 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.399593287 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.34623306 seconds)
  done (took 148.232737667 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.289856448 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.29244833 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.28663174 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.300795895 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.285940545 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.284226394 seconds)
  done (took 8.955732735 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.287358302 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.285701724 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.28485813 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.284038214 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.284774702 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.286688736 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.285645537 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.286811972 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.289033732 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.285739254 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.285419356 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.2866151 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.285058675 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.285559975 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.286018587 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.28457972 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.286049336 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.281948414 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.28588109 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.285911942 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.381476959 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.286103506 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.286496259 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.287771374 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.290478877 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.285993653 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.29402949 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.28579351 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.285333033 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.294233222 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.287815287 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.287025015 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.287983729 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.292454222 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.289599072 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.287806908 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.289789981 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.699194733 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.284974829 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.287749083 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.28768869 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.287189848 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.288330475 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.288051686 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.289364326 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.291519125 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.29128513 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.296120065 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.287969382 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.288332444 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.287506374 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.287515967 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.288485737 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.28892495 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.290459442 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.290972885 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.292277252 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.28801662 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.287560616 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.288463853 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.288582231 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.287333277 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.289692958 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.292371857 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.295513818 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.289159135 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.289197658 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.290765618 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.286695291 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.288026062 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.287856611 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.285701538 seconds)
  done (took 95.461229187 seconds)
done (took 409.455988068 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.701865093 seconds)
  done (took 7.920750512 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.281055386 seconds)
  done (took 7.502913619 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.337186431 seconds)
  done (took 19.55876696 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.318992437 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.382272427 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.283015061 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.29331703 seconds)
  done (took 26.498381023 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.461018658 seconds)
  done (took 7.681329233 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.281835887 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.284243384 seconds)
  done (took 13.786637584 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.591446052 seconds)
  done (took 7.812872651 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.107697191 seconds)
  done (took 8.328013055 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.305845339 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.301360922 seconds)
  done (took 13.842035232 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.27086516 seconds)
  done (took 7.495919414 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.9283316 seconds)
  done (took 8.152609764 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.29605727 seconds)
  done (took 7.522270552 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.361982533 seconds)
  done (took 7.587113744 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.474312841 seconds)
  done (took 8.698407333 seconds)
done (took 153.611543286 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.285951612 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.28324004 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.284993326 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.284869813 seconds)
  done (took 26.362941536 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.326893866 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.327436268 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.328275727 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.338060615 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.329822075 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.326893231 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.319568051 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.31914632 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.337316098 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.329340899 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.329301978 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.329010361 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.327638234 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.319308754 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.329256734 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.329731626 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.338476025 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.328178234 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.320199776 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.330169446 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.294229263 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.339431927 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.330944272 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.294359662 seconds)
  done (took 33.049021276 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.494849527 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.367086294 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.448260355 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.347766212 seconds)
  done (took 6.883509399 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.346420439 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.34781972 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.358637355 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.39811561 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.424080221 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.357301486 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.321545605 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.316510624 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.302204264 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.347600913 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.424149066 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.364417493 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.44671975 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.294930367 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.481623849 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.294771343 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.295453077 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.349277618 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.398841197 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.420727322 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.296707517 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.347625907 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.35214708 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.364666056 seconds)
  done (took 33.878774658 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.294597439 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.303543061 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.302151938 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.295414667 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.295151558 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.295319058 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.30233095 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.297224211 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.317590139 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.296749972 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.295689815 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.296742529 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.295484605 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.296091416 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.29498529 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.307635277 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.308994014 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.296334716 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.299812319 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.301272597 seconds)
  done (took 27.220986542 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.290686031 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.234631042 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.642488948 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.545888225 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.289082543 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.287639111 seconds)
  done (took 28.518790938 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.357429966 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.474163308 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.297895759 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.61342451 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.690790249 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.298448191 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.298773119 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.508798186 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.777078232 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.783651942 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.345349951 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.345597182 seconds)
  done (took 19.019861872 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.294288286 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.290310724 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.291412235 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.308075655 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.346476932 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.301390209 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.304082868 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.290827178 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.346740786 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.349674041 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.30114337 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.347545749 seconds)
  done (took 37.002274867 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.380626559 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.33869263 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.121339836 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.083700076 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.669986655 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.50240917 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.098783518 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.746261423 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.292946607 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.565785519 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.102245517 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401263875 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.549383167 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291562559 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.294706507 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.229001095 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.521122667 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.750812182 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.293601964 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.031467407 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318413529 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.292071365 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.214035752 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.320797695 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.505191709 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.426593853 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.55436609 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.293694235 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551071311 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.305043968 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304047249 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.292808085 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.568027533 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924264072 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.385382386 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305036632 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.065673717 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.001716304 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.279640866 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.107508054 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.871357945 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.296178171 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304847134 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.293866558 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.227851911 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.294522804 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.752357516 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.29713245 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.005717867 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.295112594 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.305255795 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389052728 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.298303447 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.111173608 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.408832146 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.291955817 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.293129521 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.30095179 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928412219 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.516608749 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.299220296 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.230331552 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402349381 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.114885088 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879288828 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.397798497 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.299001895 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.299327265 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.231179139 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.090581762 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.31359888 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.62509976 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.314904678 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.946804691 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951665911 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.133159235 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.244323121 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.812968967 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.306707929 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.231735405 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.523354594 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296294648 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.232047868 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.24031056 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.23159112 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953274079 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304993271 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.626606981 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.304702476 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.751122908 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.305265713 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314278845 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320522066 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.521685379 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.18150805 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297664616 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.88135532 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448305935 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317194786 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.751979445 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.229552695 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.298146684 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.554579935 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.508346889 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.30421318 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.241643718 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.517074553 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294818593 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.326111322 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.29717823 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.321254388 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.831883672 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.310194728 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.521471492 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315845945 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.297593168 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989056964 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298178465 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.399765542 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.133104192 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.546424124 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.023425 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298399444 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.381368634 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.302095699 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.297480972 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.130767416 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.813542299 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.298029152 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.300421254 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3091372 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.309253255 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.299454239 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.248323764 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.293376073 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.147039942 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.301566714 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.522921835 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.300666333 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.574480706 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.233832891 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.628045267 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.351852255 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.518958827 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.439646936 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.299354874 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.559547773 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.308413718 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.298742227 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.323261953 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318615834 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397471761 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322427894 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.299992018 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.557193265 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.303641361 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.303659191 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.144081278 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.302876929 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30092916 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.304820593 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.200108984 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.828506134 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278762342 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.30603135 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.1900802 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.313544057 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.364443118 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.306074255 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.310276237 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.955812631 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.17420557 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.302795335 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.300183833 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.525666061 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.311345065 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.128531158 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.383074734 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.507724209 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.831783121 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.315117884 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.236099787 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.011598412 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.993633415 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.300174511 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.237032377 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.300632324 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311304095 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.312331986 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.524336642 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.838005387 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305096857 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.058279788 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.307741889 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.311389609 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.306499905 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301296111 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.93005263 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.534896514 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.316215525 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.313481139 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446004409 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.31645838 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.235256542 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.30702721 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.307338116 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.303303499 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.302282955 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335673325 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.060303856 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.792230016 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.561155988 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.06408132 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.311645003 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.229713707 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.332217691 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.312747133 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.93501626 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334373137 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.322749792 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311982925 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.313920216 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.117000912 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.963367132 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86693102 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992470059 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79465658 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.201918489 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.312478228 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.304906241 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.767949322 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.235319589 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.860512612 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.47507795 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.763739049 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.246899698 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.509671378 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.4478306 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.003552976 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.313942997 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.531877341 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.197753232 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.936760335 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.334880435 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.515731116 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338723996 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.313548007 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.233823864 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.587985278 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.579899502 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.923713527 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385884088 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.761378003 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.933656096 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.325171201 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.305273028 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.57510935 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471809547 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.015728452 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.478105951 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.302304539 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.180595291 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.809664 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.311815832 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.532014821 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889913418 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.30750745 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.526621103 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.238975146 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.315622717 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.315861634 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.306283863 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.447248247 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.309299585 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.55963424 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.316718025 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.240275982 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.306305384 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79718218 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.159373388 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.312072725 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305049497 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998384084 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.309903342 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567135859 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.318205746 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.918326901 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312333453 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.242507453 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.24142791 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.00000398 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.313398401 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282375914 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.762085341 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.395301091 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.369619877 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.322488987 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524747493 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.56270811 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.320539349 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.842038892 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.537579327 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.171504115 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326420888 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.407412623 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.989453383 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.309917753 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.307283187 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.544516006 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.212464938 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.52909877 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.147707971 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.214893848 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.307172748 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.517253186 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.30753574 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.205281675 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550123335 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.020974037 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.320830727 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968035876 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331727553 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.208449483 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.24028758 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.412689286 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.315414947 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387102126 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.319070611 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.319708232 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.3189369 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.473581608 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.190239882 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.328916541 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.322587001 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402779885 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.561770846 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.923647087 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.314955806 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.853415613 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992326314 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.860228158 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.32080424 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.309008166 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.309332256 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.24393557 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455076268 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.535529203 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583360724 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438423164 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.449586343 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330930664 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.009546517 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.335247461 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.521530331 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.585378359 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.205141034 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.311259983 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.322176698 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.310376012 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.320496939 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.52136333 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771619902 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835867933 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428973416 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.319429451 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.765976814 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.580795295 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.313974009 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.311568057 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.903878411 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.329569017 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.586471689 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.317060563 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.245572574 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457453564 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.321636342 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946709802 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.319080582 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.466923473 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.084838653 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.08252504 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.567787736 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.692172382 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.322025975 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.855344234 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.959431979 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.577987124 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379507811 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.32188434 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.431306134 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459071763 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.30842686 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.326661426 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.311689345 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361602498 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.021783739 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.322059719 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.855553428 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.576890163 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.309763473 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.309313686 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334343283 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.32258 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.536749414 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972710309 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.536698176 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.322233031 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.319345134 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.128662395 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.854321833 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.325446729 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247527734 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.314177305 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537850126 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.549613546 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.335935961 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.765708477 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.023828984 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.837558738 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.284585668 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334685999 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.315881711 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.964811441 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857989147 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.956078685 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.769063183 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.872621108 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.325314814 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.587143307 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.318344996 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.323462322 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.589775308 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.31857617 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.324497145 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.325736882 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.847773904 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.028346164 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.312481976 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.099432398 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.251967151 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.655837177 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.032679078 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.249220082 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.321799846 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.493702108 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.312825159 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447107945 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.32399265 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.312541356 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.314292304 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.072000142 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.58831606 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.317989083 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.30335412 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.015626027 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.31986364 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322418537 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592035023 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320457018 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.991770517 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.665581757 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.573079836 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.31624445 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.314396929 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.319787318 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316439404 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.304265912 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.579831184 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.540601216 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.837688868 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.329303172 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.325698999 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.321300165 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.532066575 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.528542469 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.22297546 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.347384308 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31626088 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.333897719 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.222099197 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.819025663 seconds)
  done (took 1568.186924067 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.321982658 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.325793782 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.337188661 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.31937272 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.349928 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.42580016 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.350358673 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.416090583 seconds)
  done (took 52.100407984 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.324524066 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.54885283 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.344922453 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.327568891 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.327942587 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.319771468 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.727988836 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.325492122 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.324534761 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.32843475 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.317824247 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.316929006 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.910503373 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.328141007 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.321132915 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.311820845 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.326015457 seconds)
  done (took 64.986893657 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.32721142 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.567308332 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.395060374 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.333557738 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.045496924 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.323686485 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.594794171 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.355787134 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.334614627 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.381234522 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.970257746 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.336061535 seconds)
  done (took 83.220395741 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.325189156 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.324743016 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.324685934 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.324684289 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.325322063 seconds)
  done (took 7.880177382 seconds)
done (took 1989.541796753 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.57005583 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.97423524 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.922960621 seconds)
  done (took 5.152719027 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.467742025 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.515845552 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.637256856 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.657202454 seconds)
  done (took 7.53227589 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.603436495 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.7201237 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.529732312 seconds)
  done (took 6.10784066 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.592236074 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.325726418 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.393946885 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.318100209 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.318250407 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.316188634 seconds)
  done (took 20.209171774 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.323012303 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.326861661 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.323214134 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.326107293 seconds)
  done (took 6.554880854 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.302907783 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.039920795 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.305364799 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.318905221 seconds)
  done (took 18.222664634 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.069368494 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.082836073 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.079548213 seconds)
  done (took 7.48790884 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.318350413 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.164995358 seconds)
  done (took 9.739489834 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.63757907 seconds)
  done (took 2.892455192 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.455757297 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.586365404 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.26876209 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.21660106 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.29900517 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.800225661 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.780824106 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.412630117 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.202434293 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.255051658 seconds)
  done (took 26.535520376 seconds)
done (took 123.575938823 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.857565824 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.553593072 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.52324857 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.823444903 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.539081591 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.522260744 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.74790357 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.792209186 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.337131767 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.328869025 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.827709339 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.5401891 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.482015457 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.565452313 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.480674282 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.565470184 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.542176736 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.897785599 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.545113016 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.704036794 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.741508097 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.465744067 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.655742586 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.519971085 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.543937552 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.468178551 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.043532718 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.561920013 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.723061861 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.097809844 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.468404406 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.881261761 seconds)
  done (took 189.604469632 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.32071339 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.321148094 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.318825768 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.32542961 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.319753738 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.322150835 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.332699413 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.331508562 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.319215509 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.324067167 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.325436817 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.318610798 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.329371636 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.318655242 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.332720849 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.331861349 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.331841853 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.332533785 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.320170615 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.332085985 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.319726483 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.320518428 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.326964635 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.320351441 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.32965749 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.319496275 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.319908928 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.333587304 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.3203267 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.319677231 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.324512713 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.322805823 seconds)
  done (took 203.646273242 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.328665472 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.323453393 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.322036842 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.322992413 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.32504137 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.324464267 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.32187287 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.33238268 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.324443098 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.323594302 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.321982773 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.340125705 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.321189512 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.320522428 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.323353099 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.322204175 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.321087471 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.332197649 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.322962469 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.322259936 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.340253691 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.322262133 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.337298643 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.321251235 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.323839233 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.321304109 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.322220163 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.321935326 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.337909214 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.327021197 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.324310537 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.335517461 seconds)
  done (took 203.692489505 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.519958268 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.332574959 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.33243301 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.267051573 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.332522125 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.331619671 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.329097465 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.529171716 seconds)
  done (took 14.236839299 seconds)
done (took 612.44037002 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.493691476 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.21967128 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.524846729 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.351553447 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.05272143 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.353807768 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.353259513 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.511267677 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.808646917 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.496216725 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.516655738 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.351849925 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.660783042 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.351662132 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.586008556 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.445208447 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.189948584 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.29975807 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.646624546 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.823469202 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.595471549 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.814874292 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.508422951 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.854051222 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.662063478 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.852229976 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.01878018 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.198589943 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.351897111 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.650882786 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.877507936 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.276539654 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.403138339 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.385314738 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.443224874 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.426261744 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.245361961 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.386443782 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.527785207 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.584395231 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.833438579 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.609696344 seconds)
  done (took 91.805538328 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.32388549 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.322914329 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.322424148 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.323915441 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.323746577 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.321966256 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.32314259 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.322316759 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.322894592 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.322919568 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.322262108 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.323517051 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.322383396 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.323615975 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.322707904 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.321830195 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.323092024 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.326086087 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.322246454 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.321554641 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.323836443 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.322507447 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.322866856 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.3230466 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.323379112 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.323932829 seconds)
  done (took 35.664882416 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.336697505 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.556358468 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.726099523 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.343018865 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.335472756 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.340250662 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.406641357 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.336178863 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.339374668 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.339696239 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.485440432 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.338320622 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.368484951 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.732821144 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.340734943 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.337853756 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.337328122 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.337580876 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.564253805 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.346276343 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.422671081 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.336978171 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.407103531 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.346822601 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.35440798 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.338301774 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.341936446 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.858531733 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.339662658 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.487406935 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.029575385 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.40450416 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.825232052 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.736771509 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.032089853 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.338544104 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.337172888 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.490614633 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.33650822 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.337393671 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.40749112 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.336178037 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.738933765 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.954021863 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.352443059 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.339189819 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.879425466 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.487372959 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.555958781 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.346916108 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.753070704 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.341864652 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.341058154 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.339513127 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.55873868 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.34563619 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.338712078 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.901810719 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.356756347 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.409423776 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.339489988 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.339153229 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.572408548 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.340820404 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.562466813 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.339137464 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.347838613 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.340540733 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.735693237 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.342594739 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.970899146 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.352404371 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.339506455 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.489149673 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.562867474 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.904225056 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.340968701 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.577423256 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.833458534 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.40596942 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.343455997 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.848933895 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.408637878 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.343283835 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.34212709 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.341967191 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.340687397 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.384024192 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.408050093 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.899049306 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.964477085 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.919104342 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.422902395 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.352454942 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.340515107 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.904870613 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.35418033 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.340584127 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.731357621 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.97491151 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.351546182 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.348156729 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.962558775 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.356243467 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.411072884 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.347711676 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.743878166 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.343737996 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.384509381 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.340767428 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.349441384 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.344688944 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.413615732 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.346834541 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.34350966 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.95242338 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.509141411 seconds)
  done (took 175.557949325 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.344111847 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.33218787 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.34391704 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.333313179 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.33489755 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.341796363 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.334816856 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.335985265 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.341366384 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.335175902 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.33601066 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.342191442 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.337619478 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.338299795 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.343403913 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.342806897 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.948645631 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.341331202 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.33679545 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.34572742 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.112808455 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.337134773 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.35042432 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.333626575 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.341724054 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.337734637 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.344373308 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.336624139 seconds)
  done (took 152.157871646 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.343522545 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.854812241 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.344673592 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.461876231 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.360317585 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.341477364 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.460514083 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.394148201 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.345287804 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.341631735 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.34101953 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.618535125 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.34376681 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.809491309 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.509237994 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.462466016 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.807325162 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.342428568 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.342369396 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.340843168 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.463619462 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.348348188 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.616904462 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.850828332 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.342499333 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.85877828 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.333612503 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.345697243 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.343328893 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.86243709 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.342938427 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.622729707 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.413364976 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.395120218 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.862015254 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.814260211 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.817382 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.475438356 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.344765891 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.342872494 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.342375055 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.332686331 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.860416057 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.346658293 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.3456393 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.855159457 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.358733621 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.344987677 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.353991774 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.343167826 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.398768106 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.400015444 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.624525207 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.866215599 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.41486834 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.364115653 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.465035992 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.709041458 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.348155697 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.815351444 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.332535476 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.865572984 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.349319141 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.333549897 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.344307788 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.35015316 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.479611671 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.465584334 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.817024958 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.348707865 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.818058908 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.480116508 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.344440641 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.343966893 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.347822087 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.866635776 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.818858227 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.480815674 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.466095722 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.518338783 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.335772865 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.34636669 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.335097245 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.415366273 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.345672755 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.868604607 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.814857884 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.344314885 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.347648943 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.347329466 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.347421748 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.50320896 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.868192602 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.417512065 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.80964501 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.635400149 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.628456516 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.348712207 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.400507704 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.346805489 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.628280589 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.349560074 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.399576521 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.77107642 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.629119488 seconds)
  done (took 158.885818116 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.567254467 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.461203199 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.428205531 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.455989006 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.856712234 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.900041059 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.378837513 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.463119839 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.447734618 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.575512593 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 1.967668917 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.433930138 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.516701984 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.41614604 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.022727613 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.40970699 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.434685105 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.479098855 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.44937296 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.312961597 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.916032137 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.619909852 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.504903331 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.188083009 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.434054251 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.055910804 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.074175508 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.848120593 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.504548685 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.463691253 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.844734582 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.442993252 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.196628366 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.940680759 seconds)
  done (took 63.290835738 seconds)
done (took 678.628527213 seconds)
SAVING RESULT...
DONE!
