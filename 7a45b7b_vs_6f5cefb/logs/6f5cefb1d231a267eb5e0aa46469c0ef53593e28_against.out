cset: moving following pidspec: 25497
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.270301837 seconds)
loading group "string"... done (took 0.522585164 seconds)
loading group "linalg"... done (took 6.842321624 seconds)
loading group "parallel"... done (took 0.152098191 seconds)
loading group "find"... done (took 1.073734274 seconds)
loading group "tuple"... done (took 1.667514773 seconds)
loading group "dates"... done (took 1.282603858 seconds)
loading group "micro"... done (took 0.22798363 seconds)
loading group "io"... done (took 0.980917271 seconds)
loading group "scalar"... done (took 36.389299965 seconds)
loading group "sparse"... done (took 12.105310835 seconds)
loading group "broadcast"... done (took 0.926870812 seconds)
loading group "union"... done (took 12.125594603 seconds)
loading group "simd"... done (took 4.221235414 seconds)
loading group "random"... done (took 8.492762064 seconds)
loading group "problem"... done (took 2.013204599 seconds)
loading group "array"... done (took 20.435019441 seconds)
loading group "misc"... done (took 1.748088514 seconds)
loading group "sort"... done (took 3.20725575 seconds)
loading group "collection"... done (took 16.978489324 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.507372244 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139343635 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131127761 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.13391564 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.16867045 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.129526681 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.140217604 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082758005 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.100408949 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.155101239 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.133605763 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.463705553 seconds)
done (took 5.091687059 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.201181145 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083590014 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095930076 seconds)
  done (took 0.931981917 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06572711 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120978872 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066004851 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.082807227 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066684388 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065357183 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.082382815 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066002616 seconds)
  done (took 1.309897385 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073384142 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067596281 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083990603 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06764161 seconds)
  done (took 1.054600224 seconds)
done (took 4.32963575 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.833021367 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.239262486 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182453248 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.445655624 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.146664695 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.180649184 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.661569544 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.323599927 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.19925921 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081860978 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.119174426 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.355410886 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.123247899 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.659425954 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075487044 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.105441223 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.159393727 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.428043117 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.069064205 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085637149 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103678966 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128936654 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.100552562 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09060707 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.158067876 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082083725 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.146014822 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081663162 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.083188075 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.224137861 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.187397463 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.672025751 seconds)
  done (took 10.331196253 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096884552 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.112809343 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067896702 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139979788 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096796845 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086816221 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071560579 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066107686 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.103803881 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.143573663 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088765098 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.116984627 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064848846 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.085796824 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083665226 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.221280005 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078693812 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.098459631 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070661902 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090422045 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107609703 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094200283 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080196842 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093602049 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128642586 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.193592197 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097324382 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112002421 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068520714 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096778972 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.129205663 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128576584 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065281681 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083186501 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124803199 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111147128 seconds)
  done (took 4.472992237 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.002371298 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.155075219 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091233497 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149499485 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067259762 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.124092745 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.081449815 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084794377 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.231487469 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.145511084 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.445871941 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12791167 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102079702 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068154034 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068184271 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083130369 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.530552093 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.142829412 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10305871 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.101037119 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073711739 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085771692 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.355778156 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068429112 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065769649 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083644161 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059023749 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.14012043 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06800834 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.137423147 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.087275757 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066029011 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120376538 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.186087146 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088704918 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.150357648 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083333578 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065705357 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.164708357 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089561557 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066902605 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082658789 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120393502 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118908235 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068672586 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082861904 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.174022711 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067068796 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081532819 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.843428899 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.166024118 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.093590043 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.083428526 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.262104572 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.103299987 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066795561 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063525183 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.247120153 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.148619416 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066844047 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082665518 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066542893 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067566852 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.381273535 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08598552 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.721851679 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071146342 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07803534 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08484165 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067269242 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088662047 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071765093 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.10006288 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066786913 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067227814 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083068364 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066216648 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067363594 seconds)
    (78/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.10096958 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.107569567 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.204639469 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067223082 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066413381 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.082452547 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085528209 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111555923 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070265808 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065224562 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116042976 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068496884 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083899512 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065110169 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.118575966 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067598739 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063385862 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.101500266 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084511029 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113963528 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082293335 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.127152641 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067711146 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.070480758 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.114058306 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.085743954 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099469912 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.094337421 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067199502 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.147774434 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064062751 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081559586 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066897891 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067378675 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08461241 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068524362 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.095456936 seconds)
  done (took 20.718363026 seconds)
done (took 37.283433962 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.288128617 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.092886136 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074421954 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.093102975 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.092333808 seconds)
  done (took 1.477325641 seconds)
done (took 2.281774815 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118308658 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116088439 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063338482 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113288473 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063599372 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.117263353 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.096828102 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.098656644 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114673296 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065289786 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094823473 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081215316 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063444381 seconds)
  done (took 2.042499442 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082429043 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082254102 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085867351 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082169101 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062299643 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099110485 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079392968 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104337669 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080956562 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070625364 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081210715 seconds)
  done (took 1.714630519 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081625992 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082182909 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085750607 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081300022 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062813758 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098151841 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080471859 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101314799 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080665844 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089043897 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064659362 seconds)
  done (took 1.710735899 seconds)
done (took 6.262025704 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077672929 seconds)
  done (took 0.873198181 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.680461556 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.943039283 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079417015 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.13294236 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.199557894 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.140902501 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.340803733 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086585141 seconds)
  done (took 9.595885942 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.086428051 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.099209953 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072882577 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087663931 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068989646 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069668065 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.087609403 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069798176 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083965815 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069226693 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068420507 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.087388948 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071371758 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086450336 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071658063 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085050007 seconds)
  done (took 2.131676146 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091076039 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.108862109 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072283687 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.093244152 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071144761 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.089881605 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073960825 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.091424138 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070339482 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.088388702 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074683497 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.090049078 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071589354 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081716466 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074225845 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.091682886 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070905704 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.089961103 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075276436 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090118215 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.0753964 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063581454 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089272783 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073584008 seconds)
  done (took 2.854949024 seconds)
done (took 16.256438003 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111349411 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08791661 seconds)
  done (took 1.004553402 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081269486 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098579046 seconds)
  done (took 0.989022214 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08244345 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.080885646 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090602868 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094010909 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065349862 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.082083806 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103825202 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066704552 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06500872 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.082999065 seconds)
  done (took 1.625844741 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06967701 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093603794 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071092467 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097586598 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074107839 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.080772803 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073479448 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083296051 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079203623 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078459064 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072258402 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098049874 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071219667 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.100562084 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073179072 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085439164 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071527748 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.084192422 seconds)
  done (took 2.268758808 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066426355 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066013857 seconds)
  done (took 0.944481729 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068295035 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062557934 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083760354 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066534849 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080704402 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063140301 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079442811 seconds)
  done (took 1.319320791 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.405709876 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109453405 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.327864373 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070535571 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.100319616 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.268173567 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064377836 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069833776 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091177993 seconds)
  done (took 2.360677127 seconds)
done (took 11.321651552 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080103961 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084411442 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111324012 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.412341476 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09302305 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.082469662 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.131463396 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.226557737 seconds)
done (took 2.035018863 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.12699912 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.613622855 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.404491154 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.211353691 seconds)
  done (took 2.048579353 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.312122426 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.110137675 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059522276 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.083073013 seconds)
  done (took 1.388700471 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066731684 seconds)
    (2/2) benchmarking "read"...
    done (took 0.06889016 seconds)
  done (took 0.956930547 seconds)
done (took 5.337609119 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067363762 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082004975 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.085305169 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066123248 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.081787253 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066677928 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.06344651 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.081878811 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066845021 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065939249 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.082342012 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.069563646 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.06531049 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082819666 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064360835 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063521284 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082532472 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064526738 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063658013 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080746081 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063685403 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06550611 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.081086775 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063459569 seconds)
  done (took 2.579344538 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084306688 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.082786939 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073280554 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.07068438 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.088115568 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071213239 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.092123822 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06625056 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088536194 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068963389 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085773262 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070780582 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066966498 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087996809 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068520413 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.088205854 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071508039 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083645546 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068898785 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.086918729 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072553093 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066114376 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.087226304 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071026077 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087618655 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070063306 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.087355609 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066922209 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088139147 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070583643 seconds)
  done (took 3.159668204 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070424606 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062719676 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081113599 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070983038 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063056772 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082658281 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064449098 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063621196 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.082749385 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063748437 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063902455 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.081567705 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06393615 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.081368821 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065440485 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066760879 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096323966 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064594432 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062827469 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.083004676 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066952825 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062965038 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.082124019 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063656225 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.0803282 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064336431 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064651922 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080409905 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065699838 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063617858 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.084439368 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067823946 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062851122 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.087552635 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06739943 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063369751 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.085166275 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064176967 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063697559 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.080895732 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062657575 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.079413797 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064886813 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069958943 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080583252 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06612236 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063001319 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.083092588 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064326664 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065261478 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081897114 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064401281 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.08272969 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066588111 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067237218 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080485311 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064865209 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063499272 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081925738 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063533821 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062500668 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.081098017 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066638879 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063400658 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077060698 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069156771 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.082300368 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06636275 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064452625 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084130759 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06589683 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076538123 seconds)
  done (took 5.962951513 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091536135 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105660838 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064872268 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084207223 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062006245 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.080862371 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068543244 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063456336 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083857013 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069458181 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081522721 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065111885 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065364364 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094706338 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064425521 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.081980715 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070697025 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062174833 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.192163648 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067171606 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08064819 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068657143 seconds)
  done (took 2.602458247 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.173539446 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070720465 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.123612164 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072635243 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066427371 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092602885 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070851162 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069804856 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089189719 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068045433 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086397287 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069891037 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085839218 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06858231 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086362397 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069237032 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08637308 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069856593 seconds)
  done (took 2.354019664 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078330561 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066314539 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104143382 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065821632 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085010832 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068575855 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088896941 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074708722 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084913765 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066645681 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073448746 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086489559 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067900478 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083924908 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068574551 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065879965 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.08626537 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065614909 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091910785 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07105399 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088753402 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074902754 seconds)
  done (took 2.54467636 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080223576 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067536237 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100328432 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068586697 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080994323 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06488354 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.087421948 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067259408 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.06950112 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.085392498 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066233486 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08118685 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070513296 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066204406 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.087655191 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066035326 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085124953 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066771518 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067158133 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080610113 seconds)
  done (took 2.345519578 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087823739 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084862186 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068379407 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09338106 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068451072 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084407962 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077482892 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.084540388 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068248644 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10503565 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068450094 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06757842 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094411927 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090244825 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067793254 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09354707 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076553977 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09410525 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067670432 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085748145 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087221958 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085745378 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076336699 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.085674986 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068245948 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.085001453 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068069859 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090167578 seconds)
  done (took 3.109641267 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066485052 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065986106 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080701473 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064332308 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06332688 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081199792 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064172311 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063508692 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083602141 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064146155 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066047016 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.083288892 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067038074 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065248546 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084029694 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067054828 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06477952 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.081341055 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064580149 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063112959 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084088659 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065695223 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064777206 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082001857 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063166972 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.082834447 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065182929 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063341112 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082994064 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064237779 seconds)
  done (took 2.960792819 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076495585 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072681041 seconds)
  done (took 0.990780287 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064394592 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080208556 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081889164 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070384673 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087914151 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067274249 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072618516 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089118636 seconds)
  done (took 1.456619422 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082731579 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076535816 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.0858481 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079152315 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095706591 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082104076 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.154555538 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086212465 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073653585 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064149465 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.099391433 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065829825 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090810142 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067241248 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071733129 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091750755 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064196468 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.091263852 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069639826 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064906701 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086825244 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075021583 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086798917 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062410386 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067981183 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.106587955 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094897067 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067196905 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069349418 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.092449501 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072031395 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.077818268 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067834719 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067420633 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.082626382 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076645157 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100242835 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069979986 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092612834 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069437441 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095775273 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062878431 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071587784 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092001036 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077446706 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084135218 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069291508 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061715982 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083294186 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069577998 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061773151 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085258085 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061371286 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091262295 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071053007 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07935466 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.084302937 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068208275 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087283127 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070516013 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072569436 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087079771 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068884001 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083609687 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077570323 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071207938 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094145137 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061717401 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.079485383 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065755513 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075086417 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086754425 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07125263 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.088305588 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06733802 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.08317746 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070331056 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067589511 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090881344 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072538026 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084827328 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072498055 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091228631 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067908798 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068594001 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093736336 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064677643 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.088056338 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064280637 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100541071 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065995064 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064231802 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082418671 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075934832 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088079944 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066435944 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063764344 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091762154 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061058344 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084550978 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068437952 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066463022 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095472404 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071146776 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0910347 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075224467 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.091774429 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066435138 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069236379 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062599275 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066953358 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06444812 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072416504 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059978971 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092161989 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067825243 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085544267 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.07611398 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064073359 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.086016092 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074273426 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.090331368 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065698198 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062737258 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088363784 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066753943 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087980423 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075197511 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064821203 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.081294542 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062610432 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.087415764 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067561684 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069117323 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090361336 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068964025 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.079268522 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06558716 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089756758 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076506084 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066886709 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085938808 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07212294 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.085734025 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066227974 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072615376 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087741067 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066394986 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07094294 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066233484 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060870125 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090533944 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.0688518 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082859274 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071473715 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06941923 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087282156 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06791394 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083091783 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074989366 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084722063 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066530009 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066298262 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082920919 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077168113 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068203649 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.081158926 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063808402 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.094144729 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064858956 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.083778939 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066882272 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068571254 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.08583371 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065002229 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066042516 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086641177 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076023532 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089523747 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067550632 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090505541 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077868254 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065900847 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068178947 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064864518 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088065215 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067770838 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093395068 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072676271 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071704693 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088014662 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063424963 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090726102 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07492623 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066321303 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.083915627 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065971338 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.089072412 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072926371 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.08822005 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06881948 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064533196 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085170208 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070609171 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086543501 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067390415 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065620016 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.092504389 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06491163 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.093020904 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069115069 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095654269 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071413996 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060990244 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088882572 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065140987 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.09022171 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063233645 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064398914 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.08397748 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068532034 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064571675 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.087632362 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061546962 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090649012 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074396368 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066779122 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084983022 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06629202 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091675591 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06921288 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069810092 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088981897 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072559147 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095441778 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066318403 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069470568 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095755696 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067030264 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.079820605 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073070042 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064504186 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084473674 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065950787 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.082287212 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070555929 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093616632 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074071528 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060133201 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087523183 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06539781 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065296649 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081392261 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070717184 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087464404 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067987729 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072422609 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086764602 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066686679 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088367922 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067478801 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066781265 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086755201 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069321262 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.085742806 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068948918 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065704371 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088218478 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065975256 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082402528 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070280685 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066064704 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.065854273 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070305961 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085589838 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068027066 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.06892178 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.08666128 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068193592 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066746293 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085081609 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069631385 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085259362 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067990767 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068006327 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.08138997 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073704483 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084899182 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074865984 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065978966 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062103246 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.071938488 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089276539 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073219971 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.085304785 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068845192 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066874402 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.08503642 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069523171 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091517761 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065995975 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077691571 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093617903 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067323418 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.087921556 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067702203 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067442223 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06515921 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066683015 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.08716617 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067811443 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065994764 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.090274849 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069577586 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066194868 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067030955 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06646512 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.08746168 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068878464 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060630168 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085620497 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066572487 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.084524106 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077564205 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067211694 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08582499 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065615374 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086447188 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067080881 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063384614 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073332309 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075016658 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088788171 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074105091 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085339925 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068951885 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094834345 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.06241343 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06492516 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082968219 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065668475 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073409273 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086682484 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075641655 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085720065 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066859888 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063423605 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086784371 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066323021 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060633172 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.084062041 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070733516 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083931579 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067039287 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066274674 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088283872 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.0672593 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094728202 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066479315 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066477298 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.087167754 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064334533 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084169266 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067344105 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068935019 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086177259 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064799644 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063649182 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.085688238 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06766799 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.08650437 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067927823 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067727468 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071922004 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065024484 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.08929598 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070185868 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063638251 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089166186 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066663946 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.084803961 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067342436 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.0693796 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089367027 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068723647 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093241398 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067047109 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066387905 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086273337 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06468416 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083963833 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06770032 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066340655 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08505592 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068063535 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092082616 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065866194 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068710817 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085762619 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067500148 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090899872 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069732945 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069175852 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092865911 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067126114 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.086738058 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075160262 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069712243 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068537548 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066691429 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.089804054 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0720628 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064677591 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072207569 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06564487 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.088733407 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068514256 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064124767 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086672785 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066100703 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083881908 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074422699 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06754269 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085037418 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06645283 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082635958 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06819309 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069636031 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093026689 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069139197 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087799727 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062450923 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063653037 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087000232 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065312895 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068230766 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.088004256 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071626877 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088039501 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068139473 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06529438 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.09496716 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071708625 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089922711 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065049963 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069174859 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.087240985 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069622668 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087279224 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067195581 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066942667 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.089862533 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068299131 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.084976282 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074315662 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069442954 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087342197 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067895632 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085822192 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067976214 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061570262 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.086968388 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069215084 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089768073 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070117911 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066605102 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096869284 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064760236 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.085951767 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070708663 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066488325 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.091278043 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062021608 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.087417215 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069293451 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067235915 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.081591175 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066286063 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064041694 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.089036269 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065920874 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.080715751 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078299583 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075133836 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068080974 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064405396 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087158039 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063038595 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061093189 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.085873783 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067833391 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087091276 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.07697794 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065049746 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085048376 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061980358 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084920893 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070537498 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069442968 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083573054 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062587508 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065240103 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068395655 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070796184 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086408166 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067180073 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068664138 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.090028115 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064508016 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089034491 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064487489 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070181087 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098439744 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066973534 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086924999 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07227904 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092837103 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068054881 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061714611 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087036416 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069684923 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085929688 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068508616 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066973838 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101776918 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069167336 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.08484529 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066632528 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068616003 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086159661 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073905887 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08679204 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068196373 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.089645433 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069801594 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075277047 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089363735 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073502937 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.089228922 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069280328 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.083763275 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068285137 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064360974 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.084851666 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068373028 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067337803 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091985822 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074197242 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086095689 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076886688 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095004845 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067997934 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063223384 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.085989197 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066027944 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081009948 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06830691 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064902962 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.084055396 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.06455621 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065312681 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066444604 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070614938 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088331989 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068707524 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065569572 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.080996091 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069056121 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.08778514 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068973027 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063844007 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.085752747 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068308625 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070376096 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089736468 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064482907 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087700403 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069583805 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066461411 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081765238 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072837143 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084328642 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069414747 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065370768 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086378254 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068724563 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069334917 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091720673 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067234632 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088036429 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070246198 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088236145 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064555968 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063504165 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091728155 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06489259 seconds)
  done (took 46.032844554 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100805978 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082696372 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063267687 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061805684 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095174891 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062411994 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08250564 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063440273 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081730443 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067449917 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062103155 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081353296 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071137625 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09799955 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073935843 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087676432 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062613786 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.082722081 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062651877 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06258844 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091952256 seconds)
  done (took 2.489377168 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075227598 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.068997389 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070628455 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074543017 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065976059 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094571991 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073174378 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091581511 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076570181 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088594944 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075732114 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090506906 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067556257 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.087944785 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066686065 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091006686 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075579688 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088491955 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070381119 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093720604 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070167241 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093670681 seconds)
  done (took 2.640987829 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067743824 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065337461 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086353079 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062452007 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065339263 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.080634922 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069279917 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062850934 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.075724077 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.063741372 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.086802743 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065492329 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067153057 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.082141599 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067010304 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063435468 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.129495275 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.090558867 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065042458 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065668008 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060991409 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066198423 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.084384531 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062373971 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064120967 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.090811529 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066914273 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.083129465 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067113517 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064217736 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.085704745 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064440041 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066558001 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.08681005 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064847459 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064366111 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086210189 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065592388 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080632918 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065526557 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066216856 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.081728434 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066640902 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066414662 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.084888212 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063733316 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.08685127 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066957883 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061642966 seconds)
  done (took 4.460567583 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080268915 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.129262581 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066572338 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089222286 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.10250378 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072700112 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.090839909 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109200236 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064634022 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06445357 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.103597368 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.081699511 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064490685 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.092842211 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073299412 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08669101 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067660777 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064198308 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.090903387 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065507149 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.090264891 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072093063 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.101735118 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.099286631 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070252665 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083828506 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066378513 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069113129 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099874443 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.090158991 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071147091 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091915182 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081749217 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.092252378 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065146666 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088045776 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082438903 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.086230982 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067972451 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.082943919 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069307131 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088703801 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075095607 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.10293154 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067061014 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.090663408 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066953062 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062388475 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.099544431 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067585041 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.095156074 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.100676702 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070865271 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085484705 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072178259 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101574649 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065918064 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.083740758 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070395721 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098858325 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065078877 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088260541 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081681395 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087140749 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074760533 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100691638 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071423711 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.09048128 seconds)
  done (took 6.647526595 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076880455 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092813523 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081989754 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102180528 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071598699 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070636743 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093389447 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074080767 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092283153 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078996598 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093060324 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114062562 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069325105 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094797957 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074318647 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093597984 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073618511 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09264736 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073368111 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092514735 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073022018 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.100910957 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091193081 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082667518 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.095979598 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066664906 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09497977 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073088982 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102116761 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.091748604 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.0814235 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092252893 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073335832 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102224199 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079544921 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093234066 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065096935 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092951966 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072409255 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070705199 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066831023 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104266497 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.092509151 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069094805 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092209881 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073688112 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.101399079 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079624822 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096072579 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096749268 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073921789 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101469555 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072497278 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093255633 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100376886 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.106152154 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102047366 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101077333 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072864398 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101795851 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10025394 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088909242 seconds)
  done (took 6.286235761 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084225415 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095477192 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076074063 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.082776745 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064389319 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069345304 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063446876 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063072619 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098516403 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073655845 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098536578 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089458296 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074985109 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097250864 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070510278 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093904204 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069149166 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090652049 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073818663 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091483041 seconds)
  done (took 2.523490663 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075287414 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082185349 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.088233435 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072028013 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090016516 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072008459 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.088956851 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06945838 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086761711 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070355214 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075773655 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09751087 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066056242 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092716531 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.095179571 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073778297 seconds)
  done (took 2.199491552 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.076094374 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.09238112 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080565518 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086305394 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066023735 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063273633 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.087359956 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062096048 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062187994 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.099990376 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065535097 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.090004836 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066069871 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084848184 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064257503 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068126219 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.08384786 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063651895 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.085253613 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079625591 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096304872 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06644075 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066149388 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087102409 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066094773 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091545135 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066222958 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.083666824 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064986564 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065899248 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088138446 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069690881 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.08369503 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065081553 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064302225 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084931293 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065994696 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086972319 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069761968 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065719631 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085412952 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065799765 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086756601 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068356077 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061960893 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.088119776 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062702528 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.089063656 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064451548 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086350414 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06709037 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068053316 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.088033845 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072740113 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090055694 seconds)
  done (took 5.07673507 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080946927 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068942132 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082919909 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064181587 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068341736 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.089128084 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068446051 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089061752 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068102331 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083155149 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06928319 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06867044 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088396394 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07025274 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066828337 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068862658 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060653974 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.09074854 seconds)
  done (took 2.252823036 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072372134 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065755593 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.0935614 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066688282 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065247788 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.089834443 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062119975 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085339427 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065659407 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065955023 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086444668 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068363999 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083916501 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069055405 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065365181 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086265126 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068757165 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064350267 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086916868 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062193071 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088217604 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065668848 seconds)
  done (took 2.534924194 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073737134 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.090995192 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.160211292 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.104990841 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081275056 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.099417097 seconds)
  done (took 1.521950974 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091334881 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099646226 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067445097 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086394071 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09629731 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0672009 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089455854 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067716964 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098728818 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098124334 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069347745 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098246392 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076801614 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098312978 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09376179 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075680429 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087755972 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069619061 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066551283 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082385816 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089960487 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077332208 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08946221 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068917311 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088339561 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076110661 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097605149 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097011241 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069227393 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097142734 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075175849 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087926599 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07736246 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09843031 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069659741 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097625376 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067589577 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106754421 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093363775 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077673233 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089900927 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075046138 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097642638 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07278585 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0977255 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068784589 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095011502 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067713557 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089968557 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107795743 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073705884 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097478198 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07412771 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098493702 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096430904 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08737704 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098255711 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097292948 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075144548 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097735108 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076053515 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095362927 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096229663 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078359575 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094563039 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078379537 seconds)
  done (took 6.572474902 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083101162 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106735318 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068770842 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097959124 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076052878 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089830507 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068079678 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088891451 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067640799 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088656823 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128019743 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070260991 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097570535 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076768569 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089550985 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06846356 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089051649 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076047845 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089549503 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108188935 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069458774 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097116265 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076721546 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09781517 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097658864 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075010238 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088825883 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069577666 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0887742 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068778713 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094632491 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069276792 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097789344 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067875493 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097513774 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068031342 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089529935 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072714497 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090080328 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073413234 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098530268 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10656581 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067911384 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089950889 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077681276 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090130523 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067728725 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088911423 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068077119 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08919808 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077950701 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075779445 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075212804 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074253756 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093382069 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069209537 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088934697 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069767779 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088563419 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074589522 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097322904 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068784103 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109408331 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068143516 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090125106 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09732577 seconds)
  done (took 6.462206174 seconds)
done (took 128.589676586 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.201567048 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.187194768 seconds)
  done (took 1.299775113 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069763112 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095655139 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099327288 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127325502 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087857662 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100623768 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.09845259 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.100474891 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066977942 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087158633 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068351532 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067947634 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.152104658 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066899132 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.06599433 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.089919605 seconds)
  done (took 2.363742042 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102718303 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.19479588 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109494686 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06538744 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100061966 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078046575 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064862792 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.096147552 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070729918 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086812347 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078444857 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095344578 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06531774 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.073957724 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.06970119 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.098215994 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066680088 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076914048 seconds)
  done (took 2.515603585 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101846371 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142844926 seconds)
  done (took 1.168848331 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.184348215 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.137794482 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.18880543 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.423435348 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.205003185 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.262784266 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.177893858 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.175476646 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.156170529 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.173770253 seconds)
  done (took 3.002032617 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099641205 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171200146 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.303578933 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116184565 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.095982351 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.115379814 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117609126 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.100187439 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079149866 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100715642 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.098770166 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077554922 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.11838168 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074951995 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.09534611 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077274283 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121533311 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073870383 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.096590301 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076614028 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118826667 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067672849 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074579106 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.095370249 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075728694 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098343013 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065930162 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065757342 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073178327 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096563858 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07914883 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114096671 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075544309 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.128624415 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.092440682 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.130084401 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076756863 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.094475888 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074527359 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.09344144 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077974785 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.097504903 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073280706 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097016586 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067102712 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076246857 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.088037171 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065817241 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.100273432 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068281796 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099269577 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078840356 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.1291395 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.088232465 seconds)
  done (took 6.12931373 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.708863512 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.126182071 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070374666 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.129904316 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115922454 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073818197 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.763456784 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11313783 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.199065457 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092970216 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087137012 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.06968086 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103304024 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085559068 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.130504824 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.10219095 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115439979 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071123198 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.123149262 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.120951052 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068779165 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092881386 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.08886187 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.43378328 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067756899 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092327896 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06934059 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069340099 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.133155157 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100768911 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069836299 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.164559998 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.086604508 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.1200561 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09097576 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069067687 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06741655 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.10212947 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.204900796 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.179590198 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.152250361 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069177204 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068356373 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.091440397 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.089468503 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088560703 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.132800512 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080086206 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.141363208 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091388073 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070009944 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088397414 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070273982 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.0999804 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078830282 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.10097748 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.255612974 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088417839 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069673285 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071425769 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.226356218 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079243957 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.10123039 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.091919519 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.176577187 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069380179 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.739971041 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086768882 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.0676189 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.092162803 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068096685 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.090613624 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070707704 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.139616387 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.364073307 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071013669 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069692965 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090284131 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.200924181 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077361311 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067344484 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.135329096 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067706487 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090305616 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070115491 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069595037 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.137921426 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079125193 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068607569 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.091933979 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070169937 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.088852809 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067818954 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.184177833 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.100195531 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080626055 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.17921339 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.089820628 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.134976588 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080136924 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09010629 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080737255 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.088870298 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071912297 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069233657 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077743521 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.118383065 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079960095 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069635452 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067158578 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.121536611 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080603809 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.090853813 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079637617 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.445580239 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.103014164 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067682996 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103311597 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068906473 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.134271325 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090853769 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.17750088 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067602208 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102700806 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068281964 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089458042 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068249499 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.133441622 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.090697481 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069631838 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068856467 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.091298645 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080273296 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.179787543 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070749722 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.182394486 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.156727445 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.090369924 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.142655965 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06939415 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.139739194 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070064559 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.091173443 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070064605 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.754171149 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068776202 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068383227 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092144697 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.170009992 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069974958 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079162556 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.099503224 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067523669 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.738485751 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079684972 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076540104 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078423682 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09372932 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068321813 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066842396 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068353456 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.134215988 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.189680404 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071002119 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06776865 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.099106279 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.132643275 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066904685 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099785093 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077626568 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.100071518 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068088523 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.091511765 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081287554 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.139451266 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.100394757 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.159105806 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.558450209 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069032305 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.098117136 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.168971377 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067823939 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106471939 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067864222 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.103977973 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.135340589 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097745195 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.253108944 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.112097921 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.173027835 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079977048 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105871795 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067925294 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.089954662 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079511021 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089651452 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071051361 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.099319594 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071344632 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068817862 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.106265834 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067721094 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.196586591 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.089675484 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079479083 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.088534223 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070269284 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082080644 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067247301 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06892913 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103576926 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069339822 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.099651443 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.661379943 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.098912903 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068852021 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070018917 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.183501805 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.137138898 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067942658 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090196799 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070366629 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.133033948 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.181060069 seconds)
  done (took 30.412751064 seconds)
done (took 47.804917993 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.257256132 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.174102324 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.249480975 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117824691 seconds)
  done (took 1.813599504 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.144619391 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101232846 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.117821942 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064415306 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.125021555 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086412493 seconds)
  done (took 1.59097119 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.38519712 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.26452638 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.226469052 seconds)
  done (took 1.819826645 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.218712979 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.233214875 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.415889595 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.299443334 seconds)
  done (took 2.219167713 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.166006793 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.11282583 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066837064 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105788619 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.159136315 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.209365308 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.124902337 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.172628716 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078485842 seconds)
  done (took 2.189241572 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.190682037 seconds)
done (took 10.76106096 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.195959647 seconds)
    (2/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093209796 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.125876127 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.146518793 seconds)
    (5/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.202827652 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.113295798 seconds)
    (7/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.216339422 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.095974804 seconds)
    (9/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080880824 seconds)
    (10/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.163035704 seconds)
    (11/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075861989 seconds)
    (12/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.290860378 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078550318 seconds)
    (14/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.101471056 seconds)
    (15/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.110180651 seconds)
    (16/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.149353889 seconds)
    (17/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.097920714 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074777865 seconds)
    (19/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.170398846 seconds)
    (20/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.077295238 seconds)
    (21/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.087084177 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.130626869 seconds)
    (23/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.208168677 seconds)
    (24/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.130030409 seconds)
    (25/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.142125479 seconds)
    (26/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.189062747 seconds)
    (27/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.202274124 seconds)
    (28/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.128189513 seconds)
    (29/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.22660818 seconds)
    (30/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072101194 seconds)
    (31/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074583278 seconds)
    (32/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.094668191 seconds)
    (33/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.191473498 seconds)
    (34/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.189378935 seconds)
    (35/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.106724796 seconds)
    (36/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.165267705 seconds)
    (37/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.161721051 seconds)
    (38/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.099278749 seconds)
    (39/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.228719069 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.106161818 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.095586956 seconds)
    (42/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077691677 seconds)
    (43/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.079335519 seconds)
    (44/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.075198765 seconds)
    (45/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.161376089 seconds)
    (46/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.097240952 seconds)
    (47/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052818596 seconds)
    (48/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.051904923 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.137407155 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071923262 seconds)
    (51/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.095128978 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.092054787 seconds)
    (53/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.215946235 seconds)
    (54/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075396589 seconds)
    (55/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.170192758 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.120469954 seconds)
    (57/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072775941 seconds)
    (58/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.097685491 seconds)
    (59/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.167208338 seconds)
    (60/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.099484496 seconds)
    (61/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.111044387 seconds)
    (62/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.114186544 seconds)
    (63/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051548527 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066865164 seconds)
    (65/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.09603753 seconds)
    (66/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.135705712 seconds)
    (67/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.193898804 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.116634926 seconds)
    (69/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.17174819 seconds)
    (70/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.104157912 seconds)
    (71/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.096863188 seconds)
    (72/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.068455578 seconds)
    (73/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087379667 seconds)
    (74/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.163813415 seconds)
    (75/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051751861 seconds)
    (76/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.074936316 seconds)
    (77/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.193012703 seconds)
    (78/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.079184266 seconds)
    (79/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.099671096 seconds)
    (80/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.099485062 seconds)
    (81/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.062640279 seconds)
    (82/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.202893911 seconds)
    (83/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.097675928 seconds)
    (84/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.143625576 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.094052397 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 0.090208793 seconds)
    (87/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.123397896 seconds)
    (88/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053364949 seconds)
    (89/309) benchmarking ("sort", BigInt, false)...
    done (took 0.210351826 seconds)
    (90/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077167567 seconds)
    (91/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.184636374 seconds)
    (92/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070365154 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.121180226 seconds)
    (94/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070642167 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.116778678 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.096541574 seconds)
    (97/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071279668 seconds)
    (98/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072407224 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.1147697 seconds)
    (100/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.064446761 seconds)
    (101/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051431352 seconds)
    (102/309) benchmarking ("sort", Float64, false)...
    done (took 0.148168468 seconds)
    (103/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.161685612 seconds)
    (104/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.159499469 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.06514707 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.088807783 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.112793073 seconds)
    (108/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.075601013 seconds)
    (109/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.155604779 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.137204932 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.117499942 seconds)
    (112/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.137450158 seconds)
    (113/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.173714483 seconds)
    (114/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.125182833 seconds)
    (115/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073532834 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.175637734 seconds)
    (117/309) benchmarking ("sort", Float32, false)...
    done (took 0.126702487 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.167402341 seconds)
    (119/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.06857879 seconds)
    (120/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.075513197 seconds)
    (121/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.052488399 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.076854747 seconds)
    (123/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.07660251 seconds)
    (124/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066746043 seconds)
    (125/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062231046 seconds)
    (126/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.29622659 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.085589741 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.112176902 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090415713 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 0.15935878 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07323061 seconds)
    (132/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.094016821 seconds)
    (133/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.114810528 seconds)
    (134/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.161110858 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072368505 seconds)
    (136/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.096188172 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07212569 seconds)
    (138/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050853197 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.096505169 seconds)
    (140/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074191273 seconds)
    (141/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144060531 seconds)
    (142/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088207409 seconds)
    (143/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.10002241 seconds)
    (144/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.052271012 seconds)
    (145/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.19312461 seconds)
    (146/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.08076883 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071482426 seconds)
    (148/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088343996 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064585845 seconds)
    (150/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.093716676 seconds)
    (151/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.053474937 seconds)
    (152/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.113307247 seconds)
    (153/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.076788047 seconds)
    (154/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071170473 seconds)
    (155/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.157099909 seconds)
    (156/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073145272 seconds)
    (157/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065595768 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.08987355 seconds)
    (159/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.053207973 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071807982 seconds)
    (161/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.076814578 seconds)
    (162/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067655491 seconds)
    (163/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070682792 seconds)
    (164/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.076552824 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129793346 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.117417075 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.11778826 seconds)
    (168/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.074322192 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.14483791 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.192043123 seconds)
    (171/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052052443 seconds)
    (172/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.084980727 seconds)
    (173/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067995583 seconds)
    (174/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067584463 seconds)
    (175/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.097371595 seconds)
    (176/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.171867203 seconds)
    (177/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073792802 seconds)
    (178/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.192600147 seconds)
    (179/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.053507378 seconds)
    (180/309) benchmarking ("sort", Int8, false)...
    done (took 0.137684321 seconds)
    (181/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050497498 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.115662444 seconds)
    (183/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065788781 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.102233374 seconds)
    (185/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.079077332 seconds)
    (186/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054611399 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.201512645 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093098862 seconds)
    (189/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.05057849 seconds)
    (190/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.0754299 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066662871 seconds)
    (192/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051399486 seconds)
    (193/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.190905079 seconds)
    (194/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.097154534 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087748473 seconds)
    (196/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068352428 seconds)
    (197/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.16224757 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.075815569 seconds)
    (199/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.106596988 seconds)
    (200/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051335523 seconds)
    (201/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.102110165 seconds)
    (202/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.170017588 seconds)
    (203/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.093434555 seconds)
    (204/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073762982 seconds)
    (205/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065689677 seconds)
    (206/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097220647 seconds)
    (207/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072451048 seconds)
    (208/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050993707 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.088793417 seconds)
    (210/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068798984 seconds)
    (211/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062105248 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.134589524 seconds)
    (213/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078145131 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.115341914 seconds)
    (215/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.068019102 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.164453235 seconds)
    (217/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064786441 seconds)
    (218/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078354968 seconds)
    (219/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.09023417 seconds)
    (220/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06538307 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.133800052 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.11061397 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.111569937 seconds)
    (224/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065807273 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.096089967 seconds)
    (226/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.063331114 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072600751 seconds)
    (228/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052304777 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.198701953 seconds)
    (230/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.090469083 seconds)
    (231/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079009587 seconds)
    (232/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051394681 seconds)
    (233/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.090005913 seconds)
    (234/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066360028 seconds)
    (235/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053416599 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.158818637 seconds)
    (237/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070873583 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.087466207 seconds)
    (239/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072328753 seconds)
    (240/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052320271 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.089688024 seconds)
    (242/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.070052118 seconds)
    (243/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066930127 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.16105184 seconds)
    (245/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.160363754 seconds)
    (246/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.134320921 seconds)
    (247/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.0650256 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.089958989 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066081093 seconds)
    (250/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.051709418 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.11341467 seconds)
    (252/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050910015 seconds)
    (253/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061633073 seconds)
    (254/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.09135874 seconds)
    (255/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065808187 seconds)
    (256/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052120805 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.112754822 seconds)
    (258/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.158807794 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066850977 seconds)
    (260/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060212642 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.111770172 seconds)
    (262/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066980277 seconds)
    (263/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071628743 seconds)
    (264/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.111907445 seconds)
    (265/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052878206 seconds)
    (266/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050604731 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.096917612 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066643991 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073019186 seconds)
    (270/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050835241 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065729962 seconds)
    (272/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060100983 seconds)
    (273/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.102861728 seconds)
    (274/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072264956 seconds)
    (275/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.05072324 seconds)
    (276/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.0886718 seconds)
    (277/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.099392528 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.088150143 seconds)
    (279/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053372798 seconds)
    (280/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066952847 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.089519022 seconds)
    (282/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.052273202 seconds)
    (283/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.108666655 seconds)
    (284/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.075646234 seconds)
    (285/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.062359433 seconds)
    (286/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051617998 seconds)
    (287/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052625364 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.09661331 seconds)
    (289/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074106833 seconds)
    (290/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.05230651 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.088203882 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.08666449 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.088289003 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06583133 seconds)
    (295/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.0686391 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072638945 seconds)
    (297/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.162431228 seconds)
    (298/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.078693007 seconds)
    (299/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.052478934 seconds)
    (300/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070737957 seconds)
    (301/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.091179862 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067027118 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071029669 seconds)
    (304/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.077072127 seconds)
    (305/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.069603569 seconds)
    (306/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051323404 seconds)
    (307/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.099473643 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071624376 seconds)
    (309/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073699209 seconds)
  done (took 32.680658167 seconds)
done (took 33.629648803 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.081746516 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113525151 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075053935 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091627364 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.104681197 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076168578 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.09617815 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077931618 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.077638006 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080031814 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.10428524 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055603864 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072985443 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.098721489 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074679578 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115085333 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078345327 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094774023 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074302534 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064742538 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.096694185 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066226649 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066927567 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.078368747 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078459741 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07062888 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.096048653 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073363984 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088690216 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067414123 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068728023 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.096642554 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066358918 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076635198 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095662885 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073287945 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.0969834 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076769804 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067023822 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089336444 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074189724 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065587903 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096505872 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073752757 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070779959 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.095413636 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072880145 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.101495838 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091458588 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09108955 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07502829 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075582361 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.100664727 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072534289 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.09261796 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074118948 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070297815 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115125819 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073411925 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067626305 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072992603 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072598497 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069909464 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071637095 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.0716877 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.104287731 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075021691 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.095770535 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075893519 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070549215 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.08964272 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073420037 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068957831 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065035042 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074262393 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075597948 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063396839 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070002566 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.100092555 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072183015 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064816879 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092657274 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067634814 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071655503 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09272756 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055640989 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068799897 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095973496 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065323496 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095823905 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073145413 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072548867 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.090425374 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077401121 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065052653 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.094695678 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066632206 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065828952 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.091247736 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069909065 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065267417 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092207065 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074275471 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066508929 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.095536298 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079284702 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089520541 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073440522 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064679716 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064481632 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078365385 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099647743 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066801689 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067889161 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.088828121 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074194953 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064707504 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.08960401 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066371169 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066080399 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.09639946 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066366106 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067370198 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.097295251 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078019792 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088219109 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07076716 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068054328 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.089039127 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07216934 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066114771 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.0893623 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068697523 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062272575 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09146067 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067121236 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072900756 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092724576 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073248809 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067188945 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097546349 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070516072 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.093850707 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072401015 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064999935 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.081681596 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06999907 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067773841 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.09005695 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067452882 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066824186 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.088536682 seconds)
done (took 13.033155996 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067811262 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.167364102 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.122537177 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096496387 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109635924 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06821525 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07569399 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126516137 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.090936595 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.104452414 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110727804 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085505708 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.137469143 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064738478 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.090201072 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070922207 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066955867 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.112443889 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.12320035 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088314563 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.135036268 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064836041 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.119060009 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089431157 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.112397456 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.125456007 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068101322 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070218715 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.092939641 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.093129876 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.109776534 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070415951 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065826141 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123017687 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.116540867 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084916801 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088747052 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084911581 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065350464 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.090179125 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.087640592 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.12262613 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.103878926 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.08156095 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071543003 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.093475495 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067632213 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.108639498 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089086059 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.103790908 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109943002 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.106399607 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092693787 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.080916052 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087675535 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.087485799 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.104665798 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070128579 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066040457 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.092991552 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066239932 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068698268 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.111305664 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.087533367 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069077467 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.105823912 seconds)
  done (took 7.193713095 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084652954 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089376834 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.108394576 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082855816 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065069641 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065376762 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065411544 seconds)
  done (took 1.577045118 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068723317 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087811876 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113967244 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089225347 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.108984072 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086730679 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.100578617 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067660639 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.082576506 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.093382981 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087076901 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.125879628 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068099897 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.097344529 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091603028 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06659507 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115403778 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066727992 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094374121 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091346837 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092153878 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.08790921 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068218058 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.0917267 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081494171 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066906479 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110269916 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096176607 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070086421 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069833667 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089204739 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105356888 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.10501608 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074837357 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065864419 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106284075 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081764191 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089041505 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083322462 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071121351 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079333381 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066935018 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.09392172 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066361924 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071451407 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.10257331 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068607127 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06835597 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.094787053 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086849484 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.091635086 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081802357 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.066587773 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.095517193 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069401859 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095671441 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078647836 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068406163 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.110421133 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069032937 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.106994599 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084734267 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081288604 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.10845317 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069858382 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.104455761 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082101057 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069382356 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093578417 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070412028 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.107439775 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065838516 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068370062 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.102581911 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069228715 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.114306539 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090981323 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06795737 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.102572414 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066857759 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.091134133 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068759815 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089208024 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096109337 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067978424 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.094605177 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072172044 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065061285 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.090358146 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071484089 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065469259 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.092705731 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070663088 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067953595 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094398618 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08337209 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.091754955 seconds)
  done (took 9.26177397 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070072419 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068267403 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09322729 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069449107 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067960365 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092832812 seconds)
  done (took 1.487825404 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095520889 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.092285134 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081789706 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072763503 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.129966084 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.080432297 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.107401904 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.102091132 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086048182 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079109736 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.106755302 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.082600821 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.112389568 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072998526 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.106222089 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072586775 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.106357721 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07671652 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.102557287 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074709998 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.110588184 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074409165 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07318182 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.106539359 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.070434244 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097104958 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076882816 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103034292 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079885697 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.102858864 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074196433 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070475444 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095711986 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079236017 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.107730296 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070149878 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097438806 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072160573 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100339886 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071600264 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105347784 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075386162 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074466443 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096761231 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079350295 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.095255125 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072262781 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101743938 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082400932 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095361288 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073117857 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072435878 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.095599875 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.071424536 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.094268603 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080717214 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09503454 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.082702725 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072547959 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096529957 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069221828 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.095984129 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078932936 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.095451956 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079851922 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.095646099 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07163408 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073431801 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099894982 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072550967 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.096027201 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070438733 seconds)
  done (took 7.312639977 seconds)
done (took 27.838149149 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.669164049 seconds)
  done (took 1.693198524 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.742578075 seconds)
  done (took 1.768348192 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.469692366 seconds)
  done (took 16.501434038 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.592751802 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.752661788 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.852336803 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.154736843 seconds)
  done (took 3.379206705 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.887744612 seconds)
  done (took 1.93284734 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.236976217 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.223913117 seconds)
  done (took 1.491766052 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.74911846 seconds)
  done (took 1.79028679 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.275770409 seconds)
  done (took 2.30887034 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.317816972 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.177003576 seconds)
  done (took 1.536608195 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.48454662 seconds)
  done (took 1.524669305 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.727001719 seconds)
  done (took 7.773490367 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.204611567 seconds)
  done (took 1.25666369 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.265257926 seconds)
  done (took 1.310650523 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.239392469 seconds)
  done (took 4.283900239 seconds)
done (took 49.583635888 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.07882192 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081285905 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106189364 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07805471 seconds)
  done (took 1.384187996 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078428652 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071644659 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101973558 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072363287 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.101567255 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073478573 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073863298 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.102542396 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072117399 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097321297 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073303789 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072039268 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100747536 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073847906 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094955068 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076206579 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099470497 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073801929 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075800546 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097137198 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071348748 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074257843 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.10013381 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071645447 seconds)
  done (took 3.051350447 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078482337 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072276378 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098680056 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072524606 seconds)
  done (took 1.375698549 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078776228 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.09125789 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.115105896 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076482323 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.089960076 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.112413148 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070551703 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069078681 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.096223256 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077249037 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067628261 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.121811441 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.112064184 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.0772919 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078266698 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.091602925 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068481908 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.111688693 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077459497 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077109699 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.097978236 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076683988 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091077713 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089609497 seconds)
  done (took 3.168972901 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078327035 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.100963494 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.102992291 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086744628 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.115245177 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064829906 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.10017373 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089304658 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.149278684 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06542558 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.095419963 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067209934 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073116785 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.090148756 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077772569 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.129203864 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109896663 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067767108 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.121817235 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065475091 seconds)
  done (took 2.908390868 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073707246 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070082369 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089519853 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069949985 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077573104 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097704799 seconds)
  done (took 1.537625596 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069996325 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067346075 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090991014 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068360889 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071301219 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092016825 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066933353 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067076083 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092531119 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067755127 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066060137 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.091828603 seconds)
  done (took 1.965680331 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.392656723 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.09581146 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069429349 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091703795 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071084592 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065863471 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.105782434 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068427676 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.116451548 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067933055 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066579018 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.094706524 seconds)
  done (took 2.361018989 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258946961 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077469169 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291596126 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13432811 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142056406 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14270818 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130839995 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140299393 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.171597782 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129455714 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223085938 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165634678 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135629312 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165705671 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114795594 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.099537951 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210434883 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189793576 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130595941 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218701461 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172584409 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15163614 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174916029 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128415805 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132901985 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15012306 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071461578 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106375429 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224787219 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160634455 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173583645 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138378447 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12091581 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230147716 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224736642 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171661909 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160885783 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085311966 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.154932333 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.162078723 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254836881 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114809707 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19406782 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135135202 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105630309 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140173207 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145963804 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.148509112 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.133198196 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090044304 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19833886 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210143432 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.191642398 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086560996 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137774226 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141724179 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.14195502 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128537714 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236549233 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188532816 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153121348 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095722828 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099759098 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205449216 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15789786 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.135021235 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.154140171 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118739185 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161270475 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181252112 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145360646 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168840707 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182842525 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08697861 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144613306 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191676635 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155444834 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196320068 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149696195 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.098319399 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151595854 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128980795 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081418888 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.16595253 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07515256 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227424111 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123674731 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106534466 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140151347 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134507459 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135158655 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189997831 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199111797 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127930824 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066129699 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129760096 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.145032215 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145627976 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114204619 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108238248 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14286644 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.105445267 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165873626 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.100117982 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150391817 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076125421 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150861748 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155491875 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.101971193 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150636411 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101799761 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.127278692 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15991993 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214464088 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089555318 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10923776 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193580349 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148911359 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.130953591 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197143399 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186117953 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.125059549 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103359781 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205903389 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207752754 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088251236 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22065539 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134998224 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083452698 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.114482346 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151540805 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140316973 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.149360991 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082407662 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.145519176 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195453322 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074959947 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123413306 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161921027 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105221739 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08107656 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131040367 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127741518 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093938153 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098640721 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134665946 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168236645 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150689914 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131296762 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122669771 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127749463 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22647129 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114695769 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101280853 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131261932 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069327681 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.190509602 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187070084 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105176011 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193755478 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.150209548 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131923426 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146134293 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083433132 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192376938 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080068768 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069876183 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201535331 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135786359 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109400122 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.206427236 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129919645 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.155866367 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120945134 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16339615 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161010518 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.15646033 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132425026 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.112264843 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113867584 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180981439 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074523014 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.119260003 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080810463 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130871812 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122469274 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083262905 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196124292 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153456303 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1003926 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138487399 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123294255 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173353981 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.103106394 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157896212 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116300194 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091716358 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.181637737 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181350278 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185496951 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101238045 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200271421 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07127593 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099591415 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.093112056 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150393837 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109787537 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083908548 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145105515 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200521883 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157200926 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166713565 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138617572 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149387461 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181799333 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.09516826 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116490089 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198605976 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147633168 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.128940112 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116900502 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099066276 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169970996 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13626858 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236716118 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141977752 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150762895 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208955718 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.09873976 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110134739 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129568556 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164588572 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13263852 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173116643 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127153795 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11493717 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137414805 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075917097 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128086973 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155732596 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147901209 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163265431 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.140832901 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187246659 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078152648 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144305194 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148227969 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156091384 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064084328 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146676394 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216912046 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121132311 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146005918 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181351322 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106306032 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.151791895 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23449787 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174781818 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110349141 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110655875 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146322881 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180182003 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147291405 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168881126 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138236124 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163572714 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110275847 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.112279161 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113366662 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098156879 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1031926 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.122373682 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.136691661 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.141601429 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094611456 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185764255 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104068442 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135828033 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145130618 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.123068038 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090219667 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12449898 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202939168 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14728555 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227016131 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.126514043 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.174418162 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220300061 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074269945 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106637306 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078244885 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166071107 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081716588 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16104892 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.125934993 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131843895 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153731219 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172915693 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121076768 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069918923 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13627059 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163449577 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109958178 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124655343 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.106413506 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220987032 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.126287845 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081314792 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141689946 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104683333 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100709413 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232593568 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061058913 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125874985 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101846329 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082470534 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155731361 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210742401 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084710524 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.151120215 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14799645 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138602174 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156688464 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10188387 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097485489 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143853442 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177609912 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155273651 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090661105 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141851804 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157537828 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18301934 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133943392 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095576594 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228576773 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179651868 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.217187628 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.11571954 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142965217 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14114534 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11020279 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197264069 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083449216 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220550814 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108387186 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166615864 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132276956 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116970228 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130998402 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.097477621 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135067771 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175862973 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145817723 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110389555 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078030404 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144600571 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173494003 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108824087 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.102896219 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168102146 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072456536 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16101347 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200046118 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109118051 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131628792 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097653354 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107555606 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136161647 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129893415 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088483266 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.146178092 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203657794 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.115745193 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206409796 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171785589 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141606885 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165601092 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127734473 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663411792 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.104715056 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185042545 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145370108 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230387222 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124279662 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146373126 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110739632 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151760212 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202283334 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104090755 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.173844716 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191179984 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.144242152 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081320376 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130867412 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129735226 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089721229 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133220518 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140927552 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145098627 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.120996781 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.145280931 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122833478 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080887218 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125293211 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211435324 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118043531 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201337269 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169185844 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110931066 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145431916 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16971899 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106022527 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.151677485 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183791965 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104570035 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12805734 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081171287 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.131506052 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226596422 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073773953 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219707422 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14952536 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136090232 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141058413 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.143768785 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160833709 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136421422 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149572139 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120319326 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.138321568 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113853114 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109508527 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102881145 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106848524 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140628435 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.125081656 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126192862 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.121994343 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207106451 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.0735846 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123421171 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103717926 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20245458 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231510269 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089486367 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108871583 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147954583 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141454102 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.14068209 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148503098 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.081883622 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108359078 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084411644 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.103251845 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.134685435 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140525894 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133168542 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13868251 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193375901 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.11004099 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.249132028 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096319131 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131993898 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.06965607 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.107683728 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122473217 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099439229 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137122115 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128086775 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198789393 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.122807223 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.118331786 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094279608 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.101727573 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083917538 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156387293 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13840224 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147540915 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125425367 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062434911 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136459609 seconds)
  done (took 69.111946195 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.13332199 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.107514685 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.122754374 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.175406975 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.149189928 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.239761863 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.183175208 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.226634841 seconds)
  done (took 2.469660771 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069852359 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.120067963 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099860578 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.108881879 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067984028 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.095149762 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.278050292 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081264721 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.093786491 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089407364 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.106721605 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093859176 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.458854444 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066330351 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.093382383 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.064174633 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.093508559 seconds)
  done (took 3.206803985 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.423108409 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.642115294 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.424949438 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.101766574 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.901645042 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089622564 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.471716877 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.165309888 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071316083 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.439178263 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.74719464 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.135758005 seconds)
  done (took 17.746535502 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076077303 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068910937 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.110095819 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083524748 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071854212 seconds)
  done (took 1.556685222 seconds)
done (took 112.882674528 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080915254 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.354534258 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053984285 seconds)
  done (took 1.582543204 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083688748 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083384303 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.111429653 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082671106 seconds)
  done (took 1.507464589 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.0752337 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07648005 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110428515 seconds)
  done (took 1.406104844 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.282458562 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138866857 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.115774267 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082476312 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07733518 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103654369 seconds)
  done (took 1.407866097 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073399271 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074043227 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099438721 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075748382 seconds)
  done (took 1.461866748 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076968345 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052465325 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054221641 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.082722503 seconds)
  done (took 1.412475377 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086552856 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077775627 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105293638 seconds)
  done (took 1.41063028 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107073089 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.110923507 seconds)
  done (took 1.361481348 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082696304 seconds)
  done (took 1.223809083 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099968932 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.140693339 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.124503423 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.138175523 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.165946436 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.136082086 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085334035 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115111039 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104549621 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086893257 seconds)
  done (took 2.342937038 seconds)
done (took 16.87583523 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079245465 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.393013378 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362292459 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089556546 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.696886032 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355257763 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.007622279 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09151716 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.148257652 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094280875 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084308376 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646735727 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.99723853 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.319206246 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.983848986 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.316521034 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.674575841 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068981737 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067483953 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094052982 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.963655752 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066638557 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094990222 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067623269 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.675054656 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372570528 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067314827 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.350605544 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067897106 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095619913 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356452296 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068008283 seconds)
  done (took 15.954187234 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071231766 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.143608523 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07447938 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082802879 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098782462 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070081568 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.097617074 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070448235 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123564763 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06637945 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11184268 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069137142 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071725103 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09672484 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087337991 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067359249 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067550248 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067233202 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096976421 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069484864 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085293312 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095714268 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068541438 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094298487 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070547433 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079391855 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096647819 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068521918 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067607429 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097683091 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071180241 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095294216 seconds)
  done (took 3.847046408 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115547026 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.152675555 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074076017 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129099842 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112537969 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09832999 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142326705 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121459456 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154141742 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068142185 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111471158 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06859121 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127138639 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070073922 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086697402 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096368966 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069178768 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094444581 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.0691754 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068011882 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114540509 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067948252 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067690161 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067231826 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066753351 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078702551 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067102294 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066918243 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100017518 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069661807 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098496186 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.0692827 seconds)
  done (took 4.113728871 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072770778 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074990027 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109818628 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083953094 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068457621 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.099565692 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072250199 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.095882092 seconds)
  done (took 1.835112131 seconds)
done (took 26.895729419 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079623992 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068344408 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.099379853 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081153825 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072609605 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.106031089 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066641491 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.100726221 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073550655 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072238095 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.102045764 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067945619 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070326311 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.095043582 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074147536 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067695589 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.107182308 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071396823 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.106053572 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079210449 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068860178 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.100745008 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073602417 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.105748536 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079104552 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.104473724 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078889281 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071616122 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.096248325 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070461152 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075255057 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.111319271 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067770371 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105588087 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068394566 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06677521 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.099594403 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067424466 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.105482155 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078195831 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069001327 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.104278723 seconds)
  done (took 4.676262176 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088679573 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090436221 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.112610419 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061816559 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066136198 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.093430419 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087971347 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.086604876 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060705285 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087628392 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.082989793 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060311785 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061973173 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053106922 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.087395992 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057305331 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.06124035 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.083586809 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059839245 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059174021 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057110287 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.081928659 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060341388 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.061902477 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.083445814 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063267279 seconds)
  done (took 3.06653243 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075815416 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084339239 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115861599 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125809955 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.133104736 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076406689 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106652445 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087584951 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112669248 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068775085 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070662529 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.121703574 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088456105 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.103320685 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068606513 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083552257 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.110082342 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069558486 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.100391915 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092345444 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083442731 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.105853288 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093023713 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.108295717 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067755316 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.0694568 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.099924955 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081630137 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098992918 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07825868 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071246852 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.099388066 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069952479 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078403181 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070167985 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068352576 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.120156592 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078436283 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.105396608 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069824966 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071305133 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.096160919 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090202642 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.140700741 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068113697 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073443036 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.103767141 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077937746 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.094584886 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087893446 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078311265 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.095579954 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071276199 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065704762 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.095993878 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080293127 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.096290932 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071698785 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07588178 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.098570255 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08094653 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070522764 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111913284 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067192787 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.073740799 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065791306 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067049147 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.0963591 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092753395 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095855646 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109822861 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068905175 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.096663151 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076532829 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102653079 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074345415 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067065715 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110357556 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077827002 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.097603189 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077607825 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070237334 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.097980845 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088397882 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069843856 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.097366553 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06880802 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100050582 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072466483 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068730867 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108230511 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06850069 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070484912 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.112320941 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067519917 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.095725122 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075019802 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071355949 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.09523095 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079084764 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.099888357 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069746184 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076044045 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.095907113 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071689887 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077427697 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.10235873 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066683747 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070954279 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072356239 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067088694 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.09930919 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070770507 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068560448 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.105533635 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073846959 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.099855518 seconds)
  done (took 11.262674667 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.185092885 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152797687 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.099630045 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.172387461 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077382922 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.077624045 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.184885013 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.122738327 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068130375 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.096283924 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070506659 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.143165865 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106867902 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.149451307 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.077939234 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066530056 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.081859236 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.147550679 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.178380197 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.170865693 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084588723 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076057499 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.098972216 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068873975 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.101051964 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083535274 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.121773637 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077917517 seconds)
  done (took 4.307606363 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082314819 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.127970586 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07505703 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088718665 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.120032905 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067428631 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.098651943 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069803277 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079790093 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.108732041 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066998851 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.101945313 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075185925 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.100413884 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06972424 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073919673 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.103803917 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069880044 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070353774 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.071249286 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07577276 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.111540339 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071672727 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066060204 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104162599 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067722281 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.093301182 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084873475 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.096622473 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089814431 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06512109 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.10370178 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081688572 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.096043818 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068389034 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067377365 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.095321834 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068131266 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069468754 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.094438512 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067020887 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057157909 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.065757657 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077449602 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.103728019 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057260147 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072075417 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.101201962 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072983064 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064971823 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099054718 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070406387 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070374219 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.103091371 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072853375 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.099556842 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069702093 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065760147 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.102944786 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068261473 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064155034 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.093721077 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073131349 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065752715 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.104425082 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073010272 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093179037 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068873394 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069593808 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101748459 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068367994 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070537226 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064447789 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068033152 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.070990888 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.100131451 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069310948 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066148306 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.096474291 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068836792 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055750035 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.096406696 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054289663 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070178338 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.094558648 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066801772 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094252191 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073869834 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079596225 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.097976597 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073435566 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.096151847 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067429977 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070835162 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.088528201 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071741727 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083693634 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.112699248 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067234087 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.094884772 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081926217 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.099514893 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068292498 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05631612 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102298794 seconds)
  done (took 9.698909641 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.09451417 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087035152 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.098249297 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083299807 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.119343082 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087895644 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07409355 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.102855262 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068799926 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.106936921 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074941564 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076736337 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.095805511 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077411443 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.092847772 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104946033 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070012502 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.104942915 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072844325 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100925834 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111272586 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082136287 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.109211902 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069372484 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072558068 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.109449667 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090039529 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108631643 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.080548545 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.082412105 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108450533 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090123034 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.11177922 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.07329129 seconds)
  done (took 4.269356813 seconds)
done (took 38.427640539 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.232908518 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.4440669 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.222679354 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.182518836 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.254497547 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.250727896 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.235097716 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.227604028 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.646314104 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.224315408 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.480774148 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.840980033 seconds)
done (took 59.413948517 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.325616485 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.368613909 seconds)
    (2/2) benchmarking "String"...
    done (took 1.504351369 seconds)
  done (took 4.042856509 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.64089662 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.133269758 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.487018449 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.226659175 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.2275892 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.53336953 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.918706191 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.074859555 seconds)
  done (took 27.771979704 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.227793551 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.597914074 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.739192387 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.63754074 seconds)
  done (took 18.373842267 seconds)
done (took 60.327266491 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.218826085 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.282612303 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.230926464 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.213407956 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.338253399 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.247017615 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.640886662 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.483288 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.226822328 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.221346785 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.229438915 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.243143143 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.244881839 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.596663039 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.227888906 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.231902809 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.304597579 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.747981641 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.614834552 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.256339234 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.232268566 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.234381662 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.255884167 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.231490795 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.24133795 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.229644709 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.228205821 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.241683897 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.503449697 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.235520436 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.325177019 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.299629 seconds)
  done (took 192.231833926 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.229286553 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.217525439 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.336177919 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.248168333 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.704981404 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.432586501 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.365085656 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.789446776 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.249549659 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.242930079 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.369782 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.228863056 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.423615654 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.197783019 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.238693667 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.24016394 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.440060978 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.449610661 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.246410491 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.50288577 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.239415692 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.269761182 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.223084017 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.359751672 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.240926276 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.298150973 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.236175755 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.237643946 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.421018018 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.389587418 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.239742751 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.250794725 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.810775961 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.092509106 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.23844157 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.246782861 seconds)
  done (took 150.125746727 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.511609713 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.228639915 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.230823508 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.230783903 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.260486394 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.22994107 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.765057585 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.770134032 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.733972364 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.639626396 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.294883065 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.443855469 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.230877087 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.323039209 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.24490409 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.231841456 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.246399699 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.256768097 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.231350213 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.231352536 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.756551618 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.243434119 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.229315968 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.240824427 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.231979561 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.26081793 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.624980749 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.230911554 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.261937799 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.54843315 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.276953408 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.231802273 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.524697587 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.609517585 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.339908694 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.23347633 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.261023043 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.23075738 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.500446442 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.23178665 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.232740078 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.235663032 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.804443112 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.231083722 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.768075602 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.236104258 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.125106903 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.232490051 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.232341267 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.81737026 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.688338434 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.232146188 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.232184103 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.235006624 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.232616095 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.232997105 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.263084016 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.686583538 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.331631089 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.233929573 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.236028302 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.263718589 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.233461587 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.382943053 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.238857298 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.900192033 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.288926134 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.454547273 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.759398063 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.233940729 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.327541194 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.352229147 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.235 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.233379936 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.232903956 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.233727719 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.340153544 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.233730841 seconds)
    (78/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.634992609 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.23323699 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.241202791 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.235197394 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.294889891 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.328472338 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.236498929 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.547084604 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.236000348 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.234861594 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.935761615 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.326204866 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.234626496 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.235296176 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.23448129 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.234672682 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.23469363 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.63086175 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.775827878 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.423747374 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.238115987 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.675375245 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.237990921 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.234979294 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.644862864 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.753265767 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.817061714 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.236795361 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.342729086 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.239786359 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.237306265 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.234688717 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.265946103 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.2372351 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.295443105 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.239983229 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.631742817 seconds)
  done (took 349.591212599 seconds)
done (took 694.633755699 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.946612229 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.939049644 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.041268048 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.93009749 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.893443615 seconds)
  done (took 10.928826318 seconds)
done (took 12.106347829 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.429367203 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.431195151 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.298321179 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.428683024 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.265132817 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.445111131 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.407591632 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.256842148 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.341896021 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.317693125 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.341320891 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.289924313 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.265201691 seconds)
  done (took 18.697026996 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.558920551 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.548224088 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.30268191 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.548948277 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.27863154 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.557393569 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.431393219 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.442080938 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.427850013 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.25416289 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.251418851 seconds)
  done (took 16.781452301 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.554385201 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.559416086 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.304131177 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.563358297 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.27934645 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.552727047 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.43413378 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.445950543 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.434844714 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.254094098 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.251541713 seconds)
  done (took 16.812965522 seconds)
done (took 53.470223773 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.246962312 seconds)
  done (took 2.427148576 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.281413429 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.445393866 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.264303309 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.252877658 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.248817115 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.248465601 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.254565531 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.248402048 seconds)
  done (took 11.425453876 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.245360915 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.246749369 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.247766681 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.247465891 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.244388927 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.244262646 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.244690959 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.248305084 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.2448744 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.24582187 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.245714375 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.248724119 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.249135048 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.248128221 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.248278965 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.246230959 seconds)
  done (took 21.127451202 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.247247237 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.245742383 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.245691739 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.246763648 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.245452068 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.246471948 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.246961841 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.246613124 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.245672455 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.245849246 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.247134385 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.245873833 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.246880374 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.246059654 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.245944118 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.247947834 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.24690854 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.246370605 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.251754025 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.246237765 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.24669285 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.246486765 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.247653992 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.247892271 seconds)
  done (took 31.106355072 seconds)
done (took 67.267317663 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.315529385 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.948292132 seconds)
  done (took 9.446450905 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.250299992 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.248750904 seconds)
  done (took 3.684965111 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.249619379 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.249820086 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.250341821 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.249152016 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.250846414 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.250163298 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.24960723 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.249692612 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.250404119 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.250075115 seconds)
  done (took 13.682196435 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.251373512 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.249927061 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.24728394 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.250797201 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.25048558 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.247834208 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.250573055 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.250743909 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.250835066 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.247114022 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.250138617 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.248108291 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.250530323 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.248032538 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.251239972 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.248145308 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.247396203 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.248336737 seconds)
  done (took 23.672771011 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.251074147 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.250756488 seconds)
  done (took 3.686367983 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.249054792 seconds)
    (2/7) benchmarking "second"...
    done (took 1.248955428 seconds)
    (3/7) benchmarking "month"...
    done (took 1.249692037 seconds)
    (4/7) benchmarking "year"...
    done (took 1.24912043 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.248288797 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.248676827 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.248778792 seconds)
  done (took 9.926856096 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.252581117 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.429747703 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.517862726 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.927895663 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.253517791 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.255749762 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.194999559 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.255672469 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.257865438 seconds)
  done (took 14.530783751 seconds)
done (took 79.812420438 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.256404075 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.242483573 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.221184401 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.267016634 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.2617849 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.541413624 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.286087132 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.493110619 seconds)
done (took 38.754953216 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.256209649 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.972110158 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.013869757 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.262151098 seconds)
  done (took 11.43420434 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.23876384 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.179783903 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.246797262 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.291653937 seconds)
  done (took 18.144015887 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.884102742 seconds)
    (2/2) benchmarking "read"...
    done (took 1.581630875 seconds)
  done (took 4.65229782 seconds)
done (took 41.672890791 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.252885025 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.25031316 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.253262882 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.252168772 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.251078936 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.25271763 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.249482093 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.250793383 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.253367973 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.252737271 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.252203377 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.252522801 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.253773316 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253136579 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.25063039 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2513548 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.254423869 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.251105364 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.251024274 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251355522 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.250560025 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.25352269 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.251601058 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.251286785 seconds)
  done (took 31.234392368 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.254534044 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.251875663 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.254135068 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.253823043 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.25223101 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.253540849 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.25351273 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.251086582 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.254060089 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.25358093 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.251952055 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.251654242 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.254209843 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.251473764 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253630857 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.251269325 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.254026396 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251682192 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.254752117 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.252366979 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.254159503 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25272397 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.252689283 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.255387814 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.252548571 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.252446485 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.256212032 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.252715478 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.253954789 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.252954612 seconds)
  done (took 38.783463875 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.260448952 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.261582252 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.254562069 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.256127687 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.255126307 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.254567649 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.255844535 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.255510834 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.256086955 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.255695711 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.256232308 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.255657546 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.256103963 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.256626163 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.255632553 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.255326222 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.255524942 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.256393432 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.255790172 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.256009218 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.256764463 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.256471192 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.255894143 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.25717164 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.256714676 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.256443619 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.256638223 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.257142394 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.256975193 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.256061968 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.256503488 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.257269142 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.25754732 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.256692339 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.256914499 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.25653808 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.262434852 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.265171287 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.257187339 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.25758194 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.257135524 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.257377812 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.258724285 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.257434568 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.258154793 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.258546918 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.257605689 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.257385775 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.257962764 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.257790068 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.25903347 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.258404173 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.257431998 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.25806515 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.257448414 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.257708941 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.257729239 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.257892567 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.258432981 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.257581438 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.258518703 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.2575346 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.25823997 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.257485422 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.258923803 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.258563689 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.258573824 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.259134091 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.257735112 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.258838364 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.258756691 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.259230129 seconds)
  done (took 91.725374468 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.258816759 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.256382078 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.256434924 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.256744773 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.256520868 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.259809217 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.256569802 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259669186 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256830991 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.258882989 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25944775 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.257118258 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256092695 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.259523152 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.260088633 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.257457929 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.260561225 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.256572465 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.258917301 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.260368801 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.260112451 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.257982208 seconds)
  done (took 28.874033923 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.260245581 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.259809774 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.256794492 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.260303671 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.257828266 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.25906056 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.259853213 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.260940976 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260155636 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.258379001 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.258598346 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260265723 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.258432996 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.258528706 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.258159179 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.258086512 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.26115375 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.258080316 seconds)
  done (took 23.859063767 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.258103737 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.257962144 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.261118 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.258125024 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.258299845 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.262166717 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.259673202 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.261161207 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.261177094 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.259308162 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.261261979 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261443934 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.261888034 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.258431485 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.261186232 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.258509219 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.261885048 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.257955006 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.260298642 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.258684961 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.259239345 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.261529 seconds)
  done (took 28.914040571 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.261410675 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.262771655 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.259980827 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.258656563 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.25894121 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.261974629 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.262469237 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.259550462 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.261892311 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.262851638 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.259483131 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.262325268 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.259276245 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.259826932 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.260309543 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.260343551 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.262309266 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.26040731 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.262827299 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.259849834 seconds)
  done (took 26.413238068 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.262972583 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263592874 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.26398282 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262695243 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263300294 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.263264972 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263410579 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.264018684 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.263780001 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.264531511 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.263705547 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.264550895 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264543774 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.264545855 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.263801625 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263786292 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.26470209 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.264345877 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.26525246 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.265065478 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.265405607 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.265383943 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.264535594 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.265137738 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.265489504 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.265628582 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265136092 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.265780492 seconds)
  done (took 36.599419205 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.264761179 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.26402761 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.261889045 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.263928 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.263216933 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.262873552 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.262895813 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.262504728 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.264587069 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.263045386 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.265280685 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.265324111 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.264625222 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.264678667 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.265558201 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.266294932 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264936554 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.263300245 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.262847972 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26331782 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.265747714 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264621407 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.265297554 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.262760978 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262899819 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.26552367 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.263140188 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.26262391 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.266201563 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.264028791 seconds)
  done (took 39.12210569 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.285087131 seconds)
    (2/2) benchmarking "in"...
    done (took 1.284171745 seconds)
  done (took 3.767910293 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.263906675 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.265285905 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.266908892 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.263551782 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.264073734 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.26582572 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.266114446 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.262276027 seconds)
  done (took 11.316630482 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.266982114 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.266235907 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.267286011 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.266371405 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.267446171 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.267609848 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.275279159 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.284754776 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.268782661 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.267709094 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.272810706 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.274621829 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.270525038 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.267681148 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.26701719 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.269168671 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.268132802 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.266930865 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.268634984 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.267810102 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.267007435 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.271383398 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.269995577 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.265719678 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.268676583 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.281886335 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.274253572 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.267676515 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.267720217 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.273384791 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.267465619 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.266180744 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.26913131 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.268391893 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.271418388 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.269081974 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.281998732 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.29049627 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.276513622 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.269740489 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.269036518 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.266437461 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.270268183 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.271724613 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.269549536 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.268201227 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.269805843 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.266173961 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.26796784 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.270568668 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.274358683 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.267747639 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.266253934 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.275570671 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.272086635 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.278078055 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.288089481 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.271610719 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.278053003 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.282461392 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.284184235 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.277491616 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.272268763 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.270749278 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.279875308 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.29249876 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.277822587 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.285829911 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.266846456 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.26992451 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.278906371 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.283792153 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.280108195 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.270054056 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.270707093 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.270975565 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.270253602 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.272042093 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.280029761 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.291297794 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.269289721 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.270752484 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.279846196 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.291449554 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.268400311 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.270887228 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.272012854 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.271187727 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.271972235 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.281670466 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.289421111 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.271767742 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.269936061 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.270447481 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.27404552 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.270883311 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.270718675 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.272670707 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.269069451 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.271369572 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.271542248 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.275091554 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.27959162 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.272614907 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.271647657 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.281856565 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.272837879 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.270894715 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.283063768 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.272846897 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.272434535 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.272593147 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.281624518 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.270041919 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.275255557 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.281346516 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.272256221 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.274556472 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.272940596 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.273151351 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.282089814 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.298942256 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.273274314 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.27372822 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.277237691 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.283847783 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.27390071 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.276745677 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.274450941 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.271420122 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.270880752 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.274960388 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.273539475 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.274660189 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.273619695 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.274818573 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.271985323 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.273536621 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.272944217 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.274739498 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.275794458 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.274311781 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.275562736 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.276128048 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.273766257 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.275766332 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.283085445 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.274613333 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.275100726 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.274927799 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.273375909 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.275294606 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.277049645 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.274017908 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.275596982 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.274884795 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.274431389 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.274425891 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.275522355 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.275249437 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.276132689 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.275675399 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.278709415 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.275005494 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.280611771 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.274116649 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.272623846 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.2748863 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.275629731 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.274217802 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.276074844 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.273441091 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.278051662 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.283264835 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.275985723 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.275763182 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.279639639 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.274923957 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.275748543 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.27574804 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.278919944 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.283143439 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.275829478 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.285020145 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.276827604 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.276886436 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.277311034 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.276856032 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.275654687 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.276242362 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.279294666 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.284294225 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.290759101 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.286453893 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.277499522 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.281306144 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.27717634 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.281126146 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.282634145 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.276475822 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.276688592 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.277908417 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.276237715 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.277198003 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.280394639 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.276980543 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.27820893 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.27870104 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.278284518 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.277005238 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.278781734 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.279544813 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.279702346 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.276055122 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27832802 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.278446733 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.2773137 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.274948038 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.275484094 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.276353945 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.279352913 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.278226257 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.288103124 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.27661199 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.279074231 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.27982686 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.278539155 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.276310682 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.279300385 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.280737927 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.278521003 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.287164442 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.298516931 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.280780035 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.287487141 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.295712517 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.278134248 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.282654667 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.279364321 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.276550827 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.281657573 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.287808741 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.27937423 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.280440615 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.280305566 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.280006048 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.279575084 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.288520076 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.277550997 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.279054003 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.279999465 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.282615305 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.277066263 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.280137774 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.280447732 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.280543447 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.282812698 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.280890074 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.280398032 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.281830892 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.279848554 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.280729001 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.280048796 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.283122318 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.287425167 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.287340674 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.281704323 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.284896555 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.281210577 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.284096497 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.28190177 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.280796195 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.280655811 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.295842064 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.290009803 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.289736205 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.284585774 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.282478213 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.288003826 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.281806936 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.286082532 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.280740353 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.281886718 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.281274064 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.280337362 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.279386679 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.282846183 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.281906105 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.282738968 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.283027655 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.286702626 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.283606282 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.281818076 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.282074075 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.281460711 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.281885746 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.281391203 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.282686014 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.286932189 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.283439588 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.281602579 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.281728208 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.290383379 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.300835685 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.284282777 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.281816416 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.282518799 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.280926402 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.28413538 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.282234149 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.284844142 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.288989309 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.285192192 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.293205253 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.283865006 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.294139709 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.282759834 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.286202751 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.290326719 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.281196035 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.281008346 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.284291633 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.283354834 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.292895032 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.301443615 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.284230431 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.286982581 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.283142834 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.283018759 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.284037141 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.283479156 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.284421049 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.283125269 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.293743376 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.306477856 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.287794933 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.285439441 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.282165544 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.284360781 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.285086027 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.282687848 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.29148132 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.28407646 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.286280629 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.284026115 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.285109429 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.28518598 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.283572676 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.285610751 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.281908416 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.285052505 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.294191195 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.303538517 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.289200319 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.285306699 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.296384289 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.285268134 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.294403114 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.302802114 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.286270428 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.284816953 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.28568348 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.2887795 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.284791146 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.288166362 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.2863053 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.286733849 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.289765799 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.285576063 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.289749274 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.285952614 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.285613704 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.286206765 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.294902625 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.307432178 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.286297885 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.290324002 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.283974031 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.285616193 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.289764863 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.286056221 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.284314328 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.288470476 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.29617732 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.294711308 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.28730118 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.286199954 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.287434002 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.285935821 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.287129683 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.287892748 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.286167823 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.28715647 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.288850565 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.28574356 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.293113307 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.287412399 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.28742074 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.288906444 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.288187967 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.299047701 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.286920862 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.288615001 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.286909201 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.286874549 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.288016208 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.286977807 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.286364856 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.28865498 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.289613237 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.288235053 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.294073645 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.293397874 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.290337225 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.28660252 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.287772213 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.288271783 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.289272633 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.287525087 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.288328787 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.288138021 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.288502603 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.287459537 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.290771165 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.287313832 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.288853492 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.289908229 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.288269328 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.291331561 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.295003039 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.288973714 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.286707925 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.289911414 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.289710195 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.286482286 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.289049981 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.301396885 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.292053306 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.299028313 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.297589345 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.293175427 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.289634838 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.292441744 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.296950442 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.28789982 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.289294304 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.289727903 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.292283472 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.290303641 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.294254102 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.289892566 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.299054137 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.290556008 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.290824752 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.30057251 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.312710344 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.289965888 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.291119466 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.293777582 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.289546675 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.288810392 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.290715521 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.288117045 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.299282705 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.311368561 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.290123224 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.292016152 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.288023653 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.290481682 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.29429806 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.291087952 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.291510874 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.289220512 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.290841398 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.290124126 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.291215816 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.288687785 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.290100748 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.291520148 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.292920947 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.298014031 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.289640399 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.292599122 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.29115629 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.290898415 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.290260938 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.292057044 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.289033108 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.289724907 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.291488311 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.290621956 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.292831084 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.294333607 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.291816887 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.291345537 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.293544363 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.291272412 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.294287797 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.302296715 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.300032424 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.289348258 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.292425391 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.29259846 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.295130978 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.292868797 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.293281107 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.292847856 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.294885822 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.292703529 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.292982657 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.292732313 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.295503487 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.311079319 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.314305723 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.293638902 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.293140553 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.298958477 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.293319908 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.291453212 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.293048797 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.296179476 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.296499414 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.301220132 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.293107044 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.301865991 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.311580881 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.294972502 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.298048428 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.296749243 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.302015086 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.296293543 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.29377284 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.294632075 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.298331549 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.310921964 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.294720134 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.303951506 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.324141202 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.312121301 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.295069552 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.294480826 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.294167577 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.294129692 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.297595932 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.294335463 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.295001933 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.296087577 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.294067815 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.294911174 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.300299299 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.295534555 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.295421529 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.294949033 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.295393342 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.297555469 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.292956476 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.295195791 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.296088614 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.29532672 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.295261992 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.296083685 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.295655979 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.309393024 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.307409699 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.29634962 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.295405388 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.29367007 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.300798365 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.298761375 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.306111011 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.30372066 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.29584498 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.296029009 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.298034479 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.295294086 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.294734832 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.296128764 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.297286886 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.296341593 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.294041982 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.311004825 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.305997003 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.303181887 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.297641618 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.296293806 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.297262046 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.299752881 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.296828892 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.297006102 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.300409241 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.29688812 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.300615746 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.298544362 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.297135515 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.300840325 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.305524968 seconds)
  done (took 766.856846803 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.295752573 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.294858357 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.295077027 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.295598776 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.29464989 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.295036023 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.29569249 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.294784182 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.295617331 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.295678554 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.294725712 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.295403128 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.295449125 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.296034319 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.296560687 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.294896199 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.296252329 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.295753009 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.296072561 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.296332324 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.296073567 seconds)
  done (took 28.43726302 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.29953413 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.296014485 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.29631835 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.298443091 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.296202067 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.299537427 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.296297166 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298788348 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.299361326 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2962009 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.299040387 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.298728429 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.297001876 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.297384062 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296186456 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.299559548 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.299573044 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.297311607 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.299094312 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.296544559 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.298936081 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.297193657 seconds)
  done (took 29.784429276 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.300494922 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.29880863 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.297565274 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.298532167 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.299034376 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.296481389 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.299546022 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.299824498 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.299937058 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.301471732 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.298791092 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.300162854 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.306493828 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.305251947 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.303215225 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.300471975 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.444736056 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.300034638 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.299841215 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.300478078 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.298918239 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.307591913 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.298868048 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.297629682 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.300707331 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.300186459 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.300968017 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.300705935 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.300560179 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.300947749 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.304515164 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.301637347 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.300227445 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.302984948 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.30026329 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.301642885 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.304942218 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.302251167 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.300161688 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.301146321 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.311110258 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.321014501 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.301015104 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.310018516 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.30214998 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.301996863 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.304933112 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.310582556 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.300543084 seconds)
  done (took 65.176116362 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.302324438 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.301204693 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.29947386 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.302009172 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.301666881 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.302594751 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.301145241 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.301349487 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.299315326 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.299147197 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.302369626 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.299663863 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.29908007 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.302635101 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.301787067 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.299383007 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.300113101 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.300052626 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.300270626 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.299424622 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.30031189 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.303716517 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.302660961 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.30030307 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.301997194 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.300071854 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.29953331 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.303041795 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.30089717 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.300856077 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.304211944 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.303947016 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.30363987 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.301197684 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.301108571 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.302537274 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.302296315 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.301179639 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.303953938 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.30154467 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.303965099 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.304457845 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.304062033 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.303286073 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.303213661 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.3028941 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.301142556 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.303779177 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.302901798 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.304015222 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.305312946 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.302618905 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.304403233 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.301642308 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.304677493 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.304244004 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.302302557 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.301929566 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.304902621 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.301442909 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.301895616 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.305372281 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.30255245 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.304795387 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.306324999 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.303289256 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.302254815 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.305420199 seconds)
  done (took 89.790517291 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.30431859 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.304721337 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.304823765 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.304273821 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.305463743 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.305388304 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.304169557 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.305521863 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.304854589 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.305062887 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.304353176 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.30665534 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.304724263 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.306310251 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.304823304 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.305318282 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.30725404 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.305198716 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.305743717 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.305461584 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.305149703 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.306994702 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.307000396 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.30606668 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.306436863 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.304980536 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.305770761 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.306834656 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.305796583 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.306377226 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.307369955 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.306492214 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.306286537 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.307198384 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.306664759 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.30599448 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.306471936 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.306477827 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.306681143 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.307003262 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.307087434 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.307547094 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.307682935 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.306532753 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.307145812 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.306372529 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.306976603 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.307969892 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.308583369 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.30812359 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.308922543 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.307906825 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.307940206 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.307843751 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.308200889 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.308461436 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.307914381 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.308570304 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.307933992 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.308316063 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.308751188 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.309946994 seconds)
  done (took 82.24766811 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.308391302 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.310860667 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.305159502 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.306308218 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.308449694 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.306439923 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.308170682 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.308890645 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.308438941 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.308238476 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308209285 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.307298318 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306142586 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.309193297 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.306381072 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.306150601 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.306255513 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.306793157 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.308475934 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.306353708 seconds)
  done (took 27.392729326 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.306564352 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.309175462 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.306353984 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.306667586 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.309501339 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.307349161 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.309364677 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309929123 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.307083008 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.308870785 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.309327151 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.309523004 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.308502757 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.307218523 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.310089941 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.306719746 seconds)
  done (took 22.174478205 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.306975264 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.31033361 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.309647363 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.309347238 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.307641022 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.307375577 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.309781963 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.308202789 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.307193839 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.310913621 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.311231534 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.309792353 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.310447626 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.309997894 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.307874059 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.310428022 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.307865318 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.308407257 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.310404561 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.31140221 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.309394738 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.308806296 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.311302606 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.310192795 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.307473279 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.309297512 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.308530399 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.309706181 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.308521812 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.311103573 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.308407438 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.310203088 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.308862214 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.308876161 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.31134496 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.309598883 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.312195812 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.311778432 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.31138659 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.312057418 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.313110779 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.308682592 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.312913435 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.312279383 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.308547698 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.31269064 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.309953266 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.310872325 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.309682229 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.30918561 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.313338822 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.312821418 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.312457283 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.313985431 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.313122522 seconds)
  done (took 73.302943534 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.313123731 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.311898524 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.30978249 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.312623109 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.312720516 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.311617938 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.314008834 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.311573704 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.310122222 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.312933192 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.311618225 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.313504251 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.310853474 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.313016028 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.311504442 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.313643737 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.310775221 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.311741167 seconds)
  done (took 24.862502302 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.312215497 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.311184093 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.314360048 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.311817171 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.311051321 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.314928968 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.310709615 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.314351886 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.314074977 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.31174056 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.312325481 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.31481236 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.313629619 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.315101059 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.311586458 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311373641 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.31450151 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.314770152 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.311208678 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.312275235 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.31508268 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.314947875 seconds)
  done (took 30.134685184 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.312936532 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.313694165 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.33174107 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.357808614 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.34381317 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.313578892 seconds)
  done (took 9.21985831 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314317822 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316168211 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.3122958 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316385958 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316024604 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313826458 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313313292 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313825479 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316169857 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313948887 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314539093 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316524336 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316209423 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313608018 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316148985 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315746176 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314330514 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314248445 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315751455 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317512539 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313744431 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316957746 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314872677 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316003212 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314010123 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314497445 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317145535 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315008367 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313893383 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317248103 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317629238 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313956999 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31789554 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31540607 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317955492 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31874991 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313848691 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315896561 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316875224 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314704736 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.317568368 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317482696 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318135484 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314456548 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317085556 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315368549 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315826796 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315685912 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315136038 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318506134 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318569449 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315375548 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318180014 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31750605 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318390988 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318556886 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315492334 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315431644 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318066724 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315602218 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316119661 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31833405 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315859647 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316538892 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318820367 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314977695 seconds)
  done (took 88.103987088 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31681649 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.317132013 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315408513 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317718477 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316781446 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316342854 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317344028 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316738111 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317423775 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317313105 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31978807 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317938234 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317073558 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317503757 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31698948 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317200893 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317778236 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317619336 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31695718 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319937586 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3176267 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316639045 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317481166 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317224393 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31813465 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320338734 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317720698 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317848555 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318107309 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317842339 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317462493 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318239234 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317710449 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.318090078 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318188648 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317531113 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31895657 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318793165 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318018716 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319823931 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318441098 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320239204 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31818708 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318316774 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319093881 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318385239 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318633648 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318664162 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318019293 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317929124 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318715689 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320026224 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32105845 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31919564 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319097221 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318824566 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317998008 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319747543 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319474976 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320485826 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318906716 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31936867 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321519891 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319714733 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319260198 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318168913 seconds)
  done (took 88.259972668 seconds)
done (took 1787.540203697 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.370330162 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.312728785 seconds)
  done (took 13.936369655 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.482995951 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.436245254 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.320435069 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.322871832 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.321319722 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.331836499 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.332752337 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.320295874 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.320474582 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.319644012 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.319333067 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.510162242 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.321786882 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.32052256 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.319491206 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.411632286 seconds)
  done (took 42.976125902 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.357865828 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.326583322 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.452191689 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.338810958 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.357954345 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.52514584 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.377114363 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.325772186 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.499642097 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.37404345 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.915477208 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.359021995 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.325060399 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.460528447 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.343371275 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.525491281 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.583569325 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.919680165 seconds)
  done (took 30.623604815 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.777469032 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.35782616 seconds)
  done (took 9.390173401 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.333101904 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.376069744 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.346945737 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.357344264 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.355362916 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.331082854 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.333453112 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.337602608 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.364947135 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.322294753 seconds)
  done (took 64.721609104 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.346386429 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.324890057 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.325826608 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.323686554 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.31598965 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.330150916 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.325086931 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.326835096 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.998950282 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.453599049 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.345553291 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.332255043 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.324608803 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.326181639 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.324418706 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.359363981 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.506997402 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.323281527 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.322339328 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.330404589 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.325095069 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.4087212 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.365799384 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.325674058 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.453319814 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.020017717 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.329345844 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.331441471 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.446369256 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.324584402 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.32586281 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.326858263 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.327689657 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.901132601 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.784583347 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.332680215 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.349227548 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.334195241 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.324451203 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.458118899 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.326042869 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.332185439 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.329740951 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.753315958 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.484258065 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.440730592 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.616698594 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.327317464 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.327498147 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.386329547 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.326754129 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.328112301 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.356539883 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.096374942 seconds)
  done (took 111.052897503 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.330441988 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.80833723 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.489790706 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.33702989 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.851076522 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.792398063 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.3187305 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.608804629 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.329839198 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.809940897 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.612104852 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.690701011 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.31872003 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.318761931 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.322418213 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.319743353 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.59019035 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.641448082 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.31879812 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.323948939 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.371696716 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.843569696 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.562990614 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.378285312 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.360849054 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.785055692 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.562963522 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.692997703 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.32225424 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.32089469 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.628784699 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.329239329 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.319557075 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.322818075 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.60524899 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.704833492 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.658153736 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.319874652 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.331248957 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.321547551 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.354083873 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.783420588 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.666675942 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.575231432 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.701198767 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.802674479 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.321482675 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.321014859 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.329810089 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.531264179 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.569309425 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.833434447 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.566498736 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.338959233 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.581501226 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.320068771 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.384058332 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.813849086 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.667636707 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.688579881 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.327617396 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.32285271 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.322076377 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.879783672 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.321788306 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.672568846 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.695421076 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.321250311 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.672874652 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.675016214 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.66934937 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.818094259 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.367703439 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.326059519 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.381641835 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.848563871 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.632354154 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.81213637 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.327204552 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.323090079 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.658122324 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.320684572 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.619962467 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.89631353 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.828826455 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.376057638 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.345011932 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.322698817 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.812427237 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.812611204 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.571712064 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.706886793 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.623240517 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.395337423 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.32386519 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.323141093 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.323616939 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.576817979 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.340952518 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.689927723 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.81234419 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.104282089 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.371499965 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.881865357 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.579527468 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.339450407 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.324088139 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.325408558 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.545471422 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.400555019 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.346039247 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.323551628 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.814642244 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.197521834 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.608329606 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.069993761 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.6341716 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.327439497 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.83542121 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.328904215 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.815147846 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.346114532 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.87907759 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.741274876 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.3845558 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.550210536 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.708762816 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.342476039 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.83381114 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.879429274 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.568788312 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.830581944 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.11391601 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.32876858 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.862086447 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.351382535 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.342019663 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.511491242 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.344657734 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.601964123 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.347637356 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.839504668 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.365396397 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.617454926 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.63116963 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.847977312 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.385345977 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.638926006 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.357970359 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.474848868 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.34594393 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.365310378 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.52911711 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.481053058 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.326729996 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.892135287 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.328238929 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.490515669 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.885813215 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.366215161 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.640494149 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.326448209 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.330878875 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.666102896 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.368666946 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.985353858 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.328217876 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.61756425 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.322565656 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.774239962 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.325906672 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.881494403 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.552614413 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.347262624 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.329755785 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.131458518 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.327314862 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.492143153 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.503220523 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.255302022 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.333077802 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.792291129 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.328649867 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.578441834 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.344110445 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.332509389 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.682494336 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.39780742 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.330971846 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.383325561 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.330021864 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.329649012 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.801280036 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.371278875 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.04758914 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.482812693 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.839742502 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.639844434 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.837864908 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.390913369 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.350532053 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.841880777 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.345144576 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.641424154 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.330512924 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.370907398 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.817185252 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.329212151 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.870919324 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.860486872 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.379131347 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.624840435 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.328794148 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.385390926 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.329872011 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.589141957 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.687817062 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.329827767 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.330673314 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.56554621 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.585800344 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.550722455 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.34776765 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.337119721 seconds)
  done (took 851.11805945 seconds)
done (took 1125.072393297 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.329124006 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.329826387 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.318061685 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.33207592 seconds)
  done (took 26.579328377 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.341297125 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.33743907 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.33881898 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.336788056 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.340026169 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.336749764 seconds)
  done (took 9.303736071 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.724639233 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.330226597 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.332338819 seconds)
  done (took 19.65798759 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.569163559 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.615725808 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.725685227 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.530073995 seconds)
  done (took 10.714165326 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.340394325 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.339224123 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.338798826 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.341290439 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.342282029 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.342854468 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.340571245 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.341847294 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.342969571 seconds)
  done (took 13.341310327 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.335000343 seconds)
done (took 86.201256248 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.348273893 seconds)
    (2/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.361159548 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.380633057 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.717999221 seconds)
    (5/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.996559608 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.338181599 seconds)
    (7/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.949199746 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.585293748 seconds)
    (9/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.471764569 seconds)
    (10/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.333044442 seconds)
    (11/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.361174914 seconds)
    (12/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.751314255 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.376164463 seconds)
    (14/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.332054843 seconds)
    (15/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.357053612 seconds)
    (16/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.522754354 seconds)
    (17/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.36092628 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.359818343 seconds)
    (19/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.652323632 seconds)
    (20/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.436451047 seconds)
    (21/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.392683157 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.268284994 seconds)
    (23/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.003056474 seconds)
    (24/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.352663021 seconds)
    (25/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.936827223 seconds)
    (26/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.944226222 seconds)
    (27/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.521848147 seconds)
    (28/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.695173572 seconds)
    (29/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.315221729 seconds)
    (30/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.35795117 seconds)
    (31/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.329397671 seconds)
    (32/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.44817324 seconds)
    (33/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.365135666 seconds)
    (34/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.352821942 seconds)
    (35/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.749611536 seconds)
    (36/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.955592065 seconds)
    (37/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.784347126 seconds)
    (38/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.476662198 seconds)
    (39/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.811792225 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.273558536 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.434857573 seconds)
    (42/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.341086658 seconds)
    (43/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.190951467 seconds)
    (44/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.758590231 seconds)
    (45/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.744295849 seconds)
    (46/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.342905392 seconds)
    (47/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.946449498 seconds)
    (48/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.180816757 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.419690301 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.44153602 seconds)
    (51/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.357961676 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.589395055 seconds)
    (53/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.825900987 seconds)
    (54/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.341762462 seconds)
    (55/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.64458459 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.006610296 seconds)
    (57/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.080427059 seconds)
    (58/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.35012503 seconds)
    (59/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.529455308 seconds)
    (60/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.183341891 seconds)
    (61/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.31780694 seconds)
    (62/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.373887215 seconds)
    (63/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.56206477 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.390691635 seconds)
    (65/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.455434986 seconds)
    (66/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.6573367 seconds)
    (67/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.316665087 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.06442179 seconds)
    (69/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.914514352 seconds)
    (70/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.517673521 seconds)
    (71/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.409926941 seconds)
    (72/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.330971022 seconds)
    (73/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.368993433 seconds)
    (74/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.33127976 seconds)
    (75/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.162095542 seconds)
    (76/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.332373445 seconds)
    (77/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.318460621 seconds)
    (78/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.41873083 seconds)
    (79/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.210863474 seconds)
    (80/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.331410461 seconds)
    (81/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.317956622 seconds)
    (82/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.318679163 seconds)
    (83/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.000330916 seconds)
    (84/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.650363136 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.749246172 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 5.545776714 seconds)
    (87/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.747577663 seconds)
    (88/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.318340012 seconds)
    (89/309) benchmarking ("sort", BigInt, false)...
    done (took 6.346602511 seconds)
    (90/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.419383425 seconds)
    (91/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.722506553 seconds)
    (92/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.352571253 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.517600727 seconds)
    (94/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.587625095 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.203931048 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.383709155 seconds)
    (97/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.144978945 seconds)
    (98/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.343649985 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.488691598 seconds)
    (100/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.840047219 seconds)
    (101/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.544829609 seconds)
    (102/309) benchmarking ("sort", Float64, false)...
    done (took 5.659775576 seconds)
    (103/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.202958078 seconds)
    (104/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.731218601 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.021782271 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.212332284 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.325441299 seconds)
    (108/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.732060656 seconds)
    (109/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.941947404 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.443380012 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.548030999 seconds)
    (112/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.64777242 seconds)
    (113/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.335085792 seconds)
    (114/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.720442998 seconds)
    (115/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.434125497 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.355818471 seconds)
    (117/309) benchmarking ("sort", Float32, false)...
    done (took 5.339661494 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.334761239 seconds)
    (119/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.399626264 seconds)
    (120/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.523287656 seconds)
    (121/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.620256457 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.95986441 seconds)
    (123/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.319035988 seconds)
    (124/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.190625872 seconds)
    (125/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.665606108 seconds)
    (126/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.611514831 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.85217572 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.863827629 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.729683131 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 1.861232647 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.359039083 seconds)
    (132/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.419319392 seconds)
    (133/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.319860552 seconds)
    (134/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.933274592 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.611005393 seconds)
    (136/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.369011029 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.109051467 seconds)
    (138/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.730440305 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.603812357 seconds)
    (140/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.362516385 seconds)
    (141/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.33473873 seconds)
    (142/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.419738538 seconds)
    (143/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.421661817 seconds)
    (144/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.476121562 seconds)
    (145/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.336130644 seconds)
    (146/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.417740218 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.441197528 seconds)
    (148/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.364011316 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.978183629 seconds)
    (150/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.481868023 seconds)
    (151/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.8849099 seconds)
    (152/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.293977329 seconds)
    (153/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.938276197 seconds)
    (154/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.354073896 seconds)
    (155/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.33622488 seconds)
    (156/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.364106918 seconds)
    (157/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.17310405 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.1307596 seconds)
    (159/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.321362014 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.365025613 seconds)
    (161/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.376505566 seconds)
    (162/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.445136977 seconds)
    (163/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.816328943 seconds)
    (164/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.32264776 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.449954735 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.197713204 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.362133613 seconds)
    (168/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.747743728 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.355833744 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.336756589 seconds)
    (171/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.243894629 seconds)
    (172/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.804934812 seconds)
    (173/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.455566341 seconds)
    (174/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.446456485 seconds)
    (175/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.361362401 seconds)
    (176/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.909411867 seconds)
    (177/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.42416152 seconds)
    (178/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.235425752 seconds)
    (179/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.79041761 seconds)
    (180/309) benchmarking ("sort", Int8, false)...
    done (took 4.366504661 seconds)
    (181/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.743293011 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.740107902 seconds)
    (183/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.421420061 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.411781988 seconds)
    (185/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.908019416 seconds)
    (186/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.347913323 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.346033128 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.38730742 seconds)
    (189/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.667470237 seconds)
    (190/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.652768705 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.746311832 seconds)
    (192/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.240193597 seconds)
    (193/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.435238679 seconds)
    (194/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.353614428 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.836326853 seconds)
    (196/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.403983949 seconds)
    (197/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.137337411 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.755545305 seconds)
    (199/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.806433351 seconds)
    (200/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.833125091 seconds)
    (201/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.726308922 seconds)
    (202/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.905663829 seconds)
    (203/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.144025649 seconds)
    (204/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.368319975 seconds)
    (205/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.34441329 seconds)
    (206/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.382218811 seconds)
    (207/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.36632767 seconds)
    (208/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.942886806 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.285518817 seconds)
    (210/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.328525423 seconds)
    (211/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.655557561 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.44107586 seconds)
    (213/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.063875915 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.38939002 seconds)
    (215/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.448448989 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.44045729 seconds)
    (217/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.398250887 seconds)
    (218/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.06953694 seconds)
    (219/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.371248875 seconds)
    (220/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.116437087 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.415460521 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.338120827 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.378606965 seconds)
    (224/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.555706855 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.907562637 seconds)
    (226/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.121742947 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.545357661 seconds)
    (228/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.339666038 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.341538025 seconds)
    (230/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.351723214 seconds)
    (231/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.631609435 seconds)
    (232/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.651862279 seconds)
    (233/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.785142044 seconds)
    (234/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.388661473 seconds)
    (235/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.326381165 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.359677689 seconds)
    (237/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.365610692 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.382490499 seconds)
    (239/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.36735039 seconds)
    (240/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.404335773 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.301019344 seconds)
    (242/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.518811927 seconds)
    (243/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.42727326 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.340041362 seconds)
    (245/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.51406134 seconds)
    (246/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.881995032 seconds)
    (247/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.801214403 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.704421896 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.773359951 seconds)
    (250/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.885856346 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.377439852 seconds)
    (252/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.943339326 seconds)
    (253/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.658357016 seconds)
    (254/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.445317033 seconds)
    (255/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.348372007 seconds)
    (256/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.416791599 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.883392408 seconds)
    (258/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.508585352 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.557635947 seconds)
    (260/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.721713227 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.796550947 seconds)
    (262/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.404031633 seconds)
    (263/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.451720565 seconds)
    (264/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.370853973 seconds)
    (265/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.660330951 seconds)
    (266/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.972615855 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.385003704 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.699527436 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.739917396 seconds)
    (270/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.21269864 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.342906126 seconds)
    (272/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.70680175 seconds)
    (273/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.373337983 seconds)
    (274/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.474509785 seconds)
    (275/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.118330481 seconds)
    (276/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.430917439 seconds)
    (277/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.56277345 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.23629126 seconds)
    (279/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.039573944 seconds)
    (280/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.348991358 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.363926032 seconds)
    (282/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.211150588 seconds)
    (283/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.131900207 seconds)
    (284/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.984912617 seconds)
    (285/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.746052258 seconds)
    (286/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.507851632 seconds)
    (287/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.298580973 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.440418906 seconds)
    (289/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.357401342 seconds)
    (290/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.643809627 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.432148341 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.8851979 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.997808049 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.464437138 seconds)
    (295/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.413016001 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.529778091 seconds)
    (297/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.347943815 seconds)
    (298/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.752914884 seconds)
    (299/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.697239481 seconds)
    (300/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.471858342 seconds)
    (301/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.34666157 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.985478963 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.391159296 seconds)
    (304/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.344759041 seconds)
    (305/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.350082428 seconds)
    (306/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.800684986 seconds)
    (307/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.376439104 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.372703691 seconds)
    (309/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.374744075 seconds)
  done (took 935.030046533 seconds)
done (took 936.303187419 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.380262143 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.375056636 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.357539294 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.379721325 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.46900083 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.387916684 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.367966661 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.360112464 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.406152044 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.407948987 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.35768823 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.385946712 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.359642977 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.35916287 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.357662058 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.372937763 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.395896007 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.360114782 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.375393171 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.368277709 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.375426025 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.357635621 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.408357369 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.386414714 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.361926671 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.362165615 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.363382945 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.378360815 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.470966328 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.363847187 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.362703224 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.371452084 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.396849102 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.357348419 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.353752101 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.37918306 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.371023122 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.369546962 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.362931533 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.391324556 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.812349692 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.359866002 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.361181266 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.360653873 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.360567263 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.364542965 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.361377753 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.367891434 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.373428588 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.374179023 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.80605029 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.376198625 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.363767685 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.360951702 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.371846559 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.360904987 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.365792394 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377303694 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.381323234 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376528267 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.390965769 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.367656487 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.36386986 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.377801349 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.370034411 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.844496451 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.357942711 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.366264837 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.820094365 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.367038395 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.846178806 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.371532574 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.36414284 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.376145861 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.395399757 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.402952521 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.357435524 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.362433439 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.369761307 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.362009958 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.373508659 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.375958216 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.368202961 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.363581424 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376691847 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.39200695 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.372886473 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.36443487 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.371386193 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.382892479 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.371165979 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.375072234 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.366142216 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.358675059 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.372580548 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.366936703 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.366551857 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.366110369 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.368100925 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.373999638 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.818354055 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380791959 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.35943161 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.359962238 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.363259767 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.378237426 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.819499692 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.365050848 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.385155877 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.411573262 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.365386124 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.395173047 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.367480533 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.380010191 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.373211096 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.368280971 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.359557474 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.396976014 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.815151557 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.378252921 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.366697956 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.363223932 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.381492621 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.366746722 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.361720205 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.406759581 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.366699278 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.379034073 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.486506205 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.376176462 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.397894642 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.363729065 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.368004904 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.394241307 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381126306 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.397055666 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.36920012 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381703784 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.38215796 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.362455311 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.377763534 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.376248837 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.365961023 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.37170596 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.359569693 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.394328358 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.378645603 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.378573587 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.386631921 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.4871594 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.363509861 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.399350778 seconds)
done (took 230.054503593 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.427241732 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.356322715 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.467751099 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.364442882 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.463814491 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.463201083 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.361994509 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.362969936 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.362113935 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.744487151 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.363470646 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.363038884 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.361180095 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.362773992 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.447660613 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.365259313 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.362703497 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.708946367 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.365115545 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.435204299 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.365347985 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.363872388 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.365385454 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.746278734 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.364872954 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.357139428 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.436548711 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.365523346 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.711243412 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.365455066 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.360214941 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.709892739 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.456294576 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.384690428 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.376491236 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.372795354 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.466735497 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.384004686 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.44745091 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.447657367 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.473038493 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.40603518 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.362612061 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.363466128 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.368167691 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.367416288 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.3644571 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.393258006 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.366779088 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.365809397 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.709453798 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.376934732 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.375321728 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.366045979 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.364693712 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.386803697 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.365745779 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.36805248 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.45781185 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.36776132 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.43010919 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.746884775 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.748093913 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.368182606 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.363981753 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.366212269 seconds)
  done (took 150.647932919 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.434113339 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.45303523 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.480811534 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.368347921 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.421324709 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.48701367 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.368623905 seconds)
  done (took 11.311970563 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.373293181 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.369132957 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.417637538 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.417809102 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.369039667 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.515520111 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.368850773 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.379673984 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.366812874 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.422022118 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.369572395 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.370402432 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.376359201 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.3622602 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.416550123 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.379875259 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.484468801 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.369964785 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.368747143 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.520872317 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.366957986 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.376861018 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.421010963 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.379576022 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.370844666 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.37481907 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.947220744 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.370063351 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.367772582 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.369708431 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.367040575 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.406871462 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.370645876 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.366784713 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.368028891 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.486131501 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.3701048 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.367827263 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.370330709 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.366388768 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.370014503 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.370167043 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.371541325 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.367785545 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.370986981 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.393938583 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.371577627 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.370348703 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.37129388 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.371062479 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.41999126 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.370539418 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.368275317 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.367914311 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.425469542 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.377902688 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.372138977 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.368457854 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.372354083 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.369420521 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.521744305 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.417440717 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.372280298 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.418787071 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.372803978 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.372413621 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.371390733 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.372331055 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.42692955 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.372001303 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.420254487 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.369200029 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.527005667 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.395069691 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.373507735 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.374118553 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.373801441 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.37266031 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.364892596 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.378796156 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.370641862 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.372551989 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.378767949 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.370648376 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.370090466 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.474831492 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.481317816 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.369478795 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.383688143 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.379403108 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.370267671 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.425226838 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.372945469 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.371055603 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.423314808 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.487689574 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.425641793 seconds)
  done (took 156.843120296 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.377015723 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.380786895 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.374403283 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.389819738 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.372496271 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.372410101 seconds)
  done (took 9.570685734 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.3757782 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.374244169 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.374252201 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.373786636 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.374337313 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.374341527 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.373826323 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.37535819 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.377690039 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.374025922 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.374327944 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.374077198 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.375804926 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.37376858 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.374137489 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.374523455 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.374204506 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.371941082 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.374823893 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.373980953 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.479556105 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.374242603 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.374777934 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.375575209 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.37941709 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.375725881 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.381389183 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.375445578 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.375252833 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.382991876 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.378357927 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.376320165 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.376524959 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.380983431 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.378900613 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.3762106 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.379191926 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.37636221 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.837017886 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.376356109 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.37647256 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.375733212 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.376302846 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.37689877 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.379103188 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.379660534 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.380516934 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.383224687 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.375723451 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.376362871 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.378567617 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.376090955 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.375986495 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.376852124 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.379026538 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.38025083 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.381400235 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.376869313 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.376519567 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.376881787 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.376824253 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.376853222 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.378169447 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.380771371 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.375023014 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.37773774 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.377304603 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.379084335 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.376620287 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.377062226 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.378505977 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.374453823 seconds)
  done (took 101.992970162 seconds)
done (took 431.660724623 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.626293297 seconds)
  done (took 7.934228409 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.506012862 seconds)
  done (took 7.815910776 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.796740994 seconds)
  done (took 22.109426831 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.426432294 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.452236134 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.381436552 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.37142912 seconds)
  done (took 26.939915438 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.878118831 seconds)
  done (took 8.185871847 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.37791517 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.381557751 seconds)
  done (took 14.067906408 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.500781879 seconds)
  done (took 7.809032972 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.880296904 seconds)
  done (took 8.193343677 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.391241654 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.383643685 seconds)
  done (took 14.352770533 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.35487583 seconds)
  done (took 7.663424149 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.477883204 seconds)
  done (took 8.786445996 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.371195676 seconds)
  done (took 7.679829774 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.444806313 seconds)
  done (took 7.752880588 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.476058969 seconds)
  done (took 9.784133372 seconds)
done (took 160.382330813 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.369428183 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.373992864 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.369507696 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.370786918 seconds)
  done (took 26.792729224 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.41359066 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.413177748 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.413802461 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.423550987 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.41541407 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.412167353 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.404396449 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.405572289 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.424169772 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.415371245 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.414469827 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.413980982 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.41384834 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.405365711 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.414843718 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.41506293 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.423439691 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.415086147 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.405291064 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.416239957 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.379706462 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.424972043 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.4161096 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.379621857 seconds)
  done (took 35.19018253 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.579021766 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.450476044 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.533357824 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.43129357 seconds)
  done (took 7.303681724 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.433525132 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.433164778 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.445264026 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.485346461 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.511604892 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.442293397 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.405853745 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.402298836 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.389368388 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.433830732 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.509310681 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.450243683 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.53293907 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.381571019 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.569313993 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.380690502 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.380089924 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.43313455 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.485097234 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.513587959 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.381783837 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.433650453 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.437153965 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.450543975 seconds)
  done (took 36.032231575 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.38090218 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.389483225 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.386857743 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.379784241 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.379595291 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.381628964 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.386481534 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.381867274 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.400977899 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.382389716 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.380015979 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.381151016 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.379861208 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.381313029 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.380540037 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.394477652 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.394593045 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.381529706 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.384532782 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.387432716 seconds)
  done (took 29.007457607 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.374067514 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.278461316 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.726593005 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.632323058 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.374530851 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.374768538 seconds)
  done (took 29.072866932 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.454917319 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.592574628 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.385351735 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.755878843 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.831260438 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.383056106 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.384102929 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.630893475 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.965860643 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.964169862 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.445729464 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.43711131 seconds)
  done (took 20.543725901 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.390100734 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.378176917 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.390859494 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.394455064 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.440189101 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.386144854 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.388794755 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.375885678 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.442398206 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.443537229 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.386534243 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.44108226 seconds)
  done (took 38.173289714 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464526861 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.4317259 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.379833703 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.285348305 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.760869218 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.590315731 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.294828867 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.851268388 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.381535328 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652122321 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380818925 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470552659 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.637430535 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378140691 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.382078798 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.44158367 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.610941841 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896995383 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379403862 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.571488585 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406154208 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.387647398 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.776023515 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.410927278 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.591606602 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.518622606 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.639672917 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.378882704 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.676722584 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.393010328 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389355062 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37895539 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653716719 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073433544 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473541194 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389162324 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.324401466 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.091306823 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.382709552 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.68138986 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39060539 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.38436876 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389343033 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380647779 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.316204857 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380618931 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.86136592 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.385914819 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.093003785 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.380710227 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392111388 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47549639 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.385119978 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.200712167 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.592264386 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379999997 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.377514406 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386412214 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950778132 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.150634693 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385285462 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.318578971 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.545737586 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.674796572 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023779279 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.484345236 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.38374779 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.385243172 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316267775 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.644849655 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402515846 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.721515488 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.402911595 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.046075159 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.148827979 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.393737635 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.317156656 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954685102 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385519069 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.318417577 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611916402 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383252738 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323567508 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.332655382 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.317106378 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.119423318 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389737745 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.833665366 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387770573 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.855966445 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.392850279 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399639115 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406558933 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.607861133 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.26444622 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38197091 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.382853636 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506966483 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405933917 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.85898975 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316699841 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.386817509 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64191046 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.595326975 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383940664 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.459386426 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618332295 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389541769 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.400193012 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.383401691 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.398019591 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.995405704 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.39935658 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.170689115 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404374863 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.384757127 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162189425 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384957452 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.487865077 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.384679196 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642894116 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.217847274 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390502782 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466748167 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387871598 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.384266414 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.690006951 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.906542061 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.385316654 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.385444351 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385864518 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.397937038 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.384152862 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343020139 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.382056812 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397891917 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.389469843 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.609886842 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399310983 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661742056 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31950044 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.724817608 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.488694602 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.610334705 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.677673938 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.387476357 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.646691199 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391127626 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.39468917 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.3990153 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403644861 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483939939 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407244387 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.385940483 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.647265509 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.389522848 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.389760506 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.699441225 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.390655003 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392469893 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.391560296 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.366453588 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996933878 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360879214 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.395385548 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.281381067 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.40017589 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450626372 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.391702481 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.396595597 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.312167587 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.420900662 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.391479089 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.389589824 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615884131 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398955824 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.606298986 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.467620474 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.615305711 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.000030536 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403164796 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.321940533 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.09771165 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.080381439 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387662111 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.323472261 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.386971572 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39641641 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.398295331 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.710151647 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.004544353 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392181283 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.61235769 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.396643171 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.398225351 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.393054525 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387082776 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.300708035 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.18623041 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393449027 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.402729652 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532824031 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.402982967 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.325717146 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.392690778 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.393484719 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.389291788 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.389023606 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421400691 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.624456106 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.897322523 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.650109936 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.169961409 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.400470297 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.743188736 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.424223308 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.402087995 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396237422 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393145462 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.40655321 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4008071 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.40083632 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.623307953 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.073622426 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956995997 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.14642017 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952037686 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383423383 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.390749278 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.394430685 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.871312618 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323486195 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.950184674 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.591328247 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.874186489 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346157651 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620009013 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.690949074 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.192571907 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.401553422 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619492151 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382788284 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.391642403 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405609367 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.602910023 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425570018 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.394900043 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.320958057 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.912841912 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.685122604 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402739069 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.471388074 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.869256164 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404467603 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.396029907 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.388813458 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.799187959 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.578781461 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.102397241 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.570651487 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.391743665 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.393401039 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.897099182 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.400630986 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.618910319 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037633307 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.404495463 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.624611542 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331422677 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.402668857 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.403418321 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.392109484 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.812321455 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.400020171 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.651058107 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.402674989 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326844909 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.401757629 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949647521 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.250569317 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.398205104 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392155988 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.170579291 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403677643 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.695198108 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.397109401 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.318375686 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401891128 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.327755003 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328246741 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.086780256 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.400115109 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363910945 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90741267 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.502271897 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.586524836 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.423262136 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449986923 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.651297729 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.407579917 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.009771517 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.62588831 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.409060136 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415025342 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.494285222 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393577069 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.380253751 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.393771211 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.630527794 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.369800219 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.618693031 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.414263162 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.298845629 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.391948698 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.606346054 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.394489634 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.397991792 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.655218826 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.106798218 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.399080534 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153862074 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420456599 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.409449559 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.319010182 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.559453219 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401263823 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473799028 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.406194782 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.405992591 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.406412676 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.581232107 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40483851 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400172975 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.408923107 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488291683 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.216676597 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.304547864 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.400109428 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.009382861 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150726203 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.018207597 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411534693 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.395711841 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394943706 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331137379 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545443598 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.622490674 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669559111 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515651824 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.60965513 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41813046 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400022374 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399994484 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611545257 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671793445 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.292485587 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397011367 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.412614987 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.396352919 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.408105286 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.610145702 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915149014 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976709945 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52163684 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.405959514 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.875228698 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671178633 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397749511 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397077042 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.99801568 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.420767172 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.822868226 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.403425905 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411295407 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548191807 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.408539481 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097331149 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.410912215 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.55411473 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.172839129 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.649940349 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.65983128 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.869158898 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.409766931 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.016890005 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.147187736 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666444157 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465742467 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.410428226 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.520020343 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546489998 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.403323624 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.399028862 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398587272 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454597858 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.109863447 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.409340337 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017919361 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665881684 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.397428451 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.399505999 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42409816 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.408998713 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.625591181 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141401021 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.625269838 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.410359076 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.408093002 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.219290871 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.017846696 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415918933 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335288426 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.405213108 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.659803893 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.638644264 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422574556 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.853397514 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.111891352 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977586021 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.378093142 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422200196 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40552523 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.151192511 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022107261 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.286592462 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913554415 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.961583714 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407923295 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676646702 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.406335065 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.415240508 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679273681 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.404148761 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.41204717 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.413973485 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.016322466 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.209434053 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.403442074 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.68784619 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.340090561 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.747430232 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.172418271 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339897172 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.411132973 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.601103475 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.402301592 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524253306 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413385377 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.406831597 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40517067 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.162437179 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.683336881 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.408074338 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.391486962 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.386705259 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.418941117 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410800179 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.698370049 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409937122 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.079312632 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.753233554 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.663126361 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.403341118 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.388789652 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.408202172 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4047305 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.401413329 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.607654944 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.727566632 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980228088 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.405560192 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.416086225 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.407615464 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.621062277 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615622339 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.41638879 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.417893038 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414248506 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421289682 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.30776038 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.912718371 seconds)
  done (took 1631.814156149 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.415354443 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.43187803 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.440513031 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.451703961 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.443412209 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.428410735 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.496029372 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.424316674 seconds)
  done (took 52.871715981 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.408333541 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.640589556 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.435362772 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.403067412 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.413316092 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.412973485 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.869493101 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.41035956 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.418022841 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.418679435 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.420756841 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.402208884 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.077399572 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.415173558 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.409861367 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.395063233 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.412412155 seconds)
  done (took 66.711121616 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.404645805 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.698553085 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.422403664 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.40935297 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.78902478 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.40534555 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.658081481 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.409658101 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.416514004 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.616388771 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.079274835 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.448828071 seconds)
  done (took 81.100213666 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.411751152 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.411168689 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.411421031 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.411091318 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.410761665 seconds)
  done (took 8.398150202 seconds)
done (took 2064.323084877 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.725619404 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.17965029 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.112647613 seconds)
  done (took 5.633379147 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.553382865 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.601710993 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.749246709 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.747458119 seconds)
  done (took 7.993628818 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.69005633 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.798902641 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.614049361 seconds)
  done (took 6.444994387 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.894539867 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.407981044 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.47870416 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.405609924 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.407619619 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.4087242 seconds)
  done (took 20.565377238 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.410927767 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.414134002 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.410325578 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.413566708 seconds)
  done (took 6.994227035 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.391541394 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.168791405 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.389940571 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.410104901 seconds)
  done (took 18.702971917 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.156421424 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.173418015 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.166853778 seconds)
  done (took 7.838838722 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.405735749 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.247412311 seconds)
  done (took 9.995395065 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.72616493 seconds)
  done (took 3.068657062 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.542868217 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.675823137 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.501672709 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.419592009 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.510961441 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.54699072 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.179675115 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.70316749 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.40528074 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.72464182 seconds)
  done (took 29.553874597 seconds)
done (took 130.63917276 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.393140084 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.430717773 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.611257474 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.368974817 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.638689203 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.612267933 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.695791073 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.338032586 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.877484511 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.867280811 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.371831099 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.637573163 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.63779982 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.431480095 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.639009711 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.42349947 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.638166861 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.435475114 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.061390803 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.265465919 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.697372792 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.011558323 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.206346962 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.028950564 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.639443265 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.562693915 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.605601577 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.419064996 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.233603208 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.614644325 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.564237726 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.407212717 seconds)
  done (took 194.711520779 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.42285571 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.417267803 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.407609245 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.407562151 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.423294352 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.408902612 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.422247602 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.407909652 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.408449717 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.428800552 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.408118393 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.416170384 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.410468959 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.427313869 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.411420682 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.416587056 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.408912194 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.409015693 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.409945871 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.408887658 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.410540974 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.424056311 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.417043329 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.418390741 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.408539595 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.40967338 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.409487091 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.408988685 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.410020422 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.42647348 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.409711125 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.409828054 seconds)
  done (took 206.590446472 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.409270232 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.410212552 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.426324145 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.417119885 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.408983639 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.410740619 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.413404217 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.409471119 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.409666589 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.438954391 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.409096576 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.409407631 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.412219035 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.409858852 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.41210944 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.424606159 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.409367664 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.409875968 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.437547632 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.41030658 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.412540958 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.425595318 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.409986468 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.410094709 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.40944505 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.425314634 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.409718181 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.427220018 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.411086222 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.411324096 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.412029684 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.422403478 seconds)
  done (took 206.632843708 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.616751722 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.418962006 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.419969784 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.37675644 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.42041698 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.420933825 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.413870831 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.611704145 seconds)
  done (took 15.048772272 seconds)
done (took 624.327233951 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.788873484 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.497859357 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.622240735 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.439683604 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.266409887 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.440481581 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.439756405 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.614278919 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.977921676 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.606537824 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.734395803 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.437884489 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.88809982 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.439009463 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.698535292 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.540302008 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.323120233 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.437544687 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.758325034 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.995405609 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.703417853 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.038704086 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.619000744 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.019830389 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.899372518 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.05746646 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.266789253 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.323075163 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.44155864 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.763358583 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.154081818 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.475244718 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.5026075 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.482404449 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.538386413 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.524616378 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.514320177 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.483799112 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.634534235 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.749471348 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.016551102 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.740466144 seconds)
  done (took 98.245741387 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.410291467 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.409136256 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.40901153 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.410726982 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.410365898 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.409013734 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.409258175 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.408283677 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.409837369 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.409527311 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.408949165 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.410080116 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.409406092 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.410181645 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.408499767 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.409039678 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.409764289 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.412623246 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.409856502 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.409256578 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.411263302 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.409491241 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.410701003 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.409114345 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.4097731 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.410521524 seconds)
  done (took 38.005531672 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.423601565 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.65916897 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.841349457 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.429406564 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.422091963 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.42662595 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.504748435 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.426265172 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.426267811 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.425620393 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.582711712 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.426659624 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.458046742 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.848956526 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.425636458 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.424769402 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.424824934 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.42443557 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.668448315 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.432859101 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.52431572 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.426040503 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.505591104 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.433214214 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.445923138 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.424183388 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.429625771 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.958971371 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.426771694 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.585203632 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.25921578 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.504913856 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.918610498 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.85541205 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.259185835 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.428553627 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.426022377 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.589172873 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.426601861 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.424805 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.504920707 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.426131246 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.853365779 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.06379251 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.445341772 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.428968349 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.987243568 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.592308888 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.687279865 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.43608132 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.879120212 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.431046357 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.430035603 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.429550583 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.685967644 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.434687968 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.427344069 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.020009438 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.449839861 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.509065205 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.43135022 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.427924617 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.678543333 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.429531697 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.666787624 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.430653703 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.436638496 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.429450902 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.856486762 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.432441808 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.080961049 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.446764539 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.429392179 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.589243126 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.6684899 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.015632177 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.432929829 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.682287958 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.93454426 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.50927511 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.433429421 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.954640405 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.512758467 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.433704916 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.433161515 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.432616931 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.431150172 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.474478531 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.5088296 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.004427145 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.076996772 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.038768557 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.531074482 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.443549921 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.431127174 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.024733034 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.450078487 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.432984536 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.85305194 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.085190781 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.44608197 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.436632201 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.067323313 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.44842027 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.511261341 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.434205397 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.864292454 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.432482311 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.476006219 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.432291702 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.438885303 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.435674999 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.51259578 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.434803081 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.432450864 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.052318392 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.613939022 seconds)
  done (took 187.300281275 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.439227549 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.424345655 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.437936675 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.423611259 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.423209303 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.431127771 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.433325352 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.42563283 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.4311053 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.424406761 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.424738783 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.433310345 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.426230163 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.441271717 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.434493108 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.43247127 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.037564912 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.42958128 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.4249707 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.442449338 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.23931055 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.428166084 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.442253117 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.424808277 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.427663725 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.427306522 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.441825792 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.428690694 seconds)
  done (took 154.844018109 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.434093979 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.027152439 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.433936328 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.573331488 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.458205465 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.432208907 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.570091939 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.493068353 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.434051018 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.431611959 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.431505511 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.750988823 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.435601658 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.970301985 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.633569433 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.576422972 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.991160477 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.438261581 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.432294941 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.432881826 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.572852401 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.442931054 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.751877168 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.029372658 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.436030615 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.029271425 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.422758086 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.434844263 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.432261407 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.03051627 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.433649024 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.754647854 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.514102435 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.49602348 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.032253223 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.974021198 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.975015124 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.589718779 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.434593127 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.432882783 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.432926263 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.4222473 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.031159562 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.435288383 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.434802487 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.024089271 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.453034539 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.436625682 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.443937744 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.433575012 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.496113126 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.497446942 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.755752961 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.038357861 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.517161603 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.456953908 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.572260768 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.806083079 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.438250524 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.975733824 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.423241912 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.035435769 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.440353658 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.423792372 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.436666064 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.440821826 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.595689291 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.574577357 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.978165226 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.436938138 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.976682585 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.594640357 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.436264885 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.436087181 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.438788646 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.031391768 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.978940039 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.595571085 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.576215847 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.641133558 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.427787848 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.434479424 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.424979379 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.516721007 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.436800048 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.035104276 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.978199655 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.438814329 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.438725569 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.438279039 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.438036709 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.623457002 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.037856342 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.518783187 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.971372064 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.773186877 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.757787842 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.439552366 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.499513124 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.438195616 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.757729966 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.440122804 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.499574084 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.874360981 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.7600949 seconds)
  done (took 170.959831419 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.685218799 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.702735136 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.534762768 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.552341575 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.96820027 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.032886594 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.595824733 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.563027404 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.550746124 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.68749637 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.130652234 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.528506956 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.629439503 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.512980072 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.148392262 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.508818799 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.533177323 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.576871578 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.551509212 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.475729549 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.028062013 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.728096123 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.612660915 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.496392748 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.534240517 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.249900987 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.200118912 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.956973088 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.609495074 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.680724466 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.948872704 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.612445754 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.363457052 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.09365113 seconds)
  done (took 67.952813235 seconds)
done (took 718.656757248 seconds)
SAVING RESULT...
DONE!
