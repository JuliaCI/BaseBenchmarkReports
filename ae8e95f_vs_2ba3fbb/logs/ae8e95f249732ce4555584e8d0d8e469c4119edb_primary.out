cset: moving following pidspec: 19557
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.006803912 seconds)
loading group "string"... done (took 0.580046089 seconds)
loading group "linalg"... done (took 9.502630971 seconds)
loading group "parallel"... done (took 0.181179702 seconds)
loading group "find"... done (took 1.433179715 seconds)
loading group "tuple"... done (took 2.262113015 seconds)
loading group "dates"... done (took 1.434288353 seconds)
loading group "micro"... done (took 0.242820472 seconds)
loading group "io"... done (took 0.660721051 seconds)
loading group "scalar"... done (took 45.824374979 seconds)
loading group "sparse"... done (took 14.617417561 seconds)
loading group "broadcast"... done (took 1.280579708 seconds)
loading group "union"... done (took 16.586010848 seconds)
loading group "simd"... done (took 5.721344895 seconds)
loading group "random"... done (took 11.663177738 seconds)
loading group "problem"... done (took 2.399767312 seconds)
loading group "array"... done (took 27.7385237 seconds)
loading group "misc"... done (took 1.293940528 seconds)
loading group "sort"... done (took 3.94887948 seconds)
loading group "collection"... done (took 24.746481568 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.755644732 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.157180853 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.178117344 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.231179839 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.245565451 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.163079792 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.192811546 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.636196196 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.200265359 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.264926235 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.174078289 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.731262559 seconds)
done (took 6.679182324 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.267971454 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090550833 seconds)
    (2/2) benchmarking "String"...
    done (took 0.157193288 seconds)
  done (took 0.911339763 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.092565931 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.222621571 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.124953479 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.14220086 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.143640173 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.124978761 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.143036898 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.14389644 seconds)
  done (took 1.710274247 seconds)
done (took 3.654360319 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.972927621 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.88226563 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.602520641 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.15638406 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.197880628 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.17405263 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.408578775 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.182563503 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.143093668 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.143292318 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.216231312 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.42057161 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.601962126 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.156625431 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.13733878 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.148570646 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.106181652 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.742585241 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.101532636 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.14606509 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.6665412 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.147793398 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.142670599 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.14516124 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.237511765 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.157134058 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.206311117 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.121402385 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.710930115 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.123182358 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.215101316 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.120833709 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.187732858 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.304508228 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.102565115 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.127872464 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.701357047 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.216475538 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.142819801 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.11591323 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.702798593 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.102806052 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.240867676 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.14168412 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.142278313 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.219204917 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.125479263 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.115599186 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.125908316 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.112100087 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.190245816 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.494639035 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.12702538 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.173100979 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.113740556 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.729785662 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.118949811 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.177181306 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.14536996 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.130851337 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.118997514 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.120930309 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.190793201 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.123627225 seconds)
  done (took 22.23429977 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.148289396 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.172824731 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.113598547 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.168244024 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.177504034 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.116402554 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.105811899 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.113487902 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.142291222 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.227728769 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.173232929 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.179410358 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094284956 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.117237077 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.125817559 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.28293709 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.149130442 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.132965959 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.119912266 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.130521068 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.153624765 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.138236808 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.119143745 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.137967981 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.197913476 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.226861736 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.143995525 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.141946386 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099699519 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.14407076 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.161078463 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.176831281 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.111532007 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.098322522 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.225939718 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.141025038 seconds)
  done (took 6.093230587 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.248812909 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119678607 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.270423835 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.237867565 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.192776721 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.219442093 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.144933454 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.319757699 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.29485681 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.188186432 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.147234087 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.133181101 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097395262 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.118383071 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098148208 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 2.343024557 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.213268125 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.199670603 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.139462507 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131032184 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.118620079 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.406623428 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.107998802 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.121398815 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.110520611 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.10816215 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.230949643 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110089064 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.653190488 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.142766969 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.119321645 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.157342226 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.233749663 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.139778689 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.174362485 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10985274 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.123072931 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.280044138 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.140619765 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.160386531 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.156955001 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.095177174 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.15307835 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13807742 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.157465706 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.124444059 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145793711 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.283667092 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.12195235 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.131587808 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.385832948 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.228232629 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.120099027 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.120661073 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.434675668 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.123094811 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.13272801 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.121074704 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.370277297 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.154586908 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.121884026 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.096632793 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.130119048 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.09663115 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.449311497 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.123404274 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.857624725 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.116772579 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.211937438 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12447031 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.136620167 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107418597 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.123345163 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.131558243 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.120753336 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.10338095 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097387441 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.121863523 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097214958 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.127182708 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.140119628 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107399575 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.116451606 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168787967 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.148532372 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.124909009 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.148763161 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.125943459 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.101205191 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.151284946 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.116408138 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.108126468 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.181602961 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.114136788 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.14334661 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126496656 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.163661211 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.100815418 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.226386427 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.102024482 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.149625839 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.122452495 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.133881039 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.121277618 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.152141142 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101333542 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.122359799 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.098959456 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.118406929 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.169302903 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.104001246 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.117795642 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.106155257 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.140062992 seconds)
  done (took 28.110989533 seconds)
done (took 57.104448695 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.500751912 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.14403843 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.1444468 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.144113592 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.142465251 seconds)
  done (took 1.824232892 seconds)
done (took 2.539174376 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.435091765 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.260666868 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.124051025 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.25121322 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.111047345 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.263962411 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.219623705 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.125711481 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.284345766 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.103409343 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.246423137 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104975692 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.129758598 seconds)
  done (took 3.410913647 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.114978184 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.145459254 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100308616 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.132789249 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093574567 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114390777 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.132723712 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.164747877 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113013612 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.105882559 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.115446764 seconds)
  done (took 2.042217852 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.111409518 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.136703693 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100878843 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11230822 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.111956437 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111963126 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.129928917 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.124628669 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.130238318 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.107031846 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.112633897 seconds)
  done (took 2.004106921 seconds)
done (took 8.163187125 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.393381611 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.433080415 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.12730695 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.218329624 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.412753238 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.252292731 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.731607513 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.167702804 seconds)
  done (took 14.692439072 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.13503476 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.137789099 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.097794389 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.116485874 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.100616999 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.117406616 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.098951201 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.118177798 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101237608 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.117359842 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.103753893 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.120836629 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099617975 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.120640473 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.102150537 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.099503513 seconds)
  done (took 2.572987558 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.141421024 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.140429769 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.126355908 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.11462894 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.122725316 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.105228475 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.126721196 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.125554408 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.104086056 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.121509203 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.115238226 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.13195759 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.11292402 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.121124863 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.109662783 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.133202163 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.120428342 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.108880825 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.127045951 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.108898774 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.133800905 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.106966682 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.132614529 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.131400166 seconds)
  done (took 3.760016585 seconds)
done (took 21.737902234 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.206493918 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.106444609 seconds)
  done (took 1.028827757 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.124477173 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.142974219 seconds)
  done (took 0.991753819 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.135863222 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.115101698 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.168202376 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.141019765 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.101071472 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.101745222 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.163310756 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.119100793 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.101755209 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.119952088 seconds)
  done (took 1.991681549 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.104571724 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.122742098 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.11248334 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.142579112 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.117263877 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.122613489 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.108425376 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.124514602 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.125208327 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.100051493 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.129102079 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.12992839 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.127430001 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.150302948 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.107916518 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.128489969 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.117123853 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.127302189 seconds)
  done (took 2.921796962 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.098414562 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.10179318 seconds)
  done (took 0.927681702 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.103611328 seconds)
    (2/7) benchmarking "second"...
    done (took 0.11432444 seconds)
    (3/7) benchmarking "month"...
    done (took 0.103432457 seconds)
    (4/7) benchmarking "year"...
    done (took 0.121406941 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.223699002 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.113835902 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.097702391 seconds)
  done (took 1.603369769 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.6169452 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.297310171 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.396541493 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.145264929 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.186505385 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.449255644 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.206929769 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.12203539 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.139951489 seconds)
  done (took 3.336153032 seconds)
done (took 13.520949337 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.111212289 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.162755912 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.633100399 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.135171485 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.095876659 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.179420257 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.34806645 seconds)
done (took 2.391892124 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.410738034 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.143640913 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.102421793 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.096379117 seconds)
  done (took 1.477041099 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.097844566 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10822478 seconds)
  done (took 0.937693653 seconds)
done (took 3.145406773 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095967029 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.150141638 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.094891338 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.111716459 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.094985172 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.092351283 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.112432084 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.094523561 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.1133219 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.095286472 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.09526646 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.113605685 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09553261 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112070767 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094021327 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115438832 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.094461835 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.094467991 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112299925 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094349745 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114573678 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094841354 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.112302527 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.098301987 seconds)
  done (took 3.271478291 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.123804368 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.11603635 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104431722 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.123346178 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104906698 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.123877165 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.106305073 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.117198169 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.124040059 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.102527078 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122225533 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.105086578 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.119178139 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.105365115 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11979384 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.104742567 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.124457217 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099940047 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119773659 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.105198399 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.12399127 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100124454 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.122202395 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106117364 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.121602375 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.122321571 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.10328324 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101070628 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.124486565 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.122667335 seconds)
  done (took 4.155694832 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.108962362 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09327314 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.11183506 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.109707073 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.110494261 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097904281 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.1117526 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097441734 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.117493048 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094436623 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.100202794 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.111762867 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.096144455 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.116341236 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.099387696 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.120568185 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.122515505 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.114622183 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096929326 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.116912211 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.101320133 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.097166164 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.114156256 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.093274059 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.11183816 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.092558444 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.112026998 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.093447907 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095028679 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.111231621 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.101927546 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.1210014 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094998743 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.132841519 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.105037324 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.113534734 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.107678639 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.114706932 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.102062325 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095516392 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.11388629 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096243394 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.117465631 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.112280705 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.117399817 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097195122 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.099920663 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.121001345 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.100513023 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.12265567 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.095626342 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.117013333 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.103227304 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.120291151 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.103448104 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.095712366 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.116105654 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.094940527 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.11967943 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.095572273 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.113514918 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.095554463 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.104989895 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.114431523 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.148363182 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.1099688 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097204568 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.119575157 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097914386 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.125046435 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.101449727 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.140909876 seconds)
  done (took 8.528024476 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.101239705 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.125779567 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.097319836 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097286401 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113181022 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09646672 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.123496092 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097415089 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117245225 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117737611 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114655508 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09804535 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117609564 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101677997 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115307764 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098848037 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.128732077 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094270708 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.115212049 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101569016 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115911005 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.105606624 seconds)
  done (took 3.135112202 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.29921835 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.123831806 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.181967699 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.12014904 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.143304745 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.137035933 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104736497 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.127327994 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106881283 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.131902589 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.131727537 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107002007 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.146633066 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.131793374 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11400075 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.13420793 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107238641 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.133466042 seconds)
  done (took 3.225682277 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.115391551 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.116170648 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.126086596 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.116684659 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098466641 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.120754486 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109437322 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.137119212 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.102593653 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.118354728 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.114425674 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122199094 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103170881 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.119168181 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103653944 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.118919716 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.10366608 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11889688 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114561725 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.128324645 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.128650845 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118557752 seconds)
  done (took 3.29832801 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.119896381 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.117850766 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.12800321 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.125641538 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09660604 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.119280989 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.109065844 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.119354188 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.112674773 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.120676455 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101377369 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.11973636 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.111521317 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.119387789 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.109551523 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.120236503 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102933476 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.119514617 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102955148 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.117821095 seconds)
  done (took 3.044414146 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.152862882 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.136731381 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.119477413 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.155827144 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.138949632 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.122061136 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.155362739 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.121421466 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.139246954 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.16097849 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.122043498 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.139549586 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.138346762 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.14912071 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.139602776 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.138018561 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.154971129 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.15545574 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.120608417 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.139186067 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.157131122 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119136378 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.152553769 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.119373737 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.135958414 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118986623 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.136007756 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.146219744 seconds)
  done (took 4.63358313 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096896599 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097444289 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.111789576 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.094378176 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.112894953 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097303297 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.096547673 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.115587175 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099612273 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.114710408 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.09895842 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.11740329 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099524086 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.099389714 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.117956552 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099365881 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117686803 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096889655 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09699748 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115497743 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.100223817 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117775192 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.099842987 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114793958 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0976586 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100111532 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115391448 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096364782 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118949889 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096951091 seconds)
  done (took 3.903504208 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.111069342 seconds)
    (2/2) benchmarking "in"...
    done (took 0.124262312 seconds)
  done (took 0.987822745 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.097079358 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.137457845 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.094568624 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.100930065 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.125112943 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.117100193 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113039538 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.125936623 seconds)
  done (took 1.661866234 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.130067161 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.140533033 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.106072626 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.133793629 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.120631328 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.13956695 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.211775503 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.106451487 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.127587252 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.101054382 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.141079194 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.098564365 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.129942733 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106851045 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.129001203 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120622193 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.117983963 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.110163579 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.127281456 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101756945 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.12568361 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.124406607 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.134626093 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.109762434 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.121486502 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.115391141 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.138891513 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.131817111 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108034465 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.136920787 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.108791098 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.109520271 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.105158069 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.123957833 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.100912449 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.137813128 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.126947096 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.125849307 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110927975 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.12604233 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112560974 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.115650929 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.115797171 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.126559083 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115880253 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.123719149 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.106574951 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.11547957 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.100856464 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.122972265 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097853684 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.122773253 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.091981231 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.131041192 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.115129714 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.148625859 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.100890951 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.123292602 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.105625261 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.121811743 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.108585537 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.123698884 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114531242 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.120783622 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11388927 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.129835519 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112036182 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.114714804 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.091762461 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.118111697 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.114150414 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.150600367 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.119178476 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.124188908 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107415031 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.118274246 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106966096 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.125546609 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.131310382 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.117982677 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.123161963 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109115282 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.133587119 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105252142 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.124500996 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.108740465 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.119277088 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.102785438 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.101155466 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.153589646 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.120139567 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.100474001 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.119093802 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.117853861 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.124001071 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.10506714 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.100849202 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.130764615 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.094188634 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.124419705 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107702556 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.128308563 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.139449058 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107377089 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.126069873 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.11423924 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.130888775 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106970936 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.122879395 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095289989 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.125426886 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.101983918 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.110517032 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.110531954 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107390628 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.125785094 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.107126672 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.136773295 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.101256438 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.123236658 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115645052 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.137310884 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.120845971 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095388383 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.106576912 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.123420455 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113257361 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.137205682 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.120202074 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.098004442 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.098245442 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.132212835 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.105415275 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.129703121 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106392531 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.12699742 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093083353 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.119309459 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.105601097 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.13815927 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.105296685 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.127569795 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.133805892 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.110927864 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.102971588 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.13369465 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.121786422 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100340137 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.134717433 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.107585334 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.096982948 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.131822102 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.123902469 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.101929024 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.106082752 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.131457632 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.124943296 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.106976695 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101978844 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.124529494 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.115721973 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.117842857 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107420852 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.119985084 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.120294312 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.125197637 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.097570978 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.11419708 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.107880085 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.119302668 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.104529383 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.11803919 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.107031345 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.125474866 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.101295245 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.120885602 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.105017721 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.139650826 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.116804166 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.126441189 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.110986002 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.13497683 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.105579664 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.128140303 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.103983023 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.127133975 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.107408847 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.1333146 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.109169531 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.125366891 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.106489839 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.11432149 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110099079 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.132084875 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.101707223 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.119678329 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100096047 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.12308759 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.118420418 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.123862393 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.106833291 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.119540757 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110435555 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.131923176 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.106396191 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.122955342 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.100155978 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.123501946 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.111953855 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106520252 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.126296425 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.136651717 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108688813 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097454404 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.132356234 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.118996723 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.111177543 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.098853434 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.119758478 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100991876 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.128641036 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.103197162 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.122377121 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.092644813 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.132833016 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115678272 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.126511723 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.10070642 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.125322715 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121780371 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.123263157 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111516494 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.12513894 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.112659125 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.149811918 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101560543 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.124247995 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.139991488 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.106403646 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.092998283 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.131094148 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.102241305 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.119397637 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.102901617 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.121184296 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108872532 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.127745381 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.109946632 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.111221619 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.106093011 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.120750645 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.101237874 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.116861689 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.11833947 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.126828694 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.108787839 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.142045239 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108949811 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.125740144 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109037157 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.124173629 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.107652017 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.126608042 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108410582 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.125943327 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103210512 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.119770186 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.109214067 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.119748222 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.102128918 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.122608206 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.106526048 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.126824431 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110528958 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.123086109 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117568094 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.125749322 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.107589635 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.170698887 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.103218464 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.12014031 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108789079 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.128410052 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.105583562 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.125029376 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.099004818 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.131825872 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.106011125 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.135412605 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.105723477 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.115461357 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.107920414 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.125219009 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107714846 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.126617616 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.108085206 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.123401441 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.104924296 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.125303352 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.123296165 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.12063844 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.118567755 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.130531385 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110656563 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.125258856 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.108809415 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.12335426 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.101137373 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.127768762 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.108257459 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.127622214 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.104254835 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.129540068 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.108811021 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.124062047 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103989709 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.126954477 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.109030272 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.127439877 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094332248 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.119331483 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.101644762 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.124854218 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115777413 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.126818178 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103533763 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.121951 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109250475 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.102996172 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.115290919 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.111659494 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.129588879 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.108039413 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.140659203 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.101442524 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.126374709 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.142936559 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094237513 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102254651 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.120744495 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.102278415 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.135616013 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.107842578 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.134811713 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.109136393 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.12113449 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097832228 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.127414606 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.103236036 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.113222125 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.10123914 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.130714354 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103958088 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.122584777 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.107467754 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.129205717 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109621018 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.133990036 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.104221071 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.127417889 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.106962638 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.116168177 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.102893616 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100977635 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.126835663 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.108196076 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.121531283 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.097659297 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.123747278 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.108470159 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.126615651 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.104895849 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.124968117 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115826615 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.124527593 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.107177462 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.133397511 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.094794567 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.126709531 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.105473948 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.124428622 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.102149746 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.128567858 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110509812 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.128582832 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.11582574 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.125327342 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111100647 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.125099308 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.102556316 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.124314228 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.106307981 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.125537277 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.103048887 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.126838152 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.117770171 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.120443056 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.110782406 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.126863319 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.104066622 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.128906184 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.109005126 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.128216252 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112469884 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.106315656 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.126755889 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.112967389 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.125083986 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108905807 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.128061283 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.105417602 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.133587122 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.100872341 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.139396945 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.12828968 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.108493213 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.123992185 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.103064123 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105437139 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.124850424 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104033489 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.135714814 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.10767401 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.120698749 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102062377 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.121131258 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.109045178 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.133819442 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114696637 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.12666841 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108794812 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.118195386 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097533944 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.128198186 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.103013087 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.124811059 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.110985906 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.133305135 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.108641415 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.123269895 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.104064644 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.135379999 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114292574 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.131770306 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.102821587 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.132574487 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.108820829 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.127554172 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.104571985 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.125659556 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109633616 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.131772551 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.105710804 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.121904905 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121856522 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.135660622 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109404795 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.125729299 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.110687541 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.12598916 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099184807 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.12805563 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.107423649 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.133227171 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.107654492 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.125102454 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125248869 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.119883163 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.106585506 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.13384024 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10517526 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.138374979 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099780442 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.127647356 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109545416 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.128494387 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.099324388 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.12172051 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.103484036 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.126994797 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.102505116 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.118551958 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12558753 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.135221159 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.110201449 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.123578309 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104837267 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.11891555 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099961462 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.121020342 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11026494 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.124837322 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.122530353 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.120869867 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.102071725 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.118023775 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106912875 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.128723408 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.11150593 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.097701725 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.119810839 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.102448241 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.12929584 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.119505949 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.124434438 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.105699152 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.129569356 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.108158005 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.121685924 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.115435694 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.116399889 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.109625819 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.145771707 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.107437249 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.131455653 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.133333563 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11771669 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.12775466 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.10035656 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.127929828 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.111084189 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.12815681 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.109624411 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.128521637 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.135710475 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.129406463 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.102704788 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.126222608 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.108307342 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.121789082 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.122949465 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.128876849 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.108691955 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.129741652 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.105484455 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.129632462 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.119885376 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.132889233 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.1104932 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.130073078 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.105541442 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.126254308 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.103617094 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.125160168 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.110845083 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.128137085 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107745059 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.129231319 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.102402924 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.145273819 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.121752043 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.129553079 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098310433 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.121651848 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102676616 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099287637 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.129986078 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.099318963 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.123465382 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.104353151 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.124278006 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.111318013 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.130964005 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.11026126 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.128572251 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.106908063 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.11460931 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.113231249 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.1284757 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112716271 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.117247761 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.107508913 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.127266988 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.117146126 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.134587947 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.10444296 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.128020781 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.106170879 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.131433689 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.100744344 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.130632787 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105312001 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.124438103 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.103029291 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105720387 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.129973452 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110173126 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.130314918 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.129143648 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.109097939 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.111380208 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.132157675 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.098174414 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.119519491 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.112645026 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.122851132 seconds)
  done (took 70.663595472 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.191024855 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107960507 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095462295 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.11618469 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.155184837 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101408728 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115636513 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101781324 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.121015998 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.117424386 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.115796154 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096309205 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.14771609 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.159070151 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.153281173 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.118954913 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115649839 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101635356 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.115248662 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102279994 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.1461368 seconds)
  done (took 3.396163486 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.130147266 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.140617099 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.1381443 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.126403988 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.131927588 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.14064864 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.118933322 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.141607164 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.145391292 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113539581 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.146073387 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.141025063 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.11345818 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.133143749 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.132324935 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11722396 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.146335048 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.131024277 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.123501786 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.138839612 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.135759483 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.119693629 seconds)
  done (took 3.703853961 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.112077206 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.105193149 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.134022058 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.098613843 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.125362172 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098487192 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.133901327 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.102206203 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.1360629 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.106992348 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.123690156 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.107183737 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.133121239 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.099498139 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.123538103 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.101420559 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.13585684 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.106382557 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.109302529 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.118851511 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.174058538 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.10036926 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.11981986 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.104892309 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.13692274 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.110652201 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.124653251 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10693074 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.103829883 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.126935585 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.101651019 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.13104617 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.115441867 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.12417433 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.10413684 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.126821132 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.106333816 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.119586134 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.103373805 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.134307341 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.100962471 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.12645288 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.120538709 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.121428734 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.102456777 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.129631659 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.106542785 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.098339457 seconds)
  done (took 6.397597054 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.149317722 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.186700075 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.105668686 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.172309486 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.147733681 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.119624962 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.12795753 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.172969633 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.099493694 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.125870011 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.150863742 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.127085131 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.127432305 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.114903975 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.132290861 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.125240385 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.109659227 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.121129282 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.114154061 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.125058689 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.113969077 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.131153135 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.145018489 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.123537027 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.134058579 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.124184458 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103247278 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.133771775 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.122856624 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.135718134 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.134255034 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.117162567 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.14665129 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.128554215 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106544565 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.129927333 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.130314063 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.126895231 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.109293218 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.120577275 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.109811098 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.1355137 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.130504303 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.130370285 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.128557931 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.129466107 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.107902975 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.117131776 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.12241532 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.130834313 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.120574286 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.146293424 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.13223954 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.107921462 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.135234401 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.146842774 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.108592084 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.124674833 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.11205047 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.14302025 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.098928881 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.134499262 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.144452497 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.110953934 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.139909399 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.145978989 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109431638 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.132474099 seconds)
  done (took 9.68138823 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.147562642 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.13503023 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130857814 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.15162551 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134451849 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.114363144 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.135227013 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.13421483 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115891055 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.144147907 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114830533 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.200564717 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.129816542 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.123048952 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.136158507 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.134609207 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115365197 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134981201 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.114831769 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135945046 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.11487817 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.153470066 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.135170781 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.151263899 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135388175 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.12979179 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.114686344 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.136451903 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.151391684 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.115028794 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.155432243 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.135229495 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115993075 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.151413713 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.155681685 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.11534721 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.126897618 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114533178 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.136021627 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.135381155 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.111729322 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.151796505 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115558817 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.131625046 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.134905264 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115962049 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.151155597 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.156752526 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.123624465 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.146367503 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.136013602 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.130989193 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135899577 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.135633822 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.13119793 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.164217606 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.151742124 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.151459426 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115635619 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.152585072 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.151516761 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.164972339 seconds)
  done (took 9.233665558 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102939903 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101786227 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.120512648 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099136239 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.121713147 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100490879 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.101657769 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.12393391 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101976574 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.121960034 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103187392 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.119141491 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100444156 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101772159 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.120046779 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09995801 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.119195543 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102286361 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101525776 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.12068918 seconds)
  done (took 2.995521813 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.113756254 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.151483203 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.104648893 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.134133184 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.106854476 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.135069022 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.105706721 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.126904304 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103580039 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1266454 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.121350265 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.141623385 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.124767745 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.114739079 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.141805025 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.133536229 seconds)
  done (took 2.802304351 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.13118386 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.15150701 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.154971061 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.109659653 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.121743818 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.113506108 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.126751869 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100513861 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.098261628 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.135824304 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.11009934 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.13222789 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106318347 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.123759573 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.103762315 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.132935847 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.098365957 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.129685105 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106730925 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.155062614 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.131566306 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.108708537 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.128804159 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108730909 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.127664846 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.112004363 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.132796607 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101970457 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.123287561 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.108210024 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.127908612 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.115195501 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.120550245 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.110078935 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.121716202 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.101693439 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.126815062 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.108767224 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.131491679 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.107262158 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.122291673 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.107485106 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.127090715 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.110886724 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.11896269 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.108795065 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.098285478 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.133990847 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.106885099 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.129122917 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106014549 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.135319834 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.13171904 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.120138541 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.136654827 seconds)
  done (took 7.405974944 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.122932668 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.129255409 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.112016999 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.120905933 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.108996115 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.13341538 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.110859106 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.126894358 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107370714 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.119656987 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108026792 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.129406584 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107311895 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.130078011 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107829389 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.129164321 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.09846677 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105376266 seconds)
  done (took 2.927675471 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.111333052 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103424829 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.134109303 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.103205083 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.125017158 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106031781 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.120976572 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.102611839 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121513993 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.104157383 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.1244492 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.107255765 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121184305 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.106481854 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103491903 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.126025565 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.105395366 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.122445666 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.104082664 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.11945442 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10727357 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.12227543 seconds)
  done (took 3.325171209 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.130404501 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.168923972 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.12456988 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.179766241 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.132835911 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.110889403 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.144457275 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.112718307 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.154881167 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.110522758 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.130672463 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.110897796 seconds)
  done (took 2.430300424 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138630711 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.177747704 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105305143 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129653684 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123503384 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135036757 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132649253 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11316549 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151126038 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.154508326 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112609543 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.15195519 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151434251 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.149653368 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124181489 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144885093 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112553822 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134151809 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104500146 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.164700757 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133755068 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150969797 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113682441 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13431424 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113317452 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.149868385 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151333217 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.154084007 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11349406 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151903565 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144874625 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114470931 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.152873379 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.154504554 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108573825 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.152048092 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112609137 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.165818845 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145477567 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.149753747 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108846731 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145459111 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150293156 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12423595 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151612327 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134035474 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123386384 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134729046 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112450376 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.175548216 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146509304 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.149589294 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144039492 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131244631 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151330553 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.173722081 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.154828325 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.148736795 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124352138 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.154804393 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.149599704 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123744847 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.150648141 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154618366 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14479473 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128813462 seconds)
  done (took 9.998113776 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.160812781 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128002373 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11297164 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.156298338 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.150983277 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133043435 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113943551 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133903576 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112572762 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127628634 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.199700307 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113458936 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150522515 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.149740856 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112751983 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134243566 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112487833 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.150095882 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12747982 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.176349692 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11362573 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.150882576 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149902615 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.150220422 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133837235 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146077486 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133628757 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114220702 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134608107 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113312854 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144808404 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133183217 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130088381 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.127343815 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150748674 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114627449 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134204787 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123319925 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134852588 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14463274 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129378596 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.166241488 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134436275 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113425295 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.154426425 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134292716 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113314626 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128111821 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113911914 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128742186 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.155208791 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133352605 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.156544354 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.150785971 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134590256 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114612018 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133921709 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113455472 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134786938 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123874895 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151789461 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134921198 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175083806 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113129358 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13514691 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.149162927 seconds)
  done (took 9.793818495 seconds)
done (took 185.333264504 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.128382938 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.171914711 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.121562513 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.19025865 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.103872191 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.16260468 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.13989613 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.143936927 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.104085394 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.124781452 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.104410266 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.130907424 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172686638 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.103776681 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.126870849 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109068447 seconds)
  done (took 2.966047541 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.223570323 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.339908318 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.132185387 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.135028762 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.114272221 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.131567481 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.112440777 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.134420443 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.106825402 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.146931561 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108583879 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.131149645 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.125405708 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.132196196 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.106023221 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.131346248 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.146427228 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.109972729 seconds)
  done (took 3.40365368 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.389523335 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.174537963 seconds)
  done (took 1.403369563 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.15316036 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.232357138 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.360725041 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.179364022 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.163608954 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.163656498 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.20252408 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.128938166 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.238500877 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.164058607 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.165892638 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.134602152 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.144289728 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.144530699 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.118701366 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.135291208 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.167999946 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.116931202 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.13499889 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116897075 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.164702209 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.116319659 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.145034121 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.116207981 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.225319924 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.160978053 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.137358728 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.115630048 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.138540661 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113799183 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.147139591 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.162485411 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.160251208 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.227596184 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.120276191 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.242055485 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.12600818 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.135410127 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11355503 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.135682619 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.140826255 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.122060536 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.156516213 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.112859593 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.137287633 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.125194351 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.137801756 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.136746096 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.12824902 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.150172691 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.148099624 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.12616981 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.217177607 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.151543266 seconds)
  done (took 9.195559651 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.964677216 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.182714941 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110483015 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.134478811 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.173444875 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131162149 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.96830093 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.159607727 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.298671236 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.960360714 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.155032967 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.151212733 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.314418658 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.308582227 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.239281631 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.401803467 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.844795319 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.128267421 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.166517227 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.196088471 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121990975 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.173020851 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.164528492 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.496423522 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.134644639 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111801077 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.143402717 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128272626 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.213386182 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.132914448 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.137113439 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.24206686 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.327760498 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.276165056 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113788898 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.131093635 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10960493 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.222481494 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.347447097 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.295840206 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.21779855 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105387398 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.131130925 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128716335 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.162850632 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.127211421 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.222136076 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.229374265 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.229777405 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.140473276 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.149796021 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.124844145 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.155111243 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.217182294 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.128848279 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.421519515 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.405661785 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.13210213 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146029519 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.135349914 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.344598248 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107893768 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.311364884 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.171273252 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.286958529 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11059231 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.86383864 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.223662107 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.108037149 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.148058582 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.145167227 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119900134 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.151302955 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.213394652 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.469590037 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.154035207 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.117456907 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131579342 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.274237575 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.130916915 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110969951 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.218566578 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136527311 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124056078 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.155924458 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.152886704 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.229555946 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.305833109 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.154684773 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.147475251 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119479895 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.151939086 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.113536097 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.291647684 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.284035417 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.234433325 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.272429881 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.152839291 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.223062147 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.221621839 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.149759379 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.228359433 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.145111728 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134717875 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.153661936 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.301562218 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.184437136 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.10962196 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.141390936 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.123218332 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.187856135 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.136404815 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123764577 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.245974053 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.546810303 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.2205882 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.12894795 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.114378471 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14858151 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.21865933 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.144157629 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.316269132 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.149698105 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.225114516 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.146473209 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.106485572 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.147135203 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.221730365 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.153678148 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12599203 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.15347026 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.14573366 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.307029556 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.298093955 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130913162 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.31514542 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.222126311 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.147043548 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.231621712 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12485222 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.249809991 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125560861 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.152678017 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113576742 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.858816258 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.154094974 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123131321 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.142553868 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.235505268 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110149624 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.134684924 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.108743479 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.128623077 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.865148318 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.136565956 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.105974222 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.133815695 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124254526 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.147709659 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.143767582 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.119357754 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.218120052 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.322861727 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.152029326 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.144389372 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.111556294 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.217660578 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.136742037 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.11081978 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.132511185 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.110943835 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.148356192 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118309201 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.133719457 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.230981085 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.214187827 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.307847505 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.646532686 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111288949 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.132183416 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.295071223 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.133239133 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.389187119 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126781157 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.312427162 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.224686203 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.129905176 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.42517301 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.227153235 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.234364058 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.112480115 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.251289484 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108552773 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.144994083 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.220302766 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110032088 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.145788994 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.214716601 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.157720133 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.153711903 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.219525172 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.133616225 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.285734556 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.105700993 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.250536866 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115310106 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.150887834 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.395719822 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110646923 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.161331052 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.21792999 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.14113415 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.110700406 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.112203566 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.111895916 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.150760524 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125098354 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.313402482 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.222966126 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.14830337 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.14727602 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128724049 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.242624228 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.268726091 seconds)
  done (took 54.123499434 seconds)
done (took 71.923204041 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.427080098 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.357103758 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.386962575 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.268444066 seconds)
  done (took 2.39340775 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.232666782 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.199463417 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.159444289 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.132394259 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.194584731 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.110219623 seconds)
  done (took 1.892609001 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.727912913 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.578021032 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.495382676 seconds)
  done (took 2.667378167 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.321201661 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.348110769 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.386039295 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.590297281 seconds)
  done (took 2.631096285 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.260446558 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.155567396 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.123142189 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.165844341 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.219173179 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.262671444 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.17851182 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.212796996 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.135125966 seconds)
  done (took 2.630443724 seconds)
done (took 13.079757678 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.34655741 seconds)
    (2/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.280520626 seconds)
    (3/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.277345446 seconds)
    (4/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.271022826 seconds)
    (5/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.245877966 seconds)
    (6/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.173325507 seconds)
    (7/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.151633493 seconds)
    (8/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.153505073 seconds)
    (9/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.240844433 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.131738416 seconds)
    (11/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.278519139 seconds)
    (12/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.325683455 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.160646476 seconds)
    (14/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.306204498 seconds)
    (15/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.305035078 seconds)
    (16/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.178057171 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.143264531 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.178970326 seconds)
    (19/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.200805642 seconds)
    (20/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.129147097 seconds)
    (21/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.248540439 seconds)
    (22/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.188408633 seconds)
    (23/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.094843775 seconds)
    (24/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.141528604 seconds)
    (25/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.282247926 seconds)
    (26/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.268607483 seconds)
    (27/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.094551674 seconds)
    (28/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.155196344 seconds)
    (29/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.093039776 seconds)
    (30/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.13978009 seconds)
    (31/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.163602774 seconds)
    (32/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.213910699 seconds)
    (33/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.146929163 seconds)
    (34/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.311377128 seconds)
    (35/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.221366126 seconds)
    (36/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.205759859 seconds)
    (37/286) benchmarking ("sort", Int64, true)...
    done (took 0.267295273 seconds)
    (38/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.118610449 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.176030725 seconds)
    (40/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.130821679 seconds)
    (41/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.139662804 seconds)
    (42/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.126404066 seconds)
    (43/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.165844945 seconds)
    (44/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.201933532 seconds)
    (45/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.183380705 seconds)
    (46/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.217344501 seconds)
    (47/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.154340757 seconds)
    (48/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.150272676 seconds)
    (49/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.129614908 seconds)
    (50/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.253703859 seconds)
    (51/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.184963799 seconds)
    (52/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.260868499 seconds)
    (53/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.138042349 seconds)
    (54/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.141187618 seconds)
    (55/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.109313846 seconds)
    (56/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.150134618 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.119137211 seconds)
    (58/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.256221249 seconds)
    (59/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.285928684 seconds)
    (60/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.187115204 seconds)
    (61/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.113606921 seconds)
    (62/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.246408346 seconds)
    (63/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.158095237 seconds)
    (64/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.096505427 seconds)
    (65/286) benchmarking ("sort", Int8, false)...
    done (took 0.268097904 seconds)
    (66/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.214248835 seconds)
    (67/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.219178707 seconds)
    (68/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.185337371 seconds)
    (69/286) benchmarking ("sort", BigInt, true)...
    done (took 0.296365319 seconds)
    (70/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.12064609 seconds)
    (71/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.117998574 seconds)
    (72/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.09471466 seconds)
    (73/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.116365371 seconds)
    (74/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.120492996 seconds)
    (75/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.127046606 seconds)
    (76/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.170533726 seconds)
    (77/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.142730732 seconds)
    (78/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.225109812 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 0.108264158 seconds)
    (80/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.137610468 seconds)
    (81/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.116648145 seconds)
    (82/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.222255604 seconds)
    (83/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.129735898 seconds)
    (84/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.152975222 seconds)
    (85/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.172913212 seconds)
    (86/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.09543813 seconds)
    (87/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.141321582 seconds)
    (88/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.116171673 seconds)
    (89/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.095794237 seconds)
    (90/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.143790976 seconds)
    (91/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.163649841 seconds)
    (92/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.167697013 seconds)
    (93/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.1586395 seconds)
    (94/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.161068191 seconds)
    (95/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.240014134 seconds)
    (96/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.116986296 seconds)
    (97/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.093813668 seconds)
    (98/286) benchmarking ("sort", Float64, false)...
    done (took 0.206161555 seconds)
    (99/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.124623583 seconds)
    (100/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.151228669 seconds)
    (101/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.217020472 seconds)
    (102/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.117965403 seconds)
    (103/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.12278278 seconds)
    (104/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.127619914 seconds)
    (105/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.133739811 seconds)
    (106/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.093513824 seconds)
    (107/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.10660373 seconds)
    (108/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.117788333 seconds)
    (109/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.174138995 seconds)
    (110/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.123164784 seconds)
    (111/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.114967752 seconds)
    (112/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.132116288 seconds)
    (113/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.166535653 seconds)
    (114/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.123973502 seconds)
    (115/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.181844239 seconds)
    (116/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.156025275 seconds)
    (117/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.117675092 seconds)
    (118/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.222842695 seconds)
    (119/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.116054202 seconds)
    (120/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.165064733 seconds)
    (121/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.246292766 seconds)
    (122/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.175905244 seconds)
    (123/286) benchmarking ("sort", Bool, false)...
    done (took 0.233886189 seconds)
    (124/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.124897532 seconds)
    (125/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.152480455 seconds)
    (126/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.174743315 seconds)
    (127/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.216568544 seconds)
    (128/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.119530799 seconds)
    (129/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.115519387 seconds)
    (130/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.139400641 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.1254306 seconds)
    (132/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.141313597 seconds)
    (133/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.142907854 seconds)
    (134/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.158210819 seconds)
    (135/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.144128893 seconds)
    (136/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.11678026 seconds)
    (137/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.115190504 seconds)
    (138/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.094325532 seconds)
    (139/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.147737128 seconds)
    (140/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.121928806 seconds)
    (141/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.091644218 seconds)
    (142/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.15251641 seconds)
    (143/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.161961708 seconds)
    (144/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.207532655 seconds)
    (145/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.140996009 seconds)
    (146/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.171349828 seconds)
    (147/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.125596809 seconds)
    (148/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.143714632 seconds)
    (149/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.125728728 seconds)
    (150/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.218272339 seconds)
    (151/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.109535947 seconds)
    (152/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.141883556 seconds)
    (153/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.096456458 seconds)
    (154/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.148141611 seconds)
    (155/286) benchmarking ("sort", BigInt, false)...
    done (took 0.288012426 seconds)
    (156/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.176500705 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.11921326 seconds)
    (158/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.138577776 seconds)
    (159/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.094054633 seconds)
    (160/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.147210276 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.153139633 seconds)
    (162/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.116957949 seconds)
    (163/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.2052225 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.119447 seconds)
    (165/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.092532825 seconds)
    (166/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.117569105 seconds)
    (167/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.120434487 seconds)
    (168/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.138898379 seconds)
    (169/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.125887326 seconds)
    (170/286) benchmarking ("sort", Float32, true)...
    done (took 0.276737721 seconds)
    (171/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.154575103 seconds)
    (172/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.138914543 seconds)
    (173/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.127881098 seconds)
    (174/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.099955275 seconds)
    (175/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.164492149 seconds)
    (176/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.118152498 seconds)
    (177/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.092477301 seconds)
    (178/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.095173709 seconds)
    (179/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.118670291 seconds)
    (180/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.116249495 seconds)
    (181/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.140926322 seconds)
    (182/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.100716299 seconds)
    (183/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.148778241 seconds)
    (184/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.118830383 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.142717181 seconds)
    (186/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.092382746 seconds)
    (187/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.116494441 seconds)
    (188/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.120472603 seconds)
    (189/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.178279125 seconds)
    (190/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.09599941 seconds)
    (191/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.140640146 seconds)
    (192/286) benchmarking ("sort", Bool, true)...
    done (took 0.268434039 seconds)
    (193/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.095918147 seconds)
    (194/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.139702214 seconds)
    (195/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.140497533 seconds)
    (196/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.138309544 seconds)
    (197/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.221600213 seconds)
    (198/286) benchmarking ("sort", Int8, true)...
    done (took 0.266426573 seconds)
    (199/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.100740451 seconds)
    (200/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.093789041 seconds)
    (201/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.164086489 seconds)
    (202/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.114699083 seconds)
    (203/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.116566487 seconds)
    (204/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.129734055 seconds)
    (205/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.150880761 seconds)
    (206/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.176948883 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.119889806 seconds)
    (208/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.183508222 seconds)
    (209/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.119636375 seconds)
    (210/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.117243048 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.119758872 seconds)
    (212/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.175373191 seconds)
    (213/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.112745625 seconds)
    (214/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.117532257 seconds)
    (215/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.114024403 seconds)
    (216/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.11803528 seconds)
    (217/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.142459878 seconds)
    (218/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.177849174 seconds)
    (219/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.109031561 seconds)
    (220/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.141815702 seconds)
    (221/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.117244775 seconds)
    (222/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.139495664 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.118038297 seconds)
    (224/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.142281836 seconds)
    (225/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.162242983 seconds)
    (226/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.119370082 seconds)
    (227/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.093059169 seconds)
    (228/286) benchmarking ("sort", Float32, false)...
    done (took 0.208869328 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.14270217 seconds)
    (230/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.096441432 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.143133593 seconds)
    (232/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109812989 seconds)
    (233/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.117130449 seconds)
    (234/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.115260594 seconds)
    (235/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.145283152 seconds)
    (236/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.119145786 seconds)
    (237/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.094529992 seconds)
    (238/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.153237863 seconds)
    (239/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.093599217 seconds)
    (240/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.151292472 seconds)
    (241/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.154027559 seconds)
    (242/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.110507635 seconds)
    (243/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.119570937 seconds)
    (244/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.316282772 seconds)
    (245/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.119453099 seconds)
    (246/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.137489053 seconds)
    (247/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.092647025 seconds)
    (248/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.118417035 seconds)
    (249/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.118256778 seconds)
    (250/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.095333121 seconds)
    (251/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.140730579 seconds)
    (252/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.117713283 seconds)
    (253/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.13363046 seconds)
    (254/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.113004634 seconds)
    (255/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.144328359 seconds)
    (256/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.102026077 seconds)
    (257/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.133792379 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.113479332 seconds)
    (259/286) benchmarking ("sort", Float64, true)...
    done (took 0.276207841 seconds)
    (260/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.220245464 seconds)
    (261/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.093413218 seconds)
    (262/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.18788315 seconds)
    (263/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.128028312 seconds)
    (264/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.220744542 seconds)
    (265/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.119746596 seconds)
    (266/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.121584048 seconds)
    (267/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.126849545 seconds)
    (268/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.115434601 seconds)
    (269/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.122651344 seconds)
    (270/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.11572899 seconds)
    (271/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.142645833 seconds)
    (272/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.110096818 seconds)
    (273/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.138936897 seconds)
    (274/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.118671089 seconds)
    (275/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.116589148 seconds)
    (276/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.097021557 seconds)
    (277/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.109236044 seconds)
    (278/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.137508368 seconds)
    (279/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.094870303 seconds)
    (280/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.116308732 seconds)
    (281/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.092395642 seconds)
    (282/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.116677262 seconds)
    (283/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.118718176 seconds)
    (284/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.14194767 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.12010541 seconds)
    (286/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.093266535 seconds)
  done (took 45.055098546 seconds)
done (took 45.929042752 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.127342693 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.182203354 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.123656592 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.170686796 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.128483378 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.15609506 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.14486743 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.126308496 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.150349747 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.129435062 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.153840066 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.104676366 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.147677778 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.12393744 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.148153215 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.171563297 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.127679013 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.140186152 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.114587274 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.138369829 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.114462324 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.140203496 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.118694539 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.127808534 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.124241529 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.145471202 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.11856663 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.147618267 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.117370259 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.134550928 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.112924117 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.141840916 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.113038493 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.149651553 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.116206996 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.113929584 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.149632695 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.1195769 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.144137223 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.140680438 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119274393 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.116021028 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.141826744 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.119997786 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.140241752 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.114448736 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.139879061 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.151546704 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.164927894 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.136276582 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.118591272 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.145813152 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.126723517 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.142219882 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.113084808 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.137859492 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.118771466 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.16987355 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.114533942 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.136902898 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119001859 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.142294666 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.114457338 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.137311402 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.115480859 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.146136509 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.124075253 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.138777825 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.122825267 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.139714972 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.108735862 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.13851086 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.11421382 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.134683314 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.120961968 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.120554301 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.13196517 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.115506531 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.142722564 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.116692665 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.140572208 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.1115259 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.142359118 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.116163672 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.135041969 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.105952545 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.136506119 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.116671094 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.13959316 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.11500586 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.140021917 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.116925281 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.143141584 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.125130249 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.139389687 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.118251421 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.141637293 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.116744135 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.142308003 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.113330729 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.131677185 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.111445744 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.141557629 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.111267002 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.140481861 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.128488364 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.135869115 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117081735 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.138912369 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.116035147 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.154910136 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122379216 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.140701688 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113795676 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.133044235 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120551235 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.136876709 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.112850323 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.13525467 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.11679295 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.139401429 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.117332616 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110342394 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.145613763 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.150625968 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.110298067 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.11259842 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.134906701 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.116379957 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.141335056 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.116439744 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.135789759 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112886217 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.132088837 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111496271 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.135957557 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.120795101 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.134784561 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.115302869 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.139588532 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.115221075 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.13985742 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116258049 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.142085594 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.113326115 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.12804046 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114256109 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109993736 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.143918503 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.140412012 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.11647742 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.108064408 seconds)
done (took 20.672506825 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.125968527 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.225794317 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.181954811 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.185142637 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.168896982 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.170085857 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.154456511 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.185720711 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.127868794 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.181814283 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.182357466 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.143691111 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.183185816 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.152521772 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.145443123 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.148078403 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.125826908 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.166851948 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.191151707 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.14972515 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.18124118 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.152729229 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.179108435 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.156560083 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.145474964 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.189665583 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.130138636 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.147711935 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.129651894 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.157353533 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.14290634 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.155866012 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.152952154 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.14050855 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.153925868 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120579376 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.170138581 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.140043828 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.126443238 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.149330942 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142094982 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.161402155 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.143348368 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.139674172 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.149031516 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.129729404 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.147389505 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122527024 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.148147062 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115620762 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.157148804 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.176786796 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.124151997 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.154131651 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.152465244 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123710403 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.153858893 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.130030679 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.153457428 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.129400332 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.1516981 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.15282014 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.133511602 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.176806362 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.149112481 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.130157355 seconds)
  done (took 10.984612454 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.145022249 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.185839606 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.153322695 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131202443 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.15493096 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.108237195 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.133123329 seconds)
  done (took 1.946323299 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.110531698 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.17196847 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.154021943 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.178025176 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.167343905 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.15896863 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.159191025 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.111264083 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.166767536 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.12549857 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.171702043 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.206793048 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.111850057 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.154651614 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.181642528 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.110857211 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.181886131 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.110889941 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.145832318 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.152341671 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.145465347 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.163273532 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.133998079 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.136554195 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.138780601 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.140491251 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.2249233 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.128785863 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.137177948 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.120580356 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.146469776 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.234415253 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138750538 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.151024289 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108262973 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.174006824 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.162230337 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.120904 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.169123035 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.119479106 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.163666355 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.122097777 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.147091552 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.12187597 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.14772052 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.128249495 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.155947624 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.149684622 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.120373145 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.170203 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.12872654 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.163765922 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.114501348 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.142280311 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.127689181 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.146307328 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.130463141 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.145157249 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.171457493 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.123304533 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.170719748 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.146534545 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.164025667 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.172295954 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136985823 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.166376343 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.139075548 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.144700907 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.123762858 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.148380675 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.172089692 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.119172799 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.153914629 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.128962739 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150541593 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.143901366 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.168421669 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117941598 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.153158585 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.117974504 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.141514944 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.111506759 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.155686334 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116523999 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.140637852 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.136858529 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.156238688 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.146166595 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.118592309 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.170044564 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.120218198 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.155890096 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.129080637 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.144281591 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.16155454 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.151955373 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.154464285 seconds)
  done (took 15.132058347 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.113950088 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.113781949 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.146336318 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114474624 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.139117264 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114278342 seconds)
  done (took 1.681625683 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.154800442 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.1437992 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.132953432 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.148155831 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.19143713 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.141939156 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.166459116 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.126865366 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.163931558 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.157382726 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.141406412 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.167592227 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.153678996 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.149508105 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.165210612 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.124620307 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.166142753 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.117734731 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.160810273 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116365342 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.159198059 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.123486708 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.142670323 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.141633114 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.147552159 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.1497505 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.122791595 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.158290271 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.132486809 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.15291098 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.122468749 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.148076513 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.124472197 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.15327694 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.166134182 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.123788423 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.140650004 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.124144815 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.150160733 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.121891414 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.16809642 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116617697 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.157949427 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.124183751 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.153792839 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.149240663 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.124218828 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.147237296 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.141052353 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.14902766 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.123541003 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.149894252 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.122403359 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.150065793 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123551407 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.154272229 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.123114829 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.167599371 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.149076379 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.124927312 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.145469149 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.121878843 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.153308998 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121277718 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.147911144 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.124101523 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.150026623 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.116861285 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.142484614 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.123122632 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.149792039 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119673894 seconds)
  done (took 11.178520813 seconds)
done (took 41.847828242 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.724469738 seconds)
  done (took 1.662812754 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.9930619 seconds)
  done (took 1.93140557 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.638624485 seconds)
  done (took 18.61002511 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.694947642 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.837429941 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.268864198 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.202051183 seconds)
  done (took 3.941686164 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.033729146 seconds)
  done (took 1.99717204 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.375683092 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.31911572 seconds)
  done (took 1.642251124 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.886477935 seconds)
  done (took 1.838358767 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.723671918 seconds)
  done (took 2.676311756 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.469152856 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.233645713 seconds)
  done (took 1.663834524 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.676939532 seconds)
  done (took 1.634843853 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.714005853 seconds)
  done (took 16.674678592 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.296024799 seconds)
  done (took 1.265612781 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.352413583 seconds)
  done (took 1.308787328 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.808046354 seconds)
  done (took 4.766794855 seconds)
done (took 62.564210721 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.125698094 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.152222314 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.128875437 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125517692 seconds)
  done (took 1.484213744 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.135021554 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.150330667 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.131294743 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.150144302 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.134972113 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.151092979 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123066741 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.157603771 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.123742627 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.152453147 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.124248137 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.150635649 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.152013882 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123316638 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.144401137 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.12845319 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.154791607 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.126018905 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.150280976 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.126076589 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.14677054 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.126461609 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.154346814 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.123654578 seconds)
  done (took 4.305953205 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.124717113 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119509711 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.14651802 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118243751 seconds)
  done (took 1.477257688 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.13283496 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.16785213 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.142598248 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.156592377 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142778181 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.167438577 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.142042503 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117701267 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.120676813 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.157213016 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.145879273 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.147110216 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.167401578 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.114280489 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.159148424 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113893914 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.142269898 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.142643903 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.156881251 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.13244117 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.142533121 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.131233093 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.151396888 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.161281847 seconds)
  done (took 4.425322185 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.225805211 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.164357151 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.175030048 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.127827265 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.210286636 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.176686629 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.116994478 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.176892835 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.119645633 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.171359647 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.147577581 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.182726102 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.171382822 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.150010083 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.121348905 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.157054319 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.143128844 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.177062871 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.146790247 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.135778746 seconds)
  done (took 4.161829392 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.129696774 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.142668782 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.112925404 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117822515 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.152125346 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.12179253 seconds)
  done (took 1.749894434 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.112959196 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.110955749 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.136992679 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.11036415 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.14210849 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.111097134 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.108991903 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.137071732 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.111230081 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.136229174 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.110217364 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.134443653 seconds)
  done (took 2.435248287 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.518084375 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.115810731 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.158346298 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.118545493 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.17141113 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.140854702 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.135538757 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.144712796 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.213902461 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.129885402 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.161146432 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.212444728 seconds)
  done (took 3.18911172 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280128193 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12363166 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.359497388 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.50055339 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200614393 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.216196372 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.37714948 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.2120777 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.245592836 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172661302 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25879301 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20135863 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193457135 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230098911 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1766539 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.223076223 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232795052 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.272456129 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190823576 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279235125 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222696111 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.217023369 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.239255675 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191499766 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148629745 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212768576 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.144826547 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1336479 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259693173 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224970212 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247967687 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197248188 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14933505 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.306643325 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.308641568 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253346781 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.472014473 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170705718 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.234260983 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.240092735 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.342635992 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152096375 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.301705579 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170533951 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163360985 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240092528 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207126354 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.237218378 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.162878532 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148495159 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.292385072 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23293692 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.24591863 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174691684 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.399348943 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186469029 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.183543663 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240031391 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266464249 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256720357 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217505403 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.150097193 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.298554658 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239724058 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241043073 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.156410435 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.2243615 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156581157 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233073122 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.257729749 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239526644 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22027737 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.319339187 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170122929 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219022859 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219829955 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170086587 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232316487 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208485335 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.147079306 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190722357 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149008962 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158223445 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.220826174 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123668249 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280001747 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170657483 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.327744451 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284844816 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.205919643 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.213819066 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219069019 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224469178 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184410613 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.14583923 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161670801 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.207128462 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204044305 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167625011 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202436009 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160157243 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.159363671 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195083319 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.122784152 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206064616 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.16643057 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222044209 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214089756 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.132706269 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.213953219 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18897505 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.205778701 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230759131 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247650936 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165378098 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13685146 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258953801 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203642996 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.169991308 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.229940324 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.24816444 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.212405961 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175929173 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23605917 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26694882 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178868699 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255120035 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183966282 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141423158 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.20149231 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210750448 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.207151274 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.194486705 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133103132 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.19651179 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26294717 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.155995776 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141271974 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229730328 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15745341 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158563723 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159741349 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173281338 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.17697891 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.192344414 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.147563761 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20727977 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204981902 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195662505 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214635416 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187711798 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285778814 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16511541 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.176529014 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185628039 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.142708383 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.244979726 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247558079 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131394174 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272965512 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.225868789 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.291221959 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215546514 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162494137 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.237239567 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159068852 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.118183945 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229569739 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.211394872 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.215015337 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.242814846 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.318976058 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.228138394 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.195075223 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189415532 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228152414 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.225435347 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217904869 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.157442349 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.214351395 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23114586 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.148478601 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.126045234 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.15758495 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177956269 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13812229 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161789861 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257082225 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219971972 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.305444119 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210589037 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150882261 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.24021311 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.155697883 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218210479 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.230214596 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174670833 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.247637088 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239574051 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220546904 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150356471 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268025794 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.11831015 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152679105 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.140510561 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.218980155 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163639282 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140864206 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191952943 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.24004405 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23651343 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193520128 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.332288679 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22490134 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.252683966 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.149434895 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167650394 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224017441 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204532638 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.227523041 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16822367 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.183034728 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.232510047 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187528276 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268196429 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213068174 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226694801 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.313049075 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.199711085 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134112388 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190956921 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221309241 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184151032 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.207156851 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156603526 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172039 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201266345 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.144624905 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158941721 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259005761 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180564558 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2558617 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.199772717 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24656736 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153916139 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191033639 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.20611163 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156143426 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.143621988 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228188385 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260992221 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189838975 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208295027 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232397687 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132660349 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.439020494 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.260945807 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255393932 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174632135 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184753647 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207668051 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175428972 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22015909 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239079447 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188881564 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24028023 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203577873 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.179524006 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142876331 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185375785 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191289096 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.200057565 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14460439 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.199611211 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.177648868 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263075602 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186511146 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202378357 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220651952 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149422785 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.192629877 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179860495 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271252212 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205124741 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239685403 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.196753706 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.219603403 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249752755 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12341756 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159522825 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.154922268 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.239280422 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136324392 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208640266 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.299376881 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.303983833 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207523339 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221428644 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170763697 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.123050523 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207969347 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192417852 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.321631764 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187991405 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.142262489 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286787273 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.15885621 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161809832 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.212828565 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.378467895 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179710434 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232910017 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.147028236 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.362170107 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15318492 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135258199 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204706491 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227309371 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.166015397 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.198153562 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216663463 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188963719 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.205237642 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173682125 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.277203891 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314232776 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237939883 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240412741 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.184050071 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17944092 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218944638 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260586251 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156903404 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.182077326 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20537623 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243079518 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.244750119 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.165902708 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184831575 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214383192 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.207777795 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279254444 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137425692 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248036142 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163206027 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229979262 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181653739 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125383632 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204282103 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.293718726 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140671093 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233746688 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2036989 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162484944 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126639456 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202616339 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204853516 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186190944 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.130331117 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2815107 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127899675 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215762528 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235189135 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132126527 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197152918 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18504224 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163418479 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155762646 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189578461 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169376558 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.178486669 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245759993 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.164889707 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236617765 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24166614 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219409263 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213782768 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181173909 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.669228256 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.157195232 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239827111 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185787098 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259242785 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186365752 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221814175 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208850814 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161395862 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231476543 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195435994 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.258423394 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229598266 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.208819936 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160116731 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161129276 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187666761 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.163322822 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16397423 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213014468 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175875473 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.171104654 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.203521557 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160699719 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.187225914 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170927997 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24754977 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156836184 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287542424 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.240715791 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146096592 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220503542 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280652664 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133464262 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.212995804 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228238217 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180491025 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203121676 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132344234 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.167016524 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235287432 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.121386339 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211969963 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211188241 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.209934894 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214223811 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.170502018 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181956274 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186694422 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209788604 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153467086 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.171506369 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202121298 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161764132 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.12766956 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198675854 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215284481 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.20368537 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155444303 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.178939726 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240712072 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.151669911 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138954208 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.406774508 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20579758 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263182754 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.198319032 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13842815 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181157519 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207281495 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.19733369 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205984986 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.130825629 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163657323 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136410824 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.220218507 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.195988265 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201935936 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247184722 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213394404 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248861926 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.163058031 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.306227607 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143652958 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199014758 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.165766407 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.13168266 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179525855 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141871852 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190959878 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.307936148 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235002235 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.191996416 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.157464706 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159940925 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125579425 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164710654 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206071924 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20194823 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201711313 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161419233 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.146479185 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186044503 seconds)
  done (took 100.213346436 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.172885623 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.174711319 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.179917992 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.223824468 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.20065545 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.280167426 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.238050318 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.256597937 seconds)
  done (took 2.777680154 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.130722266 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.167460864 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.177569073 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.153166781 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.115995843 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.457121581 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.170774444 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.155601362 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.180417571 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.168488259 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.116479133 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.770087651 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.123657868 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.154824887 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.139105106 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.139816645 seconds)
  done (took 4.366972447 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.839149773 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.603405399 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.1884449 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.306500693 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.294186081 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.213115796 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.807628042 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.254167304 seconds)
  done (took 13.558109786 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.153197906 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.16683476 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.173926353 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.197145867 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.152132469 seconds)
  done (took 1.902777672 seconds)
done (took 147.000128334 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.121754374 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123844398 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.150442865 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.152197336 seconds)
  done (took 1.593942469 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.134254527 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.10227048 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.133379703 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.100915821 seconds)
  done (took 1.52364449 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.538855689 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.132001768 seconds)
  done (took 1.767077427 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.151140087 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.161715666 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.136203995 seconds)
  done (took 1.508382385 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.132216174 seconds)
  done (took 1.194323124 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.124027308 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.125902128 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.170686664 seconds)
  done (took 1.480956898 seconds)
done (took 10.128963126 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140050735 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.466054955 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.41314222 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.165395199 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.757736287 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.403995713 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.127532528 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.197456584 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.175763248 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.142984554 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137945747 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.725731949 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.043312189 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.398043945 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.025735503 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.399752179 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.699579781 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.146357019 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.125229432 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.145405082 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.070547992 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.141878139 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116575533 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.146615464 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.696354714 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.451900861 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116181665 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.414305157 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.113794698 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.151866394 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.407467759 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.143010758 seconds)
  done (took 17.855743574 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122287689 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.220953494 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.126282143 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145118721 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.121826043 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.144423415 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12918793 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.164745016 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.222805356 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113753719 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.166767084 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.113682081 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.14996306 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.115474511 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.168845514 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.114816922 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.147169528 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118815869 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.15351278 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.117532491 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.166675802 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11437704 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.145645588 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11922844 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.143343856 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.131485159 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.14256611 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.135909484 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.142790393 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124242112 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.151398853 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116628975 seconds)
  done (took 5.575427757 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.174480885 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.233958409 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.155137478 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.154733059 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.210169386 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.116507274 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.250228747 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.198898863 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.224341991 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.14295942 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139385917 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.142798057 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.160856335 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.144262933 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141941195 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.144171097 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.119769888 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.147657519 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.125345453 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.146537282 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139106306 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.143052651 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.117964396 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.147623188 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.116142888 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.161224736 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116484946 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.165149656 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11465421 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.152687291 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.123681396 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.144950833 seconds)
  done (took 5.986731877 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.128861465 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.156386696 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.138100233 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.165641414 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.118374531 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.15347527 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.127042851 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.145761459 seconds)
  done (took 2.198438491 seconds)
done (took 32.676056131 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.133996565 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.121831772 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.16127825 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.131157924 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.154579886 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.142046831 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.142173715 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.127946952 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.158626446 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.124489829 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.162637595 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.114704394 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.144814724 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114191738 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.131500205 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.149502788 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133261396 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.154605907 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.142427379 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.162748388 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.116400823 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.157192514 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.12543526 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.171734643 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.141289042 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.172860083 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.16275649 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.123731725 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.144929815 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.118129289 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.162112384 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.145915266 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.146690987 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.13578139 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.148608001 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.120913444 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.116259416 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.146114216 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132980571 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.156756232 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.122727753 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.157351179 seconds)
  done (took 6.994183078 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.150757015 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.195361603 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.115449061 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.145417947 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.117679713 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.19242485 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.185774061 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.116625624 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.116002026 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.176406127 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.177826651 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.116514704 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.143873641 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.118285176 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.115289112 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.14480145 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.145481655 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.17584266 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.181814556 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.150262065 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.200237965 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.184101004 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.155082925 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.175689091 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.193984445 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.159095585 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.171894344 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.157400566 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.175687054 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.143803425 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.154563408 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.181123012 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.115756185 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.144343536 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.163560278 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.187913362 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.179373118 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.16372664 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.181226518 seconds)
  done (took 7.24277568 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.12893693 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.160353332 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.143577354 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.225461339 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.164998752 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.161767072 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.129412876 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.169652713 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.136840324 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.146181896 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.127459913 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.187115968 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135684483 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.156804915 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.122672501 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.17376292 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.170586066 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.120517228 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123153802 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.168745096 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.165300733 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.134533728 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.160513942 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131336482 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.116180645 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.16416341 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.150806346 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134547597 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.122666211 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.154480341 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.12092791 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.153361712 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.125306289 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.159007802 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.121364474 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.15987985 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.172841494 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128564032 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.126713342 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.188113692 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.160763819 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.124999564 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.175246336 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.163731718 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.147875331 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126683183 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.151544999 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.128135275 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.143712578 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.138858829 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.158821801 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.118415036 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.172201102 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.117618458 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.143841376 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13444876 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.146822822 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.120772827 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.155107062 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125343954 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.17268566 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12389925 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.163246816 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.120697661 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123687474 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.1462755 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.116207346 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.157176279 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144200672 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.153623904 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.194674449 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.116735353 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.155022042 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126234843 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.151523633 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128566673 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.116267409 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.1623371 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126848694 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.152672921 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.128391981 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.14951218 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.121228071 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.16628198 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.143074528 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.159780068 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.12651989 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.154458261 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.122053763 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.149201074 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135180646 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.147941333 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.12195603 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.167331792 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.118651084 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.150393523 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.126960811 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.153232263 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.1156248 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.162456866 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.124184292 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.145489125 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.129292028 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.147756578 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122239972 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.156953745 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.12455617 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.118348676 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.154334311 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125938891 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.146160292 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.123363037 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.151031015 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.121344184 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.164404132 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.125966618 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.150048064 seconds)
  done (took 17.888573147 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.298378011 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.265543973 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.247475497 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.37069533 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.178432275 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.149896156 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.261007036 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.212543137 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.117070804 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.203723342 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.223632982 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.229112781 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.214524737 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.225754929 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.224035987 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.147353493 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.145688592 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.212917424 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.263830627 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.367013333 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.145786356 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.169086022 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.206114988 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.20445838 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.141669289 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.170772357 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.178269852 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.149290966 seconds)
  done (took 7.014816175 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.14169356 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.198394141 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.126848512 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.186087431 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.180943591 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.119179017 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.153157025 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.118442341 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.167516472 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.139146556 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.149745003 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.127670486 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.155201564 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.129328687 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.14727376 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.128860268 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.160352777 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.131509212 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.150315791 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.123796013 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.171920041 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.167259295 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.124419441 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.156707128 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.142079647 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.157207333 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.121577843 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.178748969 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.160995597 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.155173419 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.143963635 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.127785236 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.165454649 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.116459691 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.158246555 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.121265989 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.148488164 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.119643945 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.11889795 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.143275535 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.117384308 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.134855139 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.127808582 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.168385764 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.126957284 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.150813125 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124477635 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.152537419 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.123811907 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.143592466 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.119424183 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.151498859 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.123673159 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.169822976 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.121446729 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.143136599 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.122330674 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.13701326 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.130627588 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.120390731 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.140133639 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.126327414 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.139498073 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.123545722 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.159248311 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.110103488 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.15594839 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.118919048 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.15372615 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.127408347 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.150356143 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.136220125 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.144037453 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.119891524 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.164079936 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.135664809 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.152385098 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.126302101 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.159479517 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.117091388 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.1332786 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.117560803 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.101439773 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.153665428 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.116361397 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.157520249 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.120671052 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.154657314 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.170351036 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.133391158 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.15601865 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.119003413 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.127420723 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.15378185 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114132285 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.15305024 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139497066 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.17621024 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.144748579 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.114781514 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.171577095 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.120215524 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.114275707 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.137422916 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.130515395 seconds)
  done (took 15.838919291 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.178428837 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.220845412 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.149743451 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.141396666 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.190934009 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.209981612 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.13643394 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.156782433 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.120205385 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142125227 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.161085341 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.1293005 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.161020359 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.165739448 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.179031374 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.159711599 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.119115848 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.166974074 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.124230508 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.223603358 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.171709417 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.175811105 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.213708456 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.164046123 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.123415353 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.204088261 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.213804974 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.133806236 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.162763183 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.214247751 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.133450827 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.212999807 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.216307454 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.124685041 seconds)
  done (took 6.80933414 seconds)
done (took 62.851407536 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.204027285 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.407683282 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.17967303 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.190446398 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.210490058 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.216910795 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.182013757 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.371994385 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.914665111 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.168227386 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.178771027 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.178815424 seconds)
done (took 27.495405018 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.251735364 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.334386191 seconds)
    (2/2) benchmarking "String"...
    done (took 1.471242592 seconds)
  done (took 3.898795623 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.178763809 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.177685509 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.423574596 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.180953004 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.178328297 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.196174302 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.180800081 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.184094837 seconds)
  done (took 15.615609879 seconds)
done (took 25.040581272 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.234560194 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.381650836 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.450604264 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.200293911 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.18071258 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.178384215 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.179349253 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.199358282 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.181794046 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.196105666 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.205297005 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.445655189 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.195396155 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.574687891 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.178248284 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.18312545 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.194186894 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.405643648 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.179885486 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.240027237 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.175871557 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.162507716 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.194939132 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.209182798 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.184141538 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.181083976 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.192744369 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.189575529 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.37033453 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.185344722 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.220941946 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.181254543 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.191182333 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.181340445 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.289087499 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.20710097 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.374504324 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.18395907 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.167843681 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.185168789 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.389496343 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.571675096 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.178912805 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.184908379 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.178179419 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.240082619 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.164505556 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.893325181 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.181948198 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.187118702 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.233062153 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.591866656 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.18427441 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.188404087 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.191650018 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.419451734 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.197992807 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.19635055 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.203559193 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.18026508 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.181280967 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.177382589 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.236935825 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.179467629 seconds)
  done (took 142.041273051 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.177613189 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.181608272 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.182437132 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.245105011 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.182842734 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.182106631 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.178361977 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.177760459 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.182308714 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.2108524 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.18470098 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.178093434 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.181063743 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.195714497 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.180093067 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.192844023 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.182734447 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.177328465 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.197994966 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.178176625 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.178644878 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.183150272 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.195557869 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.177988406 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.220813189 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.266007428 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.212079223 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.208771813 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.184962573 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.177923003 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.222232233 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.245900152 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.780508886 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.041035213 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.195904465 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.197773042 seconds)
  done (took 79.532319823 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.178786166 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.179392141 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.180115825 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.211207845 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.178343454 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.736540357 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.740339538 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.906997369 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.313592744 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.515693882 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.467662464 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.18532594 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.272821319 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.195948005 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.187033261 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.195998635 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.205900578 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.185006485 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.181388169 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.738035281 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.199401457 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.309437467 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.352516832 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.195355772 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.212511469 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.575721561 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.181635977 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.21233455 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.510531731 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.227921718 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.182108605 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.551838961 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.01588184 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.294426708 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.183362445 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.213039239 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.180107414 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.460768707 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.181800847 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.181550231 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.182108425 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.18157926 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.184948718 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.871204242 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.188180897 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.74148963 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.187896529 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.117097259 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.182077412 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.182506926 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.341057739 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.862933873 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.205941616 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.183166763 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.184273946 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.182440117 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.182012018 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.212859305 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.177527752 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.27698026 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.18228075 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.185015939 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.212579585 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.182879393 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.363918391 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.202626025 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.941512873 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.252568935 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.288380506 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.732183238 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.187982442 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.280512922 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.302537489 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.182001772 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.181839543 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.183532303 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.18214232 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.183177163 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.290687912 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.183571571 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.571924329 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.352886061 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.199005963 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.49944594 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.283273298 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.186299894 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.556709799 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.185759012 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.183133606 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.903142416 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.278755399 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.183258799 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.182894677 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.18248483 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.566767824 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.732671205 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.413283052 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.188209695 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.387264253 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.189285229 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.585182266 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.70995478 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.851773392 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.187795236 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.184593054 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.295213094 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.353635185 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.199362151 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.182138583 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.486104154 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.189613738 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.242126145 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.188032547 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.580043949 seconds)
  done (took 364.471581223 seconds)
done (took 587.14010409 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.924986793 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.876993871 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.007746302 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.903542093 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.866759125 seconds)
  done (took 10.677656579 seconds)
done (took 11.772647297 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.368144983 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.367043596 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.242081062 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.36860363 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.216293359 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.385866524 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.350428803 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.20481682 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.286649241 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.26376734 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.286075519 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.23715348 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.217513855 seconds)
  done (took 17.89254465 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.44999003 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.196680544 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.260387377 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.446210895 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.234425604 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.457008684 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.492312871 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.196784596 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.337972357 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.207650991 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.209295257 seconds)
  done (took 17.587494913 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.443852385 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.197228136 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.26241865 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.443036357 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.238885522 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.455918775 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.512703668 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.197277518 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.354539574 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.209861749 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.20979835 seconds)
  done (took 17.624502052 seconds)
done (took 54.201340904 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.231138887 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.360934179 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.215267884 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.200662673 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.19654392 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.197422921 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.203673515 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.196363555 seconds)
  done (took 10.902095275 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.193612823 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.195704025 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.19261526 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.194273116 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.196741079 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.19372411 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.192978665 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.672967842 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.195671297 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.194164264 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.196335467 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.197562541 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.192687772 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.196306988 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.197220188 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.193730771 seconds)
  done (took 20.697761943 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.195250004 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.193005623 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.194348242 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.192728595 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.193405451 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.195753401 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.195176723 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.193028319 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.193165008 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.194748067 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.193654408 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.193108637 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.194284982 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.195200184 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.193610306 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.194742045 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.193856142 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.19435588 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.199053854 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.194461824 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.192555274 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.194418587 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.193451411 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.19403473 seconds)
  done (took 29.764418599 seconds)
done (took 62.463711899 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.198603083 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.200673352 seconds)
  done (took 5.500718844 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.257492867 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.25634508 seconds)
  done (took 3.618695472 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.197013463 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.19705784 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.198143481 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.198055423 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.19777783 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.198128178 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.197414591 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.197197712 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.196926824 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.198052481 seconds)
  done (took 13.077071178 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.197537895 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.198669001 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.194661206 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.198517722 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.197970716 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.195196471 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.198255109 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.198366626 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.197519991 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.19528163 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.198372552 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.194403209 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.199076051 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.196082469 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.197940232 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.195033315 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.196103719 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.196203946 seconds)
  done (took 22.646875047 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.214164409 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.220687494 seconds)
  done (took 3.537484179 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.328219812 seconds)
    (2/7) benchmarking "second"...
    done (took 1.23774132 seconds)
    (3/7) benchmarking "month"...
    done (took 1.306379244 seconds)
    (4/7) benchmarking "year"...
    done (took 1.294639984 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.239070544 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.217240095 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.23881612 seconds)
  done (took 9.9660028 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.200246064 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.385776936 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.492188435 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.791143913 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.201389195 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.202916757 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.075995443 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.203670112 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.206358175 seconds)
  done (took 13.862708763 seconds)
done (took 73.309557364 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.191725481 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.208551653 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.204854322 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.204343037 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.545467474 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.19130467 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.197545342 seconds)
done (took 15.847000856 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.177178022 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.178817926 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.200857592 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.204763968 seconds)
  done (took 9.865602759 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.191812664 seconds)
    (2/2) benchmarking "read"...
    done (took 1.548035618 seconds)
  done (took 4.844664801 seconds)
done (took 15.813291152 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.202379899 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.197824492 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.200686963 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.197024684 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.202245974 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.199188027 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.198379398 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.200439213 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.201228808 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.201773761 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.200027556 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.200896644 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.201163338 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.198460477 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.197686603 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.200162562 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.198603752 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.198603523 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.198206832 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.198934438 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.202156836 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.198369501 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.199452517 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.202922602 seconds)
  done (took 29.902460841 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.201930204 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.19977526 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.202259226 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.201474613 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.199457081 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.202256112 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.201725147 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.200305755 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.202088745 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.203241198 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.198052483 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.201603371 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.205209033 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.201684301 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20501585 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.200888079 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.202540663 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200916588 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.203927236 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.200297521 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.203495932 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.201272648 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.201289558 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.203772595 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.201829854 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.200663772 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.203384925 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.201672091 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.204002587 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.200570052 seconds)
  done (took 37.163105891 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.208323269 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.211693154 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.204250528 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.204724752 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.203270862 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.204526903 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.204197032 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.203583196 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.204442832 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.20412223 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.204073867 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.203900175 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.20469198 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.204556212 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.205037207 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.2048571 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.204593177 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.204577726 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.204627786 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.204788496 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.204340521 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.206413768 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.204586483 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.205079228 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.205195716 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.204504711 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.204862298 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.205908667 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.204902059 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.204808357 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.207657165 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.204488611 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.204770692 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.207114863 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.205354191 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.206719705 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.211886709 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.213851128 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.205264852 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.204521055 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.205815905 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.205256502 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.20578264 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.206192826 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.205824418 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.206999534 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.20549817 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.207155974 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.205987993 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.206600045 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.207655656 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.205832584 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.205633997 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.206419949 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.207266096 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.206158602 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.206141567 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.207477011 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.206020375 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.207058489 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.207296843 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.206227521 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.207873294 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.207471279 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.208136067 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.208164196 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.208229556 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.208529918 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.208725289 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.209058073 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.207793045 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.208752877 seconds)
  done (took 87.954744434 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.208873122 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.204051806 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.204677057 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.205660993 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.206834473 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.208310572 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.207292468 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209334216 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205948262 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.209348201 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209687929 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.205716955 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205847135 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.210099306 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.209327343 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.206411235 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.209073628 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.206855931 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.209194596 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.209778271 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21022163 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.207942539 seconds)
  done (took 27.683194524 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.209789765 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.210444411 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.20828744 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.210696731 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.209089616 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.210150223 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.210029932 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.210626538 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211282217 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.20671835 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207609207 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21049835 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.208929662 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207525344 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.207146648 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.208163088 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.20987529 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.210218344 seconds)
  done (took 22.88082009 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.208912217 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.208661788 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.210934642 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.207437366 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.208811689 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.211996223 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.207490604 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.211920848 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.212105676 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.20899904 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.212660941 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21196044 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.212823136 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209098691 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211002366 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.208538269 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.212116711 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210561313 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.212480527 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.209623691 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.209485214 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21396572 seconds)
  done (took 27.745845933 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213687639 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.212633043 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.209884013 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.20965734 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.209996585 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.21202942 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.213373504 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.209955732 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.214513303 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.212549443 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.210079927 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.212188044 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.211781463 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.210859884 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.210586501 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.210239109 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.21411899 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.209455451 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.212060109 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.21099626 seconds)
  done (took 25.34696551 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.212139123 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.214170976 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.214032008 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.212463696 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.214046912 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.214702534 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.213165777 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.215578885 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.213960045 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.215518031 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.214550991 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.215280004 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.215052363 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.214735088 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.214694321 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.214934324 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.215374008 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.216680331 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.215933744 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.215360302 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.216361786 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.21604231 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.216343803 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.215255159 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.21589258 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.216566206 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.216530165 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.216512927 seconds)
  done (took 35.139666047 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.215970658 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.216569189 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.213474542 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.214520141 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.215004931 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.213221869 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.21437338 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.214100261 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.215581641 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.213577284 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.216598512 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.216959938 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.217106926 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.217200207 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.216443855 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.216236662 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216825349 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.214455175 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.214290487 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21386793 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.217073385 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217688313 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.217143568 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.214009419 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214101491 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.216309456 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214857599 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.214720911 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.21817621 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.214020234 seconds)
  done (took 37.584000981 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.257301837 seconds)
    (2/2) benchmarking "in"...
    done (took 1.256646783 seconds)
  done (took 3.633855787 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.21437623 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218348931 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.217735603 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.215570768 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.215713546 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.219284421 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.217059338 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216394026 seconds)
  done (took 10.854631733 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.217556155 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.218705859 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.218743377 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.218836643 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.2185285 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.217479306 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.226411517 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.238508803 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.21820061 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.21896939 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.226255064 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.226406135 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.220224926 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.219376212 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.218917863 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.221723961 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.218410083 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.219865516 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.220332222 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.220805107 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.221726332 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.221674406 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.221835029 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.218923206 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.221872673 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.230300426 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.223768386 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.222059267 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.219042782 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.224115953 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.218982129 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.218374103 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.220962475 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.220791096 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.22046975 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.221274034 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.228750364 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.240804847 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.225509115 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.222546116 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.221839779 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.218614373 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.221107061 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.221123528 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.221383739 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.220992308 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.223831341 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.219341548 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.219588581 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.225477524 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.227759817 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.220364585 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.219975708 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.223636995 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.221757343 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.227766114 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.242683574 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.225034261 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.230852379 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.232419792 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.233296811 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.243613185 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.225010394 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.223134264 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.233264971 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.244956683 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.229045346 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.240597668 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.21973766 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.223330118 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.228218165 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.235295402 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.247572688 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.222224441 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.223041688 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.225148782 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.223281994 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.224066928 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.230290643 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.244127921 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.224701443 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.225332133 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.233924006 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.246088782 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.223664294 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.224422078 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.22549959 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.225394828 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.224757039 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.233523021 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.244282949 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.225361552 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.2218439 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.22393093 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.225333078 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.225682922 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.223550099 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.225340677 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.22268007 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.224621911 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.225901866 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.228673929 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.233815581 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.226014746 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.227177568 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.230822468 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.226356787 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.224377503 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.231650014 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.226572953 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.226789007 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.227989667 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.230754101 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.222863713 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.228691949 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.233233738 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.228212526 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.227754171 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.226135378 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.226769993 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.235822063 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.250263529 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.228559997 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.225879838 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.231117566 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.23836771 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.226433148 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.22944854 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.227851412 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.223505856 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.225665493 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.227237587 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.228461537 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.227915725 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.227618772 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.227322666 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.224575056 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.22831265 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.227840872 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.228387361 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.228181998 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.226935165 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.227358662 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.22947866 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.229947835 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.229669577 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.233684657 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.227510568 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.226358317 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.227745169 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.225937899 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.229258392 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.228308822 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.22889468 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.229188519 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.230855822 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.227125983 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.22913591 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.229968634 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.229325799 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.230308078 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.231062741 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.232845841 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.23001926 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.231356771 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.228258125 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.227386964 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.229511829 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.230815648 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.230284186 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.231543685 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.229107826 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.232632225 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.238748913 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.230992129 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.230359681 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.232133825 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.229982618 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.230948866 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.231329999 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.233381806 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.238775132 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.231700166 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.236776044 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.232441315 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.231667048 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.232577432 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.230792983 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.229058916 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.231816721 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.234958299 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.239441219 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.243278325 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25599718 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.231580074 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.236237793 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.231689002 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.2355697 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.233614114 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.233580967 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.232870283 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.234340284 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.230488062 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.232825675 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.233396218 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.232001182 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.230734153 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.23264308 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.232874454 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.23294509 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.233635411 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.231980428 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.232892105 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.22917267 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.232606353 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.233047086 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.23205854 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.230678347 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.230980193 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.232150343 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.233132867 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.234312025 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.237684333 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.230820721 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.234464992 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.2339518 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.233800268 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.2322637 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.234983384 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.234942983 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.232791988 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.240623478 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.251697526 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.233585584 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.238584318 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.252282279 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.232640864 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.235466006 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.234527571 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.230595963 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.237826766 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.242749062 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.234827406 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.235477195 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.23520675 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.234303384 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.235437962 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.240710746 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.232707194 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.233353258 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.235866476 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.234910873 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.232744022 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.235750616 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.235831131 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.236435483 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.236774534 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.237356145 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.236823877 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.236243634 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.236732138 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.236180948 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.238268169 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.239169435 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.245160785 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.240609441 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.235283793 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.238315526 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.238432265 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.240600772 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.236282285 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.235652392 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.236446276 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.248006003 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.262227685 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.242536431 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.237237375 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.237439686 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.240723415 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.23690115 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.239021211 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.235504576 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.236593979 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.235519351 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.236625436 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.235169593 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.237704042 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.238336417 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.238061049 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.239390471 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.240589592 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.239792263 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.237611028 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.239258489 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.238844227 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.239675102 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.235795856 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.238529228 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.238695158 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.239716365 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.235664003 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.236547516 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.244018279 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.256441012 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.239243761 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.237906042 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.237786844 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.237007037 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.238812115 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.238272677 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.241715908 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.246313091 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.242335064 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.246161942 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.240074672 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.24835887 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.238805789 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.242104937 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.24853132 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.23685815 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.237935095 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.238559839 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.239985552 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.247290322 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.259577684 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.241903992 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.24311537 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240628103 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.240886762 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.24087221 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.239755993 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.24118999 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.241963793 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247752745 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.263108642 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.243551853 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.241996183 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.237175456 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.241883149 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.24196122 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.239358225 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.244656166 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.242046518 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.241336498 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.241389042 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.241429701 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.242923419 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.243317972 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.242843443 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.239642477 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.242361146 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.248075754 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.263100344 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.247096186 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.245145352 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.247827509 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.24311042 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.248241729 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.263147982 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.242456364 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.243211116 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.242368654 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.243274236 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.240781078 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.240971023 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.242516557 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.24443156 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.246981618 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.244001799 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.243759634 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.242055127 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.242977529 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.242035337 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.2533187 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267540711 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.244713038 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.249683733 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.240915481 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.244830417 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.247823499 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.243822608 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.242124365 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.245819927 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.252761483 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252922673 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.243061947 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.243770885 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.243909488 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.245297135 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.246031956 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.245407145 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.244057872 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.245814194 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.243873907 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.244633249 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.247122529 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.245146701 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.244768998 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.245796242 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.245522204 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.253248223 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.246131169 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.244393026 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.246123618 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.247578387 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.244797095 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.243850051 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.246056846 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.245965054 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.246242873 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.247198406 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.254198378 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.252599683 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.247953945 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.24427287 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.246105554 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.245216497 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.245796882 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.246537901 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.247889651 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.248400835 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.247642815 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.246615944 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.247237342 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.245682312 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.246618151 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.246716636 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247323142 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.249736265 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.255404681 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.246503301 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.245395342 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.248299878 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.248150366 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.246447685 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.245603419 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.250751924 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.248800899 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.257796999 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.2555191 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.25150742 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.246826192 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.251389742 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.25574436 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.246774796 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.246673667 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.248265515 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.248351986 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.2485656 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.251514988 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.248773068 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.254190593 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.247006856 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.246479616 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.25498858 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.269424257 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250064681 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.249842406 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.252716061 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.247978576 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.247115902 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.249990157 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.248717951 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.254302433 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.268184136 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.250381469 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.249983909 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.248119459 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.250792756 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.253185103 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.250076924 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.249436245 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.24734951 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.249758314 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.250321065 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.252528734 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.247127498 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.248441539 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.249365226 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.25303568 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.257508931 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.247345304 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.251757448 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.250312809 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.249926165 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.25215451 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.251773276 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.247540294 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.247472128 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.24840175 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.249807907 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.249005872 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.250072149 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.248954166 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.251499754 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.251776063 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.251090946 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.252675917 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.261177203 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.260788349 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.248378789 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.249890246 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.250085263 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.251255175 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251922531 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.252143709 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.251029145 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.250068474 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.249862141 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.251495645 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.249980116 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.253265589 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.266352327 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.271928187 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.250006291 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.25144306 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.253141384 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.251726454 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.249143631 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.253501309 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.252728761 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.254882723 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.261627705 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.254023366 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.258741102 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.271159329 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.252747132 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.257430167 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.255291539 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.260848549 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.254078578 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.252053223 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.253363165 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.258652855 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.268392494 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.252549361 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.263012294 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.283330217 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.271728005 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.254054427 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.253831208 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.250869933 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.253391163 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.25288773 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.253433838 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.254503119 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.253216956 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.255411369 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.253793491 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.259126255 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.25538641 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.25604584 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.255214359 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.251570621 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.25316993 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.252541376 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.253400959 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.253558595 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.253348062 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.254016202 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.254498869 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.254881245 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.266242122 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.280576675 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.255594433 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.255418703 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.252798365 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.257369644 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.25900548 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266590874 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.263529843 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.256525126 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.256409676 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.255567021 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.255719487 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.254416475 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.254951007 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.254508271 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.255402534 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.25312083 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.266611905 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.279996294 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.259135663 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.254661681 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.257564464 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.257472248 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.255231764 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.25631898 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256744225 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.257155023 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.259595576 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.259777715 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.257378371 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.25697485 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.259760491 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.265704892 seconds)
  done (took 740.453463137 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.254537983 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.254011668 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.254665732 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.252720754 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2536237 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.255196215 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.254109357 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.254902332 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.254361505 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.25427438 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.253737632 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.25363115 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.255285386 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.254858399 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.255124967 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.253892703 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.255747019 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.25405422 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.255171669 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.256009923 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.254918886 seconds)
  done (took 27.500005247 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.25797326 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.255854297 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.257089074 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.257887632 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.257057837 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.25878159 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.257868132 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258322133 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.259823054 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.257086542 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.259388892 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.259811024 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.257611092 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.256344889 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256293682 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.258693039 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.258071214 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.256301194 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.259632947 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.257476129 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.259932291 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.257821432 seconds)
  done (took 28.831209843 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.260840669 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.259598404 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.258776957 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.257452118 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.259547014 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.25690586 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.261306208 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.260763117 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.260468013 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.260688103 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.258229354 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.261155443 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.267973389 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.266161644 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.260925982 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.260714849 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.260772318 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.261960834 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.261264683 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.257071465 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.265184126 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.257863076 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.259361937 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.25967068 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.262157435 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.261276939 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.261007027 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.262742961 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.262517665 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.267383682 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.26224117 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.260791117 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.262672918 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.260148018 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.263366521 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.266303856 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.262281615 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.257653627 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.262124682 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.271407763 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.282551317 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.262845662 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.267876623 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.263825065 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.262481911 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.265068705 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.271460874 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.259345627 seconds)
  done (took 61.755594708 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.263431414 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.263777936 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.259223877 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.262758563 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.264349544 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.263970083 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.263952666 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.264263021 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.259875561 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.261626291 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.263957778 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.26148996 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.261606904 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.263787387 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.265508436 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.261433986 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.261421329 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.261397581 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.260847667 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.260919642 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.262249982 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.263987583 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.264864193 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.262743484 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.263380393 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.262102127 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.263356076 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.264335435 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.26167014 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.262604463 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.265672948 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.265084577 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.265287432 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.263500569 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.262926207 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.264854506 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.266467754 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.262966446 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.265382936 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.263053831 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.266081616 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.265118964 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.265406258 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.267747329 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.262558678 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.264774807 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.264465765 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.263001116 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.263660128 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.267819392 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.268045472 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.26402035 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.267237996 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.264843233 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.266860587 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.266641302 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.26416365 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.264040562 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.268031886 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.265182182 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.263856421 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.267821645 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.265303377 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.268118729 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.26922091 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.265249325 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.263548828 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.267627647 seconds)
  done (took 87.130451426 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.267784409 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.26918452 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.267639472 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.269024411 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.269192743 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.268574181 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.268353638 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.268659985 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.268501773 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.269108334 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.270196693 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.267509442 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.267291307 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.26789326 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.268303466 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.269451915 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.267931964 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.268738644 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.269012916 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.269128642 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.269976119 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.270291251 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.269123583 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.270049561 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.270424416 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.269434739 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.269310579 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.27046748 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.269079115 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.271215071 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.269565754 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.269456953 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.269671081 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.27029567 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.269155964 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.270086833 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.270044345 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.269287831 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.27041083 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.271611555 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.270599167 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.269420803 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.270218263 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.271251667 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.270304167 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.271567972 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.271334996 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.272329138 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.271429077 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.272060634 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.271341758 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.270886826 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.270963421 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.271275679 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.272819278 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.271787536 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.272164835 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.271436164 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272048303 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.272092008 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.27319528 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.271830589 seconds)
  done (took 79.909882602 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.272748892 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.272653078 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.269856466 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.270047666 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.272874433 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.269544529 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.272814995 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.272801103 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.273948829 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.271713947 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27397717 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.269790059 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272120862 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273987814 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.269689796 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.271277046 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.271417451 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.270563365 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.272802935 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.270651005 seconds)
  done (took 26.604423952 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.270757711 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.272901483 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.270358732 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.270266586 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.273851345 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.271129387 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.273135143 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273529166 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270143397 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.271745204 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.274499114 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.273736289 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270558902 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.27145428 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.27337735 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.272934061 seconds)
  done (took 21.524532615 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.273352956 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.273753114 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.2741286 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.27398786 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.271152738 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.272359016 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.274520405 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.270670239 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.271769751 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.273372419 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.273572761 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.274329215 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.273736482 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.274337335 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.272271631 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.275333487 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.271689181 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.272080419 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.27437511 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.274944458 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.271982811 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.272314709 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.274496382 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.274793294 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.272887782 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.273708469 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.272654692 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.272975244 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.272296122 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.275134896 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.273515878 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.272919182 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.273240099 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.272996126 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.276193157 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.273852954 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.275612112 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.276001707 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.27722963 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.277501621 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.27742711 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.274305822 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.277327231 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.276044841 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.274346704 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.275323405 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.274158911 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.274130868 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.274180605 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.273890296 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.276192036 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.276932636 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.277330937 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.278460389 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.27655086 seconds)
  done (took 71.256961265 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.277242483 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.276607048 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.275050639 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.277549403 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.276845215 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.27453667 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.278881658 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.275482458 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.27501895 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.2778955 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.274325691 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.279824956 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.275228434 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.278922121 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.274767199 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.278218048 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.275664821 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.276288501 seconds)
  done (took 24.151790095 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.278213743 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.276832514 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.279292724 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.275655368 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.275477809 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.279980876 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.273990786 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.278218768 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278629114 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.27577736 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275735306 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.279231831 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27971309 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.280224552 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.276409513 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276667305 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.281138219 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.279513503 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.276673655 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.276555525 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.280642208 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.278858298 seconds)
  done (took 29.289106742 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.278277875 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.278169566 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.277956275 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.296421004 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.298331808 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.279594636 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.279346101 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.278629815 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.302988003 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.330708143 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.327682296 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.297782931 seconds)
  done (took 16.701261647 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279071622 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282410725 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.277291572 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281016377 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280183192 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279371371 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278596335 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278783409 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280998831 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279483365 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279871284 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281960455 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282219003 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278346291 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281804982 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282910862 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278904669 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279328158 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280683068 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282797574 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281873453 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283200117 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279177627 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279240802 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280235477 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280301829 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28271988 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27945119 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279725897 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283055957 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284718963 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28144595 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283233425 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28050043 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282575388 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282130277 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280687032 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283351087 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282761058 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281015929 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.284515606 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282622127 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282540624 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281848738 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283049872 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280838902 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27924573 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280704181 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279971295 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283082207 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284379224 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281625427 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283645252 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283477613 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283385029 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283445444 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282180468 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281909286 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284199997 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282884645 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28130703 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283504733 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282600792 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281186486 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28544811 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280960773 seconds)
  done (took 85.761639349 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281797397 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.282725808 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28205706 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282948443 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281872039 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282375542 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282249907 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283466253 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28238875 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282758483 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287711415 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283408549 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282867309 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281761337 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283447761 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28323826 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282763129 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284906145 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283161546 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28669113 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284776174 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284660268 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28359636 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284856993 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284093314 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286432628 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282921799 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285752244 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28417068 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28432867 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283880227 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284268663 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284052932 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.284315287 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284028486 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282973137 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283958796 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283806943 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286340622 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286879459 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284850459 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287981949 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283931552 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285065052 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285186854 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285005858 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285099262 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286975844 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285212229 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284322998 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284506314 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286422821 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284923669 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284484821 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285610021 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286003292 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286566052 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285589133 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285683679 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287642344 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286138246 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286754633 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289399294 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286525492 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286648727 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285936461 seconds)
  done (took 85.969287409 seconds)
done (took 1733.833716342 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.453001805 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.405459471 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.288229874 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.300525861 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.28688779 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.311523032 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.296820442 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.28859 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.287434004 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.287355048 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.285814309 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.473590167 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.343235201 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.288649073 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.28746765 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.382913498 seconds)
  done (took 26.453873079 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.317944059 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.295865588 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.409244941 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.309393403 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.316788081 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.484181954 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.345721488 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.294128437 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.465920806 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.335409377 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.284422443 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.316813973 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.29273756 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.283320173 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.314194564 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.484110769 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.545941188 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.293130158 seconds)
  done (took 28.575308854 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.749772383 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.29411383 seconds)
  done (took 5.230632055 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.31279516 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.293119355 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.295260876 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.293142541 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.284224916 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.284531876 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.293067044 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.286909596 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.289100537 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.425631218 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.296553641 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.303590191 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.31379702 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.294713755 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.291681104 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.330668405 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.450293738 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.292441101 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.290229831 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.300445438 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.294759572 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.384661454 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.336903431 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.292760511 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.434731152 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.29620442 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.301717246 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.301877127 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.449586562 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.294023881 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.292952803 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.293714159 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.297641572 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.235740936 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.751618055 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.286483532 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.320016471 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.303781225 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.293278714 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.442229984 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.298231928 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.302280878 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.28800782 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.729388791 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.438383175 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.41612904 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.305735561 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.31953318 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.298120084 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.360233632 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.298380297 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.298078934 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.340843465 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.098740179 seconds)
  done (took 83.115222383 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.302334541 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.290600283 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.471905432 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.308517183 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.28861598 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.288225534 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.291100398 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.58379587 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.326146995 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.291018966 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.587490852 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.84738661 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.315239775 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.338479437 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.146514326 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.355099006 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.291226624 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.306649848 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.290919557 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.295431609 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.84671383 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.297235733 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.290092363 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.515957178 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.330700084 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.811750683 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.290471845 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.32223347 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.290022005 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.290577865 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.810065103 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.315994702 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.360625241 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.292813285 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.570597003 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.676537349 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.637248019 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.296575767 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.322572551 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.295226938 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.297750235 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.797205214 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.656360058 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.293691222 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.291705178 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.804370578 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.293943498 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.298306645 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.296270889 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.542176732 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.291825512 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.291870258 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.314206397 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.315424874 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.291861422 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.366205335 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.371802815 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.817024527 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.292191065 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.293307839 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.313276755 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.292750414 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.295878989 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.293906245 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.295541361 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.663356798 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.445015252 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.293362557 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.658587482 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.802147305 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.310696338 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.873808382 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.31154605 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.304724689 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.438245247 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.292294994 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.325113158 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.808652517 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.327029719 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.293895524 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.643204539 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.298886441 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.591702138 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.313041549 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.296346871 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.861267705 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.302905238 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.304506384 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.293826859 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.306086156 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.295164462 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.304356378 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.583236549 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.345831969 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.295869008 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.297558528 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.346823013 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.296610388 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.296126947 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.305394109 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.871424991 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.318217127 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.297454021 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.299065138 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.297225951 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.302096479 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.299727327 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.296809939 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.563060662 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.304476999 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.298167743 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.295097015 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.295293966 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.306521382 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.529260066 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.301200888 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.612311623 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.300755963 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.29802183 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.300294361 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.296965247 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.30054718 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.29872674 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.300485164 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.201655309 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.604969977 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.316622441 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.313022857 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.297571823 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.309172992 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.296719997 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.299010279 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.335378127 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.300713087 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.05522965 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.341411671 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.323907823 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.298010299 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.299680017 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.297206818 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.303716797 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.298538163 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.591578125 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.584011099 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.447670327 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.298946239 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.298324866 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.052021033 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.359711812 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.479568065 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.318373576 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.298237245 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.54985968 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.536295824 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.299903278 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.298980144 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.298390923 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.559629005 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.299091917 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.607295771 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.839746991 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.322234385 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.312593025 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.063867741 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.030543799 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.299919873 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.302853966 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.59597598 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.318938296 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.298861504 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.297713103 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.30085063 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.299373106 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.305086966 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.309170841 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.301203449 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.300998983 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.417510967 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.494224293 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.318682046 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.299672316 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.819255494 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.310554611 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.30228996 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.311287229 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.301064216 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.30109337 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.368261552 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.304698096 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.341147062 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.30372017 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.3101624 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.878464257 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.302039756 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.302261424 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.494146137 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.996239286 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.323515719 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.30047931 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.319132305 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.202727607 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.844044032 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.354740943 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.619111022 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.31322101 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.341628775 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.301818867 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.318153796 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.847910534 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.306136116 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.320648007 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.955768047 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.319802207 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.155375052 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.303576753 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.303307135 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.909533574 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.320449251 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.307004493 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.302421772 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.303536457 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.599124084 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.30314926 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.326677104 seconds)
  done (took 491.071764673 seconds)
done (took 635.630369962 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.304241177 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.308820901 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.293111988 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.309544958 seconds)
  done (took 10.4214157 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.315420501 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.310972879 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.311004025 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.309042776 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.312422251 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.31214513 seconds)
  done (took 9.078616774 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.305253351 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.311006108 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.310138149 seconds)
  done (took 8.132211794 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.519794452 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.334552498 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.650845488 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.332050253 seconds)
  done (took 9.04435083 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.311019183 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.31281608 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.313248755 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.313414087 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.315685708 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.316363379 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.315300018 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.31411258 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.315251917 seconds)
  done (took 13.031357608 seconds)
done (took 50.911603429 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.958729069 seconds)
    (2/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.360216604 seconds)
    (3/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.363524912 seconds)
    (4/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.451503863 seconds)
    (5/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.398323342 seconds)
    (6/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.45331109 seconds)
    (7/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.319745894 seconds)
    (8/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.322006554 seconds)
    (9/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.306341262 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.346291767 seconds)
    (11/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.289687311 seconds)
    (12/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.410334313 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.317115747 seconds)
    (14/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.047899879 seconds)
    (15/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.990409783 seconds)
    (16/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.515671674 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.315184679 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.473879438 seconds)
    (19/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.306490794 seconds)
    (20/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.541586821 seconds)
    (21/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.178097933 seconds)
    (22/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.362752705 seconds)
    (23/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.290906874 seconds)
    (24/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.307607797 seconds)
    (25/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.334511876 seconds)
    (26/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.953755752 seconds)
    (27/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.405417411 seconds)
    (28/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.533312838 seconds)
    (29/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.29091268 seconds)
    (30/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.39408977 seconds)
    (31/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.456720565 seconds)
    (32/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.296413708 seconds)
    (33/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.315719214 seconds)
    (34/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.587317889 seconds)
    (35/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.433249379 seconds)
    (36/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.309880147 seconds)
    (37/286) benchmarking ("sort", Int64, true)...
    done (took 1.747365146 seconds)
    (38/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.053801112 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.381024117 seconds)
    (40/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.318585042 seconds)
    (41/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.319817713 seconds)
    (42/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.328266182 seconds)
    (43/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.43228021 seconds)
    (44/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.346272419 seconds)
    (45/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.395499839 seconds)
    (46/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.31661275 seconds)
    (47/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.326577242 seconds)
    (48/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.325621943 seconds)
    (49/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.389032492 seconds)
    (50/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.179212334 seconds)
    (51/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.354805085 seconds)
    (52/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.35936115 seconds)
    (53/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.342290118 seconds)
    (54/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.326287205 seconds)
    (55/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.389417045 seconds)
    (56/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.342236398 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.474053384 seconds)
    (58/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.013351182 seconds)
    (59/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.460179165 seconds)
    (60/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.640464889 seconds)
    (61/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.323312098 seconds)
    (62/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.371507176 seconds)
    (63/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.343048905 seconds)
    (64/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.963534221 seconds)
    (65/286) benchmarking ("sort", Int8, false)...
    done (took 1.447568471 seconds)
    (66/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.462688491 seconds)
    (67/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.103885736 seconds)
    (68/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.408792146 seconds)
    (69/286) benchmarking ("sort", BigInt, true)...
    done (took 2.310004584 seconds)
    (70/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.332638182 seconds)
    (71/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.363682309 seconds)
    (72/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.011679091 seconds)
    (73/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.385467656 seconds)
    (74/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.336149745 seconds)
    (75/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.534300233 seconds)
    (76/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.32033095 seconds)
    (77/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.369593133 seconds)
    (78/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.170146707 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 1.510051577 seconds)
    (80/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.325697097 seconds)
    (81/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.321070733 seconds)
    (82/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.457986423 seconds)
    (83/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.538945436 seconds)
    (84/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.329105802 seconds)
    (85/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.319997459 seconds)
    (86/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.960494867 seconds)
    (87/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.322095012 seconds)
    (88/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.362792013 seconds)
    (89/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.352409562 seconds)
    (90/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.34497641 seconds)
    (91/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.329396546 seconds)
    (92/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.311739386 seconds)
    (93/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.638781322 seconds)
    (94/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.442123411 seconds)
    (95/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.990418576 seconds)
    (96/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.434489627 seconds)
    (97/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.352292853 seconds)
    (98/286) benchmarking ("sort", Float64, false)...
    done (took 1.515465473 seconds)
    (99/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.420730018 seconds)
    (100/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.347329901 seconds)
    (101/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.340035429 seconds)
    (102/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.331138665 seconds)
    (103/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.439108364 seconds)
    (104/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.340588698 seconds)
    (105/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.325372063 seconds)
    (106/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.595344469 seconds)
    (107/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.366807936 seconds)
    (108/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.37486213 seconds)
    (109/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.33734155 seconds)
    (110/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.325265095 seconds)
    (111/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.332224283 seconds)
    (112/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.341242282 seconds)
    (113/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.398929841 seconds)
    (114/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.372000292 seconds)
    (115/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.434639081 seconds)
    (116/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.321650842 seconds)
    (117/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.327698685 seconds)
    (118/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.126135454 seconds)
    (119/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.349463938 seconds)
    (120/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.320212397 seconds)
    (121/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.29632134 seconds)
    (122/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.367669675 seconds)
    (123/286) benchmarking ("sort", Bool, false)...
    done (took 1.344308161 seconds)
    (124/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.323069537 seconds)
    (125/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.378091911 seconds)
    (126/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.343821733 seconds)
    (127/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.458818571 seconds)
    (128/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.317735403 seconds)
    (129/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.40595897 seconds)
    (130/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.337033486 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.34659693 seconds)
    (132/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.323846434 seconds)
    (133/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.316538189 seconds)
    (134/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.344881942 seconds)
    (135/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.503581317 seconds)
    (136/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.3257521 seconds)
    (137/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.390505049 seconds)
    (138/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.092550347 seconds)
    (139/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.345006519 seconds)
    (140/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.330946913 seconds)
    (141/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.389506504 seconds)
    (142/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.432054707 seconds)
    (143/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.332208053 seconds)
    (144/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.302169402 seconds)
    (145/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.404288261 seconds)
    (146/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.337224334 seconds)
    (147/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.321856701 seconds)
    (148/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.436136596 seconds)
    (149/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.357254911 seconds)
    (150/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.070006341 seconds)
    (151/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.419464612 seconds)
    (152/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.324268981 seconds)
    (153/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.186490861 seconds)
    (154/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.351094907 seconds)
    (155/286) benchmarking ("sort", BigInt, false)...
    done (took 2.317740085 seconds)
    (156/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.377548157 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.41961461 seconds)
    (158/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.327681843 seconds)
    (159/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.419493224 seconds)
    (160/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.324774422 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.419510833 seconds)
    (162/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.978999398 seconds)
    (163/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.501679196 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.439182273 seconds)
    (165/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.316587712 seconds)
    (166/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.511237441 seconds)
    (167/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.397888584 seconds)
    (168/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.376200808 seconds)
    (169/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.384044571 seconds)
    (170/286) benchmarking ("sort", Float32, true)...
    done (took 1.878826875 seconds)
    (171/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.326946222 seconds)
    (172/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.32918821 seconds)
    (173/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.330207189 seconds)
    (174/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.565511905 seconds)
    (175/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.508000328 seconds)
    (176/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.402431809 seconds)
    (177/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.324088261 seconds)
    (178/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.300949868 seconds)
    (179/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.108529512 seconds)
    (180/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.401223944 seconds)
    (181/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.327680645 seconds)
    (182/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.397987661 seconds)
    (183/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.327754262 seconds)
    (184/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.317655903 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.389383263 seconds)
    (186/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.359251254 seconds)
    (187/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.460708983 seconds)
    (188/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.327088897 seconds)
    (189/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.372230099 seconds)
    (190/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.40297464 seconds)
    (191/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.395624646 seconds)
    (192/286) benchmarking ("sort", Bool, true)...
    done (took 1.520572182 seconds)
    (193/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.453023795 seconds)
    (194/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.330328937 seconds)
    (195/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.334089941 seconds)
    (196/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.318184282 seconds)
    (197/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.432637851 seconds)
    (198/286) benchmarking ("sort", Int8, true)...
    done (took 1.717678507 seconds)
    (199/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.446827558 seconds)
    (200/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.322183447 seconds)
    (201/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.346333392 seconds)
    (202/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.339976804 seconds)
    (203/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.376724823 seconds)
    (204/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.432535474 seconds)
    (205/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.342765556 seconds)
    (206/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.400235312 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.390878713 seconds)
    (208/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.350726703 seconds)
    (209/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.330076492 seconds)
    (210/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.139489548 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.393184859 seconds)
    (212/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.320893948 seconds)
    (213/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.328500569 seconds)
    (214/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.474900129 seconds)
    (215/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.348526461 seconds)
    (216/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.447240386 seconds)
    (217/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.35467056 seconds)
    (218/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.342748632 seconds)
    (219/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.463089491 seconds)
    (220/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.338205114 seconds)
    (221/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.337543487 seconds)
    (222/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.348586099 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.366440577 seconds)
    (224/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.328730401 seconds)
    (225/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.378503931 seconds)
    (226/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.335810062 seconds)
    (227/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.446881433 seconds)
    (228/286) benchmarking ("sort", Float32, false)...
    done (took 1.496755041 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.44123377 seconds)
    (230/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.304741693 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.415682351 seconds)
    (232/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.356541386 seconds)
    (233/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.0294282 seconds)
    (234/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.330325762 seconds)
    (235/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.524526604 seconds)
    (236/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.330124482 seconds)
    (237/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.315565298 seconds)
    (238/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.364140269 seconds)
    (239/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.464242376 seconds)
    (240/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.53354558 seconds)
    (241/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.338736729 seconds)
    (242/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.360659966 seconds)
    (243/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.494406069 seconds)
    (244/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.324111816 seconds)
    (245/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.357395708 seconds)
    (246/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.339547872 seconds)
    (247/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.328312457 seconds)
    (248/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.331265156 seconds)
    (249/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.508187542 seconds)
    (250/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.491863253 seconds)
    (251/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.3572366 seconds)
    (252/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.32442139 seconds)
    (253/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.376648868 seconds)
    (254/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.383290597 seconds)
    (255/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.342275031 seconds)
    (256/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.474755018 seconds)
    (257/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.338558489 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.345538203 seconds)
    (259/286) benchmarking ("sort", Float64, true)...
    done (took 1.94541909 seconds)
    (260/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.398663317 seconds)
    (261/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.442538541 seconds)
    (262/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.453549072 seconds)
    (263/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.521774515 seconds)
    (264/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.436790227 seconds)
    (265/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.076379508 seconds)
    (266/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.343024215 seconds)
    (267/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.322039294 seconds)
    (268/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.333500783 seconds)
    (269/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.351641822 seconds)
    (270/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.339216721 seconds)
    (271/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.376704786 seconds)
    (272/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.41035161 seconds)
    (273/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.338238359 seconds)
    (274/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.337465219 seconds)
    (275/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.974696576 seconds)
    (276/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.077486249 seconds)
    (277/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.436398659 seconds)
    (278/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.331197204 seconds)
    (279/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.042883866 seconds)
    (280/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.381262581 seconds)
    (281/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.334188591 seconds)
    (282/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.387436127 seconds)
    (283/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.327267953 seconds)
    (284/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.333932307 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.428406351 seconds)
    (286/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.320023318 seconds)
  done (took 465.151510701 seconds)
done (took 466.357676914 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.370115037 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.383468586 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.337164898 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.369941539 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.449140098 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.5091442 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.347027359 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.37619027 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.384443435 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.386027143 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.343876202 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.508211367 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.33789268 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.337713754 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.337265404 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.378956764 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.336080464 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.337935312 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.352167189 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.372701701 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.355455223 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.343005416 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.388044306 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.507670561 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.341217799 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.339564698 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.340293299 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.357014926 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.449526518 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.34154717 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.340995008 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.350014849 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.337661584 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.342754611 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.333710197 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.358505576 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.3511525 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.347531261 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.372963056 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.448029247 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.333005464 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.346057589 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.339542959 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.339188465 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.340385842 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.376288395 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.340421609 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.397080558 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.382207471 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381773479 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.328185389 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.373711469 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.348270813 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.341458304 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.351258174 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.3388553 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.397713974 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.385594879 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.35954844 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.385206651 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.330370978 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.344594584 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.378746698 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.355656978 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.348610757 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.329811086 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.339752254 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.379224488 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.334853357 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.346104987 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.328999497 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.349087517 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.343697177 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.355383005 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.373924042 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.343462707 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.335705422 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.341114097 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.348287865 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.340725925 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.389386335 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.384054584 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.391123648 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.341463714 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.383575603 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.514044118 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.35171587 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.343540292 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.379159815 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.364649156 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.348034303 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.353817233 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.376413419 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.344275526 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.390094891 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.399315142 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.350777159 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.351320446 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.393282864 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.352873328 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.337818224 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.389169903 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.339209833 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.340489771 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.342913163 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.464121062 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.336992916 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.343313623 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.378445152 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.389830279 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.402871511 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.334708673 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.362260737 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.391228224 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.35225595 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.403075968 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.344184035 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.335635708 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.332482989 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.467609757 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.344430281 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.350923285 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.391557685 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.40532264 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.344904164 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.348371309 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.346014933 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.38736599 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.468389732 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.355781542 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.455978459 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.344253102 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.348908438 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.375335999 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.389858065 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.377758179 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.404370301 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.391453194 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.363249668 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.345264379 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.356501102 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.356721211 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.346383517 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.403831344 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.34400142 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.375832672 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.388122905 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.39000284 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.380027574 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.466616048 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.352481816 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.337805965 seconds)
done (took 225.196783475 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.40563268 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.342368207 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.453062877 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.344222147 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.446155341 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.443593007 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.342374954 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.341690043 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.341405004 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.721964431 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.341165267 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.341427685 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.340889234 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.341670407 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.425971325 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.345028734 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.339893024 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.683817441 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.344524851 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.415174326 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.343217986 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.343067356 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.344735429 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.724477382 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.342209526 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.340198936 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.415094699 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.345427905 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.692637842 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.337948295 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.342814059 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.691553827 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.434728856 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.362524036 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.356769056 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.35229461 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.446823364 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.366735533 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.429150833 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.42907278 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.454269261 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.386761484 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.338361546 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.343412514 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.348738226 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.346939771 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.344331449 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.373293523 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.344536793 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.344353716 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.732733284 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.356767349 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.344660547 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.345342405 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.34635333 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.376753025 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.346349128 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.346767098 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.435760643 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.349199161 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.409096267 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.728157813 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.724808193 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.347213874 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.342486976 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.345689054 seconds)
  done (took 105.280748277 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.413764363 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.423614628 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.461848099 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.349502448 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.398856256 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.465306852 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.346900846 seconds)
  done (took 11.09726049 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.35143073 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.348597908 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.398522439 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.39641924 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.34911849 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.562070996 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.348274108 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.360062305 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.347139477 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.425990186 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.349035852 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.35087426 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.355589682 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.344093552 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.395295349 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.361963759 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.464414808 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.350113777 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.35137066 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.503546933 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.34856666 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.355475575 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.421195451 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.36167721 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.349257257 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.354849522 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.298382954 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.351614634 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.34835429 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.350433068 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.34762639 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.458773161 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.350659428 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.347519082 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.348723027 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.508532146 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.352083692 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.347878418 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.353266054 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.351837915 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.351996218 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.351478843 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.352012341 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.34868975 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.349989032 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.374586354 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.35246901 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.351616864 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.351736982 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.352949499 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.42479271 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.352663756 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.3468205 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.349884811 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.430419159 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.359374584 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.352383894 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.349067833 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.353509293 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.349083545 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.504946424 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.400426765 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.352284677 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.400065682 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.353248599 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.352823067 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.352728931 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.35283682 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.444893059 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.35390627 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.401855861 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.350640126 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.575307622 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.3773455 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.356174389 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.355400446 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.357212593 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.353725872 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.3489266 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.359876531 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.350301045 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.354504126 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.358575475 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.351886585 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.352713312 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.536671504 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.509578138 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.353361171 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.366400575 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.360397917 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.352750339 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.42850743 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.355020343 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.352435324 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.407218804 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.469638798 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.430771273 seconds)
  done (took 139.86240525 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.359310041 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.362037592 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.357316139 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.375276019 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.355507373 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.355617499 seconds)
  done (took 9.408080597 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.35762958 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.356713836 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.354947273 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.358109518 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.355925526 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.355235006 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.357757984 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.357582031 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.360502057 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.358203013 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.355665178 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.357930848 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.358824445 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.358274419 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.356932035 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.358314377 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.357556642 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.355072654 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.358888656 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.356702575 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.355552856 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.357850493 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.3572713 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.358914905 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.36145572 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.358783167 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.363419007 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.357755086 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.357317867 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.36458248 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.379142715 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.358878672 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.359454301 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.362062613 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.362744945 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.359361177 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.362515806 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.359262606 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.355170966 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.358797535 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.360822865 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.358970328 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.359715249 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.358985167 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.36107388 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.363174062 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.364641938 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.364587345 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.357888013 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.360706856 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.36046676 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.361234338 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.359215693 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.359114252 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.363001343 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.382436338 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.364614555 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.358942896 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.361196936 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.36144383 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.360971942 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.360019435 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.361125798 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.364033272 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.359409908 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.36043555 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.36196389 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.364193457 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.361082003 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.360368191 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.361622439 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.360589861 seconds)
  done (took 100.181004413 seconds)
done (took 367.060389399 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.823357793 seconds)
  done (took 4.072582202 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.457881327 seconds)
  done (took 3.708819743 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.028364593 seconds)
  done (took 24.283826154 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.429711318 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.468661135 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.378213611 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.356188117 seconds)
  done (took 10.882898646 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.661085799 seconds)
  done (took 3.909776389 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.368238021 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.36230243 seconds)
  done (took 5.981158343 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.667187771 seconds)
  done (took 3.915916235 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.769925062 seconds)
  done (took 4.022972816 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.378928497 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.368019358 seconds)
  done (took 6.0024344 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.336845688 seconds)
  done (took 3.586696915 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.201273504 seconds)
  done (took 17.451495596 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.357236326 seconds)
  done (took 3.61081933 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.381229868 seconds)
  done (took 3.63055284 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.198900973 seconds)
  done (took 6.450843544 seconds)
done (took 102.759983131 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.353614874 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.360482933 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.359051775 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.360881888 seconds)
  done (took 10.683906358 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.395967138 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.397646751 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.398237963 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.406991787 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.400868095 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.396501865 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.389077419 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.388828415 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.409433789 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.402650851 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.397054528 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.404495442 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.417992105 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.407657218 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.399200443 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.400235633 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.407825171 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.399707726 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.390827491 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.401977934 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.365219806 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.410227612 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.400656955 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.365136142 seconds)
  done (took 34.808016556 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.856871491 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.434398903 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.518455068 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.416754597 seconds)
  done (took 7.476475441 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.434999144 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.444202148 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.44197568 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.479497343 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.50708534 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.444378687 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.391740986 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.386538684 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.373925693 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.443660864 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.493550012 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.43152865 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.509363499 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.363798567 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.647433556 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.364661219 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.364639903 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.442447236 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.481483479 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.494964485 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.365419471 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.444053795 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.443673788 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.432252261 seconds)
  done (took 35.880580833 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.366423998 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.385383687 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.366056552 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.365506223 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.372844981 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.366967452 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.36718258 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.365773291 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.365135692 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.905730989 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.372109912 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.37690674 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.884003692 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.371993857 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.373059434 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.367037057 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.890811705 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.889985102 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.375125737 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.372853818 seconds)
  done (took 30.754840567 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.357324513 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.358588557 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.711967949 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.617290537 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.359329311 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.364714144 seconds)
  done (took 14.023966498 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.443121028 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.602057066 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.371945964 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.75346816 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.837941052 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.372984812 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.368166934 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.629465909 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.982490378 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.957860028 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.429594201 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.445932595 seconds)
  done (took 20.451904744 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.365626676 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.363831033 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.367707 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.382392798 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.426060202 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.372517819 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.374910226 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.360483884 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.433291344 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.431188565 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.373100675 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.429530287 seconds)
  done (took 21.938812138 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457982349 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.363125618 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.36189743 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431483563 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363204955 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.208486326 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.43731147 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.115796454 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.39088764 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637249293 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360608929 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466698489 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.619341467 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368227163 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.367822968 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.343910889 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.599952147 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876450009 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367264552 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366369363 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40152741 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373879386 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.369899768 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.598614987 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.370689026 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363117422 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.625626212 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.364377553 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.668932356 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.379036083 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375296343 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363600488 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639466009 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049898449 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494434159 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.590072338 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405921978 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.366060336 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.362546617 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.391048331 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381903013 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.372500633 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376152948 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36697561 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.365682652 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370163318 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138591455 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.397523604 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.364711409 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.36664249 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.644933887 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468132889 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.371267847 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.366020509 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471477731 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368143554 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.370688633 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.373892301 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944529726 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376594567 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379607129 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.371575627 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.397138283 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36973787 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026968343 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.373345907 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.369467226 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.370206652 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367310528 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.367995905 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388518251 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367052915 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.391894041 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367791862 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.09595636 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.369551581 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374635753 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940832067 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370942124 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.374208094 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.600088989 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36835791 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370341366 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.377794485 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.369257464 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.125913437 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381319472 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.350063072 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.372206035 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.129264174 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.622208626 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393676062 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399406033 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.592801112 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.348803925 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368859522 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.36838672 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397716263 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39227282 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.133350435 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393429841 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.37368824 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628520854 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.580803356 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379833551 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.356353117 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889613086 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404299229 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.389632603 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.373148189 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.605084916 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.995630904 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.387461512 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376475279 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396558313 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.370930314 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152332891 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381452008 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.477333278 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.371304537 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677958677 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.188839684 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373487203 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440081705 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375371278 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.372006507 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381393667 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379003094 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.371757822 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.583972301 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401364032 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.389737279 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.369836704 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373061004 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.369423469 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374542984 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.378502209 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.597290215 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380430912 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654543195 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372939504 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373108349 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372246991 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.596365768 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.38505137 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.709533073 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.636441493 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383753287 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389763762 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.391062174 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392801787 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481287944 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395627744 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.373160916 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.634774298 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.376900609 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.378821821 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380425816 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.381759366 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378589227 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.379671249 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373599325 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011945213 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354163509 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.384148381 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.266563277 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.389271552 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442671065 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.380825954 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.60486187 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.392209503 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41041397 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.380745277 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.387906453 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601751585 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.385692163 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.38194132 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.459659704 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.886875613 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.022588035 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.389428128 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.375201572 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.372473009 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.372372079 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37666357 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375025984 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.37630997 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.602104747 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.395198378 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.394266121 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.998472141 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379025875 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.384153658 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.389267168 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.38881819 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.382571677 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376166594 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.386307773 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386349107 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382575497 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.395607434 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522396972 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.391736888 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37684023 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.895516687 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.383444983 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.376403671 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.377192667 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412998739 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.385755078 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292855892 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.646233818 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411733081 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.658671863 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384797188 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.40271875 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.387785338 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378988557 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385858864 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.407504596 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388245753 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.3899129 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.383980222 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387756766 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954089793 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141265609 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949316992 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386575443 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.380784597 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.386440238 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.148749334 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405371128 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379007846 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.628624199 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.147812605 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404512146 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897087542 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.400964712 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.190013849 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.662664917 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.613715928 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380316481 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.400331019 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.668412795 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.59454582 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414124432 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.378338213 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404708314 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.362391486 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986099574 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404785242 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.464817322 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.15137213 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404387142 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38430148 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.473582274 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.395441265 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816040758 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.40715266 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382638876 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.382023619 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388285136 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279427532 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395555459 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381877177 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040449003 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394126709 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.900488072 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407051784 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.613120202 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.401652746 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.383091893 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.385503179 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.378234736 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.639264666 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.663845978 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382048448 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390090255 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960035378 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.265461875 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.388604076 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384549533 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163577579 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382949743 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.697916661 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.387994569 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.389130287 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389898023 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382673968 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382641206 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.381520604 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.388126268 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36016992 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902578501 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.411046922 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384418468 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407555283 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389099636 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.639254213 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.399080676 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.006122646 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.615748936 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425503953 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408633702 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.388854925 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393199295 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.367931578 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384202695 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385949931 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499130727 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.611011974 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.384596274 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.368247541 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.453285647 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.596965304 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.387155384 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390168028 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.64339454 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.385223875 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.392444107 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124391547 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421162021 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39154056 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387161446 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.405693861 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.384878711 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456345047 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616335771 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.404852132 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.396990126 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819531485 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420557613 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389870615 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.399771023 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486581781 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385259254 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.408234968 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.159594118 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.013319096 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.155111652 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.016432805 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.671267045 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.388119551 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390248641 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387139328 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549337315 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3875154 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664846767 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388143308 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.410069994 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412062659 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395603379 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395271272 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606122991 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663460465 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388443973 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388289942 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39526498 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.388309885 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.39968914 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.598831397 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910755961 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970103743 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392375998 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394958635 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.166850166 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688360034 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390197191 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388602904 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388134249 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.395870144 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.39871678 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.394970818 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405994367 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535756021 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.671507888 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09385261 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.426084442 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.4180054 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.1629219 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405192046 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.651604939 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388492891 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.640228859 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.021748455 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.139124872 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.657439047 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461671869 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.621448856 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.406389589 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.555564117 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.396701183 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.391893216 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392065942 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391767247 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.38783907 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.401957935 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.023816735 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.658650254 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.394632171 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.395698549 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424603575 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.402826394 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.615964998 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.165673819 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.623058605 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.403489416 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397302168 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.390520715 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.022024694 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.675979918 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393966403 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.396551193 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.648088502 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.395655416 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417455957 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.887523833 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.389564974 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974351321 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.366094598 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41297064 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407543937 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.149375359 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022693185 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.390756007 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914643377 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395718372 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396009865 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673574848 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.399794633 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.404985169 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675828133 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.396808165 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.396605384 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632531344 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.026870712 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.211313399 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.406353661 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411809401 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.40308301 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393471433 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472755687 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395505616 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401843788 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.84030282 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.421154021 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394155681 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4064416 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.401289421 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408654199 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.397805647 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395792201 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.401331237 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.378364201 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.391236417 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.417748934 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.401239711 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008317105 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426086272 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.075179017 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.731015447 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.651952446 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.401210526 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.384090495 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.399154936 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398047433 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397839851 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396368299 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.422289475 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981253307 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.403436121 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.413006013 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.400630562 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.616418639 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610251702 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.406827174 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.637522063 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411039155 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416621463 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.378153785 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39634007 seconds)
  done (took 986.369542617 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.400247265 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.444410538 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.410551912 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.418942193 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.446449615 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.447464771 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.471405415 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.418790353 seconds)
  done (took 20.745972786 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.403000226 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.405884835 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.400544503 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.407758286 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.409847128 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.901666591 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.417637092 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.40703527 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.40834623 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.415526165 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.399226347 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.17147664 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.408134277 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.411564147 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.387739765 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.407223469 seconds)
  done (took 33.058843145 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.492596224 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.598304431 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.597274307 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.420567603 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.45090958 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.399184841 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.706926486 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.416300349 seconds)
  done (took 27.37195728 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.410026957 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.409294807 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.411844289 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.410128038 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.410075204 seconds)
  done (took 8.340371462 seconds)
done (took 1253.155994971 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.402491535 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.406845029 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.404601434 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.407996163 seconds)
  done (took 6.911666332 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.383168645 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.383137995 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.385210286 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.401043358 seconds)
  done (took 9.844115992 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.162571271 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.083749827 seconds)
  done (took 5.536772319 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.40596745 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.158534886 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.153057918 seconds)
  done (took 8.013687555 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.719859292 seconds)
  done (took 3.015437348 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.822867432 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.773713224 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.60144028 seconds)
  done (took 6.494178274 seconds)
done (took 41.105600131 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.408864494 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.653814819 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.561807689 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.410501608 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.567788552 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.563475512 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.212073346 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.404037942 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.404295142 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.40531402 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.433461273 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.568418275 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.126032243 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.655958659 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.125430221 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.655008342 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.565518254 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.405256878 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.421433945 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.417613105 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.208032599 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.420581018 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.417547008 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.404398482 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.568215586 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.552253072 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.414124221 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.655342998 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.412996135 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.417409627 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.551290762 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.406403159 seconds)
  done (took 83.691213953 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.414765292 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.404462298 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.406274238 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.42576977 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.406094381 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.424869342 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.429234252 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.406923481 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.4064472 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.425084247 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.427507004 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.406356288 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.429686012 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.405545988 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.409228896 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.406244882 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.411570046 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.420046966 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.406807306 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.408904452 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.428874359 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.408724097 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.405481536 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.425109048 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.407446538 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.40775329 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.42330808 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.40582659 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.42221214 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.407135331 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.408672433 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.424535611 seconds)
  done (took 78.554228813 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.407053234 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.417447135 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.409961124 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.409881483 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.426274118 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.41032115 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.408381376 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.408755036 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.429626491 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.412914305 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.408618726 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.427917054 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.4109339 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.409638292 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.412380013 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.420051101 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.424740294 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.408645744 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.409534445 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.425316391 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.412016638 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.424620616 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.411715134 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.410310786 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.446336402 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.410109386 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.417457577 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.41072963 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.423411685 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.419245545 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.411499154 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.410135798 seconds)
  done (took 78.606640524 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.692955955 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.418140658 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.419133338 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.402002484 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.420278724 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.419348731 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.411982058 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.695341789 seconds)
  done (took 15.181436997 seconds)
done (took 257.328495451 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.423519472 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.42134352 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.632948024 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.449518277 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.423639781 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.440204625 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.4514735 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.654888532 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.426544714 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.677999845 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.452189166 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.435984857 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.437496459 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.447517152 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.71245864 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.578540062 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.327412603 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.440679017 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.771204942 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.428600221 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.708758235 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.426591561 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.707560609 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.402142049 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.444665474 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.413600105 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.423487155 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.326557638 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.469036415 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.792579245 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.427366333 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.399422744 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.505188725 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.525912277 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.648410828 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.591143711 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.425418433 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.504090666 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.646510559 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.426490855 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.43539457 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.214370071 seconds)
  done (took 85.20161142 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.420708567 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.530999925 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.422346258 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.423438047 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.420416861 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.539744923 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.514011271 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.421716159 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.424018406 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.421072846 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.420608524 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.423191119 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.424093558 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.424315597 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.423507416 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.423495433 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.42220434 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.422673512 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.424671546 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.465723362 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.541095774 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.447319541 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.413385567 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.421116335 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.526148669 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.556722835 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.421421313 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.412287076 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.462568207 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.425816747 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.426606802 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.4649242 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.425371751 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.425592164 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.535744035 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.522555163 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.42531927 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.421826882 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.533953728 seconds)
  done (took 57.92920241 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.424828769 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.681435916 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.871471199 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.431835377 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.424433009 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.428755062 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.50917753 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.425318965 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.428534611 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.428221728 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.583775391 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.427789118 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.459400374 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.899891701 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.428992127 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.436848952 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.42742623 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.425588321 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.687557288 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.434672441 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.530515328 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.428989554 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.509653512 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.436498148 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.450209803 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.4263693 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.431648707 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.992285624 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.431143846 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.587567105 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.293467557 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.512440778 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.946364521 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.886716807 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.374997367 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.42921174 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.428716334 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.590774656 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.429974529 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.42821591 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.50962155 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.429281366 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.883917575 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.08706467 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.449374541 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.4269467 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.04972932 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.591252101 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.691349662 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.436844234 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.918452636 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.432093413 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.430596297 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.430210259 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.691612908 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.436367194 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.428720433 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.012510839 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.453458354 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.512479185 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.431137686 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.429382747 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.700526874 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.43266636 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.693671124 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.43210219 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.435665872 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.450667728 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.885866244 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.433198846 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.117557552 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.449014568 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.431260389 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.589247112 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.685777545 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.052567056 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.434913209 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.706658572 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.967565589 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.511958386 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.436455048 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.98345933 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.515999001 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.435007286 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.434301442 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.434946345 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.433043706 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.479723178 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.510595814 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.047872395 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.109100575 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.046276124 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.535901855 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.445285957 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.432565513 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.018146707 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.451763045 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.433021574 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.883576632 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.115916657 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.45170338 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.439408809 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.117939982 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.453723167 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.516210389 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.43909976 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.897090722 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.43378008 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.537546377 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.434154793 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.437160118 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.456470755 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.516621862 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.43650806 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.432827777 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.091678508 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.615837576 seconds)
  done (took 188.5873048 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.432981015 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.426445905 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.42937684 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.425718295 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.425652347 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.434424703 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.424788493 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.428790081 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.433042166 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.426739038 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.428167602 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.426059148 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.42685559 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.430381065 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.438480101 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.434788197 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.427139807 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.428243484 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.43204004 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.426818571 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.428177701 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.448029654 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.428160431 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.428695513 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.427690626 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.430107747 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.430718144 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.429943332 seconds)
  done (took 65.354638341 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.43581632 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.032992708 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.437362368 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.576210934 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.45980404 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.433609299 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.572977732 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.497221576 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.438056065 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.433230654 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.435814588 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.75608908 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.43864305 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.983034552 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.642176968 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.575253818 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.981220229 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.45694907 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.433998113 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.434766441 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.577468331 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.443528071 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.757440173 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.03480424 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.439785396 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.034704115 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.423717286 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.437354352 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.435885838 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.037438424 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.437035856 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.761325119 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.519772009 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.499796334 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.038894027 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.00952324 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.005274524 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.599974715 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.444619926 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.436780007 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.436420276 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.425218067 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.03948954 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.440345873 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.438955166 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.031564772 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.458462874 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.438806892 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.428214515 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.439210813 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.500945569 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.503179976 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.766131034 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.128127947 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.523142669 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.438544064 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.581153936 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.737927637 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.441303319 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.986664438 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.425492259 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.044167978 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.444165394 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.424017692 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.440504931 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.42948544 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.598624083 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.582422532 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.995563205 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.458413173 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.988561331 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.617326518 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.439195336 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.438714165 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.440177974 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.045185753 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.990750958 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.619706678 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.584282684 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.649773672 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.427451465 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.44095302 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.428502199 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.523354246 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.439137858 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.049055948 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.011089715 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.46319762 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.443495169 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.443343487 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.443560515 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.631496078 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.049264771 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.524971733 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.982899812 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.78569492 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.767770492 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.446266594 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.505785468 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.460855151 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.842601984 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.44445363 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.505848935 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.78260281 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.77020501 seconds)
  done (took 171.606236556 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.695645163 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.474191434 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.552398196 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.597989856 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.065621267 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.056980154 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.451365253 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.571323778 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.56921731 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.71095719 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.448874914 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.54689066 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.679340149 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.524163564 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.176283405 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.515684604 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.549032681 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.597481273 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.601609013 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.437763142 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.15299429 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.746254112 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.629947236 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.475383131 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.577685018 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.260666708 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.040242913 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.007989078 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.629318859 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.444682304 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.974318614 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.438622366 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.427878531 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.150842263 seconds)
  done (took 67.104829282 seconds)
done (took 637.085278153 seconds)
SAVING RESULT...
DONE!
