cset: moving following pidspec: 26710
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.044934202 seconds)
loading group "string"... done (took 0.612939304 seconds)
loading group "linalg"... done (took 9.710815101 seconds)
loading group "parallel"... done (took 0.196258136 seconds)
loading group "find"... done (took 1.558571897 seconds)
loading group "tuple"... done (took 2.288839744 seconds)
loading group "dates"... done (took 1.527232473 seconds)
loading group "micro"... done (took 0.238278823 seconds)
loading group "io"... done (took 0.601836573 seconds)
loading group "scalar"... done (took 48.224232557 seconds)
loading group "sparse"... done (took 14.31880231 seconds)
loading group "broadcast"... done (took 1.356902225 seconds)
loading group "union"... done (took 15.65219543 seconds)
loading group "simd"... done (took 5.649666056 seconds)
loading group "random"... done (took 11.20271271 seconds)
loading group "problem"... done (took 2.543630618 seconds)
loading group "array"... done (took 28.135452293 seconds)
loading group "misc"... done (took 1.206224918 seconds)
loading group "sort"... done (took 4.041198794 seconds)
loading group "collection"... done (took 23.945036932 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.76564922 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.15003882 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.227445877 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.216949018 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.245646984 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.165786676 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.178331615 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.609584966 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.028511908 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.235504958 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.161064748 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.616894785 seconds)
done (took 6.310294526 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.269779727 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.077998127 seconds)
    (2/2) benchmarking "String"...
    done (took 0.187245205 seconds)
  done (took 0.924285287 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.095812498 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.192852299 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.120875741 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.119199224 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.105562459 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.120020939 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.119058958 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.118555939 seconds)
  done (took 1.554292238 seconds)
done (took 3.508212051 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.888404088 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.894735359 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.554000738 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.179106911 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.215522612 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.188566911 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.330679633 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.165673498 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.134047315 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.113685083 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.218011354 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.369623737 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.534456648 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.049265559 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.096871922 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.131354899 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.102114272 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.695658321 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.092020337 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.141719871 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.614711981 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.123158931 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.119476868 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.131807299 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.211733431 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.139186344 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.179067044 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.097121167 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.688903944 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.110934356 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.247362589 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.088741379 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.183794048 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.265139749 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.086489637 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.114435697 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680217443 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.191762583 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.123540222 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.108718652 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.688866527 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08927823 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.255036139 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.114647132 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.120512054 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.199330495 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.127557468 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.098614425 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092668178 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.103524826 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.164475648 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.47597191 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.109803991 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.179732779 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.113266957 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.73097623 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.106030527 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.166442871 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.15530139 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.121094534 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.087061358 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.117596448 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.158350146 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.115376296 seconds)
  done (took 21.052711687 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.168697931 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.175592133 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098849475 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.162789266 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.157486865 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.085144746 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.104735209 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082366268 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.134484795 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.244261862 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.147058329 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.198564844 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.080732968 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.107833889 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.151971842 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.26028258 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.132772095 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.12993206 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.09019993 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.112430179 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.150109124 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.10139624 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.115996798 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.118345901 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.177524798 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.214673318 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.129732816 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128955639 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.105356222 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.124621802 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145452827 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.158892811 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.100284521 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.107700196 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.195954828 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125201488 seconds)
  done (took 5.710168635 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.232661822 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122845 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.250983677 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.188358045 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.157507959 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.190336882 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.151426796 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.313789502 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.269250859 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.194336519 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.136858388 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.134332444 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.119821663 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100807698 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.086232584 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.101624325 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.753644222 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.188696077 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.158968453 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.158383836 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10948677 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08718044 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.468807105 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.107010979 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.085440999 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.107581632 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.097638072 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.217782432 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108003205 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.416026415 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12663778 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.114890336 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137179151 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.213643964 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.128811169 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.154939904 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109191542 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.101685929 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.232935915 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.116356499 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.082342192 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.135823398 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138539304 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.145498244 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.105868482 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.117211855 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.256973787 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.091947396 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.127716934 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.175307002 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.223989778 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.145404794 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.085349082 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.400540673 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.103464632 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.111926957 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.103427347 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.31869319 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.14512707 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.087473037 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.10060675 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.108439194 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.084078081 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.455597969 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.097715871 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.898885689 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.089054399 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.193835936 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105015828 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096180465 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107678079 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105953286 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.10680104 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.16565344 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.102567325 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.100388611 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084918938 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.100040482 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.089207902 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.104701807 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.12646152 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105823364 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.084373099 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166420957 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.131570584 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.104910291 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130964861 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.110171008 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.099730453 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132932465 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086358865 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.104962597 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.182775354 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.111030282 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.086672961 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.126825243 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105548368 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.146690064 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.10571567 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.23245097 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.088376458 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.131145046 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.105444768 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.133234251 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.130991939 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102224201 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.090905835 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.099364262 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.085700107 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.169421744 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.090220313 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.102868775 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.105123746 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.101314974 seconds)
  done (took 25.508803455 seconds)
done (took 52.928150088 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.552936013 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.128259719 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.129251734 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.130403778 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.12914519 seconds)
  done (took 1.823401033 seconds)
done (took 2.5473111 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.394119577 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.201897509 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.12790882 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.195641285 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.111957678 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.219077223 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.185142304 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.12528945 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.215902144 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.107832062 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.21070513 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089791576 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.11235609 seconds)
  done (took 3.051301561 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.10529922 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.129175489 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090984381 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120907916 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.100639936 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10376354 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118517466 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.139360397 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102315049 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111861312 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084861821 seconds)
  done (took 1.926207204 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100718965 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.126350084 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.091547443 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117283563 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.102793963 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100016286 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11687155 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.112078205 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.117599269 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.11420554 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084962103 seconds)
  done (took 1.905914975 seconds)
done (took 7.596571481 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.246110534 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.440622421 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.163361786 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.232538918 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.414267139 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.265484798 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.659652375 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.180995902 seconds)
  done (took 13.524090151 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.178970238 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.106100886 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.092229222 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.108091449 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.091584808 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.105846328 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.106768701 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.091421694 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.104763028 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.091485347 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.106660917 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.104611509 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.092588629 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.106405472 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.091101304 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.106771172 seconds)
  done (took 2.482026726 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.141626263 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.140852899 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.097899133 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.118891052 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.110628062 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.097627073 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.114099958 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.112528435 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.09578575 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.111078242 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.117596795 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.1177148 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.101705768 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.10938867 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.117273062 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106240875 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.111748147 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.118513893 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.101438807 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.114685336 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.117170318 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.112718967 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.101047403 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.119084199 seconds)
  done (took 3.528437363 seconds)
done (took 20.259440818 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.187819724 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.106312487 seconds)
  done (took 1.024829695 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.160921383 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.162453834 seconds)
  done (took 1.05887899 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.136920818 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.089186389 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.151886221 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.126831065 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.106529093 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.090744205 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.144657024 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.105079692 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.105875159 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091473314 seconds)
  done (took 1.888407731 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.095485461 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110485629 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.118781458 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.156785427 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.119636234 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094921593 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.111609342 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.095432662 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111456433 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.106100048 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.114219631 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.117789088 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.114303369 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.131752543 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.11102975 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.102056725 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.120357282 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.113700956 seconds)
  done (took 2.788546868 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.090504496 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.107919009 seconds)
  done (took 0.940499997 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.217459207 seconds)
    (2/7) benchmarking "second"...
    done (took 0.105780373 seconds)
    (3/7) benchmarking "month"...
    done (took 0.110847536 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096565073 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.106235814 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.091309872 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.10701687 seconds)
  done (took 1.576633913 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.567693605 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.285386629 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.392848648 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.129884549 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.151613711 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.390275788 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.152156644 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.123318148 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.125190198 seconds)
  done (took 3.118170015 seconds)
done (took 13.130807051 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.098575124 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.177187091 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.638989151 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.113634613 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.106602628 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.1609447 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.334380356 seconds)
done (took 2.373510382 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.38599142 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.168233472 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.081585544 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.103265163 seconds)
  done (took 1.48406606 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.085638992 seconds)
    (2/2) benchmarking "read"...
    done (took 0.113876904 seconds)
  done (took 0.947657326 seconds)
done (took 3.188686263 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088636462 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.103005206 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.087990194 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.10187471 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.087224673 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.103099354 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.088505921 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.101851877 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.134478672 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.087840678 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.103145994 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088282041 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103154842 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103828977 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.088261307 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10174868 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.088131626 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102328895 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.088419426 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102506383 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087935618 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.103224187 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.103510221 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.089010387 seconds)
  done (took 3.124612943 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.113345267 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.107514569 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.112298828 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.095705523 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.113471366 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.112725718 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.114928857 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095248535 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.114091011 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.110371537 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099761351 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.116020723 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.110518898 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.100062477 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110133249 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.115398626 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.099558133 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112199917 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110747844 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100809597 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.114025556 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110483715 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100833266 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115147118 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.116763733 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100513803 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.110491713 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.111754628 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098848019 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.118312306 seconds)
  done (took 4.017972881 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097527789 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.102681499 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.093376171 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.118527526 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089450551 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.110250279 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.104657722 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.089907753 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.10666411 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.090630365 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.107251862 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.088635227 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.101752161 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.105612445 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092214801 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.107693643 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.101542681 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.101434404 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.085138869 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.106312847 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.106763429 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.08534826 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.105168478 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.089667856 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.105728283 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.085450011 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.105443893 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.104789752 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089775846 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.103931312 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.092507819 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.106802708 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089768391 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.115742295 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.10761007 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.088429908 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.111690538 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.087148725 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.110027285 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.104818869 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.089751644 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.108214169 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.091158608 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.115439741 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.093414365 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.109405367 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.092200772 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.111673 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.109794641 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099020764 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.105022026 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.090825119 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.112217017 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.111731829 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.096899788 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.10211592 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090994907 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.101278449 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.091807781 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.104878501 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.086818428 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.101255341 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.110613693 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090037536 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.121865651 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.115259641 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.086417183 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.108132763 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.092039673 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.10978813 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.108608852 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.099283468 seconds)
  done (took 8.01738523 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.104660214 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.118479607 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.092136568 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.106935072 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106474923 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091768712 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113810928 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110065797 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093199819 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115859089 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090161667 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105901061 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107242932 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091057571 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106868056 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.092188831 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.115720978 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107971943 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.089756119 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107272161 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107056933 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100218275 seconds)
  done (took 3.040189374 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.277012023 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101851755 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.164252023 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.126245187 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.134229229 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.129944694 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.115138683 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100492481 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115475277 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.122915453 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106621147 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116825685 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.135871543 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122573094 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10678333 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.125161186 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114315899 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.122341322 seconds)
  done (took 3.106962969 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.112023366 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.111674627 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.13627354 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093936041 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.111941691 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.111343449 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103118108 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.127097393 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.112556682 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.096370342 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.122487832 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113129969 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.096341783 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111716346 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112015812 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.095482112 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.110450593 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11150642 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10577284 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.120418531 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.120602331 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.122594807 seconds)
  done (took 3.229083483 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11118394 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111400686 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.151306334 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.098347902 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.10851461 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.108923159 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.09900582 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.109756399 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.118405834 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.092990328 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110518698 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.10884908 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.102889979 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.111461423 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.118089818 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09418341 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110389165 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.095269406 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109722237 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.109944887 seconds)
  done (took 2.954738821 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.19402299 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125442428 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108521093 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.1409038 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126998769 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110351235 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.140425177 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.126674725 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.125987541 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142262384 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109019461 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.125238205 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.141564892 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.135298161 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108377733 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13898274 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.141655517 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.140787812 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.128424587 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110372806 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.142682492 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.127481013 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.140953325 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.125045825 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108730008 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124437345 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124894556 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118427646 seconds)
  done (took 4.408065417 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091126865 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107430615 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.09040329 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.106009683 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.089599366 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.106078955 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.089340623 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.105573434 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089771469 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.106864288 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.106087094 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.090080373 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106460321 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090641684 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.107577524 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.09015822 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109058533 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.092407143 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108853388 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106430247 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.090020839 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107444275 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.090987801 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107801486 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090242727 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.109622106 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089360097 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107072379 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091444229 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107115336 seconds)
  done (took 3.760812576 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.105190745 seconds)
    (2/2) benchmarking "in"...
    done (took 0.137750489 seconds)
  done (took 1.021547481 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.101291309 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.129597258 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091355125 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110135355 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.120704845 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091631929 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120588114 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.120330339 seconds)
  done (took 1.669602096 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.163468987 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.164196651 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.097536305 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.122548476 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.163177848 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.154936472 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.16128377 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.11552503 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.094616448 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.106441092 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.16086436 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.106301774 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.09670651 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.112086854 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.097303452 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120818514 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.110360135 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103318647 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.118622796 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.111080277 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098395559 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.122198907 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.117735418 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103273873 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.108851678 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.118400508 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.102135271 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.123228115 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110872134 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.099773235 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.113207892 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092809639 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.1138239 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.115882688 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.092883773 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.162018581 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.125647569 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111906184 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.097913669 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.115615981 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121787077 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092712693 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.116958034 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.1139807 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100608936 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.115887299 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.11710804 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.09377091 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.106184237 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.09181863 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.110387774 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091721575 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.10841924 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.115991295 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.097992498 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.122904333 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.111600059 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.093372482 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.110813899 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.109561346 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.096561874 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.111621867 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.119130625 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.096396893 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.118666405 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.099558377 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114467355 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.111296446 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094473716 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.111633538 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.114369525 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113920955 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.118614564 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.117485063 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099194635 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.11179799 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094754184 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.117679417 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114306019 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.100182779 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.1166435 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.119902301 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100666429 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109777119 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.110552763 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.100521629 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.112533854 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.095809146 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.106857635 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.12703887 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.096720694 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.110661356 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.106840344 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.096635208 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.110745852 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.096570994 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.107855481 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.117079261 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.091429499 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.115919495 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100324817 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11551464 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.118669797 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100581965 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117649731 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.115726989 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.157329853 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093887958 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.111624114 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096126593 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117750067 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.109238874 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.101195974 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.109216483 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113382631 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.09252153 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.1169985 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.098648216 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.113506089 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.115953523 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.101110967 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.119039511 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.113803061 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.091920825 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.111558595 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.097934852 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.120800841 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.118428975 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.096286315 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.112503968 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.111948278 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.098695193 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.117447668 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.095736067 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117313915 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114045297 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.092918428 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.111981294 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.099416798 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.116814424 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.111563148 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.097617453 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.118004095 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.115821208 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.097120879 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.117069012 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.111420045 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.089908692 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.11793236 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.111605552 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094108962 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.122622922 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.09333814 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.113527412 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.112531618 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10373422 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.112860186 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.117796043 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095366668 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.117044779 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100400901 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.107711655 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.114353667 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.095472054 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.120618866 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.093707061 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.113072663 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.112030091 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.101701104 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.110682082 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.106987414 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.108129327 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.11282398 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100551867 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.113553708 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099202222 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.111433818 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.131447534 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.126445294 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100792507 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.117783405 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.098192966 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.117076618 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.116793166 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.098461183 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.118466627 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.118521311 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.095390138 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.11583392 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099549584 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.111401453 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.117560498 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096746079 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.120081863 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.109642638 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.094710034 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.108217957 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.098813957 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.119647455 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.117433211 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100246287 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.11379489 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097938546 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.123627978 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.113056621 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.098010063 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.109555249 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.126127043 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.104892712 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.118897954 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101808748 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.118618494 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11474956 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.094493737 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.124361886 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.114887581 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.098098545 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.113527015 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.091143907 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.108967253 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.12006612 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.09678891 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.112676865 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.092961762 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.119862594 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.12162384 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.096252967 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.11035935 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.118386946 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.104416456 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.112438755 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098986064 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.112287251 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.116839437 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108485046 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.109182814 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.11280636 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.103314354 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.117806662 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.111709353 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.099080932 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.114844094 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099950476 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.115290619 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.113819979 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095519354 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.120449544 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.097032632 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.110969427 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.11300704 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.096619798 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.111079633 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.095176058 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.117829758 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.113592694 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.095131841 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.123046311 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.11930306 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.099868703 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115812961 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.09917493 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.118863007 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.1194194 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096873066 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.118883638 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.112598136 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.090683556 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.113635166 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.091605974 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.113916459 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.11398628 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100023188 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.116487381 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.098101302 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.116392065 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.121049513 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.09582573 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.121597682 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.132777871 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.111027297 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.091212636 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.116825684 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09860444 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.1139653 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.114164177 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095657662 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.119612501 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099227713 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.121240199 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.114080168 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.09321351 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.118567498 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.113914397 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.101606578 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.120552791 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100898741 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.112784323 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.118382905 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.095235257 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.124162955 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.11154898 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.097914897 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.116921522 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.117472829 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.095958878 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.115619087 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.095346943 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.109108282 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.114584823 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.100265267 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.116846738 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100384106 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.117261559 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.115379973 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.095267991 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.112726733 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.1206622 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.097027167 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.120728498 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094723039 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.110623289 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.110240161 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100714221 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.118430348 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.120205905 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.094441171 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.116423062 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102021392 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.116079088 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.095082136 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.124151646 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.12299384 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101702998 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.125293831 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.111644806 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.097082233 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124164873 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.113127211 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.097964156 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.11532408 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.092132017 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.122299743 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.120532242 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.101758381 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.116552706 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.091291728 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.113821558 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.122413412 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.098243906 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.117222246 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.095733061 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.119205939 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.113471898 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098371934 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.120275919 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.099066213 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.120240128 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.119484832 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099199875 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.113748409 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.1191375 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.094508609 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.111885747 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.091699446 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.115303488 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.121041578 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.092233595 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.118901538 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.099815576 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.114713704 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.11665359 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.099751277 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.114105426 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.122674881 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099917825 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.116896923 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107566623 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.114176037 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.116974782 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.099101444 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.119141963 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.091936223 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.116951105 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.117918894 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103722235 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.115810621 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.121510535 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.099770076 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118695701 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.096086678 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.118545626 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.11946435 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101799723 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.112392812 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.101962208 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.122373612 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.115654936 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.096715946 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.115966347 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.113166245 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.099615055 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.121347384 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.097575317 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.123877141 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.120607977 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.09724707 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.116265257 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.119603469 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098597349 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.123200341 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.114162663 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.102165603 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.111077558 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.103719496 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.117359816 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.122162676 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.095717056 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.114161146 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.119411231 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100713362 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.117569159 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.103066295 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.121087296 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.112377592 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.091846918 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.117659779 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.096880027 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.126667123 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.124066478 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.09798 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.116323444 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.11779126 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.095345319 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.124190441 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.094084315 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.115102834 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.120002344 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.103369743 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.116604005 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.114000534 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.098435639 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.118164679 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.122196557 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.097796941 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.113262627 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.099005941 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.121614352 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.116899432 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.095534178 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.115729147 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10348922 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.118799074 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.1150593 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.093326046 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.127233965 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.123024818 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103584757 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.11501383 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.120358337 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.097341344 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.117646544 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.104449559 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.117489739 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.120009571 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.097783134 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.120848751 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.127174735 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.091792257 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.115925277 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.130097868 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100535715 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.122191151 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097782628 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.118121103 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123169865 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103067822 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.117241302 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.093306345 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.11396445 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.118000621 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.093200832 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.117335385 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.127196558 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.100136531 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.117311934 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100290135 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.119422049 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.117051524 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097511164 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.112534005 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104179049 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.116715998 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.124493291 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.093573212 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.112941961 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098164175 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.121547253 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.120579987 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.101749801 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.117470465 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098840735 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.11472094 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.117615768 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.104814024 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.119606439 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.121938254 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.099629682 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.118255331 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.098843609 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.128153997 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.116220771 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.099151135 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.130826908 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.122478292 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101354769 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.12111941 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.126119851 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103662038 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.119605356 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.10363806 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.11807154 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.119003422 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104284615 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.124915308 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.132921719 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100671977 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.113267556 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.120904951 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.098410908 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.114648877 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.105183329 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.124748717 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.123302665 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.101483062 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.115720769 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.125684535 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107250548 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.120910856 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.117020138 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.102058067 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.120611047 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097702199 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.119464844 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.116915317 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105241088 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.125043022 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101221863 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.124819893 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.113813936 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.108919615 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.125433591 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.124457218 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.097591916 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.115098997 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.09402934 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.118860394 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.124997408 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.103698178 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.12036401 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.0997678 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.121645117 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.121035447 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.101692805 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.119080338 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.10534406 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.122034636 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.116602078 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.103217395 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.118962196 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.121889401 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.096728778 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.122620176 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.105121577 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.122125661 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.130616852 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102437897 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.120132747 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.117266837 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101064459 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.119327419 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.102575867 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.120430225 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.11745194 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.094525335 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.122899679 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104181132 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.120189743 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.124702779 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10716424 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.118612976 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.123587139 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106862554 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.123278731 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098219578 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.122297759 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.119460694 seconds)
  done (took 66.902500734 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.181842082 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10681584 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119971738 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098406002 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.170350874 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100425597 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118531317 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101551309 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.121866692 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.13525546 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.099063836 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120048542 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.146172147 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.153336901 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.1501572 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.135448847 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098826395 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.122863347 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.121651928 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107204928 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.149105584 seconds)
  done (took 3.511522369 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.125590986 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.140931884 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.138613278 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.142145587 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.131275805 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.136762402 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.118514186 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.138317177 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.141799307 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.132859215 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.143404879 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.139169064 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.133213692 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112034895 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.133936026 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.133224322 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.143505391 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.132976471 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.11708795 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.141184863 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.132670661 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.139974296 seconds)
  done (took 3.803739625 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.107946663 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.122189699 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.104893479 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.11831998 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102356614 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.118964207 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.128749278 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.097662407 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.128928987 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.119724039 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.094585965 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.119741405 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104016775 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.118748643 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.096217998 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.11724261 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.128833132 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.101992834 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.123908405 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.097716994 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.137593601 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.119201456 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.100320369 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.116537182 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.134355593 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104095575 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.123080856 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.122592396 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.095025701 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.124615669 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.09922537 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.122510127 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.123087464 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.095177031 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.117535342 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102014283 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.122503956 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.098557434 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.118744013 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.124468325 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.099563005 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.126042485 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.128935042 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.100225276 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.119766628 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.100842662 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.122645589 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.119455803 seconds)
  done (took 6.329558945 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.163636531 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.179025021 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.13263511 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.165983444 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.151991609 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.119569719 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.124783919 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.163514336 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.124687971 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.104145807 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.146879294 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.145501126 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.128405421 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.13222002 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.129400351 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106870764 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.129584623 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.126310612 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.116400704 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.12649824 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.137797724 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.130010286 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.123352941 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.144972711 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.13294165 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.126604104 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106681436 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.12967421 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.143031975 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.13665538 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.133657213 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112717152 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.145399125 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.129196057 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.127301748 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106870537 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.144787537 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.129131583 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.128686381 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.104268137 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.127696635 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.132716225 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.129205468 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.147506572 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.107937338 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.130635282 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.128018477 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102431805 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.143728379 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.128937473 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.139798569 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.147312677 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110616187 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.130667445 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.133072623 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.147560378 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.107720747 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.125189856 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.129168676 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.145004626 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.105135816 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.130412641 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.148072447 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.130087331 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.137085552 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.131713348 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.137856705 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.134396826 seconds)
  done (took 9.941093504 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.139760075 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.133426647 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.147132393 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.14803183 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132474601 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111203384 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.132750811 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.135383725 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.137999485 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.127125179 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.137592238 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.255062379 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.108724302 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.140435474 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.133256094 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.132610252 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109288035 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132460147 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.134452651 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112842132 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.130860362 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.147137786 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.132639662 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.147454865 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.150426893 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107316708 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.133439862 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.132843088 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.148656598 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.131002659 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149503476 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.11138777 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.13296488 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.148179378 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.150580458 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.132252102 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102019283 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13366491 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.13477759 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110330494 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.129438676 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.148215409 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.135838373 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.111747011 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132025814 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.133810471 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.148761564 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.150185099 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.139991776 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120833635 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.135516116 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.147441783 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134116641 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.132629702 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.125534815 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.178025095 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.147843675 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125205758 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13304804 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.14741001 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.147882372 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.159034611 seconds)
  done (took 9.347931387 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100829743 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.120712845 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.09984829 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.120811093 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099821707 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.122618965 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099446029 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.120027143 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099753647 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.121071748 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121955794 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099884793 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123985488 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09882422 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.121714092 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099806407 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.121230187 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099373626 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.121515888 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.121342104 seconds)
  done (took 3.111826392 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.115095341 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.147879446 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.127148644 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113667166 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.127286365 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.135850308 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.104011635 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124571557 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.126381469 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104470187 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.13954915 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.138811758 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.125668727 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.114166532 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.139863805 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.136105927 seconds)
  done (took 2.897761901 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.131433287 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.147266993 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.186463156 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.130435466 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.127654143 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.112591523 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.127211789 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126505022 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101567041 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.134681164 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.107769077 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.130560764 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.124864701 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.104606078 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.125841825 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.129916635 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102135619 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.131112953 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105009896 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.209292965 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.111150636 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.131823977 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.129762756 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.107342211 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.128925821 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.133773461 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.11253583 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.126840979 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.129975637 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105188093 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.130417953 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.138679168 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.106090204 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.131595512 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.127220439 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.107789947 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.128036485 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.104545728 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.130079501 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.127954582 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.105645202 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.129192313 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.126709896 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107013014 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.125196259 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106399773 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.124506327 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.135701333 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.108061647 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.129600791 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.127875213 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.111357365 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.132333568 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.138155502 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.113941233 seconds)
  done (took 7.751223919 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.121357272 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.129709184 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.142941755 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100323075 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.12990334 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.10626911 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.12757936 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.130961139 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106552582 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.124052813 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.129706759 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105986742 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.131233889 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.129670792 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107130866 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.128862819 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101638996 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.128163574 seconds)
  done (took 3.073927907 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.113723034 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.126236451 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.109928336 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.126269174 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.126549748 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104469301 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.12572002 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103035621 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123628499 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.125816829 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104553828 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.126730504 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103121857 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.124664654 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.125807886 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103264912 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.127101739 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102170781 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.125488987 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.124215585 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104054276 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.124358838 seconds)
  done (took 3.472989651 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.11893808 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.18721432 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.135599002 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.197993036 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.125600153 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.124464038 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.114354829 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.127705287 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.145784315 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.102850848 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.123173629 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.124426238 seconds)
  done (took 2.520144299 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136204838 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.171596341 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127488357 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103846896 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141923749 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133537009 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135327267 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112165263 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148533969 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.150955525 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132798886 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146382904 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148206055 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.149302046 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140539846 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119042627 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134142061 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133508492 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10623057 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.180813906 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111153538 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146467068 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133053307 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134048883 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111737676 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.147623496 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146396228 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.15251441 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134123151 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147006964 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142304239 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113228647 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145708936 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.15233547 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127162303 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145718296 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111279341 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.158936979 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141990377 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14923402 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.127539696 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140551968 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123208047 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.14391701 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146270391 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132982532 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143308042 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134161477 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112273309 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1690794 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143139846 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.14961394 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14182601 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147284939 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148582039 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167711598 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.153623531 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.15041143 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14137282 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.153156215 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.14986235 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142036781 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128404083 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152692025 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141388811 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.152544316 seconds)
  done (took 10.138577313 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.177749652 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108045503 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136189073 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.155861211 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.150015975 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134050042 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112133062 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134493378 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136319995 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107408314 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.215693023 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11270308 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150612253 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.150324341 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136445907 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134863821 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112194386 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.151107865 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131728273 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168816573 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133716059 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.151783589 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151702459 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.149189667 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.151945662 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119153865 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138135077 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136601745 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133985596 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112437933 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144608122 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136935086 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.151073556 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107693576 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151545807 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135760078 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135033936 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.143743486 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112252704 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142280184 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.150145244 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.161908019 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13649504 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13495932 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.153626585 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113867537 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135665676 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132592797 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112782606 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131538835 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.153956446 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.155730235 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.15511649 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.152532361 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133728721 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112688879 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134284954 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137194878 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134959431 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118382264 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151759189 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135214889 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170790972 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138109334 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135001241 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.150646891 seconds)
  done (took 10.095778477 seconds)
done (took 181.998421752 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.175476519 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.195060979 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.170564339 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.16334932 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.122333022 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.159088154 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.132677021 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.169332355 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.121644087 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.098150085 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.12140299 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.127317639 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.165236984 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.122447894 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.098910675 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.126362813 seconds)
  done (took 3.16919528 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.230326923 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.325222072 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.142869463 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.127358714 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.108281061 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.125089131 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.126441781 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.105673603 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.12534614 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.114303124 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.12490784 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.126978805 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.115832044 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.123342995 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.124738846 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.102420261 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.13766594 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.125338004 seconds)
  done (took 3.423819862 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.132221171 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.170482686 seconds)
  done (took 1.215363563 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.144618892 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.235168231 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.31408445 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.186003737 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.155858021 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.152032737 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.187871307 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.14566668 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.219719093 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.150880975 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.149918632 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.106771509 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.15800966 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.13790968 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.142041552 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.107878853 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.16092115 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.140423965 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.138299092 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.109321271 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.153608867 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.131117992 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114542126 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.138920207 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.208657311 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.150767055 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.131641295 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.131811077 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.109222515 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.138657172 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.13780365 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.149904257 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.147638511 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.199897871 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.136738118 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.19782082 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.138367222 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.129644468 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.117388172 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.128588955 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.134827593 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.135600701 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.124474751 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.129325255 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.131325177 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.116586851 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.131022377 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.131640713 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.141650977 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.118131549 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.139359675 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.1378954 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.219404103 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118748267 seconds)
  done (took 8.956312808 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.947125217 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.173775617 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.104987802 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.108793764 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138962753 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146737216 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.95685865 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.13033182 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.300179625 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.183963763 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.147725429 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.143290347 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.28974069 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.288545525 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.232897416 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.39749934 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.806233907 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.143451926 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.13704433 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.182229398 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137614599 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.162178346 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.1526762 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.441908671 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.130763072 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.127786979 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11359353 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.142537364 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.219795785 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.104637258 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.132339096 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.218308574 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.326610833 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.252308075 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.129193278 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.103214445 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125852414 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.206688914 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.323261458 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.292460553 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.199930195 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100679169 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.12693531 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.143374981 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.152573219 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101116858 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.224214825 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.211709253 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.234176752 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108975517 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.141834043 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.139738241 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.14076028 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.196258378 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.125299324 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.399696245 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.396939458 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.128166834 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138744686 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.148540209 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.3195713 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104835514 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.304529724 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.157121677 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.267301134 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.10456009 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.871227555 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.225522212 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.104546792 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.139690277 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.137253625 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133295022 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.119718843 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.217540692 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.406756979 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.146257623 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.110495371 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127041622 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.272651693 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.1036774 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.127767884 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.202709506 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13206091 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.138257286 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.146722884 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120929746 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.231255642 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.283333952 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.14444857 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.138384225 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.135061586 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.119087931 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.130053491 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.269250276 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.277030349 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.194461071 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.273800627 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.144038088 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.20128529 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.226683438 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.141061332 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.209346566 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.138706947 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.147195781 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143324253 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.273360603 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.170803509 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.105254728 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.133154295 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.138049457 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.174761869 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.130283344 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.113235489 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.227651237 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.511411214 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.202485171 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.126365706 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108488715 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138886534 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.197464684 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136330276 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.316831082 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140366643 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.226067485 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.114862285 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.12538689 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.139465203 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.20308872 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.145132614 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.140189628 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.143837363 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11519428 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.309768895 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.275695707 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.145374691 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.28796336 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.205508382 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.140483267 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.212047022 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13994503 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.204920032 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.139808799 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.144589123 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131468223 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.853928151 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.144713333 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.114891558 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133728982 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.217953819 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127736459 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105587972 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.127332747 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.101294156 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.882334917 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107960162 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.125018881 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.105326843 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.142158995 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.13862329 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11365088 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.136132732 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.222513799 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.291394701 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.142585696 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.137482666 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.105252818 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.220355981 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.10720706 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.129312388 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.104295298 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.129329657 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.140262108 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.110625419 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129369147 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.232272292 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.196732141 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.27862352 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.580823724 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.129053927 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.105631288 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.310826253 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105018726 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.363366832 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139066178 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.282866931 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.231356081 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.124837201 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.397956179 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.206282518 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.242178402 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.109233224 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.234285454 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102986521 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.137980481 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.199789433 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.129646753 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.139097522 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.19628121 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.148993747 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.146748874 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.217087775 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.129440204 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.267443692 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.125786874 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.207207445 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.131746496 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.142690972 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.365433365 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.127894904 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.151553124 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.199890078 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134145619 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.105100229 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.65206865 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.128037893 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.118294747 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.140448289 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.30206628 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.20413631 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.13953611 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.141325795 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121626087 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.224978058 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.249671073 seconds)
  done (took 51.977244099 seconds)
done (took 69.64837559 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.346679549 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.302339856 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.365629423 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.258007969 seconds)
  done (took 2.30583559 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.265280757 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.181924229 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.239458005 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.103692867 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.250997053 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.102324841 seconds)
  done (took 2.094639449 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.586012066 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.48110124 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.410504218 seconds)
  done (took 2.435912965 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.283472013 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.291690106 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.38888916 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.524749522 seconds)
  done (took 2.585409799 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.30961452 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.129209411 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.148274182 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.204570309 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.283361357 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.304819323 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.176621688 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.230303843 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.128550679 seconds)
  done (took 2.923213172 seconds)
done (took 13.30113648 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.17044916 seconds)
    (2/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.122737091 seconds)
    (3/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.391661858 seconds)
    (4/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.119812342 seconds)
    (5/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.294079979 seconds)
    (6/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.218129157 seconds)
    (7/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.112572495 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.187603422 seconds)
    (9/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.321716353 seconds)
    (10/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.195289666 seconds)
    (11/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.149736376 seconds)
    (12/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.11144349 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.150226047 seconds)
    (14/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.232822641 seconds)
    (15/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.145327844 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.22421193 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.152345928 seconds)
    (18/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.243797055 seconds)
    (19/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.18455848 seconds)
    (20/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.24538808 seconds)
    (21/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.139139518 seconds)
    (22/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.286835629 seconds)
    (23/286) benchmarking ("sort", BigInt, true)...
    done (took 0.280827455 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.251043665 seconds)
    (25/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.236326127 seconds)
    (26/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.250413655 seconds)
    (27/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.23203644 seconds)
    (28/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.136723185 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.138592521 seconds)
    (30/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.223783455 seconds)
    (31/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.307356149 seconds)
    (32/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.124297925 seconds)
    (33/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.346085103 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.111270924 seconds)
    (35/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.347985673 seconds)
    (36/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.226511537 seconds)
    (37/286) benchmarking ("sort", Int64, true)...
    done (took 0.301328114 seconds)
    (38/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.141918371 seconds)
    (39/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.124907356 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.169372338 seconds)
    (41/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.13539638 seconds)
    (42/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.095795986 seconds)
    (43/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.169290493 seconds)
    (44/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.187056396 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.116680212 seconds)
    (46/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.273249568 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.126166678 seconds)
    (48/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.232240017 seconds)
    (49/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.140368386 seconds)
    (50/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.111476716 seconds)
    (51/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.147761518 seconds)
    (52/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.136129765 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.111200548 seconds)
    (54/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.139507581 seconds)
    (55/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.178030494 seconds)
    (56/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.185502726 seconds)
    (57/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.171167958 seconds)
    (58/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.182165351 seconds)
    (59/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.352250962 seconds)
    (60/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.321872639 seconds)
    (61/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.137010734 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.172959539 seconds)
    (63/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.168704113 seconds)
    (64/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.151172384 seconds)
    (65/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.178168592 seconds)
    (66/286) benchmarking ("sort", Float64, false)...
    done (took 0.196236422 seconds)
    (67/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.2709389 seconds)
    (68/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.282177618 seconds)
    (69/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.186368923 seconds)
    (70/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.154886534 seconds)
    (71/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.23441276 seconds)
    (72/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.122110154 seconds)
    (73/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.216506543 seconds)
    (74/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.192227091 seconds)
    (75/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.201509315 seconds)
    (76/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.137448979 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 0.102933091 seconds)
    (78/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.149582088 seconds)
    (79/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.097730844 seconds)
    (80/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.124146019 seconds)
    (81/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.185558467 seconds)
    (82/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.114747742 seconds)
    (83/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.123640639 seconds)
    (84/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.101433247 seconds)
    (85/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.142582616 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.137808402 seconds)
    (87/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.117742596 seconds)
    (88/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.13663502 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.136862925 seconds)
    (90/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.209424112 seconds)
    (91/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.114635459 seconds)
    (92/286) benchmarking ("sort", Int8, true)...
    done (took 0.298345363 seconds)
    (93/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.097470932 seconds)
    (94/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.272936635 seconds)
    (95/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.144774551 seconds)
    (96/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.135962221 seconds)
    (97/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.101433634 seconds)
    (98/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.151840265 seconds)
    (99/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.113341941 seconds)
    (100/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.141882497 seconds)
    (101/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.119585605 seconds)
    (102/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.094724547 seconds)
    (103/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.175297526 seconds)
    (104/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.11154977 seconds)
    (105/286) benchmarking ("sort", Float64, true)...
    done (took 0.30664468 seconds)
    (106/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.14020796 seconds)
    (107/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.109867812 seconds)
    (108/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.128089439 seconds)
    (109/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.121896164 seconds)
    (110/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.146887426 seconds)
    (111/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.148793049 seconds)
    (112/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.11190911 seconds)
    (113/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.219905974 seconds)
    (114/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.220157097 seconds)
    (115/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.218011977 seconds)
    (116/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.124072976 seconds)
    (117/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138700007 seconds)
    (118/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.141126107 seconds)
    (119/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.156233171 seconds)
    (120/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.189842977 seconds)
    (121/286) benchmarking ("sort", Bool, false)...
    done (took 0.21443271 seconds)
    (122/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.121243156 seconds)
    (123/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.137448528 seconds)
    (124/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.152396406 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.110847844 seconds)
    (126/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.140460747 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.151553074 seconds)
    (128/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.115689757 seconds)
    (129/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.149437632 seconds)
    (130/286) benchmarking ("sort", BigInt, false)...
    done (took 0.260266144 seconds)
    (131/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.188436629 seconds)
    (132/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.122755255 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.106432083 seconds)
    (134/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.139939991 seconds)
    (135/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.162586886 seconds)
    (136/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.110359152 seconds)
    (137/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.147338837 seconds)
    (138/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.146238732 seconds)
    (139/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.096844086 seconds)
    (140/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.121925972 seconds)
    (141/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.119139705 seconds)
    (142/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.125542479 seconds)
    (143/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.23287114 seconds)
    (144/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.109995158 seconds)
    (145/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.147503493 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.148539154 seconds)
    (147/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.112096805 seconds)
    (148/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.149755294 seconds)
    (149/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.136866085 seconds)
    (150/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.110155354 seconds)
    (151/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.150185356 seconds)
    (152/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.219546094 seconds)
    (153/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.21738391 seconds)
    (154/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.124969867 seconds)
    (155/286) benchmarking ("sort", Float32, false)...
    done (took 0.198694064 seconds)
    (156/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.220392579 seconds)
    (157/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.162397265 seconds)
    (158/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.09443787 seconds)
    (159/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.138708855 seconds)
    (160/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.22014686 seconds)
    (161/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.119863343 seconds)
    (162/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.17116818 seconds)
    (163/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.153043984 seconds)
    (164/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.158511942 seconds)
    (165/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.111649736 seconds)
    (166/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.140950257 seconds)
    (167/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.098584233 seconds)
    (168/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.140580718 seconds)
    (169/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.096759268 seconds)
    (170/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.128014913 seconds)
    (171/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.111912794 seconds)
    (172/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.148137412 seconds)
    (173/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.129415616 seconds)
    (174/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.219062226 seconds)
    (175/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.121633878 seconds)
    (176/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.127524828 seconds)
    (177/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.160698983 seconds)
    (178/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.128647966 seconds)
    (179/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.09723982 seconds)
    (180/286) benchmarking ("sort", Int8, false)...
    done (took 0.250015345 seconds)
    (181/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.113965598 seconds)
    (182/286) benchmarking ("sort", Bool, true)...
    done (took 0.300281222 seconds)
    (183/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.141993757 seconds)
    (184/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.098662372 seconds)
    (185/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.125460266 seconds)
    (186/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.116436798 seconds)
    (187/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.12214789 seconds)
    (188/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.111458792 seconds)
    (189/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.150699417 seconds)
    (190/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.158454826 seconds)
    (191/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.187742628 seconds)
    (192/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.101745423 seconds)
    (193/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.131877293 seconds)
    (194/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.096660188 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.140458762 seconds)
    (196/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.152828768 seconds)
    (197/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.126892437 seconds)
    (198/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.140983271 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.139829411 seconds)
    (200/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.104418075 seconds)
    (201/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.141650784 seconds)
    (202/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.097555958 seconds)
    (203/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.13951938 seconds)
    (204/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.096618499 seconds)
    (205/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.131874205 seconds)
    (206/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.095422003 seconds)
    (207/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.139050256 seconds)
    (208/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.116167102 seconds)
    (209/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.140443305 seconds)
    (210/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.140996104 seconds)
    (211/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.096607093 seconds)
    (212/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.188120724 seconds)
    (213/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.14324983 seconds)
    (214/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.223913633 seconds)
    (215/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.095603474 seconds)
    (216/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.140505941 seconds)
    (217/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.131926874 seconds)
    (218/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.131521653 seconds)
    (219/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.235275802 seconds)
    (220/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.098118552 seconds)
    (221/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.168794798 seconds)
    (222/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.150317652 seconds)
    (223/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.215843226 seconds)
    (224/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.103222207 seconds)
    (225/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.125229923 seconds)
    (226/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.114337897 seconds)
    (227/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.131300078 seconds)
    (228/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.11383149 seconds)
    (229/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.143181333 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.139203505 seconds)
    (231/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.103897524 seconds)
    (232/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.131508031 seconds)
    (233/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.098538674 seconds)
    (234/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.167434786 seconds)
    (235/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.149565355 seconds)
    (236/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.142168557 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.139381636 seconds)
    (238/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.100566667 seconds)
    (239/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.1244209 seconds)
    (240/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.099802415 seconds)
    (241/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.130719649 seconds)
    (242/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.125399707 seconds)
    (243/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.098928408 seconds)
    (244/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.21814689 seconds)
    (245/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.098873264 seconds)
    (246/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.139886091 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.154793132 seconds)
    (248/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.105314695 seconds)
    (249/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.129296709 seconds)
    (250/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.096107073 seconds)
    (251/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.121799779 seconds)
    (252/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.098337264 seconds)
    (253/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.13907974 seconds)
    (254/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.096801661 seconds)
    (255/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.14007561 seconds)
    (256/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.097253921 seconds)
    (257/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.215086993 seconds)
    (258/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.123266749 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.119729775 seconds)
    (260/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.153825678 seconds)
    (261/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.141709659 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.110018416 seconds)
    (263/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.140885936 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.11094473 seconds)
    (265/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.154892026 seconds)
    (266/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.123212276 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.127664545 seconds)
    (268/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.216113594 seconds)
    (269/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.126145197 seconds)
    (270/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.114008903 seconds)
    (271/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.170536259 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.141932458 seconds)
    (273/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.099370303 seconds)
    (274/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.122165443 seconds)
    (275/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.110039727 seconds)
    (276/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.145614672 seconds)
    (277/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.144672195 seconds)
    (278/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.11241957 seconds)
    (279/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.126514728 seconds)
    (280/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.11188198 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.142270974 seconds)
    (282/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.097520412 seconds)
    (283/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.123008722 seconds)
    (284/286) benchmarking ("sort", Float32, true)...
    done (took 0.277995638 seconds)
    (285/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.143649165 seconds)
    (286/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.13292604 seconds)
  done (took 45.997396504 seconds)
done (took 46.965083155 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.134431824 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.575354258 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.120528749 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.209394207 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.147625174 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.148921126 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.122094776 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.152058803 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.151748272 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.151908171 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.121043954 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.131449861 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.115973506 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.143532419 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.149355941 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.208336037 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.146836526 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.111962942 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.135858929 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.114441989 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.13539813 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.135462277 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.114950215 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.132627183 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.146978838 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.123005923 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.140313004 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.116477159 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.110674611 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.133412309 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.113976564 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.141495895 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.134986564 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121273942 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.144798652 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.108441156 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.146091536 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.149828775 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.116292951 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.1375901 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.139999888 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.110482206 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.140514344 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.146278822 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115247544 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.142338506 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.109489171 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.154382951 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.209743632 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139403964 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.113789421 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.144872992 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.149616607 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117701964 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.141948369 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.13591676 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.11861511 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.209957707 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.137091 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.138302562 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.114246302 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.147512402 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.141676835 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.109565902 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.13626001 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.115799195 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.151366619 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.142010756 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.115810976 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.146004739 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.131346615 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.110294681 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.14247857 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.106188286 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.143410136 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.143589445 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.111176936 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.14141808 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.112445666 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.139222958 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.144853262 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.1076544 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.143754309 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.142159242 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107660102 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.133168329 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.113638991 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.139357363 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.14347228 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.109919857 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.138924422 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.112200511 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.144376413 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.151155883 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.117192843 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.146575201 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.137763558 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.111788028 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.145888011 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.142220797 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.10523596 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.135386234 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.117950253 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.138047854 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.115619539 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.147345222 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.135192223 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.111834316 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.144749528 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.144048617 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.12736854 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.144622659 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.140596688 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112574582 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.140180983 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.146763704 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.115386049 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.134862626 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.107820817 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.139857718 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.143235148 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112296729 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.135206626 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.147564342 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125338192 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.132238513 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115178532 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138359761 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.138443706 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.119398099 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.138860907 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.108070067 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.141282504 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.139373272 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109249683 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.134706896 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118669674 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.135601274 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.138137128 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.134350636 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.138356728 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.119631135 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.143697278 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.146230888 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.11540751 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.132337639 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112236224 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.136524228 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.144596051 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.111807417 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.142531296 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.133108673 seconds)
done (took 21.793507139 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.119876245 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.202157745 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.21110661 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.243102532 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.17255244 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.128910762 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.159813882 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.167069421 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.155357966 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.135783784 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.177212605 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.167493886 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.221682202 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.152243572 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.156264957 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.116919602 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.152890855 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.145734552 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.219349287 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.164128873 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.175386431 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.124261685 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.17815326 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.157988714 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.144722967 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.167087842 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.119933815 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.14573115 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.144492271 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.133083211 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.164549638 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.143997025 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.118485901 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.16034364 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.154935016 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.122921649 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.156177577 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.144636397 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.142642361 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.115779329 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.15992453 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.155691783 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.115278833 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.156584038 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.145209349 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.152956291 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.125187462 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.150966922 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.147452461 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.119639284 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.146656442 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.176137215 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.152451714 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.129983857 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.15017408 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.150207229 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.124306009 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.168614268 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.145882139 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.123056692 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.14250302 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.145446789 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.121416271 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.174345658 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.145857403 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.150867606 seconds)
  done (took 11.096035528 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.140900528 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.178221106 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.153922759 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.153408977 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.151024063 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.107784741 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.133032953 seconds)
  done (took 2.063885153 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.112924871 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.21183719 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.211959625 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.239862987 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.204719356 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.22302253 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.160110165 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.108278346 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.177639096 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.146930768 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.213256302 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.245018509 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.145652397 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.156562172 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.217236478 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.135222974 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.221528923 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.107793214 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.151598019 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.215292411 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.154362682 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.170582361 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.152599542 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.109872123 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.206432154 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.138176376 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.268791316 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.155203764 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.142691842 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.118599104 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.150218189 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.224111135 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.207082702 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.154361938 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.141497921 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.210957035 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.207494534 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.121823852 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.251498335 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.114335048 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.207471921 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.150086421 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.149672395 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.150438039 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.121074646 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.193303438 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.15447388 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.150858707 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.119350742 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.213817649 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.150214992 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.207389578 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.1456197 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.121437905 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.152016585 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.15165581 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.154558908 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.121435969 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.213965872 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.152280739 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.207834928 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.208557127 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.207260166 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.237645936 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.131621313 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.239252877 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.206986008 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.119032255 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.146136854 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.149256608 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.21032591 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.120463024 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.1517706 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.195005132 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153156974 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.211096148 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.21039599 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14585127 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.123298783 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.143544819 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.145553082 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.108768589 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.195912757 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.149866785 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11651426 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.160612504 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.151544421 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.150270773 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.112900493 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.163744387 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.148986186 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.151484781 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.126250798 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.148623518 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.155421938 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.214275037 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.150449056 seconds)
  done (took 17.308850235 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.114921159 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.138194003 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.116608849 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.139294262 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.139344736 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.112048296 seconds)
  done (took 1.831964467 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.147837807 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.155602286 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.161882534 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.152541717 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.208401596 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.219014846 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.221017991 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.150097132 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.167872733 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.133833403 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.218015551 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.252895129 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.216980673 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.15400404 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.220461796 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.126668512 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.255541736 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.122248686 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.162966835 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.148669609 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.157811843 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.126471848 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.146711254 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.212442772 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.155458711 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.12455032 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.154763576 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.161344354 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.159308982 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122801475 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.155441568 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.154758589 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.147145831 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.122969008 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.252457572 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.119439701 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.14813298 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.156980041 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126069201 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.159037067 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.225269965 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.148647551 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.161522159 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.158353981 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122280248 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.147930284 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.158711751 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.15139083 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.222589072 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.157806361 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.130363549 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.152736433 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.155238583 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.157112695 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.119566077 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.151865784 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.158662645 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.222403794 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.154861896 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.11868329 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.155659448 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.156146189 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.151602147 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.129307577 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.155576678 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.158382206 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.147618507 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124084192 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.148412644 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.152875288 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.13130904 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.157440823 seconds)
  done (took 12.685630479 seconds)
done (took 46.031392248 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.773763253 seconds)
  done (took 1.844593534 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.026491068 seconds)
  done (took 2.099525713 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.705947644 seconds)
  done (took 19.822285383 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.625862486 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.706251061 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.055156681 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.193290919 seconds)
  done (took 3.653378376 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.043287268 seconds)
  done (took 2.138339109 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.385418778 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.28170097 seconds)
  done (took 1.74614262 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.959570988 seconds)
  done (took 2.051170123 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.242825269 seconds)
  done (took 3.333579389 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.421695424 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.220528127 seconds)
  done (took 1.740613612 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.714943822 seconds)
  done (took 1.807519678 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 31.326293582 seconds)
  done (took 32.420765319 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.274738805 seconds)
  done (took 1.383866718 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.340502655 seconds)
  done (took 1.437055744 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.849408112 seconds)
  done (took 4.948079645 seconds)
done (took 81.512449246 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.125413856 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.151913598 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.12438219 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.152636619 seconds)
  done (took 1.641987343 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.135162666 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.152433066 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.15536747 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.122686374 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.161709261 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.151698263 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121953206 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.158476547 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.150120052 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.125230814 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.152627924 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.150917207 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.124576798 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.150645984 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.148201096 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.126163144 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.156035464 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.151534278 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124491513 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.152418098 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.149759252 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.125017162 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.154049238 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.151467895 seconds)
  done (took 4.558434116 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.126223692 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.14323332 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.117541926 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.143174236 seconds)
  done (took 1.63103842 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.135253371 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.169244637 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.166311721 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.129056136 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.168164915 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.165621597 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118127031 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.147761496 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.148141765 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.12982383 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.149870319 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.171152675 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.167201846 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.125098945 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.160771839 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115091812 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.157818818 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.167987205 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.158702177 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.131149663 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.146616488 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.130368978 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.151733901 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.163768636 seconds)
  done (took 4.681030981 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.239812579 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.135505402 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.180753568 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.208111679 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.179048831 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.151861628 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.150083843 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.159615148 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.159732769 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.154616906 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.125261711 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.214340582 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.153971191 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.154789548 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.124764823 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.162664723 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.15624754 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.126046233 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.159538975 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.165097608 seconds)
  done (took 4.371096097 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.127231944 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.144169243 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.110595754 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.145199865 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.15119362 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.118413347 seconds)
  done (took 1.907333309 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.11479878 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.137183625 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.110104549 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.137244644 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.114593761 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.138456007 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.108672009 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.139329634 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.109148401 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.140867247 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.137580348 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.108892362 seconds)
  done (took 2.614238817 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.346357454 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.115041302 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.148792617 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.142881698 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.148607539 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.114167098 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.160834272 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.113937015 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.293393209 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.14515442 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.131731197 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.252970267 seconds)
  done (took 3.231545377 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259766312 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154768815 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.29092877 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.429115478 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197338948 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.206338086 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.320095995 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203379041 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.26478667 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17464366 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242341987 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193817068 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191843643 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222591482 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174759609 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.206616102 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216504131 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248781907 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186328819 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283505377 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205988951 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208866508 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.224524309 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189614251 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170450704 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197402656 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.123572995 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163634566 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214403657 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211679418 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248924844 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186538176 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176584899 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249480061 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.293051625 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223281788 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.364034446 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168903363 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.23462738 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.225434309 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.31146637 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17518959 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.269466288 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163193119 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167214472 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223124594 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194412885 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.259447524 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.139720794 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176695821 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259770726 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215967985 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.22906967 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172983764 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.344888217 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18283879 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.184484003 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216948113 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262826066 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236287815 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207254024 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.154235328 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.223095523 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225876024 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250488208 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.153757433 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.243662095 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130962867 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250958706 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.241293484 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226365267 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208185958 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.258726322 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169029521 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204647196 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.210672501 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192580478 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221939115 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200649223 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.12194109 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187956343 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171910346 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161721924 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.225858674 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123921099 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28277092 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16935104 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.230003084 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248112638 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195483942 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201786593 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203726563 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208568302 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1831281 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.155342507 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183319384 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.19983106 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195377717 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165620531 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195633297 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150878881 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.165686913 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189113628 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.154503062 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200410861 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.140080857 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238319424 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203761568 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.135751465 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204022675 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186997489 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.197212873 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212617963 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261311656 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135632101 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167249502 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238030138 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194906655 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.176549016 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.216876181 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.265221737 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.207623007 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141338745 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242611271 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241453274 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178193208 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232916839 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177292185 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167837629 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.192899866 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198083185 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195390729 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.193968011 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13212064 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.19340194 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272117088 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.130270446 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169621693 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216243747 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162143077 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160444696 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180329773 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141023846 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.17746747 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.190012065 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.177533955 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194088109 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199914606 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193462727 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198842148 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178512217 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24252618 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165860172 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.198968496 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18364932 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121132054 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.257346976 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229249786 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161272951 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231000156 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.213891916 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265847731 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206066894 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162899473 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.221517668 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131799167 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.154279829 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210561244 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202224339 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202679408 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.22914607 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262448348 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.211564399 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.193684716 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185147588 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208942383 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.217766848 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197022806 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.181349024 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201762004 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240885483 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.12515193 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.160206843 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.16209365 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146555422 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166939443 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166202823 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226223919 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205741619 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.255043073 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200073055 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175876215 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.227551523 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.131584958 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235163246 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.218953903 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173028888 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.232841934 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225298828 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209175677 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179641703 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214536173 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.155319506 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126126902 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.171359528 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.210751765 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165965611 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169743348 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181643129 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.226237734 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218784424 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186747845 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274834108 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211225242 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.238232963 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.155732137 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.202378315 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211822124 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197289938 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.22494527 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13910981 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.199953961 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.220539335 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179514971 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269848444 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202581963 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209858783 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24581036 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.197812081 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165903103 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186084401 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210604942 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176779858 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205965849 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182887999 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169794533 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191141462 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.142278276 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164597011 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256389819 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148287548 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258027594 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.195553057 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218506446 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159308218 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181135389 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19925753 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182340121 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.122303077 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212492069 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263947073 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182952968 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196599448 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218495468 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161893181 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.351887071 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237088526 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228881772 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173193689 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180515121 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201370953 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199054596 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205217619 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.224304611 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181196993 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223617663 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196793518 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.180322232 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171607582 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184836185 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189080094 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.194431629 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14145071 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.19652537 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.177869438 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260331585 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150222792 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199191414 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237829529 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.154575452 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.193430869 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178134626 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24774127 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199359179 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220510741 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.195903811 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.241449339 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231702301 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126109318 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162518536 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.162608154 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.22796685 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167419782 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199292992 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.221987007 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23910294 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228184195 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210266826 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14033773 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.159886269 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201127509 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185857431 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239973183 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178157468 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.176288825 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268113711 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.157822076 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16539425 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203987085 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.328398526 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180354644 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216104541 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.155551274 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.318802802 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159879805 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134459794 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199114881 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241732184 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.154813005 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.228313156 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206900955 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18184514 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19963807 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174978175 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.230230747 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282842316 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216280063 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220291377 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.181911312 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200519673 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202961251 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220260448 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179868682 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.185235184 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200767316 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228391511 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.263820866 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.14039587 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205351288 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205135924 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200554049 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250524401 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137321335 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262649394 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134428504 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210624528 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177169498 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161596783 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197316707 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.223361863 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168001858 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218857097 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199187932 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166955566 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162603612 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188905307 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198849116 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178123511 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.132960248 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255139459 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.130044032 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204509828 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224725145 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166911364 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195649424 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182328565 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136493955 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183851588 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182690265 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170143745 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.207857501 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228158955 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.168681436 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221272916 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218866522 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207547295 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200254334 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183828613 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.702004595 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.164543438 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228077298 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183378445 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235562941 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18623296 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208971941 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202212495 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186650617 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213916111 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189630182 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.266093757 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211182707 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.203653661 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165940542 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182080619 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15322101 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.172748173 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191254143 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204627721 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178472146 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.176310993 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.200960612 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184074176 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.182010646 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141507588 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229610265 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187446106 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260726303 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.227998529 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174074036 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209570638 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221332825 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16406288 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.207480461 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217034761 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179715785 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192601902 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.136627263 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.176599368 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22451963 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.159095933 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202376521 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202367137 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203915379 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2047439 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.173855694 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203135704 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182089819 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204563802 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130983833 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.200504284 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199014611 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169764843 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.165375143 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196868814 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202713214 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.200208121 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132492856 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.211586484 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2293654 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.158703006 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168840625 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.325910141 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1993169 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240124569 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.194731129 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171285266 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149515016 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195737253 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.199414403 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20161243 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.167925891 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168355198 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.170727942 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.223016989 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.196144788 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195701891 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22377243 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20492936 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234663525 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.184451354 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.311446979 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142359552 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196082123 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.169444847 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.168382147 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178029543 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139852941 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184266699 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.261640629 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226637404 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.192722901 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.150317234 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167844011 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.158391891 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135782974 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202676672 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195971213 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198628201 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184293645 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.155636584 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1843108 seconds)
  done (took 97.459359331 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.191330944 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.189136415 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.202438174 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.230577013 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.197608789 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.293187639 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.237557531 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.260957137 seconds)
  done (took 3.023660822 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.159863271 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.138986352 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.17546037 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.156026574 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.157119462 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.493672775 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.168339008 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.124846173 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.22161426 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.198641243 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.123330768 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.702581892 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.152889425 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.154677702 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.146767081 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.125090895 seconds)
  done (took 4.607330309 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.771000286 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.607740243 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.426842754 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.29933676 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.277087959 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.197054802 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.833689998 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.232803902 seconds)
  done (took 13.873098708 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.158191105 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.173407586 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.390794444 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.254692497 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.192662207 seconds)
  done (took 2.401424914 seconds)
done (took 147.098244537 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.130969494 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.177848789 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.15864091 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.146850777 seconds)
  done (took 1.825721573 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.185479639 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.143524862 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.113101594 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.142951056 seconds)
  done (took 1.818382489 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.576498616 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.110032857 seconds)
  done (took 1.94911721 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.152195885 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.17206504 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.173453818 seconds)
  done (took 1.736644908 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.13862469 seconds)
  done (took 1.366210679 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.126024553 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.153660132 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.220077639 seconds)
  done (took 1.734796523 seconds)
done (took 11.660286468 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.132636889 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.460468637 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.443811192 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137293819 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.751970763 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.435745557 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.069474969 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.187591899 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.227538925 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.115046914 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.169663617 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.727147695 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.025630993 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.397621945 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.039955876 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.365401335 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.730300343 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.147770756 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.125350306 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.149927002 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.015044113 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.146946085 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.150110533 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.118702066 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.728533376 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.463040874 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.115829923 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.412454275 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115728452 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.152722544 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.438029522 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.11656555 seconds)
  done (took 18.031657183 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12274409 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.216675151 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.159655039 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118809556 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.154310264 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.147995742 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.130138595 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.165003093 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.224309511 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.148442373 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139225518 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.148696023 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154363338 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.117187371 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.174006903 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.146030997 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.120390538 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.150171554 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.124670359 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.149963403 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.168968889 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.115788793 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.150985069 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.118743275 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.147553025 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.175874414 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116815787 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.162633033 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.148641561 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.121155415 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.153628828 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.148650594 seconds)
  done (took 5.983592845 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.17111178 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.22689018 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.159791418 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.186253277 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.204367844 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.119084835 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.241448185 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.190468702 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.259022489 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.116654188 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.173765906 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.116001317 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.190668421 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.150999413 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.172458155 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.118787962 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.152043254 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.1203163 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.155376893 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.151227192 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139080786 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.148331424 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.151318546 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.12031075 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.148715617 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.177563289 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117034375 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.164210717 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116966452 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.153638551 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.154868202 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117288002 seconds)
  done (took 6.319266092 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.133501376 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.163855167 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.139666216 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.174351115 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.155948397 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.129372126 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.161262882 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.156177365 seconds)
  done (took 2.463981076 seconds)
done (took 34.02964515 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.141712225 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.160004435 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.136243317 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.170332499 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.162646877 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.234171369 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.120488633 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.166648876 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.13685502 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.164600939 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.170799468 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.117787752 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.156435509 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.121430989 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.169031373 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.127443844 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.215941474 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.167513101 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.22181929 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.218114773 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.157944324 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.135345659 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.164023488 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.226100002 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.223610189 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.224308035 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.173245079 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.162195466 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124257624 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.156334232 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.228286227 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.229502479 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123202784 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.212828381 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.161060441 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.158883327 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122707097 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.15388411 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.217836003 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.135338577 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.16218744 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.168516556 seconds)
  done (took 8.331817484 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.242484399 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.248256759 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.122679198 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.156777295 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.122090601 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.280745536 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.24365937 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.122498447 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.156542258 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.238032523 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.240288562 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.155433881 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.124059453 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.156244678 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.123033528 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.155033282 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.236209826 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.24141041 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.246880937 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.258817346 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.277116993 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.282367705 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.251094189 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.237581507 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.273050233 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.244359443 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.236409825 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.253190653 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.235970337 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.155029462 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.248774359 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.251865345 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.121132463 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.154866025 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.27155237 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.246364037 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.246319812 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.2731806 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.233307981 seconds)
  done (took 9.609967995 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.134317775 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.169088513 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.143502748 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.224519788 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.196356958 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.167186165 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.130754367 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.17536209 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.179256966 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119782077 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.16278108 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.191076222 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136988828 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.161852766 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.157554031 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.139336635 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.177760376 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.152589979 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127634387 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.174448704 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138096149 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.169603714 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.167071633 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.130536504 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.150898309 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.163616099 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.126057427 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.16614109 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.158712658 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.129093526 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.156778113 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.12388011 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.156293593 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.161505004 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126314617 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.165209986 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.181737218 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129980584 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.165254573 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.188752981 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.128047547 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.159404652 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.174296429 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167419644 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.153818228 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.164402887 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.130619487 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.16365178 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121699658 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.173340268 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.167470952 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.120786962 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.177051596 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.151869075 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.118852438 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.161197335 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.153019078 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.123348846 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.16232036 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.123929128 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.178701594 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.160956989 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127178217 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.156293156 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.124833711 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.151534406 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.150907419 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.126591294 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.17689703 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.158464484 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.152300651 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.153999875 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.163626635 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.128740711 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.158651243 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129896126 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.151657287 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.159830797 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128797491 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.159783782 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.129286117 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.156232733 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.15771954 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.14078146 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.174675868 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.166294739 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.130166428 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.163908072 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.156239141 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.121674522 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.167878208 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.121100404 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.156982776 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.164637305 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.12200547 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.157484407 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.163345004 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.129398973 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.151898306 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139184984 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.160483254 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.153116645 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.137221044 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.154830666 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.123537498 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.164648426 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.16549336 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.120234398 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.164229364 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.131615378 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.151713858 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.158189119 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.123747111 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.152911242 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.137349391 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.164940474 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.157863438 seconds)
  done (took 19.04131199 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.346829128 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.357917904 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.268656265 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.418546403 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.181996586 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.238139697 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.31432847 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.303619684 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.120697483 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.201903621 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.217277984 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.317204715 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.270972475 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.314789941 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.278403206 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.154636759 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.186218753 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.272839476 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.352729441 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.412894431 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.18798615 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.137525822 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.202718151 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.201161901 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.172349027 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.173675953 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.180727627 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.179408936 seconds)
  done (took 8.246601967 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.148328871 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.198756905 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.16526763 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.188207656 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.188880815 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.127902199 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.157922711 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.119786273 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.168509718 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.183203737 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.128158335 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.16179827 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.164005704 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.138074487 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.153086588 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.170252924 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131554632 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.169834044 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128818565 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.164735685 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.17357934 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.203747654 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.125422334 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.160745816 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.18005672 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.128393023 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.16541274 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.184547935 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.165505779 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.182601619 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.124056153 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.170062985 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136253859 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.15259295 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.161179945 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.124140171 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.161871471 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.129057641 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.15702743 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.123262589 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.158821498 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.11493308 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.161453109 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.178537977 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.16084481 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.128403227 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.164708931 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.125209737 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.166649168 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.122401517 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.155484814 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.156387211 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.127050505 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.172282927 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.162654292 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12614002 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.158291506 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.118631615 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.16877593 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.122604275 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.157846947 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.134444039 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.166193311 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.16876559 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.137356177 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.165377784 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.167987197 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.129124014 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.161002799 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128916045 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.159862377 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.176586746 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.1231149 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.164874055 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.171629692 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.135560784 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.159563201 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.16648497 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.129050643 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.154053769 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.116208173 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.154134523 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.113936425 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.16077594 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.126494359 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.168985808 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.158480195 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.131066689 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.18105466 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.171327745 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133664179 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.154425722 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.163228273 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.126092172 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.158290027 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.125284053 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.175248666 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.180815655 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.159540012 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.124887274 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.173094798 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126764873 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.160448331 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.113450691 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.167159757 seconds)
  done (took 17.289498677 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.154847923 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.196247578 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.160225096 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.144018079 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.198229112 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.184445829 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.169800414 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.128343049 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.161479308 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142898286 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.169836392 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.16971055 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.134096479 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.171631892 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.18110662 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.13564467 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.160680879 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.170545409 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132833965 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.201790112 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.177310616 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.148768677 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.190407856 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.169862169 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.161229387 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.147860089 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.187770884 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.170796542 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.135764326 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.193468315 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.169359123 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.185870157 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.156703526 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.166375839 seconds)
  done (took 6.933351569 seconds)
done (took 70.692417324 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.416333412 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.605286422 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.371535466 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.374458248 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.400521762 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.429452475 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.371966824 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.568475584 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.203648059 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.361782273 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.372963402 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.369785822 seconds)
done (took 30.137973821 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.408695673 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.543533824 seconds)
    (2/2) benchmarking "String"...
    done (took 1.705244006 seconds)
  done (took 4.536662048 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.369944464 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.36987898 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.616531014 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.372770458 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.386981878 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.389657517 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.370953237 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.390840393 seconds)
  done (took 17.184071145 seconds)
done (took 27.789560399 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.456918211 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.577312809 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.66623163 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.40028832 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.379434804 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.377181876 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.358965406 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.418831546 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.376485948 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.366899794 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.383690149 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.674945023 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.367447037 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.799707117 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.376376851 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.381186004 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.386516882 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.605909545 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.37283064 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.428547829 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.35995704 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.382560585 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.379926408 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.401757067 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.388058441 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.38578243 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.364937961 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.363981125 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.610630804 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.39415215 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.370317725 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.385523695 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.371184766 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.373531125 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.500455464 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.396400335 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.56153417 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.384423373 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.366970528 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.381769352 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.565624335 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.810876443 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.368316218 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.363112942 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.379926653 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.372619861 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.362558867 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 2.113869665 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.387555359 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.366873763 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.401424945 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.785072847 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.370286855 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.395307381 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.383832474 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.617148459 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.393178354 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.429986595 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.411533395 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.38174238 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.388683551 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.370360461 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.444154754 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.378120379 seconds)
  done (took 154.810201395 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.373833024 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.378054852 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.376733313 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.396660251 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.378772285 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.377349464 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.374002292 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.372484848 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.37703835 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.385324634 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.377389964 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.371891067 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.377771409 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.394144204 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.378681136 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.393847177 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.376994508 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.394901465 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.395772733 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.376215485 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.386130412 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.376106438 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.395011106 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.377765964 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.384608292 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.461743818 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.403917527 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.414201298 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.383650983 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.371455314 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.387097073 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.383552705 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.05160109 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.238504471 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.395713051 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.422079332 seconds)
  done (took 86.75312742 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.376153538 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.37886249 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.376761461 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.413390198 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.376703261 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.015934567 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.021325244 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.123202753 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.613999035 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.935668859 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.707780058 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.37347105 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.376904704 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.474095027 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.388864808 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.381399557 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.392626816 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.417324987 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.380696579 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.379237102 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.017535466 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.39324274 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.525922844 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.58244853 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.39125812 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.413833203 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.787341779 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.375364432 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.414076676 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.728194915 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.430596171 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.374542578 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.843301101 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.751098006 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.498496311 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.377117783 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.414785833 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.378227854 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.672232175 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.377523963 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.379458295 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.381310153 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.135249315 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.3792317 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.018261269 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.380364703 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.431204523 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.381809598 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.377814378 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.650581599 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.255116935 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.398412676 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.378626805 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.380730384 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.376132765 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.379784522 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.412707339 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.632978907 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.496724532 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.390636496 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.379130929 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.413333249 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.377879875 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.525378764 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.372298374 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.401758026 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.436119456 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.492732715 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.009596525 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.378366449 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.476284256 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.494923042 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.372435965 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.375426493 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.375729881 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.376975527 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.375794412 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.49127666 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.373076911 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.375289364 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.836536233 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.557042655 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.391282402 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.922608298 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.478382254 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.371881766 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.842095366 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.37712106 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.375459188 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.223544111 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.481097121 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.371510544 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.375187615 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.37504677 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.37404945 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.839385694 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.00120676 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.690797559 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.378829747 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.75035296 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.380602212 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.834773881 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.969154206 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.12275011 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.376650065 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.491335642 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.55547944 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.388264185 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.373527648 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.894046309 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.377298585 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.435566878 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.376464131 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.776177858 seconds)
  done (took 387.806922635 seconds)
done (took 630.658795967 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.126103129 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.07274262 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.210138095 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.100579993 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.062926145 seconds)
  done (took 11.861664655 seconds)
done (took 13.150890577 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.574558728 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.571305914 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.436333388 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.573810909 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.406900201 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.590721008 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.56274806 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.397213336 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.484469306 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.455516482 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.47878051 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.425907055 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.407699431 seconds)
  done (took 20.658632455 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.675179144 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.383269254 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.450455761 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.643160152 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.421719966 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.659899527 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.686980471 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.377071602 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.505613571 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.392823795 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.392723781 seconds)
  done (took 19.881364816 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.680664692 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.379649314 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.446254892 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.635426536 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.420088739 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.672197678 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.684204361 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.379767806 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.5242833 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.395472996 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.391042885 seconds)
  done (took 19.90063368 seconds)
done (took 61.731888156 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.418876227 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.551165194 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.402687861 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.392026304 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.389356639 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.388613547 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.393249861 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.387580899 seconds)
  done (took 12.615699306 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.387977023 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.385866254 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.387773745 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.387995921 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.388647935 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.386707679 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.388651403 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.386809193 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.386449686 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.388427868 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.386578218 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.385840197 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.386705775 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.386354996 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.388147917 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.388624416 seconds)
  done (took 23.491043568 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.391110628 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.386743627 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.389340778 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.38667309 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.389946881 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.388026118 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.391089636 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.387437156 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.389924009 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.387408276 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.389098732 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.3884935 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.389559164 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.388551218 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.389836167 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.390711373 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.388334298 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.389199828 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.394279495 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.389088478 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.389668221 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.387750599 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.388433851 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.387980912 seconds)
  done (took 34.632112876 seconds)
done (took 72.031022171 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.379867949 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.399669736 seconds)
  done (took 6.07229877 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.451477056 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.454010498 seconds)
  done (took 4.204704979 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.391326283 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.388152195 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.388904263 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.391061839 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.389542413 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.390016589 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.389029722 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.38705785 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.387471454 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.388577473 seconds)
  done (took 15.185152078 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.392909589 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.389846669 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.388488231 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.388579873 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.389933888 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.389369331 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.390997629 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.390754976 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.389610915 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.390657037 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.388636757 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.390729313 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.389463822 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.389554285 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.390423467 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.389776278 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.389600801 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.390383387 seconds)
  done (took 26.315447412 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.405860226 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.412258505 seconds)
  done (took 4.113314599 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.531554393 seconds)
    (2/7) benchmarking "second"...
    done (took 1.434549926 seconds)
    (3/7) benchmarking "month"...
    done (took 1.506325225 seconds)
    (4/7) benchmarking "year"...
    done (took 1.497031751 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.430979573 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.410420867 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.431191514 seconds)
  done (took 11.537943799 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.395352767 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.594353953 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.718822975 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.941852031 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.392361824 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.417674243 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.27645199 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.417712271 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.412698886 seconds)
  done (took 15.863640602 seconds)
done (took 84.586476882 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.382097298 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.402310582 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.39629658 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.41574966 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.728862395 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.422774617 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.388466161 seconds)
done (took 17.43550749 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.374662822 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.376613061 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.386635509 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.394088334 seconds)
  done (took 10.827603055 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.383993026 seconds)
    (2/2) benchmarking "read"...
    done (took 1.739154235 seconds)
  done (took 5.420264894 seconds)
done (took 17.544495406 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.393729429 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.3914622 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.393782896 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.390163904 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.394707103 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.392233441 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.392877269 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.388975096 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.391331358 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.392010616 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.390813877 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.3925095 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.39155377 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.393245789 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.391151505 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.392101023 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.392591666 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.391690412 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.391211643 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.393027652 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.393028736 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.389869193 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.391379508 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.392172593 seconds)
  done (took 34.704994509 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.39511283 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.392371072 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.39207837 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.393475158 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.393219598 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.393386557 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.392311266 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.392385773 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.392542231 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.395745798 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.39155705 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.392222857 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.394291731 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.393202058 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.394464784 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.393672136 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.394345366 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.392987198 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.392405211 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.393389868 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.394861871 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.390625624 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.394325808 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.393937031 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.39432839 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.394623381 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.395282738 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.393406539 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.394758474 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.392819192 seconds)
  done (took 43.102970482 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.400611041 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.397824334 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.394001647 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.394539868 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.394512733 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.39392182 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.394218678 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.393703271 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.392826373 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.393749366 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.394144868 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.394354588 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.395162177 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.394636764 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.396089439 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.396579077 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.39349259 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.395586999 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.395483802 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.394599488 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.39483475 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.395283848 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.394354015 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.395668567 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.394572948 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.396562168 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.396872374 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.396802017 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.39558495 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.396261837 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.39367794 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.395416906 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.396406341 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.39457957 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.396554095 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.397033186 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.399333509 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.402376887 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.394529293 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.396398242 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.395295405 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.395864318 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.397168302 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.394648178 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.395461823 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.39559129 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.396070227 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.396568334 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.396410624 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.397267591 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.396420206 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.397788 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.397306117 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.396598531 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.395312756 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.3978754 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.397905937 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.397844336 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.397657959 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.399035577 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.395781298 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.397597043 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.398148271 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.39715029 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.398928391 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.397990067 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.397198553 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.398507734 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.398752943 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.398068921 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.396923024 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.398538721 seconds)
  done (took 101.831059953 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.400914511 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.398778926 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.397491183 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.399013949 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.398075249 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.39776979 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.400031579 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.40168918 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.399783793 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.39931234 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.398245782 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.399039428 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.398979327 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.399533152 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.399875819 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.398748678 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.399950866 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.400012374 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.399844442 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.3999328 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.398663608 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.399502091 seconds)
  done (took 32.086643246 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.402511864 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.401316545 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.398875996 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.401213684 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.400891207 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.400110179 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.400564667 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.400975292 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.399907471 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.39838742 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.398440061 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.400538838 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.401839023 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.40064214 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.402379471 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.402835385 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.402690368 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.40291018 seconds)
  done (took 26.521555902 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.403661752 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.400686823 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.400381569 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.401376487 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.400944892 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.402474467 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.401068658 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.40201308 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.40172354 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.401451092 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.399537352 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.400021402 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.40238487 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.400922181 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.400370379 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.401411614 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.402200659 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.400912142 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.400863025 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.408569963 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.402841064 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.400403763 seconds)
  done (took 32.143072025 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.403369939 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.400999615 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.402864607 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.403263035 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.402003643 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.402697483 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.404336879 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.401980506 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.405788096 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.402776594 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.401199993 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.401380397 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.405096136 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.401482351 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.403101099 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.402804665 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.400353097 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.403862089 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.40310437 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.402344772 seconds)
  done (took 29.361767391 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.40441657 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.405371929 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.405707343 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.406209612 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.407138251 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.407360984 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.408209767 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.405990354 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.40592238 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.408077643 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.406679891 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.406543284 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.407415049 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.407493749 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.407110233 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.406222341 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.409030071 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.405445241 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.406875452 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.406282018 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.406927805 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.407816679 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.407451863 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.407604988 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.407159076 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.406510188 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.408885364 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.407822268 seconds)
  done (took 40.701566843 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.406110452 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.404346174 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.404335572 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.404697939 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.405647987 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.405380984 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.404171139 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.403959982 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.404651321 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.405417283 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.405723734 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.405717327 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.40450523 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.40458464 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.405927494 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.406265485 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.404686124 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.407793053 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.40624001 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.405988809 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.404852763 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.406746853 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.405777043 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.40753113 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.407839531 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.408583218 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.404810912 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.407916747 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.406086796 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.406685354 seconds)
  done (took 43.482741721 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.455709616 seconds)
    (2/2) benchmarking "in"...
    done (took 1.454072066 seconds)
  done (took 4.218697031 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.40823009 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.40662844 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.405232477 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.405226078 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.405671786 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.407010963 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.40543011 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.405617692 seconds)
  done (took 12.557096555 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.404404076 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.407356294 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.407254183 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.406877595 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.406091007 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.403949652 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.410094878 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.408819213 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.402116904 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.403654488 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.404960652 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.407626532 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.406976384 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.403787686 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.402465119 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.405740244 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.407567883 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.406952652 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.408012628 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.407435899 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.406314193 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.406741031 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.40969529 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.412604437 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.402920658 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.412098931 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.410964599 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.408427118 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.403550124 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.406818329 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.40732781 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.407158304 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.40716594 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.409298619 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.408708732 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.407696832 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.41526395 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.426341068 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.412818587 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.416400853 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.410398089 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.409585442 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.40291068 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.407543597 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.407853449 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.411981365 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.408333861 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.407236549 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.404245047 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.408250717 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.413517058 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.402827372 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.407698718 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.409733953 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.40949188 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.414601023 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.434880744 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.408135852 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.412903005 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.415046712 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.421695798 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.420500433 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.408584707 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.412492008 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.412788127 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.4153313 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.414927835 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.414660939 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.409704418 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.409221548 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.417014095 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.424207025 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.422249654 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.411371769 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.4156853 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.415403063 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.409181651 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.412575968 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.417684131 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.416757011 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.414945199 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.411621608 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.41331033 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.417245766 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.407637672 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.413298056 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.412199677 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.413548468 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.410718695 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.418551857 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.437078439 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.410503724 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.406663316 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.407555421 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.40930568 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.412409141 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.407859139 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.410363498 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.41223044 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.411722198 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.412699628 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.410905146 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.414654706 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.41480082 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.413321783 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.417966155 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.41735992 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.409665901 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.417393058 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.418145687 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.412982052 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.410557258 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.414668608 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.413864388 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.410246347 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.415144078 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.415453661 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.410375077 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.41549922 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.413191733 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.413962383 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.422036171 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.415376891 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.413230817 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.412135001 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.422047981 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.413661999 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.414485343 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.420207218 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.413373301 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.412456309 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.410067931 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.415845579 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.409098031 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.415270414 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.409607001 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.414467838 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.41298185 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.414100112 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.412619701 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.414396622 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.410461462 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.410939001 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.412132276 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.416117533 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.412041628 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.421222429 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.412852154 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.413803949 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.41273072 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.415357198 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.415332854 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.410967635 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.414402432 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.413071626 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.415455649 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.411866353 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.416081296 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.415370441 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.413557317 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.414460257 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.4085022 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.4157101 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.415583836 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.415958054 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.413039723 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.41657725 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.414858007 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.414087375 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.412589398 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.416320303 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.409858985 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.415173887 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.420664337 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.417171644 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.415761142 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.416754607 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.419226036 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.417904773 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.416396145 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.412557162 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.417598761 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.419011761 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.422919483 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.423102993 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.41944605 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.416728993 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.413295322 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.414391682 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.420133162 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.414150475 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.422939198 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.425067384 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.427375242 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.413132639 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.418846969 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.413190279 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.421009006 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.420614837 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.422047674 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.419219432 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.416740073 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.41476164 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.42163894 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.41723604 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.419718387 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.413753068 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.419741915 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.41930396 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.41867629 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.419751259 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.418282623 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.418459434 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.420324305 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.416362913 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.417885597 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.413793874 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.418973777 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.413864279 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.415939732 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.418652844 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.41831993 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.422300604 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.423164934 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.416696556 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.417827548 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.415758069 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.414255462 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.420561248 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.419597544 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.41818039 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.424856895 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.421293859 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.416383118 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.426492779 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.440150742 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.416265074 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.423696831 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.426383559 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.416835051 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.417989824 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.425140633 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.419386093 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.420936028 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.421029166 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.416436006 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.419954689 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.425891678 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.425331557 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.414514257 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.422209017 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.416055459 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.421079569 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.417187016 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.418537659 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.417127355 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.422116282 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.422720452 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.420773485 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.418702578 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.423802586 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.422622661 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.422372087 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.419249242 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.426620994 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.424200704 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.421830231 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.421431958 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.418104673 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.423987748 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.417775568 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.422662844 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.416702648 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.42765684 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.436708082 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.425122139 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.423393528 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.421299793 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.424402981 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.425118757 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.420795898 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.420188146 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.419633484 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.417578342 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.419824016 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.423117758 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.418281437 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.424436484 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.42112757 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.422626335 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.425361265 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.422231846 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.417371236 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.425088333 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.421893932 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.425537145 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.419173831 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.421620595 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.420435237 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.423037492 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.422531313 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.419549791 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.428196143 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.425876774 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.422235087 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.421940544 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.420206266 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.422042536 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.423952654 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.427811874 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.423158918 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.430702872 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.42128408 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.426693743 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.422203457 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.429579397 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.429023364 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.422176658 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.432354866 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.42511077 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.418827541 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.424555496 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.425837021 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.432087105 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.433785712 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.42095096 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.428054681 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.425697194 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.426456749 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.423323519 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.425666568 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.424556691 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.42774795 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.432677804 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.447562044 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.423913946 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.426391652 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.42754355 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.425587941 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.424048027 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.420875191 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.427931497 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.431132732 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.423656704 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.423691607 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.422636429 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.427075154 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.425964924 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.42792297 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.42724831 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.426847108 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.4301088 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.430386073 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.429895004 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.426821249 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.430430349 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.431892388 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.430883488 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.432757196 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.422503986 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.429432257 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.426421164 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.423164381 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.421859045 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.422646455 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.426730702 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.423527783 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.42992809 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.424664994 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.422821709 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.931122402 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.4296366 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.421140552 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.429353856 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.438675428 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.422521655 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.428882204 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.427603597 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.422825612 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.430145348 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.424939567 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.420212471 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.424801015 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.430432501 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.432149933 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.421738691 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.427407577 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.421704211 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.426355964 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.425443682 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.426255389 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.427366877 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.426968135 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.421272965 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.428342206 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.428507822 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.428506432 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.422766512 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.424250217 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.425349318 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.435173662 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.433148615 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.426197494 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.429722595 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.430838017 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.421412967 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.426607195 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.430387244 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.424314253 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.428765016 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.423121951 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.428483165 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.429504328 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.428820144 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.426052041 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.429451113 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.423588 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.425358136 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.428737504 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.430485462 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.42852786 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.425936549 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.428398102 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.424743369 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.426415113 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.430015593 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.425465738 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.428519294 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.427205829 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.430343467 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.426913423 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.429599537 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.429660944 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.427838599 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.424060584 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.424486501 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.43412587 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.431967165 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.430603748 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.429289361 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.431861513 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.425114324 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.431305262 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.431457807 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.425608558 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.427895942 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.432923149 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.424716262 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.426921157 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.427740783 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.430903213 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.435083604 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.431066077 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.426896694 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.436427904 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.454783116 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.429266248 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.426932704 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.429819617 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.427221909 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.433779511 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.429361939 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.4277313 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.435945227 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.435754081 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.433868071 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.42920873 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.430683783 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.430213838 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.433166539 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.430891896 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.428197211 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.433166295 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.428589609 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.43357177 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.430607396 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.432258746 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.427628155 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.428164436 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.429816921 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.431201164 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.431714101 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.43041939 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.431081991 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.431199534 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.433877394 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.432287354 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.431764298 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.432221721 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.42697921 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.432632976 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.42928435 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.433781829 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.430661872 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.429115389 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.434552519 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.431613838 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.431401146 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.433981948 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.437749979 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.432079321 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.429415257 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.429921692 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.434591453 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.435185664 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.432593945 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.429813737 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.430467023 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.435254012 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.431240702 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.431348845 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.430555048 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.443035801 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.459266922 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.429081666 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.432012061 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.4358462 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.434419895 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.430934032 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.432041874 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.428948939 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.431743058 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.439357456 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.435524014 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.438286566 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.456195752 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.430401906 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.437640956 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.430144795 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.432831918 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.434451374 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.439123254 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.435636386 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.435200597 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.444812948 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.439221999 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.43639975 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.447351218 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.440373988 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.436844392 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.437133706 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.431564391 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.436141195 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.434932213 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.437049329 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.434280483 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.433804267 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.434341275 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.432102292 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.437307335 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.436445226 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.438014521 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.433282723 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.428315698 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.432093511 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.439775687 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.434271094 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.438311049 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.4349687 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.434790321 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.434189282 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.432030107 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.445836231 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.449409204 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.438171351 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.435468292 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.436633342 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.435224755 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.43715584 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.439281208 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.440913802 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.436336296 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.436342553 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.435407795 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.438602412 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.437651229 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.430717667 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.433515597 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.435529135 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.438498181 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.445035764 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.454046845 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.44110098 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.435312572 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.439717568 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.43615687 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.432563643 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.438183222 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.437333911 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.434815528 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.438086659 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.442323226 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.440524239 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.438107096 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.434789212 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.441641393 seconds)
  done (took 850.066941153 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.438672486 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.433867661 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.436118747 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.436365874 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.437294478 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.437802992 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.436563203 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.437945865 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.437448779 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.437877186 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.439024676 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.436048403 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.438006678 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.439058252 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.43813133 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.439130153 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.437105051 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.438088554 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.438753516 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.439576618 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.437488783 seconds)
  done (took 31.525878598 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.439604174 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.436920422 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.439447188 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.437750432 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.439877932 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.437468073 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.439239479 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.437523089 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.438091248 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.440095061 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.438586683 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.438158456 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.437060975 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.43818307 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.440030099 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.440326812 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.439761874 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.441150917 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.439271304 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.440028874 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.442523852 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.440552402 seconds)
  done (took 32.999595497 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.442140082 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.441208701 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.436558426 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.439650055 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.43876515 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.439571404 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.442167553 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.439568587 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.438263669 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.43694308 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.436011785 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.437603513 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.442250377 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.446308656 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.437534874 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.440356694 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.43972725 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.438709973 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.44099357 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.44085667 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.444216657 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.447228652 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.443637725 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.436927859 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.444049626 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.441359029 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.442547881 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.443031999 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.438611117 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.446255084 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.442231897 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.43919541 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.445236723 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.440413695 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.440825671 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.446282206 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.44585635 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.440710548 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.442297617 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.442962105 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.451860433 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.44291597 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.445942184 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.448124229 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.443136146 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.439686766 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.448219765 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.443049092 seconds)
  done (took 70.552652317 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.444876832 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.443836943 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.444808285 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.441456884 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.441958884 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.443287322 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.44193979 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.443131866 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.444631326 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.442274532 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.442191339 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.44313424 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.443723653 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.44325889 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.444728871 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.442816291 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.443747334 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.443805493 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.444884248 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.444537162 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.442433673 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.444877032 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.444521023 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.443282581 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.443014853 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.442520236 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.44397532 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.444097984 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.444770019 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.441928496 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.444215753 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.444445044 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.444648955 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.443592911 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.442595299 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.444731098 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.444520718 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.443863679 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.442204444 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.44199539 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.441172663 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.444643969 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.445476149 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.445997072 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.445914897 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.445528039 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.446305093 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.444296427 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.445687016 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.443719951 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.445593168 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.444629116 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.445992138 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.445384595 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.444002767 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.445342912 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.446713919 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.444881934 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.445430783 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.44533663 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.44541657 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.447338914 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.44614909 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.446821878 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.447340121 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.446738257 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.44820851 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.447664269 seconds)
  done (took 99.563500868 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.450741634 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.448104882 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.449628641 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.447737846 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.447636425 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.448958338 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.447529619 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.449758969 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.447230574 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.449743624 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.448442807 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.447461834 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.449258567 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.447622531 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.446876204 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.448472276 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.447715179 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.449398022 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.44750293 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.449076683 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.449417564 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.448504213 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.449599856 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.449501643 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.449567778 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.450014481 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.449255492 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.448153153 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.44923706 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.449875759 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.449684044 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.450798247 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.447373748 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.44865336 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.448412424 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.450084551 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.449858983 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.451296189 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.448101402 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.451081055 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.448771166 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.449205044 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.451543265 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.450823186 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.447684302 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.449772044 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.451013584 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.451778308 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.450623218 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.450564891 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.450320461 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.450390431 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.449903178 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.451000851 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.452029204 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.45324502 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.451605662 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.452923539 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.450315906 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.451177398 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.452592195 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.45153226 seconds)
  done (took 91.224854968 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.453455187 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.451765968 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.451769364 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.452091012 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.452837356 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.45096348 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.45048346 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.45062138 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.452629509 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.450597306 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.453257912 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.451201288 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.453206154 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.451984179 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.4505778 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.4529459 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.451966648 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.451381324 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.450952858 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.453615152 seconds)
  done (took 30.386013052 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.453011558 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.452041865 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.452209515 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.450172238 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.45074516 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.450575788 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.449920523 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.451567211 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.452930439 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.452267144 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.450750716 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.452069483 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.451677376 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.449895147 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.450514225 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.452023068 seconds)
  done (took 24.571154383 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.452157108 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.451300247 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.45195233 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.454998643 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.451650411 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.453286649 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.453749731 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.45250708 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.451142218 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.453504153 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.454492596 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.451550622 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.452518117 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.453812994 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.454072001 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.452535379 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.454781908 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.452141904 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.45010962 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.453344636 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.453730303 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.454567151 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.454796742 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.453087747 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.453311384 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.453703924 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.452829728 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.454614816 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.454103321 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.454387493 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.45357089 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.456453672 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.453584641 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.454190932 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.45478146 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.455252813 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.453891117 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.455194565 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.454224175 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.453828081 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.456183884 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.456250139 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.456802662 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.454502101 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.455376796 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.455868743 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.455616734 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.455175852 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.455793566 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.453619409 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.456610808 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.45644866 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.457460333 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.458543016 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.457625099 seconds)
  done (took 81.33186153 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.456243032 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.454530964 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.453909518 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.455287245 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.454300086 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.454660099 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.456783815 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.45691973 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.456785238 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.455552239 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.456685163 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.456282573 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.45716514 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.455390781 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.458291033 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.457364457 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.455266444 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.455932803 seconds)
  done (took 27.55894427 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.459982189 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.456645784 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.455427593 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.455717237 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.457298944 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.45620287 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.455687045 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.456272459 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.454059076 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.456152028 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.457640357 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.456606061 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.456149985 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.453365738 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.455148901 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.455570247 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.455812099 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.458783736 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.457721634 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.457996879 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.458392421 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.458449008 seconds)
  done (took 33.398962882 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.453938353 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.453096154 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.451516319 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.46912836 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.465861401 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.453788058 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.456033154 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.45236364 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.470307677 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.484248599 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.481200707 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.464153572 seconds)
  done (took 18.908970066 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.461427203 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.458177061 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.458187248 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.460878658 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.460147453 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.460338986 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.457970162 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.459743263 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.458639545 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.459784922 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.460622504 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.460451401 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.461032924 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.457393609 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.459638472 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.460709561 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.459490599 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.460137811 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.460113049 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.459582733 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.460528714 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.459409802 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.459528118 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.45962297 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.459991256 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.459581758 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.458545022 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.459618436 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.461435912 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.45951983 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.459238719 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.459804123 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.458510386 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.461204767 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.458287684 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.460848194 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.460823665 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.461646439 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.460400713 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.460865878 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.459072282 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.463261545 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.46122871 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.460822653 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.462416653 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.459899255 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.459723745 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.459313059 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.461493448 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.461878243 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.459931145 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.460373179 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.461746292 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.460848514 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.463278515 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.462124128 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.461704449 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.460166873 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.462605242 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.463765463 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.461162032 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.462382878 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.463745604 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.461930814 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.461389394 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.460890444 seconds)
  done (took 97.747539611 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.465700158 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.461554819 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.463327171 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.463618347 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.461061114 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.461574176 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.461119982 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.464203302 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.461688679 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.463105646 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.461414366 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.463317438 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.462650167 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.463230558 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.463436824 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.461292105 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.461585996 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.462328339 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.463487424 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.463833782 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.46350698 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.463304434 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.460687987 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.463682102 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.464622537 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.462152058 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.463473146 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.464552616 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.465098754 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.462661914 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.462633325 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.463061229 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.465001253 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.463152794 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.462225851 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.46397754 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.463705082 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.464956069 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.464165125 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.462474489 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.465250972 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.464208369 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.464424871 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.463147925 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.467128378 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.46542181 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.46475526 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.465829336 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.464299064 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.465990705 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.465145381 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.466571801 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.465676274 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.465126072 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.464649673 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.465256181 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.465853149 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.463484505 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.464888669 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.464601602 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.465952367 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.465542456 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.465802115 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.465636429 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.465845318 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.467058932 seconds)
  done (took 97.980263829 seconds)
done (took 1989.826351077 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.628155148 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.579765291 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.460330657 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.473723817 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.459078628 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.487999085 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.470530084 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.459116984 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.46244545 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.463076799 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.462232631 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.650853665 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.458179788 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.459854946 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.462612193 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.560024042 seconds)
  done (took 29.357351339 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.49400637 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.468812153 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.593688165 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.480179535 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.492609884 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.679952036 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.521905206 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.463791397 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.657972199 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.481610448 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.457829194 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.507134908 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.465851194 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.473402387 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.482948957 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.689739716 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.742629038 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.455841027 seconds)
  done (took 31.972652648 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.977315019 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.487599466 seconds)
  done (took 5.826665564 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.488360783 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.47007888 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.468570989 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.465955341 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.459461103 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.471626919 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.466679028 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.467729454 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.479859855 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.614108204 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.466624118 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.482112081 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.486772731 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.468582848 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.470776083 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.511933394 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.638001304 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.474532504 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.471186844 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.471543605 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.468859787 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.566556812 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.513468911 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.475386044 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.610448319 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.464502479 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.474191243 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.477361034 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.621879964 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.47459487 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.468309538 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.471000961 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.469924367 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.464371522 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.982016596 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.49468398 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.474771217 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.500315784 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.472974374 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.637976697 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.470745855 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.474203246 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.463415804 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.988065429 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.621378772 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.602837712 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.492126643 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.473698227 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.47126892 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.540565047 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.472827372 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.470284619 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.532329046 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.325616787 seconds)
  done (took 93.148165143 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.464804441 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.462525443 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.647818747 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.479975113 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.474911909 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.459325662 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.461341553 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.788210445 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.48076493 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.463809114 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.815539836 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.085996772 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.492491701 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.519439568 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.357940604 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.532294317 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.467651333 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.480224485 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.467872353 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.462198928 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.053801425 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.469233213 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.468185682 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.533667396 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.503028484 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.031687644 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.47610009 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.467242332 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.468192359 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.463320732 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.039143075 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.492276156 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.529600358 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.464983036 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.762553794 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.896366756 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.861957368 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.472714864 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.515791356 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.463318413 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.48650966 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.021115526 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.882547257 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.469497948 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.465110329 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.02313813 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.469088441 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.46945475 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.469904223 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.72047398 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.464870505 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.468679952 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.49081644 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.46963584 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.465241218 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.588111936 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.552196038 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.034471344 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.472456583 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.466980979 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.494728564 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.465033926 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.471360011 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.466460619 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.486047907 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.878497811 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.66314653 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.467692777 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.879613663 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.041337677 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.487551288 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.10088418 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.485821848 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.487243193 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.655070198 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.469259453 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.491709998 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.048875668 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.499594069 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.464869168 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.862615569 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.4768108 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.806743205 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.495338031 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.467902535 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.062755 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.479379791 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.552536539 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.469055227 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.469398183 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.465041289 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.470668819 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.780453799 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.500184087 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.467831472 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.46606629 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.490657844 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.468386904 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.464700145 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.474151949 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.097627395 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.499729783 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.469808337 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.469952243 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.46894351 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.492938608 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.467552063 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.471922148 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.745099062 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.468802876 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.497584514 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.470449434 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.466514518 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.469604243 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.541547758 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.473052643 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.825474008 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.473336215 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.465221478 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.479756047 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.469565431 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.538277468 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.466161578 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.474167804 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.38727629 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.768099038 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.487704676 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.48264249 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.472647824 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.486076437 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.467840914 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.484044378 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.513067427 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.475915232 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.305825645 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.511819899 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.497367193 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.472552927 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.478949906 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.469882189 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.491255121 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.473852327 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.773792968 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.761166614 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.691562095 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.471519737 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.469572474 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.297934293 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.52108268 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.651755611 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.489289592 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.469107421 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.725321812 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.672635204 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.472746731 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.468535294 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.472275503 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.734751201 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.471147325 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.783447625 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.071129754 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.492915243 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.473777164 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.31534392 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.214249413 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.469882944 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.474817402 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.812771595 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.489166375 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.471777752 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.47317101 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.473606657 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.486702126 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.492924613 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.476575289 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.472652732 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.473129527 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.795263558 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.668232073 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.49027409 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.482191244 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.035587636 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.49786096 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.470237759 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.499061021 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.472603471 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.473538994 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.54102475 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.47854291 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.503445485 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.47473398 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.481391906 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.085022961 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.478556899 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.477024414 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.668157839 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.223067827 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.494271297 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.47578943 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.488805859 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.385204083 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.058485673 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.509882231 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.834472198 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.491639204 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.519635496 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.474517196 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.531502686 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.052326612 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.474417565 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.492310106 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.190936897 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.49534287 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.881538068 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.472788061 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.47758172 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.137552213 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.497595783 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.476368395 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.472389727 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.489742414 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.778540516 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.474900727 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.497314855 seconds)
  done (took 531.771031234 seconds)
done (took 693.436152596 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.477305703 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.480247784 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.473802849 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.483275935 seconds)
  done (took 11.291381441 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.492644878 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.484231743 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.490061197 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.486736157 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.492821853 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.484894622 seconds)
  done (took 10.312992756 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.47854241 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.483971159 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.482816033 seconds)
  done (took 8.827683547 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.713096023 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.508488761 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.842468632 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.506157421 seconds)
  done (took 9.953884423 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.489326427 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.49102401 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.493051381 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.49217519 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.491818939 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.493773453 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.492062255 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.491723555 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.49408582 seconds)
  done (took 14.810067987 seconds)
done (took 56.570484302 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.836011534 seconds)
    (2/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.480916586 seconds)
    (3/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.508630172 seconds)
    (4/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.910367275 seconds)
    (5/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.450909378 seconds)
    (6/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.495720804 seconds)
    (7/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.673578904 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.986187544 seconds)
    (9/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.888071662 seconds)
    (10/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.471743627 seconds)
    (11/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.951555456 seconds)
    (12/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.648643141 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.804586717 seconds)
    (14/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.473726675 seconds)
    (15/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.488713759 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.482707596 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.708682774 seconds)
    (18/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.436804555 seconds)
    (19/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.574434481 seconds)
    (20/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.472438474 seconds)
    (21/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.759417475 seconds)
    (22/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.473556348 seconds)
    (23/286) benchmarking ("sort", BigInt, true)...
    done (took 2.482854471 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.300036331 seconds)
    (25/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.489320048 seconds)
    (26/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.475145659 seconds)
    (27/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.291775205 seconds)
    (28/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.510672535 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.205106346 seconds)
    (30/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.489966692 seconds)
    (31/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.492286843 seconds)
    (32/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.504873739 seconds)
    (33/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.510926498 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.488105105 seconds)
    (35/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.472463531 seconds)
    (36/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.511944642 seconds)
    (37/286) benchmarking ("sort", Int64, true)...
    done (took 2.48170027 seconds)
    (38/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.964773915 seconds)
    (39/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.801118876 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.218725075 seconds)
    (41/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.920691257 seconds)
    (42/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.491557043 seconds)
    (43/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.494362074 seconds)
    (44/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.471904136 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.836640741 seconds)
    (46/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.47306827 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 2.150837223 seconds)
    (48/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.474717387 seconds)
    (49/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.502698994 seconds)
    (50/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.489951195 seconds)
    (51/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.528077533 seconds)
    (52/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.503921856 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.483354751 seconds)
    (54/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.711776068 seconds)
    (55/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.475457267 seconds)
    (56/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.894664059 seconds)
    (57/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.489531926 seconds)
    (58/286) benchmarking ("map", identity, Float32, false)...
    done (took 2.12983038 seconds)
    (59/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.49567006 seconds)
    (60/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.473640968 seconds)
    (61/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.682584534 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.484733002 seconds)
    (63/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.47747957 seconds)
    (64/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.522606506 seconds)
    (65/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.478190692 seconds)
    (66/286) benchmarking ("sort", Float64, false)...
    done (took 2.492977734 seconds)
    (67/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.477539598 seconds)
    (68/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.482556783 seconds)
    (69/286) benchmarking ("map", abs, Int8, true)...
    done (took 2.154397176 seconds)
    (70/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.488351809 seconds)
    (71/286) benchmarking ("map", identity, Bool, true)...
    done (took 2.132322508 seconds)
    (72/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.573156437 seconds)
    (73/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.474465227 seconds)
    (74/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.895360258 seconds)
    (75/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.787604003 seconds)
    (76/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.972983337 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 2.484282801 seconds)
    (78/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.551949008 seconds)
    (79/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.478383583 seconds)
    (80/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.510468422 seconds)
    (81/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.492566049 seconds)
    (82/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.709155366 seconds)
    (83/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.49534605 seconds)
    (84/286) benchmarking ("map", abs, Bool, true)...
    done (took 2.143526145 seconds)
    (85/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.85707094 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.34019829 seconds)
    (87/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.510456312 seconds)
    (88/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.470312398 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.339867846 seconds)
    (90/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.494371501 seconds)
    (91/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.48922215 seconds)
    (92/286) benchmarking ("sort", Int8, true)...
    done (took 2.516665195 seconds)
    (93/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.494886417 seconds)
    (94/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.480785152 seconds)
    (95/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.742447382 seconds)
    (96/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.532154745 seconds)
    (97/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.488730024 seconds)
    (98/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.506850967 seconds)
    (99/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.796188402 seconds)
    (100/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.487993946 seconds)
    (101/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.524362769 seconds)
    (102/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.924069747 seconds)
    (103/286) benchmarking ("perf_countequals", "Float32")...
    done (took 2.168636626 seconds)
    (104/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.654025632 seconds)
    (105/286) benchmarking ("sort", Float64, true)...
    done (took 2.487504795 seconds)
    (106/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.706347225 seconds)
    (107/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.825509933 seconds)
    (108/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.489002757 seconds)
    (109/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.793909957 seconds)
    (110/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.931130846 seconds)
    (111/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.836011305 seconds)
    (112/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.34315408 seconds)
    (113/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.498292962 seconds)
    (114/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.499539613 seconds)
    (115/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.478244321 seconds)
    (116/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.498999759 seconds)
    (117/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.492125315 seconds)
    (118/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.734522373 seconds)
    (119/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.498870475 seconds)
    (120/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.964125537 seconds)
    (121/286) benchmarking ("sort", Bool, false)...
    done (took 2.067527451 seconds)
    (122/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.705577594 seconds)
    (123/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.480475339 seconds)
    (124/286) benchmarking ("perf_countequals", "Int64")...
    done (took 2.194354682 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.480945948 seconds)
    (126/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.756262359 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 2.205306108 seconds)
    (128/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.494810867 seconds)
    (129/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.806177939 seconds)
    (130/286) benchmarking ("sort", BigInt, false)...
    done (took 2.489548686 seconds)
    (131/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.481189424 seconds)
    (132/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.497746751 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.493479708 seconds)
    (134/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.702941003 seconds)
    (135/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.488641261 seconds)
    (136/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.80045121 seconds)
    (137/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.942042849 seconds)
    (138/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.824942831 seconds)
    (139/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.47989763 seconds)
    (140/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.480427742 seconds)
    (141/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.506212308 seconds)
    (142/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.513844779 seconds)
    (143/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.480346281 seconds)
    (144/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.509496932 seconds)
    (145/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.803177121 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.490513638 seconds)
    (147/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.485567022 seconds)
    (148/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.729830176 seconds)
    (149/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.272104201 seconds)
    (150/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.798201526 seconds)
    (151/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.580253794 seconds)
    (152/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.482115186 seconds)
    (153/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.485449576 seconds)
    (154/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.921282065 seconds)
    (155/286) benchmarking ("sort", Float32, false)...
    done (took 2.490214792 seconds)
    (156/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.486944524 seconds)
    (157/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.511319693 seconds)
    (158/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.428294702 seconds)
    (159/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.513700753 seconds)
    (160/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.48118917 seconds)
    (161/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.490035256 seconds)
    (162/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.907019279 seconds)
    (163/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.561380854 seconds)
    (164/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.489617049 seconds)
    (165/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.515290583 seconds)
    (166/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.799399562 seconds)
    (167/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.482120424 seconds)
    (168/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.809937261 seconds)
    (169/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.482787314 seconds)
    (170/286) benchmarking ("map", identity, Int8, true)...
    done (took 2.140149421 seconds)
    (171/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.49673026 seconds)
    (172/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.489247195 seconds)
    (173/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.192910707 seconds)
    (174/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.507264263 seconds)
    (175/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.809615026 seconds)
    (176/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.486519676 seconds)
    (177/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.49416228 seconds)
    (178/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.496103907 seconds)
    (179/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.483738719 seconds)
    (180/286) benchmarking ("sort", Int8, false)...
    done (took 2.492980902 seconds)
    (181/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.489183232 seconds)
    (182/286) benchmarking ("sort", Bool, true)...
    done (took 2.493953005 seconds)
    (183/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.728024512 seconds)
    (184/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.482881139 seconds)
    (185/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.487118091 seconds)
    (186/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.502171025 seconds)
    (187/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.423640489 seconds)
    (188/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.495570056 seconds)
    (189/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.864611097 seconds)
    (190/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.495986065 seconds)
    (191/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.498507793 seconds)
    (192/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.487822945 seconds)
    (193/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.54337812 seconds)
    (194/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.500527116 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.500142711 seconds)
    (196/286) benchmarking ("perf_countequals", "Float64")...
    done (took 2.199627487 seconds)
    (197/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.498524311 seconds)
    (198/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.491105327 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.522951481 seconds)
    (200/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.506323925 seconds)
    (201/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.492420888 seconds)
    (202/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.496680932 seconds)
    (203/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.487975925 seconds)
    (204/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.480867286 seconds)
    (205/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.526560995 seconds)
    (206/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.483481903 seconds)
    (207/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.718888054 seconds)
    (208/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.292432059 seconds)
    (209/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.733202333 seconds)
    (210/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.761057433 seconds)
    (211/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.484548065 seconds)
    (212/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.498406996 seconds)
    (213/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.85570121 seconds)
    (214/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.485405097 seconds)
    (215/286) benchmarking ("map", abs, Float32, false)...
    done (took 2.159732848 seconds)
    (216/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.725217039 seconds)
    (217/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.507588659 seconds)
    (218/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.500699915 seconds)
    (219/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.482859295 seconds)
    (220/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.487689164 seconds)
    (221/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.864943472 seconds)
    (222/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.749055611 seconds)
    (223/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.484497588 seconds)
    (224/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.498264867 seconds)
    (225/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.48680802 seconds)
    (226/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.759797978 seconds)
    (227/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.493859523 seconds)
    (228/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.813681103 seconds)
    (229/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.919183887 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.49979268 seconds)
    (231/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.499058804 seconds)
    (232/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.516143736 seconds)
    (233/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.51948568 seconds)
    (234/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.510515142 seconds)
    (235/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.569782274 seconds)
    (236/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.881373797 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.490860274 seconds)
    (238/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.492188375 seconds)
    (239/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.483106385 seconds)
    (240/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.493829118 seconds)
    (241/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.926172362 seconds)
    (242/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.502817692 seconds)
    (243/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.50850063 seconds)
    (244/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.489905313 seconds)
    (245/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.487389632 seconds)
    (246/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.793578372 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.460890406 seconds)
    (248/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.005842063 seconds)
    (249/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.521115444 seconds)
    (250/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.488634447 seconds)
    (251/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.918253738 seconds)
    (252/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.497438397 seconds)
    (253/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.713612676 seconds)
    (254/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.486333145 seconds)
    (255/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.493821575 seconds)
    (256/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.483867966 seconds)
    (257/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.508174564 seconds)
    (258/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.483766933 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.763649697 seconds)
    (260/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.520578195 seconds)
    (261/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.740676263 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.758850802 seconds)
    (263/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.711089797 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.849520915 seconds)
    (265/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.92947567 seconds)
    (266/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.486864044 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.51946093 seconds)
    (268/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.484299807 seconds)
    (269/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.487468134 seconds)
    (270/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.800495501 seconds)
    (271/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.882474035 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.734408168 seconds)
    (273/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.486923363 seconds)
    (274/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.501214546 seconds)
    (275/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.51726798 seconds)
    (276/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.49983648 seconds)
    (277/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.864245676 seconds)
    (278/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.529381595 seconds)
    (279/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.486681079 seconds)
    (280/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.526172992 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.813355039 seconds)
    (282/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.486739115 seconds)
    (283/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.485038072 seconds)
    (284/286) benchmarking ("sort", Float32, true)...
    done (took 2.493787657 seconds)
    (285/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.857165355 seconds)
    (286/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.496836029 seconds)
  done (took 649.759479287 seconds)
done (took 651.141005042 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.546475319 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.55100493 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.511658431 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.542368733 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.619184437 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.694882619 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.52214428 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.552102079 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.559252347 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.559328062 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.514545145 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.696209584 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.50846109 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.508704986 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.50982733 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.549951127 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.512825532 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.509036299 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.504659929 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.547520966 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.504522128 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.512382527 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.559703955 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.695603206 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.512777116 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.516193102 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.51144694 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.510957609 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.6199802 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.512011612 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.515923766 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.517690294 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.501231103 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.512416338 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.507369357 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.512829338 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.520475706 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.523964777 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.547032178 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.619239082 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.49860676 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.516407112 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.50804419 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.514207853 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.512152689 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.553076806 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.510680675 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.570969054 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.552067155 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.551995562 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.502096587 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.529183654 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.519539004 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.512934591 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.524025245 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.511095493 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.571393431 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.55432067 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.52174387 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.554405021 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.500250691 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.519372075 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.556137459 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.507024219 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.516176697 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.502747912 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.515480354 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.555946388 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.50092394 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.521358201 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.501688242 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.522882685 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.518227031 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.523359354 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.541837351 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.506389695 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.507686293 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.513964243 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.517860217 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.508862255 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.563256274 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.550612763 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.564146334 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.514057137 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.551671395 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.70217318 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.527776295 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.512390904 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.55205375 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.522442771 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.520738004 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.523940162 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.548759023 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.519256788 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.564016707 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.574731667 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.522937657 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.51850594 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.563526622 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.528123382 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.500370566 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.562583395 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.512889436 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.509484673 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.514456548 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.63462738 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.50206232 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.516331706 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.55114146 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.566034567 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.575114468 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.501766735 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.517657272 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.559806268 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.52913862 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.577124527 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.519003199 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.509724721 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.518198605 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.63299747 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.519195 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.519625203 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.559231313 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.575302692 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.518818205 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.5029271 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.518938245 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.555922802 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.633389602 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.530063985 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.624519949 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.51293203 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.519407408 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.562670422 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.561620704 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.545853607 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.579329579 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.558571975 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.512545743 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.518615 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.523417215 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.530663308 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.519467207 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.578545951 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.518119194 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.562131911 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.557783878 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.557767053 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.550308944 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.636043145 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.521002496 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.511632189 seconds)
done (took 251.354532303 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.6352554 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.512077041 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.647576754 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.515209485 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.673558443 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.649471522 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.514448686 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.516364381 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.513354127 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.329704929 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.515488578 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.513818133 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.509859303 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.51739935 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.6388432 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.51558523 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.514631535 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.237395726 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.518338536 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.650381306 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.510546206 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.516507001 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.517189539 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.337398254 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.512207399 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.511051654 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.650235936 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.517906028 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.239879103 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.507670096 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.511971782 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.242947487 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.651962657 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.537886075 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.526006486 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.526386036 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.67159625 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.532066728 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.631989678 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.630446845 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.64942426 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.557332678 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.506921382 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.513292107 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.520933338 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.518978589 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.515776549 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.544114975 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.513106132 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.516736294 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.231076 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.52731215 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.515927733 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.516992383 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.518710148 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.547865544 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.518056882 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.521007355 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.654677856 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.520452084 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.63597413 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.341264737 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.340107245 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.518872157 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.512670562 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.5182879 seconds)
  done (took 120.623345452 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.579598227 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.588818222 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.634417276 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.529625977 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.566687995 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.639307328 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.529275823 seconds)
  done (took 12.471806228 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.522278394 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.519301658 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.572015855 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.56558256 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.52089283 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.669056111 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.520070516 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.525518846 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.520723097 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.568765942 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.524534369 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.521305512 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.531748031 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.514325583 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.565057446 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.528483734 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.635094121 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.517579571 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.522864234 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.673549726 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.52257894 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.531383345 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.582343963 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.527744178 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.521362918 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.524484584 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.289804711 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.522167123 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.521490767 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.521269468 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.522624283 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.571594219 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.523432665 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.513944995 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.523607476 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.631646774 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.52336054 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.52191073 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.521388118 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.51826973 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.521148211 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.522492761 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.522420601 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.521195568 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.521130539 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.539914564 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.522277957 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.517966601 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.519372794 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.522848748 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.567902696 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.524374231 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.521969903 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.522943531 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.573878437 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.532586669 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.522431295 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.523355043 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.523241179 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.522353779 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.676421074 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.566476988 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.52350954 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.567785743 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.524376573 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.522866835 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.523647637 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.520310386 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.608285709 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.523419915 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.56621493 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.522432729 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.702145485 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.546002753 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.526137449 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.520890284 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.522248539 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.525526947 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.517868627 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.527323878 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.523099553 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.519986084 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.52648275 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.525438456 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.524245018 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.677203063 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.627498348 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.522702549 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.532245893 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.527693717 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.52360204 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.571022332 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.52582474 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.522988834 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.577165533 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.634276958 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.589149747 seconds)
  done (took 155.934571794 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.531788515 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.532860174 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.525593641 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.547134742 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.522884033 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.522290428 seconds)
  done (took 10.592636238 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.523961816 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.527328625 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.526301965 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.525689163 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.526152913 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.526220441 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.526576109 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.522867486 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.532269934 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.528615443 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.52798696 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.52888314 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.529022642 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.528149133 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.52856238 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.527079707 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.524741721 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.527687382 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.526372902 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.527539469 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.517841876 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.528481185 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.528882564 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.524716134 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.528808968 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.525487413 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.541430138 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.528257513 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.526140749 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.529320494 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.547409668 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.529898271 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.523488004 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.528005668 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.531348806 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.525723398 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.532222576 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.529306156 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.527904659 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.523823503 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.528590543 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.528592645 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.529421522 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.528714279 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.525119498 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.528146748 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.534289215 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.542504907 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.530605374 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.529243585 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.529224242 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.528553101 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.527766759 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.529423455 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.528014081 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.547686147 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.53471267 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.530500604 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.529861991 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.525439997 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.532969541 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.530123745 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.525577617 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.533878613 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.52805814 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.529748664 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.526376785 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.533708345 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.530512218 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.53054817 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.530404752 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.531612026 seconds)
  done (took 112.51382107 seconds)
done (took 413.53579823 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.615547194 seconds)
  done (took 4.029011198 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.685146498 seconds)
  done (took 4.103328612 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.972260041 seconds)
  done (took 26.39832895 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.571711189 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.608428725 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.562682569 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.527804703 seconds)
  done (took 11.687017497 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.95347398 seconds)
  done (took 4.369901846 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.528184983 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.52479223 seconds)
  done (took 6.472112782 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.898067459 seconds)
  done (took 4.315533909 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.770887921 seconds)
  done (took 4.19197204 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.553199462 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.540789784 seconds)
  done (took 6.520339909 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.512019292 seconds)
  done (took 3.92911074 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 33.541419296 seconds)
  done (took 34.959242793 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.530776909 seconds)
  done (took 3.952234183 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.55245357 seconds)
  done (took 3.968987459 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.716501641 seconds)
  done (took 7.132840663 seconds)
done (took 127.444922828 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.523206525 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.522467367 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.520699235 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.519274561 seconds)
  done (took 11.501877702 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.585458354 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.586337719 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.585801351 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.583913606 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.584556957 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.586061333 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.55890318 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.557602799 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.585148811 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.58456234 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.5858333 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.583634878 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.581506341 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.558857929 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.584975003 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.585839953 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.586529831 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.585691931 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.560717507 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.586350389 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.532025155 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.584319702 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.584821339 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.533564001 seconds)
  done (took 39.251990931 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.026530073 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.604824799 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.686431612 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.586110153 seconds)
  done (took 8.322951924 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.611628046 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.611132687 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.625261403 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.668461407 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.675111137 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.639263065 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.561930068 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.555644288 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.541044649 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.61109564 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.662797789 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.604588237 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.689144478 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.533319604 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.741346193 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.532559582 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.532094367 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.612127569 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.662866842 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.674697457 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.531945777 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.611298479 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.611223578 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.601794379 seconds)
  done (took 40.123471414 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.544176461 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.549520436 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.535874093 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.55082584 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.534894839 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.536837037 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.538691768 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.540764948 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.53476836 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.537005984 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.5372141 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.549849038 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.54252208 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.535360412 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.543139974 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.536963471 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.545449668 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.535863722 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.534427244 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.542002913 seconds)
  done (took 32.227021137 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.527386452 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.52537767 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.876750236 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.790765308 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.529110746 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.524539106 seconds)
  done (took 15.195577392 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.617487586 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.780214809 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.5287818 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.950286906 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.030887867 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.532394737 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.533088909 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.814640748 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.190303504 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.185896193 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.605034067 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.609790952 seconds)
  done (took 22.801080109 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.540778976 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.531914549 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.536855892 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.544728711 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.596710988 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.552552759 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.538482609 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.527851186 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.599948529 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.617490205 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.554775507 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.596491513 seconds)
  done (took 24.162927653 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.625087173 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.529547096 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.52950662 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.560788862 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.53501748 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.376443892 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.530663353 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.307164712 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.556159963 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.805024478 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52752889 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63250172 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.785044683 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532006982 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.536985382 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.520462594 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.789854648 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102245521 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.54153762 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531476083 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.572034876 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.538848813 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.537262221 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.78343242 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.538601349 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.531752852 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.797349583 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.534097916 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856250021 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.550666985 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.541048108 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.532516266 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.810479839 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.264133872 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.655503833 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776027996 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.559487074 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.538740195 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.527936149 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.542155107 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.539700784 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.557794616 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.541935883 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533675771 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.533519973 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.544609444 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317100827 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.559657181 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.53293887 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.532097403 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.83310058 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63746719 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.539400961 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.534905515 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.588743703 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.541144487 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.542357975 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.669144052 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.142590551 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.553106544 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542105552 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.559838739 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.549660114 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544434896 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218792244 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.54716285 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.540408246 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.543181339 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534528572 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.540598568 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.559870424 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536145411 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.560474426 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53567215 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349734799 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.541846807 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.543591185 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173790829 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.543412461 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.538929382 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.767254908 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.535554461 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536745221 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.535572508 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.537435738 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.372301439 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.549041733 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.52476049 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.579615152 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.328017267 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.80029376 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.558206947 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.566201391 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.756286695 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.52343313 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.538700648 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.535728741 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545757935 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.555140274 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.333120058 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.558967051 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.541350492 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.793944558 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.747193446 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.55240247 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.537560172 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070872546 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.557528902 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.558294435 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.551885569 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.785622377 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.183698819 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.55932955 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.551746439 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.562198698 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.536650713 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.415220688 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.547692055 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.643398668 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.540777009 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.839142158 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.4644035 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.545572908 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.606331329 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.542454221 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.541064602 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.548046971 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.546392496 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.541486823 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.777554639 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.579411627 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.554760035 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.541994212 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.539830769 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.545485795 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.54863975 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.545298451 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.763133885 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.541578752 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.81793625 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.541211488 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.541229279 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.537382968 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.760693363 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.553025239 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.883127139 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.802701666 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.55373297 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.56222941 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.556133998 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.558002179 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.642834266 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.562216465 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.557114281 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.799834669 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.54561784 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.550356589 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.548419601 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.549463302 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.550341709 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.551165954 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.539540928 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.191326408 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52349661 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.547026303 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.432897253 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.559624795 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.608678009 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.549415707 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.789021857 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.550981747 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.549829069 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.555305673 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.556014809 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.772092808 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.549287988 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.554462579 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.625950764 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.090133753 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.211596185 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.579557415 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.543927676 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.542393064 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.54074558 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544387178 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544432409 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.54417933 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786087897 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.560987864 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.539355384 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.191426115 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.551547413 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.549997278 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.556395666 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.553760732 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.552949869 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544935504 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.551332185 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.563589319 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.568023151 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.559280571 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.688699029 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.559375543 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.543704104 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.063788692 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.549631708 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.544619344 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.54633337 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.580237575 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.554921506 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420297963 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.805090266 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.538875081 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.849837182 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.561890245 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.566373459 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.543345945 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.548797551 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.567036119 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.554730668 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.572433618 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.555904442 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.555185265 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.552974248 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122700241 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384817395 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.145327868 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.550661223 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.586125007 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.547957764 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.322897545 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.562802135 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.545137044 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.811730573 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.34217627 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.56466333 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076166702 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.564096728 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.446424376 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.844676682 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.7875489 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.549546908 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.55787639 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.857362205 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.762424264 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.581304763 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.581267572 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.551675665 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.530328471 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.155863846 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.566767798 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.631723392 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351667018 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.576258844 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.549858552 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.628911781 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.543869745 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.045933264 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.57030853 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.546975824 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.564394329 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.562951876 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422129338 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.552501888 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.550014295 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236820304 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.558921476 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.083632555 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.568172042 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.793102237 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.564385206 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.55241772 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.556050606 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.557298757 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.805507003 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.848774499 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.555901443 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.559723488 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.164374217 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.435150588 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.56000405 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.550068472 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.422226827 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.557022149 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876271987 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.565994621 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.554218625 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.552089282 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.551084654 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.550431345 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.547536457 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.556343373 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525793375 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.11216762 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.544870626 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.550164892 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.583812578 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.552507727 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.803563293 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.565529377 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.205687212 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.776501657 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.549786031 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.594097331 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.556181873 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.565804015 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.545277121 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.551776631 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.552490411 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.587192406 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.77469059 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.55056414 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.542029277 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.564420817 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.759392545 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.550726995 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.569464169 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.824454891 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.554690725 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.569881763 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366042053 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.581345188 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.552370033 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.551209348 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.54830053 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590749252 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.622359943 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.797085028 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.565135654 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.563014959 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.024121658 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.574390401 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.571166931 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.567611601 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.647010085 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.551592698 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.565811528 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.329465431 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.207946939 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345017 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.206659997 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.85354757 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.550825587 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.552653083 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.554364154 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.712069437 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.551834374 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.826271615 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.550617861 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.546401847 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.592713768 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.565636494 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.574685155 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.764885944 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.827371486 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.55280374 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.557140149 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.55941014 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.552981713 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.563012962 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.76258296 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.129838008 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195718261 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.552949002 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.569238292 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.380022246 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.852802235 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.555026554 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.554936976 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.554395126 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.57284263 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.578504819 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.566074168 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.571613965 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.703486075 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854447787 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.293552125 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.587159664 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.584786962 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.07501475 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.554793602 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.811519251 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.552646031 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.804901842 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.216977175 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.350167865 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.822404232 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.622694296 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.801527351 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.559283655 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.71534432 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.555783527 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.551430107 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.554857491 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.555949345 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.554886883 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.566243521 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.218989618 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.826409448 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.559177779 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.556616614 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.583129126 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.565233963 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.777644226 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.401246344 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.784362764 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566306481 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.566667507 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.556468971 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.221078164 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.862702133 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.561231332 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.559542073 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831513885 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.56196942 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580649534 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.248523488 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.557725591 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.201182845 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.536467498 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.577843526 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.557421933 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378993932 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.224021799 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.566227806 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133135924 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.563978918 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.56288311 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.83653592 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.563501352 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.577400688 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.839741009 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.56268804 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.558350216 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.811713712 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.221872647 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.438055335 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.57318257 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.580661439 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.562078285 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.56015277 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.579003594 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.558986186 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.557232067 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.047335134 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.582003052 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.560331031 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.569402514 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.568044205 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.556523069 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.564010332 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.561764276 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.564648264 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.561866531 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.564280648 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.565501386 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.721752245 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.167788951 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.578765474 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.23916295 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.882581059 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.815446677 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.558151241 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.550954042 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.565682703 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.561557641 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.560049289 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.557921671 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.557886325 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.19939073 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.565408094 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.59134353 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.567906836 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.561370629 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.774259903 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.575578956 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.8122282 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.564826132 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.604381365 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.546859519 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.56173511 seconds)
  done (took 1066.1365475 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.577495606 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.590978946 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.572711829 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.611677936 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.602502088 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.58233459 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.571020506 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.61701918 seconds)
  done (took 22.172838911 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.56277603 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.561890471 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.565296669 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.562418833 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.563442686 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.105023973 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.579216142 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.564049736 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.582740522 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.576429588 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.567412013 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.370891795 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.569593319 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.569911074 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.565720072 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.563843009 seconds)
  done (took 35.884432018 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.836737971 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.83186118 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.057852061 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.645783995 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.553239969 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.57391555 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.950127231 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.577770795 seconds)
  done (took 29.477317288 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.570367507 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.567809748 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.568375451 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.569867632 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.568838881 seconds)
  done (took 9.295323436 seconds)
done (took 1357.969245775 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.567717166 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.567914272 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.56964482 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.569815244 seconds)
  done (took 7.722840818 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.551980485 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.554121898 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.559375269 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.567945659 seconds)
  done (took 10.681752809 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.389347637 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.303221647 seconds)
  done (took 6.141513349 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.567367449 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.328318132 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.30461678 seconds)
  done (took 8.650339075 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.874678559 seconds)
  done (took 3.323115302 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.980328891 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.065433933 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.7496442 seconds)
  done (took 7.245922795 seconds)
done (took 45.213154906 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.559846024 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.825192298 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.719209474 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.561042737 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.720138049 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.726529586 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.292758247 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.574044063 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.562110191 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.5658407 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.558145473 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.71957041 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.281489348 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.807632794 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.281968362 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.810799882 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.722593033 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.567737 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.573273889 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.561170599 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.292521238 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.565474044 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.561120347 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.557235395 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.739971548 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.706506835 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.574189158 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.806485783 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.562476189 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.577508219 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.710161237 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.565362625 seconds)
  done (took 88.659829274 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.562578358 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.585963125 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.58089467 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.595431437 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.563364636 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.565528188 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.580034312 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.578931718 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.570231104 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.580619384 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.56680563 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.564840712 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.569118765 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.564550401 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.566346837 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.565576991 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.584642484 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.564147367 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.566252368 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.56702479 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.566898875 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.577842914 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.566908994 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.586230341 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.567144274 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.560493066 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.580893823 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.581273948 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.560545011 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.559720772 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.569490939 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.58287282 seconds)
  done (took 83.757153539 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.562447333 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.58891849 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.570382216 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.567460273 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.565144182 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.569021764 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.571009072 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.584229333 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.5675651 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.577140978 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.564373353 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.570917891 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.566889218 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.569832074 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.570255254 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.56978426 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.568212478 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.569884641 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.590812335 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.568152313 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.571375155 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.582156375 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.586762328 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.573020658 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.570543052 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.568077272 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.598603718 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.584846239 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.567174869 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.592059054 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.568872262 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.58795438 seconds)
  done (took 83.840280383 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.851231097 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.577576688 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.579445262 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.570161028 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.579036705 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.575195798 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.571416601 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.85446428 seconds)
  done (took 16.613128265 seconds)
done (took 274.317036432 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.569805386 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.587548893 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.146680178 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.615902258 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.578920987 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.589473969 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.596720624 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.820655405 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.59187856 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.827122619 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.612642677 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.589364368 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.584509457 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.593142592 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.500171602 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.733120485 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.497144665 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.570945921 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.564421199 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.591454296 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.209787154 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.577653125 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.885890381 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.571052771 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.591478447 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.593171405 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.585714689 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.531514032 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.619332219 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.57434007 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.567316162 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.563508204 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.668529905 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.689644617 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.815497056 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.752894017 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.5757097 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.665629907 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.163032966 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.576917355 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.570852497 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.590461399 seconds)
  done (took 95.1577466 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.575687585 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.701368427 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.578537079 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.580469199 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.580308549 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.709708806 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.683865927 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.581758592 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.579922004 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.574761071 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.575348052 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.582151283 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.580277781 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.581485844 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.581956925 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.579625396 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.576320884 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.578677298 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.582250793 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.632641395 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.70904561 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.608358052 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.576149805 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.574275578 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.693079509 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.72564172 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.578293572 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.574666727 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.632410945 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.584759138 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.582688124 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.632862649 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.582225783 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.583132104 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.704125954 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.689737711 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.60455255 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.587203994 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.708007921 seconds)
  done (took 64.386519249 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.583008337 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.249457128 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.410477154 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.58825009 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.578304019 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.582492248 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.918432135 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.583641006 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.583363793 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.580963916 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.132867825 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.58041641 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.61679477 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.440940006 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.579788699 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.580687893 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.583757302 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.580719557 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.257123823 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.591043281 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.940405237 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.587214261 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.917557086 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.593237287 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.601573882 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.581179316 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.583348226 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.483552676 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.608936463 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.141794703 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.513947335 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.917555538 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.410379464 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.443463152 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.51622493 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.590467619 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.585293933 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.142137466 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.58532868 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.581179209 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.919049729 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.586167126 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.419236775 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.2974227 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.60014693 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.586182417 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.503170404 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.167164719 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.870234313 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.592306595 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.443004665 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.588732984 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.587984359 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.58419884 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.869990892 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.587302417 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.581320969 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.511603416 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.607062321 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.921992808 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.589132851 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.583709209 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.255021402 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.584153821 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.25141401 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.587277192 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.587805278 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.603433601 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.425422245 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.587301258 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.308878669 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.605675099 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.586625563 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.144054144 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.257767325 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.553903644 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.582290499 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.259764167 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.430605254 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.938643231 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.59002224 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.438530433 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.941112726 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.588988983 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.587091991 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.587933963 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.587956928 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.666430146 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.919415996 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.25250586 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.302674444 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.512592731 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.943989998 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.593095716 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.584448883 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.521268288 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.607736709 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.589487609 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.419974377 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.313083937 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.607360136 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.591076529 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.331188128 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.611188468 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.927869925 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.591950542 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.437556984 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.589095418 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.666336339 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.590384151 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.590412085 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.606409416 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.925876599 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.59072933 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.587873881 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.297473513 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.175905794 seconds)
  done (took 221.207711907 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.579596989 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.577822175 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.581593765 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.575018811 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.577636929 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.586753927 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.579781312 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.580581006 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.585946035 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.58059939 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.578459243 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.584048631 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.582534287 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.587723932 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.588724585 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.586015986 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.580642223 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.581572466 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.58195838 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.598465167 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.596556366 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.583448358 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.580745152 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.594721137 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.578409893 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.581992569 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.587247058 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.579986237 seconds)
  done (took 69.806478969 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.590794627 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.257204274 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.592067589 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.214691545 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.594362621 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.591878857 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.174588989 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.667983876 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.59437105 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.590259284 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.590960773 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.948168834 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.593322029 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.181681912 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.805395579 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.202746121 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.222069484 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.607819083 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.592175606 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.593822465 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.2144453 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.586764704 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.950541593 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.26218295 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.595658455 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.26152523 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.585375933 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.593376512 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.587382586 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.259782172 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.596399998 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.956272772 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.931653319 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.659095859 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.26525391 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.181313255 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.200391937 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.203556794 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.603396148 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.594369295 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.595626871 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.582324519 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.249854368 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.593342842 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.592793853 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.264178783 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.615318213 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.594503795 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.606360987 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.592872891 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.658832076 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.663025084 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.943734908 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.267812369 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.934039 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.605559813 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.179385457 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.773681538 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.595165227 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.179706685 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.582406858 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.248317942 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.610798395 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.584932997 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.59929928 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.600405197 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.224712408 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.205470128 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.197462226 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.608028998 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.181004281 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.237202785 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.61092422 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.595374993 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.597331333 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.242647709 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.17872888 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.239534272 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.229460095 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.790900045 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.590060194 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.593859422 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.587449278 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.928247862 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.594921209 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.251663959 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.198651259 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.613371276 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.598038927 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.597447454 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.598046652 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.796505475 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.26304921 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.925181927 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.188812342 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.957472617 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.937501865 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.592608036 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.666573593 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.618798077 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.94380944 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.59648005 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.666134262 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.024276119 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.946241111 seconds)
  done (took 195.494120242 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.899965889 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.609710716 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.700279191 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 2.050496017 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.251959067 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.299835697 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.594267662 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.742802789 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.72248924 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.880307826 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.596025202 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.668111844 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.324911606 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.717412705 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.392438895 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.69485247 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.710087371 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.755663016 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 2.039837921 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.607438473 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.354329435 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.434165042 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.323454081 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.588521896 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.704217466 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.466272891 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.271712044 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.168249367 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.836793123 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.591308861 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.22531011 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.615924614 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.59418447 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.356405618 seconds)
  done (took 75.265898543 seconds)
done (took 722.772931566 seconds)
SAVING RESULT...
DONE!
