cset: moving following pidspec: 15482
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.004931438 seconds)
loading group "string"... done (took 0.575947363 seconds)
loading group "linalg"... done (took 9.316402277 seconds)
loading group "parallel"... done (took 0.177636445 seconds)
loading group "find"... done (took 1.393140781 seconds)
loading group "tuple"... done (took 2.275793584 seconds)
loading group "dates"... done (took 1.423992534 seconds)
loading group "micro"... done (took 0.238472578 seconds)
loading group "io"... done (took 0.655311821 seconds)
loading group "scalar"... done (took 44.313168321 seconds)
loading group "sparse"... done (took 13.887430876 seconds)
loading group "broadcast"... done (took 1.208999574 seconds)
loading group "union"... done (took 15.968824278 seconds)
loading group "simd"... done (took 5.255100274 seconds)
loading group "random"... done (took 10.922499831 seconds)
loading group "problem"... done (took 2.327916353 seconds)
loading group "array"... done (took 27.206216685 seconds)
loading group "misc"... done (took 1.265422998 seconds)
loading group "sort"... done (took 3.988384996 seconds)
loading group "collection"... done (took 24.223955939 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.751708887 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.155411644 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.173847737 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.222601386 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.237234755 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.15982865 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.186031826 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.628063957 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.098641421 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.262302668 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.170554248 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.701899554 seconds)
done (took 6.501781383 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.262731918 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.091922239 seconds)
    (2/2) benchmarking "String"...
    done (took 0.156408237 seconds)
  done (took 0.91837199 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.090923656 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.222687639 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.123374217 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.138496482 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.139324534 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.122299117 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.138817055 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.138509235 seconds)
  done (took 1.698453107 seconds)
done (took 3.652216659 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.979081787 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.87971675 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.614913131 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.15407742 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.195739298 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.173520398 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.396984217 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.177081287 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.134480474 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.13587157 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.209309664 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.367655795 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.588119013 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.075467892 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.119213332 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.145946465 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.099632458 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.725929965 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.099878146 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.129722665 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.664097233 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.144333012 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.137994235 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.142127733 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.232504489 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138282349 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.20196443 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.133767952 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.680312469 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.120757497 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.209497644 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.118424441 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.185024635 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.299257284 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.099461719 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.125378118 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.691435135 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.214565698 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.133235925 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.112435253 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.69986634 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.100958528 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.234075046 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.143786043 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.13494343 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.212307785 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.125443859 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.114009812 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.122656424 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.109120058 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.184370388 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.478018779 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.123997446 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.16926421 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.110779983 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.722905371 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.115646818 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.174704686 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.143496829 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.127231177 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.115886315 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.11749682 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.186782151 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.120025503 seconds)
  done (took 21.802499117 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.147421719 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.171622739 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.111778926 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.165737493 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.174176358 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097337325 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.120032346 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09495772 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.15453693 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.223306115 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.169856581 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.175675334 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092211457 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.113560721 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.124573724 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.277480562 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.143002874 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.127876688 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.113886319 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.111071859 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.167650691 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.116783018 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.133201352 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.134188478 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.194290918 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.222793234 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.12735696 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.141094575 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.111373279 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.125502153 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.160741702 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.188730193 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092651128 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.11128107 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.218747665 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122558304 seconds)
  done (took 5.967291094 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.138185521 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.243930748 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.118319046 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.261479384 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.231440525 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.183550602 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.213671196 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.141980203 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.300613413 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.276630967 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.209750862 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.147156743 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115490176 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112498463 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097469525 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.0934393 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 2.158932123 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.163751552 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.217838309 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.155869829 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128135193 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099128561 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.415226194 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.119389954 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.09738257 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.122932096 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.085665522 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.237309891 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104886078 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.706950578 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.099483728 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.135325863 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.113086413 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.14753749 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.152517805 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.151501268 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123342808 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.099902747 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.289317465 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.117707818 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.112425472 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.130277935 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.153684779 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.156357138 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.119988461 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.124153977 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.294667914 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.103617329 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148344463 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.370127718 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.224620341 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.117476854 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.117729793 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.099479204 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.425334347 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.140239477 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.110184335 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.120927197 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.36654071 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.149297995 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.118768166 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.094055645 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.12595638 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.094542803 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.420957515 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.136545752 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.998227663 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.113615578 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.208259313 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119651056 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.115283086 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.155463887 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102928341 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.12443848 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.122658939 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.117845019 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.09475064 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.116355055 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095341041 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.12260966 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.120269102 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.1214031 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.095103096 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.183035743 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.146064671 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.121984068 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142415791 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.10621587 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.115699602 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.145639079 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09923607 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.102994205 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.177295369 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.129707801 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.136838047 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10430672 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.159474893 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.117448786 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.244627346 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.11417361 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.099924351 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.146403877 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.118888612 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131138781 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.148661594 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.114429455 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102520633 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.110722755 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.09854078 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165078153 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.116106461 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.096987951 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.120527187 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.117611447 seconds)
  done (took 27.56184004 seconds)
done (took 56.003190149 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.463338019 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.146941711 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.145535305 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.141680494 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.141126279 seconds)
  done (took 1.791949911 seconds)
done (took 2.510897193 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.4319748 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.255479896 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.121248857 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.245617081 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.108736931 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.262510108 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.221907189 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.125524747 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.283935506 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.103075938 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.244073533 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103427292 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.126852844 seconds)
  done (took 3.391745813 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.113052035 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.140770937 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097002102 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111875789 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.109308066 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111906008 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.128266424 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.141739423 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.125639427 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101688725 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.109165863 seconds)
  done (took 2.004196927 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.108641857 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116970564 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.115258745 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108956465 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.108851203 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108675877 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.126309077 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.12199868 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.126647474 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.105356531 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.108702139 seconds)
  done (took 1.968986402 seconds)
done (took 8.072986009 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.238478885 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.131683703 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.121191377 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.195979732 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.407293725 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.232123894 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.658823879 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.138089128 seconds)
  done (took 13.081164634 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.132060369 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.113315377 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.115762237 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.114326828 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.09920058 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.114554165 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096740694 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.112354712 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.098407885 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.112816962 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.099112713 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.097972116 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.116801181 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.095281942 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.115168573 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.099460936 seconds)
  done (took 2.524414494 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.141294685 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.137872679 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.123818789 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.112562691 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.120020453 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.101973777 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.124164151 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.104910674 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.11869645 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.118265754 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.113665244 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.128312218 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.110930617 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.117070292 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105355253 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.131451324 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.100797919 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.122803044 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106801319 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.123191962 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.129077488 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.104218589 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.127581003 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.112807691 seconds)
  done (took 3.686968909 seconds)
done (took 20.01054477 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.206319836 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102656995 seconds)
  done (took 1.035820757 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.12154927 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.140336725 seconds)
  done (took 0.994869936 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.130948077 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.112476858 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.161415177 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.118399153 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.113228022 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096617854 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.153695602 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.113937254 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097478221 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.113833552 seconds)
  done (took 1.943827095 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.102694311 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.103079551 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.125574628 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.139114602 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.110421901 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.115651442 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.10233348 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.118626668 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.103125224 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.111858675 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.106319241 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.138737701 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.121130897 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.125550462 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.120796116 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.121110506 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.110262985 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.119528681 seconds)
  done (took 2.827269412 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.097005218 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098532133 seconds)
  done (took 0.92646918 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.101871481 seconds)
    (2/7) benchmarking "second"...
    done (took 0.111578942 seconds)
    (3/7) benchmarking "month"...
    done (took 0.100157521 seconds)
    (4/7) benchmarking "year"...
    done (took 0.115815705 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094860743 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.110942157 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094733585 seconds)
  done (took 1.462463558 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.60861019 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.274570235 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.406799521 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.142134115 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.182725177 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.439690967 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.181994247 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.13716702 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.136287005 seconds)
  done (took 3.28843016 seconds)
done (took 13.210399472 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.109288411 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.158698394 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.621603383 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.132731355 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.093495797 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.174825935 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.331072429 seconds)
done (took 2.354485654 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.408596449 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.143817431 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.101833854 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.095250375 seconds)
  done (took 1.479696957 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.097186242 seconds)
    (2/2) benchmarking "read"...
    done (took 0.105569806 seconds)
  done (took 0.941062198 seconds)
done (took 3.159944398 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095285677 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.093111588 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.108490649 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.093694082 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.227316243 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.090485381 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.09263003 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.132629461 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.112980388 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090991152 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.09272908 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.112171743 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092705948 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109357354 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090331252 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092572621 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.109681912 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090122096 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.106945483 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090484549 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090280887 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112240958 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.092651116 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.109439643 seconds)
  done (took 3.326879591 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.121358477 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.112875688 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102732484 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.12026858 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101457061 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.121553695 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102754983 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.114379978 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.102771139 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.116351374 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100097339 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.117741211 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097375853 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.116427899 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097012502 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.117362487 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.118570661 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095020242 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097104629 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.117688115 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.118683289 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095405502 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.117022156 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10131005 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.116546511 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100547855 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.114202794 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.094828107 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118670602 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.100476336 seconds)
  done (took 4.007086595 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.105583554 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.092148974 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.111546224 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.108072584 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.11015829 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096940069 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.112468539 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094475198 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.094311042 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.111655306 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.09558366 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.110946373 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.093113608 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.113311939 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.095502353 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.10189265 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.140240208 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.093606369 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.111074022 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.093166075 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.118638253 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.092961403 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.114381499 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.093462451 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.092603288 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.110732603 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.093897394 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.110519154 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095150851 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091812488 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.118743648 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.100862965 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.11065339 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.110384556 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.120586403 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.09262102 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.12249944 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.092696689 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.112010941 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.091655717 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.089812074 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.110111978 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.09338215 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.126249037 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.09688018 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.093921671 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.112591839 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.094681828 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.112656358 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098403131 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.110262393 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.092997817 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095870268 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.111549121 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098635503 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.108426505 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092222918 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.107705733 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093311604 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.09052764 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.108818955 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.090301514 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.118134561 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.092570454 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.143659788 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.107228063 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.108732623 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.093476327 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.112588103 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.103501741 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.11169772 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.117150908 seconds)
  done (took 8.255662446 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.100161841 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.12272155 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.094570267 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092863788 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107727878 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091930907 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.118979748 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092600038 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11136687 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113145852 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110279111 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094090053 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112645704 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096298297 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110856415 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09498641 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.122575987 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090498944 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.093249403 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114417096 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09250303 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.118264034 seconds)
  done (took 3.045310824 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.288968164 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.121773408 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.176274006 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.11523086 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.139426505 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.132026963 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101301266 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.12064746 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102153932 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.124920125 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10733072 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119162277 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.139330356 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107418541 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124762986 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108322223 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.119966011 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.125789912 seconds)
  done (took 3.122148651 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.113483169 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.112830741 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.125674085 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.115859672 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.097980508 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.11877399 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106639599 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.134164645 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.100450072 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.115624755 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.110554318 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116988415 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.09944315 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116089193 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100928537 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.115913861 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101754862 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11591782 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11182745 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.125034613 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106399399 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.129725336 seconds)
  done (took 3.238817478 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.117098783 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.117599051 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.124189781 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.121335245 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092158669 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.116587949 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105353797 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.112976205 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106972176 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.115034448 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096008382 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.110787973 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.105177738 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113176698 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104517572 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113091513 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097657474 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112497804 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097409294 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.107790148 seconds)
  done (took 2.942185803 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.14902991 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132953597 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.116299691 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.147910805 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132835279 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.116611192 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.147913914 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115495402 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133602042 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135542264 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.133305103 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.132406483 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130988479 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.141756813 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115332362 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.147872413 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.148003098 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129005913 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.133984279 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115562509 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.153482344 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132910472 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.129987734 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.133156876 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.115034012 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133785998 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115516633 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.142226901 seconds)
  done (took 4.462395863 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096316796 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095531469 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.111865191 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09402573 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.112738028 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.093868557 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.092901181 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.111939106 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094227528 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109949634 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.095442335 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.093624762 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.112525132 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.094142467 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.111899229 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.094248737 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093988758 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.110313265 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092318562 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108933738 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.095297052 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111539847 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.094876343 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092555905 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112755229 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097264875 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112221266 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094641319 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095958277 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.112349742 seconds)
  done (took 3.795346214 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.108858544 seconds)
    (2/2) benchmarking "in"...
    done (took 0.121392318 seconds)
  done (took 0.986464737 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.094029005 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.134367428 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.092086349 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.097666786 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.120985541 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.095315998 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.127310836 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.121252131 seconds)
  done (took 1.628090079 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.127428632 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.140658104 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.106132327 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.133552851 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.120664547 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.13975166 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.20724455 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.105059077 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.12354362 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097492284 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.136820401 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.095900412 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.125751246 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103818969 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.125744663 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116454321 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.111506235 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.108146194 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.122046506 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098735108 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10224586 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.13779189 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.129942773 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.107007448 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.117259599 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.112175543 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.135282546 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.110183647 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.121396297 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.114777665 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.122724583 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.08831742 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.118468717 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102402061 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.111505051 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.116624252 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.139300476 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104024056 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.125341782 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10277081 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126801989 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.091711076 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.129971932 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104444248 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.129977793 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.102653103 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.119829935 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.091218926 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097083658 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.119635536 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.090886737 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.119247529 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.089600469 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.127283638 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.11060335 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.143487608 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.097947104 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.121138292 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.101886871 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.118110894 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.104603787 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.121250671 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110285345 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.118331982 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109916578 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.126755044 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107563889 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.109330048 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.088875861 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.111882761 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110807864 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.14492945 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.114474891 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.121170061 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102926534 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.112164351 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104434323 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121702886 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108738951 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.131886505 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100502977 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.123401454 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110274648 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.120423903 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.101452088 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.123734324 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097834115 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.117627547 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098547273 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.147607767 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098625477 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.111986974 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.097836062 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.131426928 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.102309283 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.118321872 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.098243415 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.126100489 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.08982563 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102099419 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.121843366 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105697772 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.135559648 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.12104804 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104348945 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.126962052 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.109641686 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.122404017 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102398576 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.092330382 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121813073 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.098661788 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.125840479 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090105219 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.121862634 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.104409077 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.120533881 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.115333165 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.116727804 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102299629 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.129304692 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.114359444 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.117669099 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.092644625 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.121235847 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101010213 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.125257652 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.115556371 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.116808098 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.091919685 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.091275062 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.128537716 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.101161138 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.126143959 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102386264 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.122674539 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.090415236 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.112683048 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.10383837 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.134469401 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101547937 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.124208953 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.111440729 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.124265598 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099718065 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.130724465 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.100658778 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.115257612 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.11215551 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.122301605 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.091531942 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.126238666 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103317219 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.116930446 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.103478995 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.126057896 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.10331571 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.121336024 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099724316 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.12057229 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10366756 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.115234897 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104672808 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098407774 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.135101242 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.121738925 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.092285635 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.093189727 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.123705067 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.098599246 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.118874346 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.097028627 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.120884163 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.103803568 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.122265202 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.101336269 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.119548583 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.118041438 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.129307998 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103891384 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.125882113 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112877431 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.119559736 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.1071735 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.119412784 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104119828 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.121134633 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.111072285 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.123451276 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103832721 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.101669036 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.111093729 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105941554 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.128883883 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.096625108 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.112845138 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.096825536 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.119774576 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.114750212 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.120142032 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103252876 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.116955725 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107255901 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.126365347 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103285542 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.11927364 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.098331849 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.101849762 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.128013121 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.104018072 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.12261257 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.113907556 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.123798075 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.092287209 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.125992423 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098263496 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.126738868 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.092010032 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.117128483 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098579872 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.122940088 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102568658 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.11929888 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.089957509 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109999523 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130405824 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.103476155 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.11630226 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101584865 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.137232551 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.100776918 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.126498335 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.102159752 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.128012808 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.145816242 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.098442206 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.121418967 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.117255923 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.120192345 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.090368708 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.106895156 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.118616101 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.096680827 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.118621679 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099119558 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.122558748 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106945384 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.124606675 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.090422253 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.121049909 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099841681 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.097798602 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.111761033 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.112732387 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.124481363 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104550871 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.137405322 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.12216403 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.103760723 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105581538 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.120452533 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103743603 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.12176096 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104802169 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.122254253 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.099692723 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.115824267 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.106064751 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.116618904 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.095816646 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.120188442 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103366581 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.123742039 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106210682 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.118585785 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11262158 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.122458361 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103547277 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.163540914 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.099331976 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.11700169 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10494583 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.126012711 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.103055839 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.121096016 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.092969731 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.128141377 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.101985537 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.131417393 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.102663456 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.111841791 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.104096536 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.121090913 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.103971585 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.103136949 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.123869418 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.101295814 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.120594209 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.103789059 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.137236226 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098493229 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.13645673 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107615001 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.126448115 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103438431 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.125283814 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.101689286 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.116700642 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.104843331 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.122205442 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.104770016 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.119925349 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.106614972 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.122795795 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.103502331 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.119052218 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104126598 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.12369442 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10605995 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.109248685 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.098068015 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.09857446 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.120844255 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11066814 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.122781431 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.100216929 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.119092411 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104222098 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.118762013 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.09368161 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.127201323 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107302366 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.121899518 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11839137 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.116678028 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.104480187 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.138741794 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.090820008 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.118574839 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.09638377 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.099659438 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.134235298 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.103733082 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.131014208 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.104745466 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.118008098 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.094563418 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.123398789 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100349958 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.111256463 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.09828428 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.128029841 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.101011333 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100166566 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.123044033 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.106660832 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.124439995 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110732368 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.119983921 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.105136927 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.122245062 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.094248832 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.1177536 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.09857614 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.122340895 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104893926 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.1176299 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.09510833 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101989069 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.125083716 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.104595813 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.121943682 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.10172963 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.130116272 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101197175 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.122337157 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10887284 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.110412268 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104327494 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.120393232 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102135811 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.118288923 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.109300032 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125782202 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109206834 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.132294079 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.105574485 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.126793626 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103108593 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.094607904 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.121797277 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101388895 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.121760972 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.098310431 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.123677473 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112478383 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.115662523 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106421727 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.125860477 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.10376062 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.12835908 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.108019242 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.12799333 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.113742816 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.127328803 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.109836799 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.131953953 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.10737331 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.129451083 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109585185 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.125222585 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115449867 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.101812021 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.139946135 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.128545395 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.107567516 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103412827 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.123576783 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105494081 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.125819151 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105628266 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.13751907 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.107863446 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.122023457 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.100441269 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.118540583 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.110334184 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.132476105 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116944839 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.128426994 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110653503 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.116268014 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.09943422 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.127911474 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.104916721 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.106102041 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.131949052 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114679753 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.130538095 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.104476472 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.125919395 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.117049178 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.135438793 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.113766947 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.124117943 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.113913829 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.127436977 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105910176 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.121396025 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103588709 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.12538164 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.108967296 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.122798041 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101740127 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.139090908 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.113035327 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.125446214 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102512792 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.128432099 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.106784952 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.115608783 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.110550437 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.125818664 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113772023 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.125509283 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105155484 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.141075514 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.102186549 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.124918415 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.112719574 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.121010691 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.115627945 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.112400354 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.106100174 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123994099 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10581004 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.09277049 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.119030644 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099425622 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.124791226 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.098962863 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.113009924 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121254365 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.131690133 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.107071012 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.120761045 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101183923 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.112387221 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.094083863 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.118776347 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107066857 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103175903 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.139940105 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.118571347 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.102014505 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.095911452 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.126939975 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109842517 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.132211236 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.099379644 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.117789179 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.103851763 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.131562464 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.121258321 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.125669978 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.107092924 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.127424259 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.108568442 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.095496048 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.134181406 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.094041287 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.126066955 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.140898416 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.10513763 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.127118375 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.1116255 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.132158764 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.105199284 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.092994438 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.12476684 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.106227232 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.12631382 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104208765 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.12560071 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.149004086 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107082697 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.117199728 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.101700352 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.106822725 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.124585092 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.120039808 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.132685312 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.109769745 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.132455743 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.106508291 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.1329194 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.118720729 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.130915632 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.108003441 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.128573443 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101183665 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.123833307 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100640654 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.122401585 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.106888247 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.124560179 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104047833 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.127022614 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.100375999 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.142123351 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.116890609 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.125529636 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.09490572 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.11798425 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.100123859 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.093067711 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.124470979 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.096781377 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.1199677 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.10043666 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.120252623 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.109325026 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.126373112 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.107377403 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.124216363 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.104003408 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.090834032 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.129694434 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105090382 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.128726444 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.09397608 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.122783761 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104995049 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.133016281 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110174965 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.121407881 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105418472 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.122543974 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109285819 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.113269132 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.1083667 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.120657172 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.103675823 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.118496712 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104797654 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104942282 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.126861251 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10486207 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.127799954 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.104637144 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.130108313 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106309402 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.116024684 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.095934854 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.130899011 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098763628 seconds)
  done (took 68.655971896 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.190384181 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106242436 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097030884 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.119276613 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.155790328 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100113992 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118008903 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101127428 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.099522243 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.141241363 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.113816446 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095397352 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.144936098 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.159754698 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133339912 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.139725096 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09556848 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.122081226 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097491258 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120805511 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.148806312 seconds)
  done (took 3.408430664 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.127701218 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.137598037 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.1400165 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.128418106 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.134007075 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.122125949 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.140337712 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1378467 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.142357483 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111796842 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.141136382 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.136594407 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.111733154 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.12922973 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110893679 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.13308988 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.142156388 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109424366 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.13812346 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.135282758 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113945584 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.136135049 seconds)
  done (took 3.662485902 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.11006807 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102067504 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.12981249 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.095199511 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.121924355 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.096663622 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.127985543 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099230415 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.129806797 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.104500975 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.120549341 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.103691076 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.108832574 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.115871024 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.101882351 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.118212307 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110911233 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.12196031 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106329653 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.115713261 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.147690571 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.11571419 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.096497454 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.119980422 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.113408517 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.123666202 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.10279883 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.123131942 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.102646556 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102911272 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.11996792 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.109544428 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.136784904 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.106138414 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.125612107 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.108193846 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.125185279 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.098472467 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099357916 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.13542964 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.097498206 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.129449615 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.11787757 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.12293658 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.0996152 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.128997025 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104982864 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.117206056 seconds)
  done (took 6.278638124 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.136831673 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.173193834 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.124479211 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.165098309 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.142326769 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.115197167 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.124594408 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.163777937 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.097467747 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.117999346 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125604908 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.142349355 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120771563 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.108025048 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.127437972 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101169284 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.121277289 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099100671 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.130302729 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102391271 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.130317501 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.127076146 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.12347311 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.139256808 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.128631092 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099920845 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.11897865 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108683345 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.13778756 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.112837531 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.133133133 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.129561467 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.125338438 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.125333619 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105528154 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.130033977 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.150224965 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.10703518 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.129162056 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.103551271 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.128580777 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.113076646 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.133204541 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.130131122 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.131681678 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.131325877 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105885442 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.117963483 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.125478555 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.128156311 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.119976357 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.144534982 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.125447082 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.101498169 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.127403302 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.142372257 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102442194 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.11781563 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.1057437 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.137922007 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.097625176 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.129181479 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.141698778 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.103628668 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.134091757 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.120632903 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.127196731 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.128215661 seconds)
  done (took 9.434202702 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125820509 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.150795057 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127897858 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.147273125 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130620354 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.11182379 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.131970775 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.110940718 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.13241062 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.139882293 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11289633 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.195127107 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.124605249 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.124042083 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.13591113 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116604492 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.137744724 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113280213 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.136632829 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.131282985 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.11324347 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.145592581 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111335498 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.147337243 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.151367123 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102992679 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.133574694 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.130473897 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126518195 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.13111121 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.151556 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.111648398 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.130872586 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.145206363 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.131920893 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.13096336 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.098467988 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131461208 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.111414518 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.131794568 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.101887045 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.147360363 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.130643827 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103169032 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.130772898 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111902266 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.14574078 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.150821784 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.139212126 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120869975 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.131304008 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.146070642 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112358943 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.130698916 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.126626322 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.156542172 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.14696952 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.145397632 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111898243 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.147059708 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.145418222 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.156877256 seconds)
  done (took 8.959736004 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103452876 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099987002 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117100815 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.097407951 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.119024242 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097278876 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098794494 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.119436646 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098793593 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.118217481 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099982072 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096429613 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116349601 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09909235 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.116328963 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09743964 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096241025 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.117175942 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101331707 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.115687214 seconds)
  done (took 2.945441525 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.112881354 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.145034254 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.101980995 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.132011821 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10388533 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.131603709 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102383803 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123766022 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101459806 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124259542 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.117561219 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.137384687 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120101874 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.11170769 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.136063007 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111157459 seconds)
  done (took 2.730786817 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.130911707 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.143779355 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.154355133 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.112078165 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.097930627 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.13393258 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.099640221 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.117810248 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.095278315 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.131445359 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.10768324 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.132967342 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.100824554 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.119578293 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101166927 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.127948501 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.096594523 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.125540431 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.101493219 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.149851685 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.108171205 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.124371662 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.102989836 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.124144265 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106605916 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.129843861 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.110076314 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.119007404 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.100025908 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.121048078 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104850819 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.131525792 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.096710764 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.12772479 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.099267517 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.117785599 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.100558395 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.121184423 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108317634 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.120231138 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.099630741 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.123600255 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.101656334 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.121754202 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.096429767 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.101216431 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.117615737 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.108404668 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.123483706 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104846394 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.120766356 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.10990355 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.130789519 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.114362656 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.134301273 seconds)
  done (took 7.186547389 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.121146187 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.125793646 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.11034869 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.117494379 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105407591 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.128453761 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.106011102 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.102771096 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.124707668 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096972985 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.124180137 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104960575 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.123897257 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105004923 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.124374142 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104896244 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.114630592 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10477905 seconds)
  done (took 2.873291344 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.110693099 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102415592 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.135614329 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.100733318 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.125748646 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106508419 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123367592 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104378592 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.125172272 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.107328601 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.126647852 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.10607593 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097877139 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.12397524 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100948946 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.121447301 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.102898824 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119039912 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101208732 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.1156917 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104083048 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098168125 seconds)
  done (took 3.287836909 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.130126965 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.17153675 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.127508751 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.183661655 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.136376879 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.113825931 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.14750609 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.116839147 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.157369337 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.113647255 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.133661426 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.114701103 seconds)
  done (took 2.476330207 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138649653 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.176276746 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105102224 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131819357 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125058728 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137668311 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114885607 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135967526 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145908127 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.151398984 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110589975 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142813286 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123019403 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.144886836 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137966648 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118303727 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130693367 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12860749 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103004 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.156705635 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108259503 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145904014 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129309265 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109127767 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129179932 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.143239798 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124598849 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.149726731 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1291456 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124246762 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13815024 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108253041 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145782144 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.150028852 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10339753 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145006256 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128968962 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136418146 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13926624 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142880267 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104048531 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138565575 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143228209 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118317745 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144305936 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129196078 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118230524 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128928083 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109933646 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.167948023 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139375008 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142937052 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118746334 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145075499 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143208136 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169103506 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129753569 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.14632112 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138870412 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14978476 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12365726 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138580869 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143898994 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129766465 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140115219 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143614236 seconds)
  done (took 9.671556206 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.157857264 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.1220964 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109370591 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.150793372 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144537333 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109280272 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130453156 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128440232 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109622969 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122923832 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.189386957 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110524714 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144578409 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.147683873 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115211665 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134075157 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113849306 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.147443362 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103839527 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168962639 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13041256 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14423105 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123997836 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145192342 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.149236389 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138725602 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110418141 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129607307 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110315605 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130269829 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118639361 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130683189 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144192687 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101257904 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144434358 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108921388 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130807711 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138623086 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109983107 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138503603 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144281152 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136416852 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13159639 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108283971 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150786951 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129899208 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10897238 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124536731 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10854234 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124975924 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150496785 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129586428 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.15145527 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.144787617 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129224428 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110632045 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130257631 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110567942 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129573548 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119095152 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14486954 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129386755 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168297647 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110042197 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130153342 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123320726 seconds)
  done (took 9.456531468 seconds)
done (took 180.57561512 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.128024151 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.166042425 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.11791132 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.190077828 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.100865993 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.158474349 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.1374338 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.139571593 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.100749076 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.099742773 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.12260871 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.105296991 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.190214859 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.100241439 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.121180031 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.106948985 seconds)
  done (took 2.917393375 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.223066466 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.336936793 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.129908803 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.130861217 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.111029062 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.12802745 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.109756141 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.131311151 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.104448319 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.143578453 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.106705436 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.12771697 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.1223594 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.127793609 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.104289914 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.127029366 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.123228072 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.126739443 seconds)
  done (took 3.357280646 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.147009921 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.169123098 seconds)
  done (took 1.158110365 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.152461885 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.229719665 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.35440535 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.174242432 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.160427121 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.158486114 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.196198913 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.127445667 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.231796433 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.156936616 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.156470061 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.111200545 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.164148147 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.140047629 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.118157237 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.131465013 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.145289247 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.13494102 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.111782673 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.134511568 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.139826788 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.134500536 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.139038512 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114110083 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.219636769 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.156110573 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.112855722 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.135470617 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.113555804 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.133202225 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.142054101 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.136786635 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.155659952 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.219108433 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.140627311 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.215625129 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.144500509 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.111186681 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.133662421 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.111935842 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.139397137 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.137251869 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.133157636 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.131369449 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.113718345 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.144247513 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.113145797 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.134233937 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.123302649 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.147342674 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.144218252 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.121499144 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.23473226 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.126295181 seconds)
  done (took 8.982717073 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.972320108 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.183048971 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.108502981 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.13681478 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145568782 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.151759241 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.200815609 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134162913 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.313516196 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.943786768 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.152377013 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121514096 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.307799968 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.300533221 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.219337102 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.41423804 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.810973529 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.147845705 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.140918602 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.190955355 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141428001 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.167954226 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.13443415 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.474081677 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.133373662 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10742983 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.139991382 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.142694503 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.209487436 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.107095624 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.134458911 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.234898336 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.31346064 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.267053953 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110024696 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.12814395 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105955028 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.215355421 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.341060024 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.284432391 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.20670848 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102830828 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.127667039 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124325998 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.158695098 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.102389733 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.235495658 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.223434728 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.22208195 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.134665502 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121291586 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.143135919 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.144224147 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.210552586 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.102654559 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.411033228 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.418292364 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106432833 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143236983 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.151051322 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.312705387 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128644612 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.299216907 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142336259 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.279122263 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.105045206 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.880159493 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.214093201 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.127960779 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118157481 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.140757004 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114504197 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.145922052 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.204510805 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.439206753 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.150225057 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.11337726 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127930467 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.288880773 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.127516875 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10746109 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.211464578 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133166433 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119460939 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.150161824 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.147443514 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.221682299 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.298178627 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.149388186 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11908489 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.137282048 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145460616 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.11162874 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.2616868 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.294491771 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.206536169 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.259487611 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.147915865 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.214427235 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.236104014 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122612183 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.219181251 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.141597733 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.150228257 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125057077 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.290783783 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.178077957 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106176848 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.137228315 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.139709533 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.180585006 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.11103985 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.139701818 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.218726047 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.540416339 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.212876978 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.125978738 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109594248 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142779569 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.210717686 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138864798 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.306225672 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144227077 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.217024875 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.140154869 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.104511672 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.141474458 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.2149579 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.146554125 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12235706 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.147460898 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117338702 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.321174903 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.265732027 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.148524712 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.300102997 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.192243318 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.142901958 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.223319238 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.143477675 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.217568517 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.142532303 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123194507 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134747178 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.876303086 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126220206 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.141126995 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115697928 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.237693151 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129217368 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107963766 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.128129398 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104776736 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.868512401 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.110237226 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.102817296 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.131310246 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.139671163 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120914169 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139098355 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114988866 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.210559749 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.310607358 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.14548399 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117577309 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.129612174 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.209913392 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.133117596 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.108471202 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.128707354 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108616783 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.141503291 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114981695 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107809695 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.244613316 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.211352819 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.298541529 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.582929652 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.12959653 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.107232729 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.309904744 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106701403 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.382235195 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142450209 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.277974812 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.241691523 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.105087412 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.413652828 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.218258541 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.23624684 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.132639911 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.221807771 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103616021 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.140813831 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.212250048 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.128636858 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119738207 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.207238304 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.152406943 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.149124867 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.202146115 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.130335106 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.277802659 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.125158837 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.22015118 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.111420061 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145510089 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.38641717 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.107684222 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.155188349 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.212704102 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.13457359 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.109222694 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.901016524 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.13074962 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121696396 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.142688429 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.30563777 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.217775056 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.142056246 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119620914 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.14575325 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.212108599 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.259423423 seconds)
  done (took 52.725667465 seconds)
done (took 69.98132128 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.405810746 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.340908431 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.375644405 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.256802469 seconds)
  done (took 2.338221727 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.22476183 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.19782873 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.155813648 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.128702572 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.189094927 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.107274256 seconds)
  done (took 1.867918498 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.649124342 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.563785285 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.434680215 seconds)
  done (took 2.51581753 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.305673545 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.331352471 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.377797473 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.570541855 seconds)
  done (took 2.573127781 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.255511711 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.127262393 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.142704572 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.162487064 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.189083599 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.276970967 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.172571641 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.203686529 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.13608969 seconds)
  done (took 2.595964256 seconds)
done (took 12.762002077 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.346022513 seconds)
    (2/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.16618111 seconds)
    (3/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.147487005 seconds)
    (4/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.316705716 seconds)
    (5/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.128407261 seconds)
    (6/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.209410261 seconds)
    (7/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.173673237 seconds)
    (8/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.150650327 seconds)
    (9/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.281656385 seconds)
    (10/286) benchmarking ("sort", Float64, true)...
    done (took 0.269041296 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.137411748 seconds)
    (12/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.116344672 seconds)
    (13/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.16832599 seconds)
    (14/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.216839792 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.189206005 seconds)
    (16/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112795501 seconds)
    (17/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.147554726 seconds)
    (18/286) benchmarking ("sort", Int64, true)...
    done (took 0.262987411 seconds)
    (19/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.309199567 seconds)
    (20/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.286112715 seconds)
    (21/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.292549994 seconds)
    (22/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.185996328 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.170016631 seconds)
    (24/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.122875349 seconds)
    (25/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.261588867 seconds)
    (26/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.170765942 seconds)
    (27/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.169592574 seconds)
    (28/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.120735653 seconds)
    (29/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.138533891 seconds)
    (30/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.270046245 seconds)
    (31/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.253659058 seconds)
    (32/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.119785141 seconds)
    (33/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.138370341 seconds)
    (34/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.21521336 seconds)
    (35/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.251322907 seconds)
    (36/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.248213934 seconds)
    (37/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.259416541 seconds)
    (38/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.114730281 seconds)
    (39/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.114851767 seconds)
    (40/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.158924436 seconds)
    (41/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.167408805 seconds)
    (42/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.129649862 seconds)
    (43/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.1448466 seconds)
    (44/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.11217722 seconds)
    (45/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.247999863 seconds)
    (46/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.159943716 seconds)
    (47/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.233647969 seconds)
    (48/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.134615134 seconds)
    (49/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.112090951 seconds)
    (50/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.200440562 seconds)
    (51/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.113963203 seconds)
    (52/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.10932142 seconds)
    (53/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.158916688 seconds)
    (54/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.137261418 seconds)
    (55/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.118747692 seconds)
    (56/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.230913549 seconds)
    (57/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.115229467 seconds)
    (58/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.178846071 seconds)
    (59/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.176267863 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.115157949 seconds)
    (61/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.137411455 seconds)
    (62/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.187549356 seconds)
    (63/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.140887416 seconds)
    (64/286) benchmarking ("sort", Int64, false)...
    done (took 0.104107577 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.137917358 seconds)
    (66/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.110891875 seconds)
    (67/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.145111992 seconds)
    (68/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.111138703 seconds)
    (69/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.214828605 seconds)
    (70/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.134856042 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.150211414 seconds)
    (72/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.136807707 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.113505125 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.14034599 seconds)
    (75/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.257936343 seconds)
    (76/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.151881264 seconds)
    (77/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.092075625 seconds)
    (78/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.174364573 seconds)
    (79/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.125428523 seconds)
    (80/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.203741899 seconds)
    (81/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.101313341 seconds)
    (82/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.158918094 seconds)
    (83/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116325296 seconds)
    (84/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.115227145 seconds)
    (85/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.158941925 seconds)
    (86/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.237692507 seconds)
    (87/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.126447633 seconds)
    (88/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.099960352 seconds)
    (89/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.176697482 seconds)
    (90/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.125177574 seconds)
    (91/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.279968943 seconds)
    (92/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.112257907 seconds)
    (93/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.122382384 seconds)
    (94/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.209009677 seconds)
    (95/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.110266785 seconds)
    (96/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.146243952 seconds)
    (97/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.12296906 seconds)
    (98/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.114960602 seconds)
    (99/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.215970048 seconds)
    (100/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.168622218 seconds)
    (101/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.133468031 seconds)
    (102/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.179622612 seconds)
    (103/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.117949696 seconds)
    (104/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.13496398 seconds)
    (105/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.165907 seconds)
    (106/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.150140597 seconds)
    (107/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.214988462 seconds)
    (108/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.089638141 seconds)
    (109/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.146873745 seconds)
    (110/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.21393575 seconds)
    (111/286) benchmarking ("sort", Bool, false)...
    done (took 0.230198861 seconds)
    (112/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.146327727 seconds)
    (113/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.088367025 seconds)
    (114/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.17066052 seconds)
    (115/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.136445252 seconds)
    (116/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.12352947 seconds)
    (117/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.115616199 seconds)
    (118/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.273902924 seconds)
    (119/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.094111333 seconds)
    (120/286) benchmarking ("sort", Int8, true)...
    done (took 0.262644011 seconds)
    (121/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.102275757 seconds)
    (122/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.140027548 seconds)
    (123/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.121068226 seconds)
    (124/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.18802842 seconds)
    (125/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.200021743 seconds)
    (126/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.120030049 seconds)
    (127/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.217108527 seconds)
    (128/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.185296422 seconds)
    (129/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.213415428 seconds)
    (130/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.111803097 seconds)
    (131/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.13890235 seconds)
    (132/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.107455365 seconds)
    (133/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.090451598 seconds)
    (134/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.138446346 seconds)
    (135/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.1253729 seconds)
    (136/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.133514454 seconds)
    (137/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.183875625 seconds)
    (138/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.135022415 seconds)
    (139/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.139902152 seconds)
    (140/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.093539887 seconds)
    (141/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.181265852 seconds)
    (142/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.121496404 seconds)
    (143/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.166279715 seconds)
    (144/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.126599881 seconds)
    (145/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.130833269 seconds)
    (146/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.183470083 seconds)
    (147/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.114866401 seconds)
    (148/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.097719659 seconds)
    (149/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.138173786 seconds)
    (150/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.118209381 seconds)
    (151/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.218785695 seconds)
    (152/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.159165006 seconds)
    (153/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.116642473 seconds)
    (154/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.115060459 seconds)
    (155/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.122455579 seconds)
    (156/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.115170682 seconds)
    (157/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.111336116 seconds)
    (158/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.1794656 seconds)
    (159/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.091189068 seconds)
    (160/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.137330753 seconds)
    (161/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.149807076 seconds)
    (162/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.158770517 seconds)
    (163/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.091172797 seconds)
    (164/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.225574901 seconds)
    (165/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.146528929 seconds)
    (166/286) benchmarking ("sort", Float32, true)...
    done (took 0.269999968 seconds)
    (167/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.101381156 seconds)
    (168/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.237113822 seconds)
    (169/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.113558401 seconds)
    (170/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.14410082 seconds)
    (171/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.089792351 seconds)
    (172/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.146813963 seconds)
    (173/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.1189919 seconds)
    (174/286) benchmarking ("sort", Bool, true)...
    done (took 0.263522374 seconds)
    (175/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.140106937 seconds)
    (176/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.117479439 seconds)
    (177/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.215171402 seconds)
    (178/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.090933636 seconds)
    (179/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.136659679 seconds)
    (180/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.089601271 seconds)
    (181/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.142216155 seconds)
    (182/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.214192635 seconds)
    (183/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.105573624 seconds)
    (184/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.286077049 seconds)
    (185/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.114304296 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.141218121 seconds)
    (187/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.090503163 seconds)
    (188/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.148583139 seconds)
    (189/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.124935852 seconds)
    (190/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.119166267 seconds)
    (191/286) benchmarking ("sort", Int8, false)...
    done (took 0.242833401 seconds)
    (192/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.093246638 seconds)
    (193/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.113655146 seconds)
    (194/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.12947225 seconds)
    (195/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.114788057 seconds)
    (196/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.099414011 seconds)
    (197/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.133620132 seconds)
    (198/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.093846695 seconds)
    (199/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.090671927 seconds)
    (200/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.149871643 seconds)
    (201/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.133354604 seconds)
    (202/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.103823091 seconds)
    (203/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.092780361 seconds)
    (204/286) benchmarking ("sort", BigInt, false)...
    done (took 0.305722438 seconds)
    (205/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.108309902 seconds)
    (206/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.091058179 seconds)
    (207/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.139654841 seconds)
    (208/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.115564197 seconds)
    (209/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.113381275 seconds)
    (210/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.091894914 seconds)
    (211/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.112830623 seconds)
    (212/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.10716974 seconds)
    (213/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.090061192 seconds)
    (214/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.121401076 seconds)
    (215/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.090852596 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.139394055 seconds)
    (217/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.108979878 seconds)
    (218/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.158940354 seconds)
    (219/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.092836606 seconds)
    (220/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.163687617 seconds)
    (221/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.124381422 seconds)
    (222/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.160817591 seconds)
    (223/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.156063169 seconds)
    (224/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.139461644 seconds)
    (225/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.091469149 seconds)
    (226/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.130746054 seconds)
    (227/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.145229984 seconds)
    (228/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.13833418 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.125624015 seconds)
    (230/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.116811323 seconds)
    (231/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.117250871 seconds)
    (232/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.135753792 seconds)
    (233/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.114224297 seconds)
    (234/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.138138151 seconds)
    (235/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.094226818 seconds)
    (236/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.11278298 seconds)
    (237/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.091843975 seconds)
    (238/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.089533528 seconds)
    (239/286) benchmarking ("sort", Float32, false)...
    done (took 0.207242547 seconds)
    (240/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.115159497 seconds)
    (241/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.197321148 seconds)
    (242/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.149140166 seconds)
    (243/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.118489765 seconds)
    (244/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.115375986 seconds)
    (245/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.107738624 seconds)
    (246/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.116173688 seconds)
    (247/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.107846605 seconds)
    (248/286) benchmarking ("sort", BigInt, true)...
    done (took 0.291224204 seconds)
    (249/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.140888243 seconds)
    (250/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.092911816 seconds)
    (251/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.112404917 seconds)
    (252/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.140577178 seconds)
    (253/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.12488203 seconds)
    (254/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.136723614 seconds)
    (255/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.115115832 seconds)
    (256/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.142467672 seconds)
    (257/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.123913241 seconds)
    (258/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.132183258 seconds)
    (259/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.0924099 seconds)
    (260/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.128925319 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.110027663 seconds)
    (262/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.149105182 seconds)
    (263/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.115918383 seconds)
    (264/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.137310805 seconds)
    (265/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136690237 seconds)
    (266/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.116827644 seconds)
    (267/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.098739222 seconds)
    (268/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.134111054 seconds)
    (269/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.112581026 seconds)
    (270/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.13505398 seconds)
    (271/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.107759058 seconds)
    (272/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.134196821 seconds)
    (273/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.125392703 seconds)
    (274/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.113659542 seconds)
    (275/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.116026304 seconds)
    (276/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.118306205 seconds)
    (277/286) benchmarking ("sort", Float64, false)...
    done (took 0.204192045 seconds)
    (278/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.135032774 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.118118758 seconds)
    (280/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.091484556 seconds)
    (281/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.15451197 seconds)
    (282/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.14018908 seconds)
    (283/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.093494011 seconds)
    (284/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.091326 seconds)
    (285/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.115006413 seconds)
    (286/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.115506723 seconds)
  done (took 43.89702155 seconds)
done (took 44.777776368 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.126382233 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.179174553 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.121242556 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.166342743 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124097907 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.15119715 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.142530122 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.123071347 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.147537251 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.12653614 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.150932361 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.102127688 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.1439221 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121363501 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.144383703 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.142812178 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.148313698 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.118038988 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.134903042 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.112851471 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.135325282 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.114123109 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.13802104 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.102155988 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.143162084 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119919752 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.138634257 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.121172099 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.136821341 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.108736841 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.133465036 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.115698886 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.132972976 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123231003 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.135514153 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.112496865 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.144633551 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.119035194 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.13887894 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.114655501 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.115389646 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.138706532 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.113981293 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.140460367 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.11323199 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.13595988 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.112048983 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.149505677 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.166238279 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110573157 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.115358322 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.144125319 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.123803412 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.140341199 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.109969804 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.135538539 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.114255097 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.166837534 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.111005019 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.135749894 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.115986 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.140704115 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.113922232 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.135236074 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.112586091 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.142991569 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.120135354 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.136228496 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.119070659 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.137571892 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.124238162 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.135082822 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.110503178 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.131300943 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.118977048 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.141102581 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.104977096 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.111834456 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.138768588 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.114460169 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.136829135 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.108040764 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.138426623 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.113614595 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.131247097 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.102894957 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.133371623 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.113963849 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.135315204 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.112237984 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.136468677 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.114307207 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114983901 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.144588217 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.136804756 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.114678182 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.137233847 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.115149279 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.139337462 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.11075084 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.105389844 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.133513458 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.116552953 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.131938672 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.113737592 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.148299907 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.110741706 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.138526512 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.113229829 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.135746236 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.128899544 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.14330138 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.11473692 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.134500627 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.108511021 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.140971426 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.111997863 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.132333688 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.11032062 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.137616237 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.113749705 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.137580632 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.108601402 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.140353529 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124275943 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.106214668 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.135302373 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.108680673 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.138289401 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.115364841 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.138777494 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.109562027 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.135325189 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.106277465 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.131532719 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.110319748 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.141013926 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.108578606 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.111272486 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.136894634 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.112201893 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.137301156 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.112882061 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.138505259 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110219928 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.126125874 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11111884 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.131636661 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.115932559 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.138198298 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113893663 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.130257899 seconds)
done (took 20.21878044 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.126186003 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.222914054 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.175196327 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.156787395 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.190791906 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.1666452 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.151511694 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.158767725 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.148794187 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.179462381 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.156223668 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.165747184 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.179182303 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.125840623 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.166615707 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.144023526 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.121262284 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.162793675 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.186743908 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.147847965 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.175776686 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.150230122 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149640489 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.17762714 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119038949 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.186502045 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.151170166 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.121209132 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.150944373 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.129978993 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.166093387 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.154002187 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.127444732 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.160999025 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.127974529 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.142211072 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.166331972 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.114885831 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.146614985 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.123717403 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.160744211 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133477599 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.142163372 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.159307 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.122016751 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.151405336 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.120928458 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.143970112 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.121144611 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.137018149 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.129742728 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.172106702 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.145436172 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.127186383 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.151258992 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.120582961 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.151815799 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.150486472 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.128070999 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.151336059 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.123460246 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.151349797 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.130009648 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.171753606 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.145594761 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.126904475 seconds)
  done (took 10.761197616 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.144620112 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.182415762 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.127084218 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.152742658 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.151895142 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.10658998 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.129894894 seconds)
  done (took 1.932667029 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.111020708 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.169053198 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.150831176 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.174579049 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133802972 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.179494001 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.15598826 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.108532157 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.163665868 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.123765124 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.166401854 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.202888512 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.109653332 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.150412826 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.153853803 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.132971949 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.179131156 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.108816504 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.142564877 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.151412254 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.14134579 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136363726 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.155299471 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.110820489 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.158617116 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.112343008 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.218740862 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.152410501 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108110192 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.143788468 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118204796 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.231993892 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.160917816 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.123969735 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.130620598 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.169627372 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.135856822 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.141332034 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.141596218 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.141168088 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.13631851 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.144649074 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.121031183 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.144045193 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119877061 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.149623305 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.128220316 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.147080906 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116758411 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.168183044 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.150693159 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.136674083 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.13584493 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.114946178 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.149026824 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118293129 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.152641884 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.118044013 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.167920536 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.122315347 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.168921193 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.170319947 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.135963574 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.169016725 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136672337 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.161107903 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.161653382 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117659749 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.144733864 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.12159715 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.168490419 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.116451727 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.151062688 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.126804162 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.14667538 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.140858606 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.166961811 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118137679 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.149310726 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.116208998 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.139526961 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.109917846 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.152547251 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116650456 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.138476887 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.135792688 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.152143699 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.11874758 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.140974409 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.165963449 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.11755119 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.152686899 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.127336661 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.140897247 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133956619 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.173393359 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.153692301 seconds)
  done (took 14.837636016 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.118172051 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.111044972 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.144093184 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.11222391 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.13610534 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.111758681 seconds)
  done (took 1.679603315 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.15561745 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.140971438 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.130230954 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.144896472 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.186835311 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.138417099 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.162151085 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124037047 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.160011705 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128777629 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.162137764 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.163283913 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.149581091 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.145398287 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.136902535 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.145649347 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.137767783 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.139384046 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.129018796 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139118142 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.129553119 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.146810701 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113596762 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.163472991 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.143743757 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.122192208 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.143467279 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.129981763 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.153812809 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124387712 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.145031186 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118793095 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.145796325 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.124664491 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.162943902 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.145755604 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113507926 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.14490425 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.121218546 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.143499878 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.139164732 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.138435434 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.129643259 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.14501766 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125401607 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.146503136 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121571865 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.14349019 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.136938145 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.144845388 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120044852 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.146084431 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118667278 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.145158879 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121393139 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.149621021 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.1441979 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.138537719 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.145299353 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.121548031 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.141854095 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.119293335 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.149460833 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118494593 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.143768498 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120930963 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.14533814 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114033843 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139173289 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.120708887 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.146147723 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.11737873 seconds)
  done (took 10.909057855 seconds)
done (took 41.042826791 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.725158066 seconds)
  done (took 1.666778552 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.00722568 seconds)
  done (took 1.952566614 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.812036451 seconds)
  done (took 18.791160325 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.665379413 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.809260749 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.27202891 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.196784301 seconds)
  done (took 3.888120892 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.024559045 seconds)
  done (took 1.989699426 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.371359592 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.288932855 seconds)
  done (took 1.611067179 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.879651894 seconds)
  done (took 1.841370633 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.731488601 seconds)
  done (took 2.68579371 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.448480077 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.230458369 seconds)
  done (took 1.644590542 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.681212621 seconds)
  done (took 1.640516919 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.605065721 seconds)
  done (took 16.569669066 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.295543737 seconds)
  done (took 1.271609774 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.350906821 seconds)
  done (took 1.31141601 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.785099156 seconds)
  done (took 4.74792477 seconds)
done (took 62.568319637 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.127689882 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125405714 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.152427346 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.121814509 seconds)
  done (took 1.48235959 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.137017649 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.150276444 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.128128166 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.145706139 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.132066124 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.148114908 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.119879793 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.154591355 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121997144 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.149395972 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12219295 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.147352293 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.124587023 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.144820875 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.118889422 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.14995612 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.12619297 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.147801885 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.120091785 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.148865983 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118550317 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.149549633 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.150291846 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121505152 seconds)
  done (took 4.251415696 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.124959138 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.116046075 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.143086742 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.115317123 seconds)
  done (took 1.471241214 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.133203524 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.164926278 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138338183 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.154476792 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.140661766 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.165479271 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.11631341 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.141598685 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.117757441 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.15402263 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.120084905 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.16890576 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.164554773 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.110878543 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.156014056 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.108025989 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.138166551 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.14043611 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.154266282 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.13007262 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.139770713 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.128134519 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.149001995 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.1337881 seconds)
  done (took 4.342486581 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.22672655 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.159436526 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.170729698 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.125435607 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.208657305 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.172960839 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.114213758 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.17327702 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.116732356 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.168508001 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119773411 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.206164945 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.16873075 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121078874 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.144033855 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.152711487 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.141435271 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.172536807 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.11806403 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.157405526 seconds)
  done (took 4.114416161 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.129239772 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.114656112 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.135476176 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115374569 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.149655561 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.119313208 seconds)
  done (took 1.739993014 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.114811305 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.10799588 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.134856013 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.10817283 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.139208796 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.109078138 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.106509798 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.134560597 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.107839741 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.133761213 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.107807676 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.106677843 seconds)
  done (took 2.386628144 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.530215053 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.116621934 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.154070159 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.115904721 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.166991936 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.13865643 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.133881904 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.138410798 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.208191734 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.12740409 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.160016575 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.206008717 seconds)
  done (took 3.175629809 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277288367 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12134231 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.346258644 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.49383816 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198759574 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.21123891 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.377966312 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213516342 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.241076621 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169351149 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251059857 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194160046 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18773225 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223435657 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147259716 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.219072216 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224156153 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.266885099 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185200231 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270611032 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216750087 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210675137 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.234151015 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187075153 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171234842 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205957505 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.115661905 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155491373 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227472107 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218001544 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239779237 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191852487 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146358542 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295950502 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.300525707 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247773233 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.469480979 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167671713 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.226687878 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.235218584 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.309447795 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175869986 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.268307837 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193435981 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133420812 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235739852 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199601647 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.229794876 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.161129078 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173414111 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2588364 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225034221 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.239023339 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172708694 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.399095049 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180891252 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.177672853 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236050679 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259016385 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250400502 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214169553 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.149401227 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.271095025 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22963621 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235439489 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.177920495 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.218793954 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153453463 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225891007 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.253870422 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235077984 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213153074 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.306961266 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14004896 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212438395 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216006161 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190531887 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227963937 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202209503 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.118181595 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185327015 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169578271 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12934687 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.21887567 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12109292 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.30193592 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142657549 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.323110154 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.307100129 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173314029 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.208934057 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212910304 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218285446 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18039287 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.116539894 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184139216 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.204101766 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195442556 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163400342 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171323679 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181344716 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.153364144 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160888347 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.148799623 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200929863 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.135555662 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213154505 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208884119 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.157999168 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.210258046 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157705152 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.201283533 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221210889 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239470507 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163007063 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161312851 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254291736 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197917901 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.139190834 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.224978455 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.242106787 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.209336287 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171620695 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224959929 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259758086 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176626881 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249164408 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152745915 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165940773 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.196061283 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20343603 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203396033 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.16596825 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156496838 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.194711941 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251770098 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.15267474 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138921844 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225092113 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153612698 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128421595 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179556777 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168670611 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.144938999 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.188634788 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.168675858 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198662568 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172291454 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192238938 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207190488 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18439866 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271579982 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163379566 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.199451005 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153461662 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.141601875 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.234025188 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241656612 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128426436 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264920127 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.215437831 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286743916 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210049097 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15860402 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.233564145 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129455542 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.143397914 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218736886 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.206442847 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.210011301 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.234718332 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288139883 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.215000916 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.192212185 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184230508 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220596837 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.22346736 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212637431 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.179003691 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181364614 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219190987 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.147256725 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.120860792 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.153909369 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173005645 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133365559 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161061341 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24621522 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212255308 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.303041126 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206502791 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145900084 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.235561865 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.151809288 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211248664 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.224857278 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142123174 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.266964666 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232799887 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18867985 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174419599 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228658898 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.143040354 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124154504 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.162256692 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.213197931 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133174818 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166518009 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186549461 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.235107554 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227442382 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159816164 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.330084833 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214495079 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.24824091 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.152256795 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.194508373 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216926372 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170926042 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.223655723 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164560768 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.204721273 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20214603 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183097205 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26112357 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205640364 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221601527 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.304494717 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.167389325 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160066119 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186584032 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21308963 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150073674 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203156392 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181973196 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166255087 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165427729 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.170401693 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153152112 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248875358 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174975486 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247829383 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.19448542 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239482992 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12226933 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188568247 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203918675 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176434532 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.115163184 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217547635 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24965407 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184430671 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201269582 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224006908 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129980193 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.434084355 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252570835 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246478144 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170319461 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177385244 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177097715 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200035331 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211220715 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.234988527 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184352762 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236499329 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199437353 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.148368596 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167132669 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181566217 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159793502 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.197384571 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.166958419 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.194301526 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.145222572 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283196367 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15184021 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199752163 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216392668 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.175638924 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.163438834 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175697282 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263579599 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200603796 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232003604 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.194729571 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.209170472 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240717589 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120815843 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155652915 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.124445645 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.235331135 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161181522 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203639735 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.269567247 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.325937358 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203049818 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21401617 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167886654 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121850902 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204649997 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185513726 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.317358671 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156657435 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.165632577 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249146437 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.182678794 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129328855 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.208006953 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.400263002 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1560494 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251013264 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.1186643 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.360243124 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153536987 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132280234 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200246468 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219875484 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.161174389 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.220212447 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187093003 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18369309 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201405618 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170053821 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.274828535 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310600797 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227562644 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230600805 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.151763298 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.204853234 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210486696 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226551289 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179675392 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.178097886 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172082775 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235815501 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.265205788 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.134333107 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209521768 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20811398 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.205507601 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246372264 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133290958 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267231268 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131905409 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218731046 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177925705 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122620956 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19531108 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.292094642 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138290946 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223623288 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19768225 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160781826 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123652528 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196466595 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198366842 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182827656 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127641316 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244248065 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.155456979 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211392702 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229154085 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128501872 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19525018 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180515415 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130613421 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179474297 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184320914 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138559348 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.202651906 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241289403 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.160032604 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229043356 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232271936 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211286478 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204212916 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149888897 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.696306244 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.125132924 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233516396 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180983464 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251748043 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183256976 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217432744 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205833998 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156549615 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220492534 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189480071 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.259160064 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219007854 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.202830363 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130369702 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184880113 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181808375 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.13272931 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190585146 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207183183 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172752009 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.137319164 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.198829056 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183745702 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.18177485 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140899064 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242077458 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183389933 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249538907 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.237212783 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171713341 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21640854 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24783555 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128263001 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.208126864 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221930807 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17775917 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196817674 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.128461712 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.165580908 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23116334 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.120050206 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205751472 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203248625 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20866928 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209675559 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.13886676 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206897779 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181897287 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204109792 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122386755 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.194745937 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199384623 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159040758 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126241676 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195875727 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208798131 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.202035086 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127324608 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.203722454 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235542928 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122102968 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163685273 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.382170767 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198096058 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257720189 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.195179878 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165127577 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14651754 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199639789 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.191886053 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201577372 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.126982231 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160121051 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.160364585 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.190224193 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.192242501 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198830365 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244549775 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20477629 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242068323 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.161445549 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.274479149 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168621728 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195755877 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.135568292 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.157488939 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175735339 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138839684 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185267985 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.306128477 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232738695 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.161557845 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.18333595 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156623708 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.124304999 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160212347 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174075368 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194800967 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198708906 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184454103 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.11458279 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18209651 seconds)
  done (took 97.478089244 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175784763 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.166588609 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.177488852 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221892494 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199201085 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.277227442 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.236073903 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.256184932 seconds)
  done (took 2.77269005 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.134303968 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.166689887 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.174973019 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.125835713 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.14155208 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.456390937 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.173734863 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.153630342 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.150785045 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.194612132 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.114111288 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.767342107 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.126734996 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.153518942 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.137124381 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.137023238 seconds)
  done (took 4.362206245 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.845547291 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.60052629 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.200494968 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.303109541 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.288319887 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.209163341 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.804520894 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.247245687 seconds)
  done (took 13.55797591 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.155143401 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.16480263 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.171143185 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.196420671 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.149831242 seconds)
  done (took 1.906925107 seconds)
done (took 144.000084127 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.124080737 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12298147 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.148618957 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.122277682 seconds)
  done (took 1.570281396 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.135599996 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.102762638 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.130633446 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.098837009 seconds)
  done (took 1.536196755 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.542039539 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.132200811 seconds)
  done (took 1.779396118 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.154669288 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.160554106 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.134281635 seconds)
  done (took 1.518756567 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.134977961 seconds)
  done (took 1.207840493 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.126844158 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.123989938 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.166431901 seconds)
  done (took 1.489876395 seconds)
done (took 10.171680199 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139671059 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.465828174 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.409466779 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.163011181 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.724475719 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.431044935 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.075432566 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.167035866 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200864304 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.140661562 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135341434 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.719194559 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.064902664 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.396139738 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.046792328 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.489162601 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.696169256 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.143176518 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122583829 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.142914217 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.016777939 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.138821484 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11622129 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.141367751 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.693648792 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.419953197 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.142551283 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.504105116 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111809898 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.120357668 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.432148205 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.1122289 seconds)
  done (took 17.881385502 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120356204 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.216605714 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.122717773 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.142429657 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118940995 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.141782136 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.127200879 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.162629689 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.21922165 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113381671 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.164024976 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112381211 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.146890966 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.113956241 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.166413174 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113485358 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.143336549 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118075805 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.148918082 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.116654056 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135765903 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.140002362 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114952859 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.144575488 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112331285 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.156227663 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113551936 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.161995845 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112350891 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.149633984 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.121289934 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.142508418 seconds)
  done (took 5.510097879 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.170696025 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.231407752 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.151897165 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.153311283 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.208663368 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114225503 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.245052976 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.197108124 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.22063549 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.139491331 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138114584 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111636172 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.185613398 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.141104012 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140361991 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.14120218 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.118101785 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.143483877 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12459664 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.142920606 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.13746047 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.138943731 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.117053181 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116711724 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.142831034 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130063764 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.14253619 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.161305711 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.113565508 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.121131968 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.149532242 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112864191 seconds)
  done (took 5.874996033 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.12753272 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.153935347 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.13592829 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.163107147 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.11673785 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.152037228 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.124658532 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.115945859 seconds)
  done (took 2.169607102 seconds)
done (took 32.505801413 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.135682638 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.11978661 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.158076504 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.128609592 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.15227666 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.139432592 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.141035921 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.126130027 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.156364308 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.122997011 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.160106048 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.115388817 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.114207709 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.140758561 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.128691235 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.147075765 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.131126707 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.151443314 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.139730225 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.159404647 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.114529448 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.154625911 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124705076 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.168655255 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.139859416 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.169501649 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.134459828 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.149935574 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.113667202 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.142771434 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.132403113 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.175408673 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.119393671 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.161723101 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.118336424 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.146660319 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.114036584 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.115050508 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.16061493 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.129074328 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.149031472 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.126005059 seconds)
  done (took 6.892828396 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.152500722 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.193412385 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.115494171 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.140313713 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.111599827 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.189510004 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.190137173 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.114296781 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.111133727 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.17484639 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.177044618 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.111737861 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.111276578 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.139584142 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.110598355 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.139028733 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.143725833 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.172855458 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.150149856 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.176594095 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.200231133 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.15498745 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.181536361 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.176491457 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.164363881 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.189374392 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.142176824 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.18439497 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.177389923 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.112389045 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.180782617 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.149246942 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.142476557 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.110661895 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.191085777 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.190344353 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.153263931 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.191686518 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.181452325 seconds)
  done (took 7.18881172 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.129339106 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.1306075 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.169712211 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.222207065 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.163339697 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.158573712 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.126837609 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.167481138 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.134451062 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.144403654 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.1247555 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.184422186 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133428629 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.153243398 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.121075963 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.162719351 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.140254468 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.147742883 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.120558293 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.166974028 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.135942356 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.161438651 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.129569343 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.155393842 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.115802561 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.161218075 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.12066321 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.161020699 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.12305024 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.151796402 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.121746141 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.148933289 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123739141 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.127966141 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.148749634 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.128891012 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.171884866 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.153625439 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.126156043 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.184730583 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.131228104 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.152024023 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.1445374 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.190915438 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.116650585 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.153936306 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.12125572 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.153519679 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.113908406 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.164530074 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128527923 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.117140927 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.17181984 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.143646433 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.114035359 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.132182393 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.145231506 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.118751045 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.154142195 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.122972624 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.171499707 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.121197717 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.16098614 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.118069962 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.151016848 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.116201374 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.142925609 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.1276779 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.171642805 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121655822 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.191953411 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.115467092 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.152908623 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.124736706 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.150135882 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126800763 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.114363552 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.161594426 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125544085 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.150913932 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.125972994 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.148150121 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.119550615 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.165363702 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.141223646 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.157995705 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123361227 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.162268825 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.119583036 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.145704528 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132059879 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.14586988 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.119606722 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.163441915 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.117098147 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.14764618 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.124546311 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.151825761 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.114108226 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.159907692 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.122424351 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.142554853 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.128252126 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.116755524 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.149223736 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.125620109 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.150843958 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.117285589 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.150830512 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.123961102 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.143262123 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120796145 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.149182277 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.119730724 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.161353249 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.12438343 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.118172736 seconds)
  done (took 17.602739421 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.299351926 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.262005919 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.245142486 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.369968581 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.174958006 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.147985338 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.258625456 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.207926846 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.115632016 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.20111171 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.22171684 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.2265474 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.212180411 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.222692023 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.219541535 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.114685123 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.174289687 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.209297278 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.261854747 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.33160605 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.174062614 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.164990428 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.171016788 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.203026339 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.169416487 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.165669338 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.145367653 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.17457597 seconds)
  done (took 6.950137483 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.144727941 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.194234815 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.125284638 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.182833418 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.179167115 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.116666007 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.149602028 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.116719686 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.163633649 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.138838461 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.14705661 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125209942 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.15270148 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.127630284 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.143654908 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.127340607 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.156803814 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.129740727 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.14756085 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.120842105 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.168560418 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.135662882 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.151930812 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.125578503 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.169139888 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.125872079 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.149096977 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.176655226 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.130093197 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.182906014 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.111600396 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.156827961 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.132714134 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.144600231 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.126228796 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.147864893 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.117671983 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.146013201 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.119952799 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.111638291 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.145180685 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.103144304 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.155708861 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135324535 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.155271027 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.119734404 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.152552404 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.120646112 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.151591452 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.111365144 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.147299962 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.118771142 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.150813085 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.13764749 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.148810301 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.112212832 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.119328485 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.135105151 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.127347313 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.14845341 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.109421408 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.153832285 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.108366724 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.154264182 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.127123671 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.138735365 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.125155206 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.147729721 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.122321665 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.154762388 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.11936686 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.133235055 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.143882402 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.119135091 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.161669515 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.13491687 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.150409151 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.124020834 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.157573641 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.113996593 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.132936655 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.114560897 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.099100887 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.151644355 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.11412522 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.154898671 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.118898958 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.152988436 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.168052612 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.129338143 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.154544289 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.115881098 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.125646955 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.152045978 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112502177 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.151063426 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140694278 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.174897978 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.116465547 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.142891132 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.139687331 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.148161224 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.113383462 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.135671417 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.131080733 seconds)
  done (took 15.614077508 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.179139527 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.222657566 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.151530566 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.138745356 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.18908275 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.209578991 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.133419756 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.124697521 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.1469804 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.139713088 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.157682338 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.127792877 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.157171047 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.134442932 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.206897624 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.157125087 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.117127017 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.164327223 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.124563413 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.222374994 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.140066458 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.204353852 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.210753931 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.161229954 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.122155823 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.201563794 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.210581829 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.1326697 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.159335989 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.181871234 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.161324352 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.21034382 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.213462646 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.123840967 seconds)
  done (took 6.755328758 seconds)
done (took 62.082270084 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.203300737 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.433447053 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.182123087 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.184665048 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.21977733 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.225924703 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.187117862 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.380939011 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.90592067 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.17231961 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.182068153 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.184451882 seconds)
done (took 27.564098235 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.256558902 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.344162127 seconds)
    (2/2) benchmarking "String"...
    done (took 1.479653411 seconds)
  done (took 3.922013851 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.185967395 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.185186003 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.589948086 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.190198617 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.18208922 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.196898492 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.200980668 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.18753773 seconds)
  done (took 15.830064758 seconds)
done (took 25.29250314 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.243784605 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.373291708 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.435935503 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.199937232 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.199885658 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.188497305 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.186668091 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.208797452 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.20057533 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.184801861 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.194466594 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.43647513 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.20139326 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.553915842 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.189295899 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.194812066 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.201336722 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.420582396 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.188107048 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.2255364 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.168135125 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.172931779 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.213341458 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.206904406 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.193316991 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.191961164 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.196392584 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.18722527 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.376586278 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.203138115 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.225971693 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.188644502 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.198960106 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.199236911 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.299054322 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.220146356 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.375831329 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.198583617 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.176942916 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.196106066 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.385102452 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.598163131 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.185706974 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.18704968 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.195323797 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.246704213 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.173689538 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.91244615 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.193593034 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.200896602 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.187234922 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.592894085 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.204114886 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.192649559 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.192821981 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.427114584 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.215818466 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.207036037 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.214670803 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.198104981 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.186927743 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.187141321 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.240423334 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.188223412 seconds)
  done (took 142.430709036 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.191509401 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.193383789 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.194830521 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.210209463 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.194277273 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.194855 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.194229404 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.194388387 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.192911576 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.221088146 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.195438475 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.192210586 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.194026591 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.166805322 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.193812985 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.199601566 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.190348016 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.215523184 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.211127571 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.193541727 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.200770084 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.195907299 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.213087281 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.194914878 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.196821771 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.263928317 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.229701701 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.227543218 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.190788087 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.19498322 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.192233578 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.196678045 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.823670921 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.044008216 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.2104016 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.217292176 seconds)
  done (took 79.830746597 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.195531311 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.193232767 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.193869618 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.192436803 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.226445687 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.195580828 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.776115495 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.781170867 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.930717882 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.514436038 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.58406488 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.456651476 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.19224636 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.289251871 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.207193441 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.197599613 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.211089706 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.221069864 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.19514923 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.193838824 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.776775562 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.209803765 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.387606113 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.371930203 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.209289701 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.226597621 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.590194176 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.191635884 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.227502551 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.171316927 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.532454328 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.243260883 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.193027122 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.595803227 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.311371103 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.195843342 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.227310431 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.198383429 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.479814502 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.1930546 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.197202327 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.200964656 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.898636295 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.198871144 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.779051158 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.197529787 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.180137569 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.200701375 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.195485146 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.489704802 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.892830915 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.196149544 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.197404538 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.199043368 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.20062744 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.195682655 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.194810011 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.229507193 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.346871415 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.294211085 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.198027323 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.20173475 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.230336731 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.200111236 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.388250902 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.193285617 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.788970638 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.250584144 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.314604138 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.780313587 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.199621723 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.198548659 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.296837777 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.31638459 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.193010229 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.197666543 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.201201368 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.197340839 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.307896705 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.194626269 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.60489602 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.371923163 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.214219699 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.582537845 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.298235926 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.195771705 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.617974503 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.197780458 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.199811117 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.957483896 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.292694593 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.196424022 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.197322247 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.197920928 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.607951629 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.78052355 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.479624092 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.200530135 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.779541487 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.200460426 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.198985808 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.618240366 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.760569967 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.89869972 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.203932457 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.312274083 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.373323204 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.215613475 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.197622545 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.604659413 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.202790506 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.259282733 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.201444922 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.596300916 seconds)
  done (took 366.743352994 seconds)
done (took 590.104285773 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.971750301 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.870209938 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.008796676 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.900133572 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.865576494 seconds)
  done (took 10.726167349 seconds)
done (took 11.836818439 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.389905336 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.388352496 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.258386825 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.388714512 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.232488564 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.412809274 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.370806811 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.223507098 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.307789795 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.281161397 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.304400912 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.253002901 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.240153596 seconds)
  done (took 18.161053696 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.466235435 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.198243853 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.279664626 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.465397311 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.240047046 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.468251751 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.508001838 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.198969936 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.342095782 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.214481631 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.215487328 seconds)
  done (took 17.709182018 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.467289599 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.200126174 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.265695617 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.461460635 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.240474923 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.468617368 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.504044961 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.200124135 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.353687948 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.21696936 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.215768267 seconds)
  done (took 17.706014882 seconds)
done (took 54.686948704 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.248018195 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.372302148 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.237079011 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.219191055 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.212391717 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.214260967 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.221574086 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.220568573 seconds)
  done (took 11.057434934 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.210795583 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.206639916 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.21204078 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.208121849 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.212941512 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.208344016 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.209199271 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.208268296 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.212338667 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.210367482 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.215896997 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.212334509 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.21303994 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.208311778 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.211603286 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.211544052 seconds)
  done (took 20.485451636 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.212100221 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.210376067 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.20999402 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.21282777 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.20888674 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.211036548 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.210498019 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.212140291 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.211681172 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.208690026 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.214357566 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.213119543 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.210855303 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.211868607 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.214177951 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.214416603 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.210266828 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.211416022 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.21444658 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.211940704 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.21339927 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.212245129 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.21158884 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.209953521 seconds)
  done (took 30.19930849 seconds)
done (took 62.853225573 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.210950022 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.208495501 seconds)
  done (took 5.534574943 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.271757131 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.2742735 seconds)
  done (took 3.66337999 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.214600218 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.217195224 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.21713425 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.214734845 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.216983099 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.214114007 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.216401072 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.214348746 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.214391448 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.21954844 seconds)
  done (took 13.27559144 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.21491753 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.214032427 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.211530024 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.216359616 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.216950523 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.214493847 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.215773541 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.217214325 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.216309661 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.211520742 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.216015987 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.214396581 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.217108711 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.21188786 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.215016387 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.216451466 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.21552857 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.216949886 seconds)
  done (took 22.990285886 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.225722063 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.238877006 seconds)
  done (took 3.582003101 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.343835618 seconds)
    (2/7) benchmarking "second"...
    done (took 1.254681595 seconds)
    (3/7) benchmarking "month"...
    done (took 1.32231482 seconds)
    (4/7) benchmarking "year"...
    done (took 1.312845763 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.25545951 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.233763417 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.253401175 seconds)
  done (took 10.095156292 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.216143552 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.404571018 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.518704633 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.808550976 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.217700439 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.222283116 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.07390626 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.220052167 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.221519446 seconds)
  done (took 14.020700528 seconds)
done (took 74.277212852 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.212829478 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.225345019 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.241805178 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.223479108 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.551435638 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.232937864 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.210694026 seconds)
done (took 16.017575978 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.201373238 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.206832743 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.211928052 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.206584455 seconds)
  done (took 9.943889027 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.210280613 seconds)
    (2/2) benchmarking "read"...
    done (took 1.560253955 seconds)
  done (took 4.890771313 seconds)
done (took 15.95320357 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218575685 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.218591405 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.216133903 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.217995269 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.214560859 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.214708077 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.220537251 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.21757481 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.219560105 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.213742253 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.2186659 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.220704797 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218144058 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215771664 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21924691 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223643554 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.219057473 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.214357148 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.216058892 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217084554 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218013059 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220177012 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.217040186 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.216413261 seconds)
  done (took 30.346683517 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.217484551 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.216309188 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.221408873 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.219852565 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.217540491 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.218966695 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.219331539 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.217892003 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.220887917 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.220181624 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217079801 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.217707531 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.217953619 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.219157624 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220113934 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.217719133 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.221913945 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217804839 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220829145 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.22163742 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.221877993 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216211995 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.218102749 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221314076 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.21867537 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.219856226 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.222052452 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.220219306 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222078294 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.218242579 seconds)
  done (took 37.700083384 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.224917055 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.231967042 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.222314088 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.222421579 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.221371326 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.220561944 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.224411356 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.22316705 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.22407797 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.223679412 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.223442845 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.222675968 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.222281715 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.221376866 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.221469548 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.22187057 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.223281707 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.223908591 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.225610673 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.222448093 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.224660898 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.225129368 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.223834074 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.223553021 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.221993043 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.224993775 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.224167008 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.224365094 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.223983959 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.222749504 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.224153283 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.2228473 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.223654067 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.223510506 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.224006833 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.224523973 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.228467158 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.233355053 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.225472672 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.224222983 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.222794177 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.224068948 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.22517829 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.224549979 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.225601575 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.225201597 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.225203604 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.2267962 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.225922284 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.223570334 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.225545315 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.22319581 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.225263665 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.226400493 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.225403298 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.226652365 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.226845403 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.225015539 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.22571954 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.224454226 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.227667468 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.223659569 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.227279467 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.226578397 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.22728921 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.228785628 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.225910532 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.227363899 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.227508219 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.228373369 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.227178243 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.228465257 seconds)
  done (took 89.315536711 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.231491305 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.228132628 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.227104042 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.22490664 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229565009 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.232004035 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.227690557 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231556684 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225752657 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.22652843 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227873854 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.22879035 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229846201 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.22738664 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230468923 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.224475317 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.231743782 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226996206 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.22732853 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.230828936 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232111907 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.230052296 seconds)
  done (took 28.159703279 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229643663 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.234099141 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.227337999 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.236663537 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.229097282 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.235920309 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.230354076 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.233283015 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231731489 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227272824 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22969847 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231117486 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.228127482 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226307073 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22748165 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.230094709 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229473845 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.231311479 seconds)
  done (took 23.277838031 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.227104523 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.229869923 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.232428426 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.231443853 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.232250518 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.234850103 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232757138 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.235899417 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.231916427 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.230062594 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.233061308 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229905204 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.229705681 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229800154 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231345299 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.230849748 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.23191438 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227707991 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232184935 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.229603544 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.228837337 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.23279194 seconds)
  done (took 28.216963155 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229866012 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.233390135 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.230055378 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.230444068 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.229055488 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.235881288 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.232679939 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.228088284 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.233428882 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.233258768 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231755542 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.235575415 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.228644446 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.233606511 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.232445669 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230021962 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.23411466 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.233382825 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232420763 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.229546325 seconds)
  done (took 25.770666981 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.243705803 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.243863788 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.243926324 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.241802495 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.246119651 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.246447566 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.246575606 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.248242854 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.242301301 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.24360067 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.242216879 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.244113468 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.243511138 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.242813751 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.242100862 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.245773661 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.241104078 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.242343856 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.243998818 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.243171112 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.24433536 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.24341627 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.244396776 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.242915321 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.243686957 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.242737231 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.242849777 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.24175562 seconds)
  done (took 35.956771215 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232991877 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.233587921 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.231027085 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.231518467 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.233397054 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.232162898 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.233423004 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.23181757 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.232349748 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.232010858 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.236339229 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.234217925 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.234101767 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.234625812 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.234036205 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.236863426 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238515653 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.234003315 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232648976 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232059625 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.235244291 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235725145 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.23845038 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.231557905 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234339693 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.236953275 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233716225 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.234842116 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.236178357 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.232386616 seconds)
  done (took 38.157110923 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.280331427 seconds)
    (2/2) benchmarking "in"...
    done (took 1.281633708 seconds)
  done (took 3.698558375 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.233696375 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237686149 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.237064261 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.235120691 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.23403374 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.23830102 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.237297901 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233040915 seconds)
  done (took 11.022536666 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.237283767 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.239701654 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.239846053 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.238189809 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.238979334 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.238775377 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244490082 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.258720462 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.238521308 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.240417465 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.737982563 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.246144872 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.240905914 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.237068416 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.236001257 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.240157338 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.236986222 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.237163166 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.237793245 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.239339916 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.241199857 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.239070609 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241565143 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.235391752 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.240731916 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.251043759 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.241462719 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.237694769 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.237656166 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.24173409 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.23829471 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.236965614 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.239969575 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.240564689 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.239576955 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.239619526 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.248947433 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.258801347 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.246785007 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.23749955 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.237968418 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.237783733 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.23898838 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.240692966 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.243054219 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.239554953 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.239330647 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.237847441 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.240420672 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.242767931 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.247808056 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240232595 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.237199715 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245675727 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.242953947 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.246789856 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.261312409 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.243019873 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.252576439 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.251394957 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.250646762 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.265933376 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.243062857 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.242605658 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.250827215 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.266663851 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.247617708 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.254963993 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.238507481 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.241230087 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.247141077 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.254119586 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.267667828 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.242457119 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243587913 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.241603416 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242338332 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.243087655 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.249329948 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.261674765 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.240052759 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243251132 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.252131504 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266333488 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.241539021 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.24223266 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.242553903 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.244867325 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.242877223 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.253075324 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.261128194 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.24324193 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.242731461 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.24243673 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.244199723 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.242888471 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.242137758 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243444546 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.244122718 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.243372134 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244520881 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.245925568 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.253275534 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.244678175 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243644296 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.248564159 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.245068098 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.243262801 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.248137563 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.244118084 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243719886 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.246259957 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.249672171 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.241823811 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.247397019 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.253840633 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.244492215 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.244643539 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.245026888 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.243512508 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.254916779 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.270283719 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.244196163 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.244700114 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.250266802 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.258571559 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.245824008 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.248250867 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.244111739 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.2422715 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.242349617 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.248412123 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.24581446 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.245252221 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245825516 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245702285 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.242946095 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.246958993 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.247458214 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.245830504 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.246704435 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.245482222 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.246418738 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.248337501 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.247272563 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.24906186 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.253390942 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.247119723 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.246623456 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.245692757 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.244515173 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.249266888 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.245856382 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.24546636 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.245889246 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.247352564 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.246605783 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.246441875 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.248767741 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.24928789 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.248414168 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.248512111 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253167004 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.247447023 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.251873861 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.249400596 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.246467551 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.249195968 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.24945028 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.247972914 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.247571272 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.247548855 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.25155454 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.25909055 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.248606912 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.249237458 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.252104854 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.246806296 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.249392194 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249395267 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.253635947 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.259106762 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.248002227 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.255358014 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.249945002 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.247566404 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.249807008 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.250470682 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.249903503 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249345939 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.252873112 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.259133287 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.262104957 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.273741126 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.251394245 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.254200434 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.251685918 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.25378368 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.253778414 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.248811222 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.249724692 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.250087187 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250179517 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.250499786 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.252506536 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.250761777 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.250453726 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.252181073 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.251828897 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.248991308 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250888829 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.25160056 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.250758442 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.249428314 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.249151987 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251339296 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.252516681 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.248920681 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.250269809 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.251194431 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.249993755 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.253841392 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.258720291 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.249140772 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.255074324 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.253445244 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.254248265 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.252018908 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.25251661 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254190029 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.251574795 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258549209 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.271913056 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.253880358 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258914372 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.271230963 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.253599495 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.257954026 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.253735935 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.251220791 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.257444008 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.263646975 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.252448363 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.252585758 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.251797049 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.255404935 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255609223 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.260780567 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.250475595 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.253630641 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.255191402 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.257270342 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.249041613 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.255230015 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.25556038 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.25437458 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.256423234 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255179073 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.253824089 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.256042004 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.253617418 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.254907205 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.253984368 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.257765373 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.264007354 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.258547948 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.255551442 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.254936467 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.256698591 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.259384269 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.257386502 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.25482664 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.254881404 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266324199 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.277508264 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.261899088 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.256043774 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.255778069 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258859586 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.25697522 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.259250658 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.253654612 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.257447336 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.2573261 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.254320728 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.253381164 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.256268828 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.257603777 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.257115098 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.260191779 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.263766418 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.257821801 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.25628287 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.256732374 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.256372357 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.25737815 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.256986799 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.255970158 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.261159712 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.25911482 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.255798104 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.258472602 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.261291052 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.279168294 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.259230436 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.258404693 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.257882437 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.258382535 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.258404861 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.257321086 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.260651372 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.269023216 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.262145869 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.268239659 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.260880555 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.269085722 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.261300143 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.259752847 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.267967711 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.256089605 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.257490886 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.256409938 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.2598526 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.265787306 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.277708012 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.263067448 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.26536325 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259117061 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.259723282 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.258896339 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.259583589 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.259047615 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.259500762 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.268639764 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.281684745 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.265956606 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261557829 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.258439075 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.257502102 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.259214262 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.257519255 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261267809 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.262516435 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.262185331 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.259196478 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.259459552 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.260265625 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.261302586 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.26205561 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.259808997 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.25901184 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.268389065 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.28100877 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.263998202 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.262003658 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.267464179 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259351583 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.26542889 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.279036764 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.25908394 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.262019372 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.262057669 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.263105152 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.260395024 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.260532913 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.261377382 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.262721669 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.266993133 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.261146177 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.264446833 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.261677236 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.262356753 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.262168838 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.274101738 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.287459301 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.262614732 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.269502568 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.26152779 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.263451409 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.267042474 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.263832564 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.261460105 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.266389945 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.2759132 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.274023479 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.262408968 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.261503447 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.262818913 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264217992 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.263305898 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.263943806 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.26339999 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.262679785 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.26515312 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.263267923 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266808675 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.264399037 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.264884998 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.265353464 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.265990345 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.274984726 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.262528729 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.264085043 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266137252 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.265286822 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.263759923 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.263973169 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.263170836 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.262493273 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.263274486 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.266481736 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.272673038 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.271772929 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.267740571 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.26468615 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.264633959 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.265847193 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.265985913 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.264110374 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.265697442 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.264518658 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.265008624 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.266733799 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.266309928 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.265196426 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.264975619 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.264157285 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.267241738 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.268864863 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.275689331 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.265407735 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.264415257 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.26601069 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266005352 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.266958711 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.267459449 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.271466985 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.267305224 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.278428201 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.275372803 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.271351841 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.267577594 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.269408774 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.275077371 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.264073693 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.266291415 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.26619538 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.266813063 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.266078935 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.270836029 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266894592 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.274852684 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.266865757 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.267169663 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.274433591 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.288225395 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.267562621 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.269026754 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.272932908 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.268868614 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.264469628 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.267603788 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.269153927 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274609418 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.287836517 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.268848728 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269018098 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.268399038 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.270918262 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.272902019 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.268710232 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.27069732 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.26620951 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.270431352 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.26845921 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.269106487 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.265834494 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.269243789 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.265151991 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.272380887 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.275649095 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.267184359 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.270973285 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.270222624 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.269313584 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.270245282 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.270844291 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.268466461 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.269840453 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.269559379 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.271183441 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.270414205 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.271906599 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.270591561 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.270354521 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.271018662 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271499889 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.272947165 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.283204068 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.280048441 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.267649493 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.271088353 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.26890884 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.272656683 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.272104983 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.270005788 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.269345987 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.271481577 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.271301342 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.270543631 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.271895728 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.275238643 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.286534872 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.293599191 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273182996 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.271857459 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.275206243 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.273343866 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.268998757 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.273857506 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.274592551 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.27658456 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.283171808 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.273145663 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279474552 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.29087486 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.272402065 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.275666502 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.277425853 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.282142578 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.274698435 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.27449441 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.272416152 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.27782803 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.290876709 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.273216637 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.283976793 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.304785815 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.295905659 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.274575531 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.273945614 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271053874 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.272157434 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.27693038 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.275066976 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.27479219 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.273472811 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.275194967 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.275049438 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.280885891 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.276477615 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.27595448 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.274530034 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.273899726 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.275679168 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.272169071 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.275161829 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.275663819 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.274125985 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.276540246 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.273951639 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.275234226 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.287648649 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.300123591 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.27492861 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.274317773 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.2723323 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.277941699 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.280119113 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.288435943 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.284807213 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.2756047 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.277394522 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.275949586 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.275390209 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.274423029 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.275983897 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.274897863 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.275316962 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.272837173 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.287805033 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.301722236 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.280588701 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.27608133 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.278720541 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.275824005 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276287348 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.27786587 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.277624115 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.277791576 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.280397605 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.2830872 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.277946558 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.275880668 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.279741258 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.286998149 seconds)
  done (took 752.434209873 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.275455222 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273098234 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.274396913 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.27291027 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274381465 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27503616 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273149406 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.276868879 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.274179628 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.277084963 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.276222995 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275619249 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.276023765 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.276951874 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275880276 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.27596543 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276517093 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.275390007 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.27560007 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.276027609 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.277588306 seconds)
  done (took 27.955332904 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.279147069 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.279354986 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.277256565 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.280827537 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.27631642 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.278392403 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.277066842 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280371156 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.280759658 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276057022 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.277906413 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279655191 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.277280495 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.276560185 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276361331 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.27927567 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.28083875 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.277338335 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.281182628 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.278384867 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.279457983 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.276557647 seconds)
  done (took 29.298959403 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.280465931 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.280911444 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.280728674 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.279856743 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.281458177 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.27776643 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.282188005 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.281601583 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.280805704 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.280741678 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.281571896 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.282439583 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.289076688 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.287873709 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.282957206 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.284430502 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.281057822 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.280127353 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.281904831 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.27769683 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.287121014 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.278022609 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.279092237 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.278675779 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.281897665 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.281735719 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.283030538 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.281474077 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.282904031 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.285554836 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.282347679 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.282148228 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.284309253 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.284538444 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.284488031 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.289729414 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.283092449 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.279422891 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.283662557 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.293273845 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.306203787 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.283440189 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.28861485 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.283155556 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.282804019 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.288658563 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.293068206 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.281090174 seconds)
  done (took 62.78609741 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.282541937 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.283540138 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.281366427 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.283891246 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.284051531 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.28311897 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.284706607 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.284799737 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.280446638 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.28062444 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.283684361 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.280439228 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.28170752 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.283877699 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.28261089 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.28020839 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.282468011 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.281939625 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.282651685 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.281461488 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.281816436 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.282787715 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.285803149 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.282677155 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.283870148 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.281934565 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.281185015 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.283964181 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.282098333 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.280329801 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.284171802 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.282522295 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.28566317 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.281862047 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.281124774 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.285110537 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.285774199 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.281272227 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.284913554 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.281934825 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.282743172 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.28247529 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.28606118 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.285011855 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.283515954 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.280106062 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.28050051 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.280078809 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.284091944 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.28384908 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.285764184 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.28239851 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.285069581 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.283797102 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.285414737 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.286319478 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.282691323 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.282663011 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.284954617 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.283673004 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.281386308 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.286835893 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.283776936 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.287533841 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.285189267 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.282764632 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.282514835 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.285606014 seconds)
  done (took 88.438792649 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.286611137 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.286824646 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283762047 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.285223477 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.285559867 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.28639882 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.28544263 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.287085026 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.285743951 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.283431991 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.285687765 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.288791997 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.287868106 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.287038517 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.288300143 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.285642488 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.287431009 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.289760468 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.286333678 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288970014 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.286976314 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.28672721 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.286057223 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.287436549 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.288664986 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.288753455 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.287132224 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.289481115 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.287077144 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.288098288 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.290291044 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.286419757 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.287293645 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.286277132 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.286979274 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.287599074 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.287706738 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.285257916 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.28787429 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.28822225 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.286678753 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.289922184 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.28797638 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.288978034 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.286915693 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.288572165 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.288270617 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.289320122 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.289403863 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.28766877 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.287412616 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.288038735 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286943763 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.290220689 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.289962265 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.288821123 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.28967987 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.290503572 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290314078 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.28761777 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.287867378 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.289071794 seconds)
  done (took 81.015279858 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.288725683 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.291242965 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.28770705 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.287226536 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.290527859 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.288214389 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.289328849 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.289138172 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.289769142 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.291463393 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291963285 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.288260238 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289384977 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289567353 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.29026618 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288934634 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.287368279 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.288307798 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.291222212 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.288463937 seconds)
  done (took 26.972600856 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.288506962 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.291340087 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.288305134 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.288641774 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.290498017 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.290739765 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.292570355 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292280558 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289518477 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293002809 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.293532043 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.293840425 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290551566 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.289634135 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.292073341 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.289500258 seconds)
  done (took 21.839817718 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.288631246 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.292740962 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.2941041 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.292016033 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.290550224 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.290178506 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.29340935 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.289718565 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.28997722 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.295368851 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.290743828 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.293047788 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.291270261 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.292630377 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.289838698 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.294032828 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.291384796 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.290299443 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.294698494 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.293612539 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.291464713 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.292266051 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.293411714 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.294055989 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.292776144 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.291340971 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.289352916 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.292319085 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.291333893 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.29330588 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.291883448 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.290575414 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.292537421 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.293013013 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.296322276 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.292226562 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.293922261 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.294702764 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.29411315 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.294919614 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.294946398 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.291290431 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.294397296 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.293971682 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.291795821 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.293704005 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.292462953 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.292421863 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.290237352 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.291607112 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.295424205 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.295855589 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.296107213 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.296571742 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.295469415 seconds)
  done (took 72.288848382 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.295166686 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.29588959 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.293261926 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.295236338 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.29556137 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.294131715 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.296434848 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.294092662 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.293892588 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.296341744 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.295439898 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.298601877 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.294048183 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.298269527 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.29661429 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.295316203 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.294448722 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.294125833 seconds)
  done (took 24.505576138 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.294395853 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.295197664 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.298559579 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.295107546 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.295087261 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.29695615 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.296260067 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.29628535 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296198024 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.293808598 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295308576 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.298360724 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297511296 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.297377195 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.296452782 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294351869 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.297123246 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.299076003 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.295177461 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.297277119 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.299239779 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.297067644 seconds)
  done (took 29.713105509 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.295469143 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.297725209 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.296716378 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.314756302 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.314919711 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.295368851 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.297397091 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.296474919 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.320000504 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.348118636 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.342216775 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.316388332 seconds)
  done (took 16.926777958 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295215278 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29810415 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.29594889 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29902896 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299185028 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295544433 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295167362 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295144039 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298297675 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29626104 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296801947 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301102135 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297615796 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29463253 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299936974 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299534578 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298305313 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297696449 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299958967 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2998038 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297976308 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301404161 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297561941 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297098426 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297065867 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297680539 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301296898 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29779715 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298604771 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301408422 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302736506 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297289485 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301317796 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298058808 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298074483 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300860651 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296389046 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301250123 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301488271 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295301534 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.296765227 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301070955 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304247956 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29716824 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299864056 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301436608 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298777789 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29873208 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300613217 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301064206 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300403453 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298090356 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3006172 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300480022 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302026241 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302492179 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299005786 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299020173 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301317834 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299007262 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299306986 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30031991 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299928379 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301297136 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299416617 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29861757 seconds)
  done (took 86.92943962 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300057775 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300277371 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297537939 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302669074 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300972896 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301114217 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300357143 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301897555 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302610356 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301358251 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304090549 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30168497 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301099009 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299230455 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302699064 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300124521 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300975847 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302502675 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302455654 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305375847 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30240363 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301153961 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302134881 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30187142 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30179283 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304890328 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301785716 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301073451 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302969664 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301229216 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302014685 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302837003 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302787472 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.302707468 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303734912 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300690755 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300787713 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302821591 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303245559 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305881432 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30300616 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305046586 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304795833 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303296314 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303490553 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302645575 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303993082 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304193766 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30443271 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303433667 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304819609 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305451778 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303331169 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305743865 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305117915 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303139415 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302726483 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303282018 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303293617 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307851488 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305183914 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307671065 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309829158 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305603413 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305238104 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305134401 seconds)
  done (took 87.197454709 seconds)
done (took 1761.044694828 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.473001106 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.450493041 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.304487616 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.341880378 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.303134941 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.301711642 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.311837522 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.303931696 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.307629015 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.306655912 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.305939237 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.496229424 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.297045755 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.303622412 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.305947288 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.403718849 seconds)
  done (took 26.717781402 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.338069105 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.313620477 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.434104099 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.330308517 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.338410977 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.511358815 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.369229745 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.312410309 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.49924626 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.358568655 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.299641902 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.332599306 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.311081771 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.302461176 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.328956632 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.504711736 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.583744869 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.306788689 seconds)
  done (took 28.976394694 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.797638643 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.302885818 seconds)
  done (took 5.303592174 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.332805497 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.31333909 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.315417145 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.307744808 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.303544327 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.305663764 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.311862441 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.306268957 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.302705192 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.451589392 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.315074293 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.321044214 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.327841693 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.310885648 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.303166192 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.349510131 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.483038739 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.308056011 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.308399027 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.317935414 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.309982875 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.415581781 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.361343026 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.312719297 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.448824433 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.305513549 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.313618756 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.315804079 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.43205278 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.305980212 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.308680752 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.312043187 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.312978735 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.265086974 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.896334206 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.305326161 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.335587808 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.319435479 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.308784295 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.472991963 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.311381916 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.318616494 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.31040297 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.881737509 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.471483563 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.440886353 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.324376124 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.331688933 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.314932041 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.384395161 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.315972077 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.315390151 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.356154605 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.145554181 seconds)
  done (took 84.391350528 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.352110134 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.303284684 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.488118365 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.338496399 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.303637672 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.305792488 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.308084891 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.624438135 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.313462722 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.304087749 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.617571952 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.884359978 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.330483998 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.350434567 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.201277299 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.360122353 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.30429586 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.321207627 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.305203539 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.31099063 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.878813638 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.319674593 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.307476079 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.502549606 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.346537667 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.84893415 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.305756796 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.304408065 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.305445546 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.303683993 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.838448071 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.319572297 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.363377491 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.306899701 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.593787353 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.709436171 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.6751775 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.312842989 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.348246564 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.310201788 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.320063272 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.837405428 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.690024336 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.308399572 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.307411502 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.837402097 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.305628867 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.310993594 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.316599928 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.560971442 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.313520769 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.310508661 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.326909481 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.310933073 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.308711994 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.403094086 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.37777059 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.854946873 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.307321013 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.324568289 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.325359324 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.311068164 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.315282953 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.309023541 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.328946689 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.692559518 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.512368917 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.315117254 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.693475826 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.832117291 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.325834719 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.911463015 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.32678933 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.338457324 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.364942416 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.310936485 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.307415618 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.8618246 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.369929479 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.309227755 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.678411248 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.311442434 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.620924535 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.333630546 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.312557969 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.88731025 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.322297367 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.397272151 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.310635847 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.313576576 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.325513188 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.319509516 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.601817035 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.340787934 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.310525278 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.307851681 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.32616298 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.310300609 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.310159467 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.316255214 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.913169837 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.339471371 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.313393802 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.315694123 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.311285049 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.311970247 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.311508581 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.312947201 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.581213498 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.332148467 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.32170392 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.314028514 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.310439052 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.316282961 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.53114024 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.318628491 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.662866381 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.318533376 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.329439399 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.319889132 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.320727861 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.353660138 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.312222033 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.319173714 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.197470215 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.580652767 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.340798776 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.330416182 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.316397141 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.315225141 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.34184823 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.312836348 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.345453904 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.310889674 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.094222086 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.337148272 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.340304745 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.3164263 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.317111737 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.320184188 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.313912802 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.318109763 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.617888186 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.614846757 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.519653762 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.323946435 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.319998116 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.082616289 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.363993782 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.49712115 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.339967614 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.315434097 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.567680353 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.526296735 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.317396554 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.314267536 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.317927229 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.579781815 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.319065471 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.631192373 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.884500293 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.33755858 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.325574658 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.100149626 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.031257524 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.321559097 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.317953782 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.623789658 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.335728571 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.318521883 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.318649586 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.316385211 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.332110372 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.321232155 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.319990923 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.317676022 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.318661575 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.330576419 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.512914863 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.341778508 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.31484173 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.8540714 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.351252231 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.329449837 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.323833902 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.321711071 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.317419117 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.395586524 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.321781698 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.343097249 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.316366069 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.330681728 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.870638319 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.319036461 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.324685439 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.514154337 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.036742677 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.337127794 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.320235866 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.333220075 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.249292658 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.894822701 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.377364622 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.670672404 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.322625192 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.361082585 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.320154377 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.349370716 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.880457773 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.32029218 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.338441621 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.991307233 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.332809589 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.953302334 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.316686998 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.321401717 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.936195045 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.334125489 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.319064252 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.316640735 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.33754439 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.613764174 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.326329096 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.369080874 seconds)
  done (took 495.258189996 seconds)
done (took 641.844941614 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.320826151 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.326329675 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.306588516 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.327078639 seconds)
  done (took 10.499070142 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.331426753 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.333926823 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.340622164 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.328426257 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.33221578 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.327795077 seconds)
  done (took 9.214855796 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.323871705 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.327590832 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.327528852 seconds)
  done (took 8.197172104 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.555928131 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.346551074 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.699586317 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.34077567 seconds)
  done (took 9.162950427 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.340341739 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.335994377 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.33955254 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.333414442 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.333600458 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.333214407 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.332236849 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.332446023 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.332367045 seconds)
  done (took 13.230014791 seconds)
done (took 51.523433538 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.033809286 seconds)
    (2/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.344129099 seconds)
    (3/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.333174791 seconds)
    (4/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.332126174 seconds)
    (5/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.362822131 seconds)
    (6/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.324769073 seconds)
    (7/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.3536436 seconds)
    (8/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.330311346 seconds)
    (9/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.405243047 seconds)
    (10/286) benchmarking ("sort", Float64, true)...
    done (took 1.970007254 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.332636703 seconds)
    (12/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.329863204 seconds)
    (13/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.333097779 seconds)
    (14/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.411275888 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.435826541 seconds)
    (16/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.335713632 seconds)
    (17/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.368892589 seconds)
    (18/286) benchmarking ("sort", Int64, true)...
    done (took 1.774110202 seconds)
    (19/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.003081379 seconds)
    (20/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.439024473 seconds)
    (21/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.223766212 seconds)
    (22/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.420216934 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.414030255 seconds)
    (24/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.335818419 seconds)
    (25/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.422156697 seconds)
    (26/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.355488231 seconds)
    (27/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.377891472 seconds)
    (28/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.359911049 seconds)
    (29/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.337969298 seconds)
    (30/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.334113981 seconds)
    (31/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.470698349 seconds)
    (32/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.345382237 seconds)
    (33/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.393063133 seconds)
    (34/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.406196984 seconds)
    (35/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.391412266 seconds)
    (36/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.459294254 seconds)
    (37/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.35050701 seconds)
    (38/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.413873632 seconds)
    (39/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.33699456 seconds)
    (40/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.529516932 seconds)
    (41/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.351055569 seconds)
    (42/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.36786229 seconds)
    (43/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.334478744 seconds)
    (44/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.335588429 seconds)
    (45/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.078869286 seconds)
    (46/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.356658141 seconds)
    (47/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.312970646 seconds)
    (48/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.67426687 seconds)
    (49/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.363847891 seconds)
    (50/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.36011335 seconds)
    (51/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.409897988 seconds)
    (52/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.33945218 seconds)
    (53/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.342817726 seconds)
    (54/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.374776177 seconds)
    (55/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.344655965 seconds)
    (56/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.001057083 seconds)
    (57/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.339057253 seconds)
    (58/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.416473394 seconds)
    (59/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.344973602 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.438217374 seconds)
    (61/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.390730059 seconds)
    (62/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.465683714 seconds)
    (63/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.351265858 seconds)
    (64/286) benchmarking ("sort", Int64, false)...
    done (took 1.529820088 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.404323545 seconds)
    (66/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.372669866 seconds)
    (67/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.341085435 seconds)
    (68/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.424661051 seconds)
    (69/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.113095837 seconds)
    (70/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.499766192 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.511419729 seconds)
    (72/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.341888542 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.432991853 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.383991711 seconds)
    (75/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.31491703 seconds)
    (76/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.339350597 seconds)
    (77/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.414674982 seconds)
    (78/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.370871685 seconds)
    (79/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.379438305 seconds)
    (80/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.331272429 seconds)
    (81/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.312850166 seconds)
    (82/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.570168305 seconds)
    (83/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.335257995 seconds)
    (84/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.567857088 seconds)
    (85/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.365307788 seconds)
    (86/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.636070904 seconds)
    (87/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.441820555 seconds)
    (88/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.393152764 seconds)
    (89/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.362880473 seconds)
    (90/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.331447163 seconds)
    (91/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.322581016 seconds)
    (92/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.456492305 seconds)
    (93/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.367133044 seconds)
    (94/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.405698496 seconds)
    (95/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.336013805 seconds)
    (96/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.346954138 seconds)
    (97/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.350850457 seconds)
    (98/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.229624528 seconds)
    (99/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.183852946 seconds)
    (100/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.523147302 seconds)
    (101/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.358837704 seconds)
    (102/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.468332067 seconds)
    (103/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.354785222 seconds)
    (104/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.383968581 seconds)
    (105/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.331226719 seconds)
    (106/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.332555921 seconds)
    (107/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.406967352 seconds)
    (108/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.39508729 seconds)
    (109/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.356344136 seconds)
    (110/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.329978423 seconds)
    (111/286) benchmarking ("sort", Bool, false)...
    done (took 1.358536629 seconds)
    (112/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.339242464 seconds)
    (113/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.340171992 seconds)
    (114/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.363180827 seconds)
    (115/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.421180955 seconds)
    (116/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.361518857 seconds)
    (117/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.987063345 seconds)
    (118/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.356189399 seconds)
    (119/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.979583362 seconds)
    (120/286) benchmarking ("sort", Int8, true)...
    done (took 1.700840049 seconds)
    (121/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.223105085 seconds)
    (122/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.398295328 seconds)
    (123/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.347457234 seconds)
    (124/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.378471777 seconds)
    (125/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.525051803 seconds)
    (126/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.363204059 seconds)
    (127/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.045175162 seconds)
    (128/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.357779513 seconds)
    (129/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.079667378 seconds)
    (130/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.346126841 seconds)
    (131/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.340955342 seconds)
    (132/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.428724599 seconds)
    (133/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.629068871 seconds)
    (134/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.420879052 seconds)
    (135/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.530319084 seconds)
    (136/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.375710327 seconds)
    (137/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.502708716 seconds)
    (138/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.341857456 seconds)
    (139/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.513671036 seconds)
    (140/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.981257648 seconds)
    (141/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.473509151 seconds)
    (142/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.359847274 seconds)
    (143/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.391048452 seconds)
    (144/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.467531926 seconds)
    (145/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.440104343 seconds)
    (146/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.365476463 seconds)
    (147/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.352916291 seconds)
    (148/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.599385121 seconds)
    (149/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.335769464 seconds)
    (150/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.349580551 seconds)
    (151/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.159138426 seconds)
    (152/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.343648588 seconds)
    (153/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.333276854 seconds)
    (154/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.340063267 seconds)
    (155/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.351621445 seconds)
    (156/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.348418379 seconds)
    (157/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.367660137 seconds)
    (158/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.326205896 seconds)
    (159/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.493661843 seconds)
    (160/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.35584821 seconds)
    (161/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.377130616 seconds)
    (162/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.350758896 seconds)
    (163/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.485565613 seconds)
    (164/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.483250469 seconds)
    (165/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.361093894 seconds)
    (166/286) benchmarking ("sort", Float32, true)...
    done (took 1.946070914 seconds)
    (167/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.320348981 seconds)
    (168/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.090910733 seconds)
    (169/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.365256698 seconds)
    (170/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.550695906 seconds)
    (171/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.456128313 seconds)
    (172/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.56968616 seconds)
    (173/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.41517496 seconds)
    (174/286) benchmarking ("sort", Bool, true)...
    done (took 1.567690749 seconds)
    (175/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.348181696 seconds)
    (176/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.389891521 seconds)
    (177/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.467404707 seconds)
    (178/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.403670142 seconds)
    (179/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.347246432 seconds)
    (180/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.399629564 seconds)
    (181/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.555330143 seconds)
    (182/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.468428147 seconds)
    (183/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.513791315 seconds)
    (184/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.356067058 seconds)
    (185/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.357975488 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.389428835 seconds)
    (187/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.453433625 seconds)
    (188/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.357474822 seconds)
    (189/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.429378616 seconds)
    (190/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.979549596 seconds)
    (191/286) benchmarking ("sort", Int8, false)...
    done (took 1.48463152 seconds)
    (192/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.994665855 seconds)
    (193/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.348029364 seconds)
    (194/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.352801824 seconds)
    (195/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.453390108 seconds)
    (196/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.425593274 seconds)
    (197/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.346100844 seconds)
    (198/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.489221487 seconds)
    (199/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.352499215 seconds)
    (200/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.35397223 seconds)
    (201/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.345019432 seconds)
    (202/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.390028491 seconds)
    (203/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.494106557 seconds)
    (204/286) benchmarking ("sort", BigInt, false)...
    done (took 2.353048552 seconds)
    (205/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.494254669 seconds)
    (206/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.08849276 seconds)
    (207/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.363091828 seconds)
    (208/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.344145325 seconds)
    (209/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.344832056 seconds)
    (210/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.44575877 seconds)
    (211/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.124385682 seconds)
    (212/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.448413776 seconds)
    (213/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.415045785 seconds)
    (214/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.496322257 seconds)
    (215/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.395953387 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.526614876 seconds)
    (217/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.348404378 seconds)
    (218/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.351767706 seconds)
    (219/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.339084837 seconds)
    (220/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.686836562 seconds)
    (221/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.354715714 seconds)
    (222/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.352159188 seconds)
    (223/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.367941204 seconds)
    (224/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.356122797 seconds)
    (225/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.101756313 seconds)
    (226/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.393710186 seconds)
    (227/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.357546628 seconds)
    (228/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.336919499 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.471366323 seconds)
    (230/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.351450666 seconds)
    (231/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.347447802 seconds)
    (232/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.366450105 seconds)
    (233/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.342409283 seconds)
    (234/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.346315773 seconds)
    (235/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.101333458 seconds)
    (236/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.35008993 seconds)
    (237/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.41205161 seconds)
    (238/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.349378813 seconds)
    (239/286) benchmarking ("sort", Float32, false)...
    done (took 1.50336703 seconds)
    (240/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.520514275 seconds)
    (241/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.535471725 seconds)
    (242/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.375396417 seconds)
    (243/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.420089768 seconds)
    (244/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.22130932 seconds)
    (245/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.408830286 seconds)
    (246/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.09473501 seconds)
    (247/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.397286745 seconds)
    (248/286) benchmarking ("sort", BigInt, true)...
    done (took 2.338425879 seconds)
    (249/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.348367466 seconds)
    (250/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.324983187 seconds)
    (251/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.448381374 seconds)
    (252/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.347324963 seconds)
    (253/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.356510934 seconds)
    (254/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.350753773 seconds)
    (255/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.356355374 seconds)
    (256/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.353407126 seconds)
    (257/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.560445528 seconds)
    (258/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.349840997 seconds)
    (259/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.474143578 seconds)
    (260/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.502898827 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.379892916 seconds)
    (262/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.517393604 seconds)
    (263/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.355310454 seconds)
    (264/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.349145729 seconds)
    (265/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.342490821 seconds)
    (266/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.327842459 seconds)
    (267/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.436176452 seconds)
    (268/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.356621805 seconds)
    (269/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.347562245 seconds)
    (270/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.349609273 seconds)
    (271/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.426972158 seconds)
    (272/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.336596497 seconds)
    (273/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.542867935 seconds)
    (274/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.348388099 seconds)
    (275/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.502259169 seconds)
    (276/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.488678006 seconds)
    (277/286) benchmarking ("sort", Float64, false)...
    done (took 1.563520077 seconds)
    (278/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.346096673 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.455734943 seconds)
    (280/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.327279397 seconds)
    (281/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.344173185 seconds)
    (282/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.450985285 seconds)
    (283/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.046569925 seconds)
    (284/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.492792141 seconds)
    (285/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.004507846 seconds)
    (286/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.352902821 seconds)
  done (took 470.923440483 seconds)
done (took 472.145220756 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.384082663 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.396872332 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.352279505 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.387719483 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.465685396 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.525890481 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.363561461 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.391627724 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.401883123 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.402493235 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.356048747 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.522301429 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.35286011 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.349049291 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.353001062 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.394425417 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.339478212 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.371071052 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.367868894 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.384796965 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.371479732 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.358413074 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.402606371 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.528267209 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.356368441 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.355640042 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.357303564 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.373968715 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.469190667 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.356847869 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.355352075 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.363554783 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.340990587 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.377490089 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.346616542 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.376318487 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.362398804 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.360172759 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.388137009 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.466410044 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.344892092 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.37503324 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.351348507 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.355008249 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.355036737 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.389723161 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.353475146 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.412082668 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.395234158 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.396039534 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.34404378 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.363113739 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.361693828 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.351154645 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.362190024 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.356137148 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.41039435 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.3983834 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.370176562 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.39742784 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.348081747 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.356766723 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.39098452 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.372233669 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.362972266 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.343031757 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.350184359 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.39228841 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.348132572 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.374441466 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.349357891 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.362627406 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.354582225 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.367693993 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.387773872 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.341264243 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.364436021 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.355451333 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.365965876 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.351404664 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.403727461 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.397230625 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.40812186 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.355943119 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.393776644 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.527002797 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.365753259 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.355776971 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.396736608 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.380035816 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.361899601 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.366234003 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.388592039 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.358759457 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.401328762 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.411657718 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.364718011 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.362176099 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.40397142 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.365159042 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.364010075 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.40150334 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.35491479 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.351814608 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.355956412 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.476755769 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.367117954 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.358047827 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.387696155 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.407026674 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.416783165 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.356466228 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.373121296 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.405034519 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.36721469 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.417402734 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.360909087 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.353441264 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.351967469 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.476912933 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.358233032 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.364164917 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.40454929 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.416678228 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.35714048 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.346179309 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.360424608 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.39930355 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.479788379 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.370504027 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.477044207 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.354199267 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.364083912 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.3897996 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.404203003 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.391919089 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.420713424 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.403048645 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.375290749 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.360211317 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.372425573 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.368980344 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.361885269 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.417411259 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.355334697 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.390098314 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.400883513 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.398631645 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.391332663 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.479595745 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.35988309 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.357765294 seconds)
done (took 227.378517121 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.420652765 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.352338844 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.458734464 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.358767313 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.457500148 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.455967466 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.350641309 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.352525145 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.35548946 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.734170239 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.352091495 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.353045366 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.3570018 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.351497901 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.440171777 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.353469161 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.352163568 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.696332204 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.357364361 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.432554464 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.356089834 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.35335499 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.35505746 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.743272698 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.352961754 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.350919147 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.430382776 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.354678692 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.701022193 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.349791413 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.355200494 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.703779616 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.445106548 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.372768118 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.369107916 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.367415313 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.464522317 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.378888825 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.444598479 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.437907898 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.461396339 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.395365162 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.348166299 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.360702079 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.358306683 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.358064343 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.355952954 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.386027939 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.355417415 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.35989436 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.702797041 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.369830997 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.36501161 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.355601926 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.357747363 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.381915123 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.354855408 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.358981109 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.445789441 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.358500573 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.418999735 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.735105969 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.735863058 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.360540426 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.360312489 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.356029197 seconds)
  done (took 106.028615998 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.427397092 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.436558675 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.477854226 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.359871325 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.412658226 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.481444535 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.35851452 seconds)
  done (took 11.20005948 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.36578463 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.358935319 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.407789356 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.41453852 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.362757074 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.583636001 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.364111644 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.371577717 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.358533506 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.442445465 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.372068982 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.360124968 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.370908888 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.364466785 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.411000015 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.37398421 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.480977485 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.363921508 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.362198336 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.51277566 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.356871299 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.369360275 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.443612942 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.375223533 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.375727865 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.368578179 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.318544535 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.361400072 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.357607363 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.364088034 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.358192087 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.468536167 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.364892228 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.35820849 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.358691932 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.523451916 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.362723772 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.357010256 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.365108177 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.365665713 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.361611576 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.3611498 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.365583488 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.360108198 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.365145453 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.386379546 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.366504663 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.364746693 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.366938249 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.365345967 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.440416957 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.364021621 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.362151327 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.361494731 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.443385438 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.370983663 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.363807529 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.362321154 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.364450106 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.362865775 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.514704613 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.409499054 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.361718357 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.409309404 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.365162675 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.366577923 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.361110368 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.365898608 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.457097095 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.362154286 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.412166339 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.362323719 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.589453199 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.390160623 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.370067443 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.368065182 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.367496201 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.364121655 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.364865615 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.374769414 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.364082453 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.367052148 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.36988082 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.361739108 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.362772884 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.547195352 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.524671529 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.365450645 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.379185864 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.370435271 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.36253173 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.444784472 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.364537209 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.364371861 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.421108429 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.482257876 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.443346547 seconds)
  done (took 141.115409699 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.368456291 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.373665135 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.366004849 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.387737889 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.367219373 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.367273306 seconds)
  done (took 9.483304679 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.36819583 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.369091782 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.367508051 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.369939696 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.368789438 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.380704797 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.377965932 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.371594381 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.367412479 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.371333022 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.378430246 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.371853024 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.373706799 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.367225249 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.382492399 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.369057265 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.380779992 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.367051882 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.370242189 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.368874893 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.364021896 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.36790194 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.367306646 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.372982253 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.385267508 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.37043402 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.377764369 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.368068837 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.370981544 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.378274197 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.389025576 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.384956541 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.369990892 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.374872383 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.383496852 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.372809227 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.372638251 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.371442141 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.368487944 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.382246359 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.374257296 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.366374036 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.370337463 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.374945021 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.373002683 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.376842629 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.379472699 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.383570119 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.383855394 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.376069413 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.376686462 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.373411253 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.385747858 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.371762146 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.374141246 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.390453475 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.374005344 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.383650228 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.37268809 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.375913351 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.376111441 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.385703774 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.374652217 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.386839995 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.372664963 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.372759943 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.375515649 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.378091919 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.374136382 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.376412216 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.372579025 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.369214492 seconds)
  done (took 101.241276946 seconds)
done (took 370.311870008 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.863116542 seconds)
  done (took 4.119224071 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.482961364 seconds)
  done (took 3.745473657 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.439550183 seconds)
  done (took 24.706868863 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.385703873 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.387760334 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.389965685 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.375058548 seconds)
  done (took 10.797843523 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.698681447 seconds)
  done (took 3.95909636 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.365513458 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.366042133 seconds)
  done (took 5.990624289 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.693707489 seconds)
  done (took 3.95255739 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.818290176 seconds)
  done (took 4.084541153 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.392381323 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.381108462 seconds)
  done (took 6.041671029 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.349667381 seconds)
  done (took 3.609053905 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.97076101 seconds)
  done (took 18.232937964 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.370777883 seconds)
  done (took 3.637703649 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.400226572 seconds)
  done (took 3.66033978 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.307175309 seconds)
  done (took 6.567920568 seconds)
done (took 104.365696579 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.368463853 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.372770939 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.372243515 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.376224443 seconds)
  done (took 10.748843567 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.41047181 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.410836391 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.41339702 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.421404828 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.410660019 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.409543481 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.415485669 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.398654036 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.419740907 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.412727612 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.429441439 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.415609565 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.41047473 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.401687792 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.411455539 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.425209831 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.41957035 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.411675251 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.398725534 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.409816365 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.373990685 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.416723237 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.411606014 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.375624346 seconds)
  done (took 35.097115447 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.872644536 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.44000822 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.530935376 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.427530944 seconds)
  done (took 7.532844055 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.442345055 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.455430738 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.453940117 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.497766446 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.518706496 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.45169314 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.405679198 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.400560543 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.382817647 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.453567828 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.506468299 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.440263833 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.539196295 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.377958027 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.654272295 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.37522902 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.377801403 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.452909432 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.495413763 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.512294679 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.376083386 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.454474459 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.456955345 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.442090038 seconds)
  done (took 36.186255784 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.375499168 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.394323616 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.374644305 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.373801044 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.384149979 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.377127939 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.375578841 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.378470603 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.376493857 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.925334806 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.376902976 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.389378427 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.903746907 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.381419407 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.385151295 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.381555522 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.912308624 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.911100287 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.380203338 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.38154718 seconds)
  done (took 31.002969077 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.373225081 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.371807747 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.724156778 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.629669485 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.371486343 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.371865425 seconds)
  done (took 14.105030212 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.45814504 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.620352886 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.379827252 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.791237012 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.88376858 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.386732522 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.382894123 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.661826126 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.030595159 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.003491478 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.450891833 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.462751843 seconds)
  done (took 20.779022553 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.383518671 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.379770921 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.381467938 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.3964647 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.444960685 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.384874841 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.392570019 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.373367843 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.447235074 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.457493847 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.389625923 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.451279079 seconds)
  done (took 22.153573549 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470456753 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.374747935 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.374609461 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484743266 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379481252 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.223523987 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.491499003 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.168291391 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.403715353 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648708276 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375209183 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477168881 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.633022421 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383469736 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378339137 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.368901057 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.610333265 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928847962 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381737463 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392019398 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405336738 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394120691 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.3881887 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.617850939 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.379564201 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374589672 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.636703586 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.374701048 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.703016726 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.396736505 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389567556 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380056626 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649899066 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094826275 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503521381 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.616073267 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389860866 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381254184 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.361353536 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.38061702 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399256177 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.376280267 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389125308 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379029525 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37923535 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387078637 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171400123 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.403150872 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.378110922 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.376233142 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.678609807 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488539211 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.38268159 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.379176574 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513693208 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381086528 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.378056705 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.393864521 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967579891 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378202577 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409738397 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.386074014 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393387742 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400123208 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058418784 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.385442274 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.384361053 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.387915965 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381595362 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.393750942 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39421915 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378389644 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.40205505 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37798454 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.166541282 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379826022 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385657483 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985100408 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389242989 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.381622485 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.613142639 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379034831 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377533472 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.377393261 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382749829 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.175526102 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394525368 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.362416754 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.39044851 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.191002688 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.637339682 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398558466 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41282482 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.607337193 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.36585546 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377735575 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.380769628 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385739186 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401432775 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.16647232 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401952926 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.3827461 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.643693853 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.593512421 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397104603 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.378129537 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917037442 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413549751 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.406922712 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.394452694 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.624905179 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.029085961 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.399633406 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397030296 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400549725 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.383308072 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20931595 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405440608 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.484685345 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.389621201 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682614206 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.267926698 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391270357 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452064502 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385022942 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.383498116 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383012963 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400781317 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.385522889 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.60684267 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40110033 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.41896771 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.392274695 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3799034 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.378858961 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402968094 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.40114812 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.606984546 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399599469 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66164444 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384599559 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384002652 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384042252 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.606418151 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.379737379 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.723633625 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.652365079 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383472113 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.420643342 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.399750321 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40350002 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48988779 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40495065 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.387773366 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.644850769 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.384354791 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.389448143 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400030716 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388961181 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387146875 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.388482321 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422230484 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061239588 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360244978 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392588935 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.276127102 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.400449164 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452015468 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.389559707 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.622904926 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.389199293 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404312555 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.392230359 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.397686591 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610640064 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.397295647 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.398112586 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4662836 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.926205402 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.062078087 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401082262 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.387198951 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.380199295 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.380327573 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386498745 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387034623 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385844596 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.625847577 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.404599578 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.42070608 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.041322227 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387828078 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401809804 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.397526948 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.401762358 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.39314176 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387224672 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.391295024 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386426464 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404605611 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.406829098 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533751149 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.402364305 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.387209851 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.900971735 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.393093416 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389998777 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.386675194 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420497159 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388186004 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345299543 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.658421426 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415550427 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.692983229 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.407125421 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.412040176 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.390045471 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396149369 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395096293 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.416810058 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402715494 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.402622198 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.390169347 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407537125 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966056229 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203474474 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990088953 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402491779 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.397103833 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.396122873 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.143896825 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405626831 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390088871 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655450413 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.191642912 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408599564 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931818061 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.417134786 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.257388703 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.69555965 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625689602 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403265027 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.395474429 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.695691863 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611199476 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428546561 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392095633 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397169832 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.372762217 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986869042 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408020464 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.473656616 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206508788 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416992981 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398827872 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.48375644 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.417550891 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852818011 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.412230819 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397272949 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.395147265 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.402012947 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258096408 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.397013079 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392026618 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075147727 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.406709616 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.939730837 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414405934 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.636828426 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.412130382 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.397320571 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.402889334 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.398527098 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.656586645 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.695520486 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401424709 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403729777 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998761759 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.261269916 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.400834216 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39648163 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231029474 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403905884 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.725905943 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.405896219 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.394430599 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397865388 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392824121 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39343359 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.387340061 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.398796111 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363056244 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958050976 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.415155063 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429939464 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.429956249 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399878203 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.648976369 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.407402082 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.055774073 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.629426926 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.4159205 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424765083 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.39859677 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403870786 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.385634654 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.396002499 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.397066459 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.541229191 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.623705462 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.404595481 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.381711245 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.529213675 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.614192895 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.395219262 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.404777336 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.673090221 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.398249499 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.401702816 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.213173141 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429447823 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.408587272 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399155005 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.408837154 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.415690705 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474177508 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641529637 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.412256914 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.410586631 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852062644 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427169807 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399757089 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.409330473 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501446741 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401431249 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.403375589 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.171421906 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.074115545 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.218685121 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.05501896 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.700341111 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40165942 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402367775 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397093838 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563238159 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401961239 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670986628 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399518611 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.417858787 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423679336 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414612654 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411281584 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614919295 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676423515 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396556181 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399208824 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40528132 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.402179225 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.411850736 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.609821603 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964033314 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014743004 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399093755 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399791952 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.204931022 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.697211403 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397816913 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399247354 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396866119 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.401190003 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.420873315 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.411440454 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415600715 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550417489 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.700022498 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125007751 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.432132456 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.432870826 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.172736021 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403374809 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.665850771 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401395623 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.643516306 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061963862 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.204104629 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672971499 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46947599 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.646069899 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.401497321 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567592864 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.406657527 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.3988084 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399940447 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399713112 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.39769753 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.409913005 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066351501 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670307729 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.401292808 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.405587558 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434135647 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.411880855 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.625447405 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.211798574 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.633208606 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.411844581 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.410135377 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399467999 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061799289 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.706333739 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406280234 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.407257421 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.675872224 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.405570619 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425946225 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.856073786 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.400240273 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016164979 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.381573569 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426507994 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418435235 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.211024904 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064894654 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.413245814 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966556569 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404638233 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411067431 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683442015 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.40790817 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.419390966 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686433156 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.409764744 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.410582045 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.655849649 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.064329954 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.258985143 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.410835304 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432295782 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.407210885 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401745515 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516584363 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409310257 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404261479 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.871374069 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.428206316 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401265074 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415811438 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.418298454 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40345496 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.428247981 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406688789 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.411622951 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.409391495 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.395519774 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.426714765 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.423743997 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016426272 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433380231 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.080113266 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.733149895 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.664658073 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.415910197 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.394170983 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.410072948 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407667083 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405649518 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407463304 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.442521691 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022330159 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.424111343 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.424274697 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.412210938 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.624516271 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619457608 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.408268414 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.668980989 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420356511 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.426947995 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.389671502 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407680313 seconds)
  done (took 994.357547744 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.456763394 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.437303168 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.43997524 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.454883399 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.465717219 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.46300166 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.490779155 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.442319883 seconds)
  done (took 20.949439625 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.407647894 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.423993854 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.422682508 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.424160441 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.424734362 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.933137281 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.427010702 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.418690372 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.418764359 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.418220051 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.409870451 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.206502766 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.416003218 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.424658695 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.407744781 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.416121392 seconds)
  done (took 33.306413353 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.653481293 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.656029589 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.880397588 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.478719485 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.449984397 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.407195572 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.779999428 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.440853568 seconds)
  done (took 28.050861337 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.421088248 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.422124532 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.420431345 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.419455504 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.422135354 seconds)
  done (took 8.405871318 seconds)
done (took 1263.936193002 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.414723084 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.417498317 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.417647487 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.41690634 seconds)
  done (took 6.96715174 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.394782657 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.394493273 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.396675706 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.403937711 seconds)
  done (took 9.890452947 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.225807521 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.134808876 seconds)
  done (took 5.662281831 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.412972569 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.167448819 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.157785571 seconds)
  done (took 8.038824472 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.722064878 seconds)
  done (took 3.022425059 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.832984385 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.779818156 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.602991018 seconds)
  done (took 6.5196107 seconds)
done (took 41.401184872 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.414195045 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.66448952 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.570006569 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.419255017 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.570198464 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.571553393 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.170472666 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.414355095 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.413988503 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.412806271 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.415282674 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.57151028 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.223470557 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.664320065 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.221936201 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.758630958 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.573458722 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.425499948 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.407247659 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.410307621 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.178481171 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.407669612 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.420684457 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.412535154 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.573945568 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.559387792 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.414840455 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.758772254 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.418035989 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.414283405 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.556697036 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.413322066 seconds)
  done (took 84.125567212 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.413057905 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.414695482 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.413985428 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.432120135 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.414042557 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.416222275 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.437102034 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.412630594 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.412286327 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.410441649 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.417873094 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.408214092 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.413139253 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.446970035 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.410219023 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.445169379 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.411951087 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.43271838 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.425351135 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.414086656 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.42207875 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.415767891 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.413501975 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.421030433 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.42789787 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.415907339 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.449793883 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.42400296 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.412191041 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.430581548 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.417715583 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.432985688 seconds)
  done (took 78.793091416 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.42090263 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.430363383 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.426003496 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.415101747 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.432053086 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.427324584 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.414509659 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.413090713 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.41710089 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.41351367 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.414050448 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.431482552 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.415143903 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.415574212 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.412882273 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.414064618 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.412230862 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.420897749 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.426455425 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.413705812 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.414438916 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.426859957 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.413297374 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.4477514 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.415425196 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.434875075 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.417242895 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.412124612 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.415252785 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.420734211 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.439162381 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.421546425 seconds)
  done (took 78.769752058 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.701972866 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.424773593 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.425438877 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.420044335 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.426874807 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.422697953 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.421250494 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.701628445 seconds)
  done (took 15.253655251 seconds)
done (took 258.243950436 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.414698684 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.420974509 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.641564221 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.443944932 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.417260708 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.451584333 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.44390179 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.663090961 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.453040257 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.671194932 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.439012949 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.443140934 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.429416957 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.440685613 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.722537672 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.580852871 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.444723714 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.424836422 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.789960988 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.452051368 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.718505145 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.416943321 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.717798676 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.429174462 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.440141451 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.417452528 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.431535214 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.420996186 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.450264272 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.799651326 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.422734612 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.415475836 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.519884576 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.543339528 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.654513872 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.594948004 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.423017507 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.513284809 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.666165791 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.420085473 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.419645154 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.247534828 seconds)
  done (took 85.579336694 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.426465044 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.538521192 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.427705496 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.429207624 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.429091147 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.545304805 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.522018576 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.428091572 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.428640731 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.427549863 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.429403144 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.427154386 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.427643359 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.426080406 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.429027354 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.428584545 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.430974506 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.439284093 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.441503494 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.471160249 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.549609731 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.456024193 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.420480028 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.430142496 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.526343436 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.562654006 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.42840279 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.419918151 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.467715058 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.43045093 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.435168177 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.470968431 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.430828693 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.431283025 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.543831214 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.535365006 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.446460031 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.427263537 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.539520202 seconds)
  done (took 58.218055685 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.433452487 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.699062568 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.890281203 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.437290879 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.429600095 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.435957934 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.521647986 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.431630775 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.435612655 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.430915166 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.611897357 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.434470391 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.469176167 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.923961874 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.435735496 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.431194511 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.435815153 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.431974873 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.705450302 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.441299689 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.540254474 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.432212049 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.527739667 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.444608084 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.458479411 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.432861954 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.436601698 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.016612473 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.434147718 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.612115449 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.338021027 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.517078409 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.955661543 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.923528958 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.344815648 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.437711674 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.434740505 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.625068328 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.439144014 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.435183102 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.519663528 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.436224791 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.91889006 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.113361723 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.451597876 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.432387997 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.045082304 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.626036149 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.724417743 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.450052885 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.946123943 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.440478433 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.433367038 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.437731363 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.720454978 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.446283896 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.437666367 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.044648434 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.459121887 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.52448775 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.441398443 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.435292715 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.716441538 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.435869841 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.700653696 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.436682493 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.442390921 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.460037219 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.917763563 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.440855419 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.140630598 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.455734174 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.439856827 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.6212002 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.709343547 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.082066972 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.44564942 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.732207428 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.977164762 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.528102954 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.444694035 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.005818202 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.534010756 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.443128684 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.4424719 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.441428933 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.439258872 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.493922923 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.526133314 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.071654299 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.128644617 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.062891903 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.546348449 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.45504417 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.441261189 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.049865492 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.453784296 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.440620387 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.906650319 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.135478956 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.459027692 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.448653243 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.142749838 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.46148092 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.532471188 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.449004651 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.929992167 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.44588151 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.544385911 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.438302889 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.447110476 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.463836124 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.529826607 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.448997234 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.442267821 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.112638269 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.649906456 seconds)
  done (took 190.147795057 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.436332702 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.431126113 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.433227039 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.447045013 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.431002932 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.440595746 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.434101621 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.435156834 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.441850653 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.434210755 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.438721091 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.435806439 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.433962176 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.436540196 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.445544956 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.476654037 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.435811134 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.437521051 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.435700601 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.436443223 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.43673014 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.458529718 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.439233451 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.433176426 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.435444874 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.438927686 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.441771031 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.438593614 seconds)
  done (took 65.624290509 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.444304635 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.108496366 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.450694506 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.596871458 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.473688164 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.444221755 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.596489423 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.514919984 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.450391543 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.443454257 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.443417383 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.803743469 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.447940445 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.023137421 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.663969177 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.600280484 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.024462177 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.461665121 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.441592308 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.441573381 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.597580046 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.458460688 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.787122228 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.077648159 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.444895803 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.082806239 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.433327093 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.4478092 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.446555521 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.083345025 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.443298934 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.796733702 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.533447727 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.517206498 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.115622192 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.03319877 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.040979435 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.61483925 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.45144278 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.446365107 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.448417139 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.437408101 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.114606467 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.453282937 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.45208849 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.107202919 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.468328753 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.450679429 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.439536713 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.44467117 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.519314985 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.525135524 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.811240234 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.194518455 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.539795527 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.447891499 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.602950848 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.756538328 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.454406831 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.0288563 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.433455272 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.119752413 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.457067309 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.437188084 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.447634439 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.439487659 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.620939101 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.604404108 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.041822564 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.46506145 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.027996283 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.636149951 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.451338556 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.448627606 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.451326356 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.119942195 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.034286291 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.635408143 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.607782859 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.676576166 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.441599548 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.451091368 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.438707945 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.539219729 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.450545133 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.120666421 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.057845945 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.468254706 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.454872029 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.453830084 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.45143676 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.659218088 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.123492061 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.543625955 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.029035526 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.828622416 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.815514784 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.458230789 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.520227884 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.469216767 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.883900799 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.457437431 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.51775515 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.806411873 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.819194467 seconds)
  done (took 174.168736589 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.7213019 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.468969577 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.552042031 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.614684616 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.123931655 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.083614784 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.449888931 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.596072088 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.571597899 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.740119669 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.444691117 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.543884399 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.696695206 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.543969016 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.220446876 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.53332923 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.552406909 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.609977236 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.60299439 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.459833115 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.156801985 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.801793582 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.663377542 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.471967499 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.590476237 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.322462632 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.084747702 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.997574652 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.645822633 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.466012424 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.021714314 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.451702209 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.457773423 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.218509885 seconds)
  done (took 67.813963715 seconds)
done (took 642.857986183 seconds)
SAVING RESULT...
DONE!
